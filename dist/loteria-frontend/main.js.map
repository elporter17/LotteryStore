{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/login/login.component.ts","./src/app/components/resumen-sorteos/resumen-sorteos.component.ts","./src/app/components/resumen-sorteos/resumen-sorteos.component.html","./src/app/components/sucursal/sucursal.component.ts","./src/app/components/sucursal/sucursal.component.html","./src/app/components/user-management/user-management.component.ts","./src/app/components/user-management/user-management.component.html","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/models/interfaces.ts","./src/app/services/notification.service.ts","./src/app/services/print.service.ts","./src/app/services/sorteo.service.ts","./src/app/services/supabase.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SupabaseService } from './services/supabase.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"app-container\">\n      <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: [`\n    .app-container {\n      min-height: 100vh;\n      background-color: #f5f5f5;\n    }\n  `]\n})\nexport class AppComponent implements OnInit {\n  \n  constructor(\n    private supabaseService: SupabaseService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // Verificar estado de autenticación al iniciar\n    this.supabaseService.currentUser$.subscribe(user => {\n      if (!user && !this.router.url.includes('login')) {\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SucursalComponent } from './components/sucursal/sucursal.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { UserManagementComponent } from './components/user-management/user-management.component';\nimport { ResumenSorteosComponent } from './components/resumen-sorteos/resumen-sorteos.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminGuard } from './guards/admin.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'sucursal', component: SucursalComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard, AdminGuard] },\n  { path: 'admin/users', component: UserManagementComponent, canActivate: [AuthGuard, AdminGuard] },\n  { path: '**', redirectTo: '/login' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SucursalComponent,\n    AdminComponent,\n    UserManagementComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    ResumenSorteosComponent\n  ],\n  providers: [ AuthGuard, AdminGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { startOfDay, endOfDay } from 'date-fns';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail, Sorteo, SORTEO_SCHEDULES, SucursalFactor } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  currentUser: any = null;\r\n  sorteos = SORTEO_SCHEDULES; // Usar directamente las interfaces en lugar de base de datos\r\n  sales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  sorteosData: { [key: string]: Sorteo } = {};\r\n  winningNumbers: { [key: string]: string } = {};\r\n  factorMultiplicador: { [key: string]: number } = {};\r\n  selectedSorteoFilter: string = '';\r\n  isLoading: boolean = false;\r\n  isLoadingFilters: boolean = false; // Loading específico para filtros\r\n  selectedDate: string = '';\r\n  \r\n\r\n  // Nuevas propiedades para las mejoras\r\n  fechaDesde: string = '';\r\n  fechaHasta: string = '';\r\n  users: any[] = [];\r\n  showUserModal: boolean = false;\r\n  editingUser: any = null;\r\n  userFormData: any = {\r\n    email: '',\r\n    password: '',\r\n    role: 'sucursal',\r\n    sucursal: '',\r\n    active: true\r\n  };\r\n\r\n  // Propiedades para modal de detalles de venta\r\n  showSaleDetailModal: boolean = false;\r\n  selectedSaleForDetail: Sale | null = null;\r\n  selectedSaleDetails: SaleDetail[] = [];\r\n\r\n  // Propiedades para gestión de sorteos\r\n  showSorteoModal: boolean = false;\r\n  editingSorteo: any = null;\r\n   \r\n   sorteoSchedules: SorteoSchedule[] = [...SORTEO_SCHEDULES];\r\n\r\n  // Propiedades para cambio de contraseña\r\n  showPasswordModal: boolean = false;\r\n  selectedUserForPassword: any = null;\r\n  newPassword: string = '';\r\n  confirmPassword: string = '';\r\n\r\n  // Propiedades para acordeón\r\n  showSorteosSection: boolean = false;\r\n  showUsersSection: boolean = false;\r\n\r\n  // Propiedades para modal de factores por sucursal\r\n  showFactorsModal: boolean = false;\r\n  sucursalesFactores: SucursalFactor[] = [];\r\n  factoresPorSucursal: { [sucursal: string]: number } = {};\r\n  currentSorteoForFactors: { sorteo: SorteoSchedule, winningNumber: string } | null = null;\r\n\r\n  // Propiedades para resumen de cierre por sucursales\r\n  showResumenModal: boolean = false;\r\n  resumenSucursales: any[] = [];\r\n  currentSorteoForResumen: string = '';\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    // Inicializar fechas usando date-fns para filtros\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    this.selectedDate = hondurasToday.toISOString().split('T')[0];\r\n    \r\n    \r\n    // FORZAR CIERRE DE TODOS LOS MODALES AL INICIALIZAR\r\n    this.showSaleDetailModal = false;\r\n    this.showUserModal = false;\r\n    this.showPasswordModal = false;\r\n    this.showFactorsModal = false;\r\n    this.showResumenModal = false;\r\n    \r\n    // Recuperar filtros de localStorage o usar valores por defecto\r\n    this.loadFilterState();\r\n    \r\n    // Si no hay filtros guardados, usar date-fns para inicializar\r\n    if (!this.fechaDesde || !this.fechaHasta) {\r\n      const fechaInicio = startOfDay(hondurasToday);\r\n      const fechaFin = endOfDay(hondurasToday);\r\n      \r\n      this.fechaDesde = this.formatDateTimeLocal(fechaInicio);\r\n      this.fechaHasta = this.formatDateTimeLocal(fechaFin);\r\n    }\r\n    \r\n  }\r\n\r\n  // Método para cargar estado de filtros desde localStorage\r\n  private loadFilterState(): void {\r\n    try {\r\n      const savedFilters = localStorage.getItem('admin-filters');\r\n      if (savedFilters) {\r\n        const filters = JSON.parse(savedFilters);\r\n        this.fechaDesde = filters.fechaDesde || '';\r\n        this.fechaHasta = filters.fechaHasta || '';\r\n        this.selectedSorteoFilter = filters.selectedSorteoFilter || '';\r\n        this.selectedDate = filters.selectedDate || '';\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para guardar estado de filtros en localStorage\r\n  private saveFilterState(): void {\r\n    try {\r\n      const filters = {\r\n        fechaDesde: this.fechaDesde,\r\n        fechaHasta: this.fechaHasta,\r\n        selectedSorteoFilter: this.selectedSorteoFilter,\r\n        selectedDate: this.selectedDate\r\n      };\r\n      localStorage.setItem('admin-filters', JSON.stringify(filters));\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'admin') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    // Cargar datos iniciales\r\n    this.loadSales();\r\n    this.loadSorteosData(); // Cargar datos de sorteos existentes\r\n    this.initializeUsers();\r\n    this.loadSorteoSchedules(); // Ya no es async\r\n  }\r\n\r\n  async initializeUsers(): Promise<void> {\r\n    try {\r\n      // Inicializar la tabla de perfiles\r\n      await this.supabaseService.initializeProfilesTable();\r\n      // Cargar usuarios\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      // Si falla, mostramos usuarios por defecto para que funcione la interfaz\r\n      this.users = [\r\n        {\r\n          id: '1',\r\n          email: 'admin@loteria.com',\r\n          role: 'admin',\r\n          sucursal: '',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '2',\r\n          email: 'sucursal1@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 1',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '3',\r\n          email: 'sucursal2@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 2',\r\n          active: false,\r\n          createdAt: new Date()\r\n        }\r\n      ];\r\n      this.notificationService.showError('No se pudieron cargar usuarios de la base de datos. Mostrando datos de ejemplo.');\r\n    }\r\n  }\r\n\r\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\r\n    const now = this.supabaseService.getHondurasDateTime();\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const closeTime = new Date(now);\r\n    closeTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    \r\n    return now <= closeTime;\r\n  }\r\n\r\n  getSorteoData(sorteo: SorteoSchedule): Sorteo | undefined {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    const todayString = hondurasToday.toISOString().split('T')[0]; // Formato YYYY-MM-DD\r\n    const sorteoId = `${todayString}-${sorteo.name}`;\r\n    \r\n    \r\n    // SOLO retornar datos reales de la BD, NO crear objetos temporales\r\n    return this.sorteosData[sorteoId];\r\n  }\r\n\r\n  // Método para verificar si el sorteo está cerrado basado en datos guardados en BD\r\n  isSorteoCerrado(sorteo: SorteoSchedule): boolean {\r\n    const sorteoData = this.getSorteoData(sorteo);\r\n    // Solo considerar cerrado si está marcado como cerrado en BD O si tiene numeroGanador en BD\r\n    return !!(sorteoData?.cerrado || sorteoData?.numeroGanador);\r\n  }\r\n\r\n  // Método para verificar si hay un número ganador guardado (no temporal)\r\n  hasSavedWinner(sorteo: SorteoSchedule): boolean {\r\n    const sorteoData = this.getSorteoData(sorteo);\r\n    // Solo considerar guardado si hay datos REALES de BD con número ganador\r\n    return !!(sorteoData?.numeroGanador);\r\n  }\r\n\r\n  // Método para verificar si hay datos temporales en el formulario\r\n  hasTemporaryWinnerData(sorteo: SorteoSchedule): boolean {\r\n    return !!(this.winningNumbers[sorteo.name] && !this.hasSavedWinner(sorteo));\r\n  }\r\n\r\n  // Método para cargar un sorteo específico por ID y actualizar la UI\r\n  async loadSorteoById(sorteoId: string): Promise<void> {\r\n    try {\r\n      \r\n      const sorteo = await this.supabaseService.getSorteoById(sorteoId);\r\n      \r\n      if (sorteo) {\r\n        // Actualizar en sorteosData\r\n        this.sorteosData[sorteoId] = sorteo;\r\n        \r\n        // También actualizar el número ganador local si está disponible\r\n        const sorteoName = sorteo.sorteo;\r\n        if (sorteo.numeroGanador) {\r\n          this.winningNumbers[sorteoName] = sorteo.numeroGanador;\r\n        }\r\n        \r\n        // Forzar actualización de la vista\r\n        this.cdr.detectChanges();\r\n      } else {\r\n      }\r\n    } catch (error: any) {\r\n      \r\n      // Si es error de RLS, intentar método alternativo\r\n      if (error?.isRLSError || error?.code === '42501') {\r\n        try {\r\n          const simpleData = await this.supabaseService.getSorteoByIdSimple(sorteoId);\r\n          if (simpleData && simpleData.length > 0) {\r\n            const data = simpleData[0];\r\n            \r\n            // Crear objeto Sorteo desde datos simples\r\n            const sorteo: Sorteo = {\r\n              id: sorteoId,\r\n              fecha: data.fecha ? new Date(data.fecha) : new Date(),\r\n              sorteo: data.sorteo || sorteoId.split('-')[1],\r\n              horaCierre: data.hora_cierre ? new Date(data.hora_cierre) : new Date(),\r\n              numeroGanador: data.numero_ganador || '',\r\n              factorMultiplicador: data.factor_multiplicador || 0,\r\n              totalVendido: data.total_vendido || 0,\r\n              totalPagado: data.total_pagado || 0,\r\n              gananciaNeta: data.ganancia_neta || 0,\r\n              cerrado: data.cerrado || false\r\n            };\r\n            \r\n            // Actualizar en sorteosData\r\n            this.sorteosData[sorteoId] = sorteo;\r\n            \r\n            // Actualizar número ganador local\r\n            if (sorteo.numeroGanador) {\r\n              this.winningNumbers[sorteo.sorteo] = sorteo.numeroGanador;\r\n            }\r\n            \r\n            this.cdr.detectChanges();\r\n          }\r\n        } catch (fallbackError) {\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Método para refrescar todos los sorteos del día actual\r\n  async refreshTodaysSorteos(): Promise<void> {\r\n    try {\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      const todayString = hondurasToday.toISOString().split('T')[0];\r\n      \r\n      for (const sorteo of this.sorteoSchedules) {\r\n        const sorteoId = `${todayString}-${sorteo.name}`;\r\n        await this.loadSorteoById(sorteoId);\r\n      }\r\n      \r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  async loadSales(): Promise<void> {\r\n    try {\r\n      // No cambiar isLoading aquí si ya estamos en modo filtros\r\n      if (!this.isLoadingFilters) {\r\n        this.isLoading = true;\r\n      }\r\n      \r\n      // Si hay filtros de rango de fechas, usar el método de rango\r\n      if (this.fechaDesde && this.fechaHasta) {\r\n        await this.loadSalesByDateRange();\r\n        return;\r\n      }\r\n      \r\n      // Determinar fecha para consulta individual\r\n      let fechaParaConsulta: Date;\r\n      \r\n      if (this.selectedDate) {\r\n        // Si hay fecha seleccionada, usar esa fecha\r\n        fechaParaConsulta = new Date(this.selectedDate);\r\n      } else {\r\n        // Por defecto, usar hoy\r\n        fechaParaConsulta = this.supabaseService.getHondurasDateTime();\r\n      }\r\n      \r\n      \r\n      // Cargar ventas usando el método existente\r\n      this.sales = await this.supabaseService.getSalesByDateAndSorteo(\r\n        fechaParaConsulta,\r\n        this.selectedSorteoFilter\r\n      );\r\n      \r\n      \r\n      // Forzar actualización del array para trigger change detection\r\n      this.sales = [...(this.sales || [])];\r\n      \r\n      // Cargar detalles de cada venta\r\n      for (const sale of this.sales) {\r\n        this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n      }\r\n      \r\n      \r\n      // Forzar detección de cambios\r\n      this.cdr.detectChanges();\r\n      \r\n    } catch (error) {\r\n      this.sales = [];\r\n      this.notificationService.showError('Error al cargar las ventas');\r\n    } finally {\r\n      // Solo cambiar isLoading si no estamos en modo filtros\r\n      if (!this.isLoadingFilters) {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async setWinningNumber(sorteo: SorteoSchedule): Promise<void> {\r\n    const winningNumber = this.winningNumbers[sorteo.name];\r\n    \r\n    if (!winningNumber) {\r\n      this.notificationService.showError('Por favor ingrese un número ganador');\r\n      return;\r\n    }\r\n\r\n    // Verificar autenticación\r\n    if (!this.currentUser) {\r\n      this.notificationService.showError('Usuario no autenticado. Por favor inicie sesión nuevamente.');\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n\r\n    // Abrir modal para configurar factores por sucursal\r\n    await this.openFactorsModal(sorteo, winningNumber);\r\n  }\r\n\r\n  private async calculateSorteoResults(sorteo: SorteoSchedule, winningNumber: string, multiplicador: number = 70): Promise<void> {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    \r\n    const sorteoSales = await this.supabaseService.getSalesByDateAndSorteo(hondurasToday, sorteo.name);\r\n    \r\n    let totalVendido = 0;\r\n    let totalPagado = 0;\r\n    \r\n    for (const sale of sorteoSales) {\r\n      totalVendido += sale.total;\r\n      \r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n      for (const detail of details) {\r\n        if (detail.numero.toString() === winningNumber) {\r\n          totalPagado += detail.monto * multiplicador;\r\n        }\r\n      }\r\n    }\r\n    \r\n    const gananciaNeta = totalVendido - totalPagado;\r\n    \r\n    // Actualizar o crear sorteo\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const horaCierre = new Date();\r\n    horaCierre.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    await this.supabaseService.createOrUpdateSorteo({\r\n      fecha: hondurasToday,\r\n      sorteo: sorteo.name,\r\n      horaCierre,\r\n      numeroGanador: winningNumber,\r\n      factorMultiplicador: multiplicador,\r\n      totalVendido,\r\n      totalPagado,\r\n      gananciaNeta,\r\n      cerrado: true\r\n    });\r\n  }\r\n\r\n  // Método para recargar datos de sorteos desde la base de datos\r\n  private async loadSorteosData(): Promise<void> {\r\n    try {\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      \r\n      // Limpiar datos actuales\r\n      this.sorteosData = {};\r\n      \r\n      // Cargar datos de sorteos para cada tipo\r\n      for (const sorteo of this.sorteos) {\r\n        try {\r\n          const sorteoId = `${hondurasToday.toISOString().split('T')[0]}-${sorteo.name}`;\r\n          const sorteoData = await this.supabaseService.getSorteoById(sorteoId);\r\n          \r\n          if (sorteoData) {\r\n            this.sorteosData[sorteoId] = sorteoData; // Usar sorteoId como clave\r\n            \r\n            // Sincronizar con variables locales\r\n            this.winningNumbers[sorteo.name] = sorteoData.numeroGanador || '';\r\n            this.factorMultiplicador[sorteo.name] = sorteoData.factorMultiplicador || 70;\r\n          }\r\n        } catch (error: any) {\r\n          \r\n          // Si es error 406 o RLS, intentar método alternativo\r\n          if (error?.status === 406 || error?.code === '42501') {\r\n            // Aquí podrías implementar un método alternativo si tienes uno\r\n          }\r\n        }\r\n      }\r\n      \r\n      \r\n      // Forzar actualización de la UI\r\n      this.cdr.detectChanges();\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para actualizar la UI específicamente después de establecer ganador\r\n  private async updateSorteoUI(sorteoName: string, winningNumber: string, multiplicador: number): Promise<void> {\r\n  try {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    const sorteoId = `${hondurasToday.toISOString().split('T')[0]}-${sorteoName}`;\r\n\r\n    // Actualizar datos locales inmediatamente\r\n    this.winningNumbers[sorteoName] = winningNumber;\r\n    this.factorMultiplicador[sorteoName] = multiplicador;\r\n\r\n    // Intentar cargar datos actualizados desde la base de datos\r\n    await this.loadSorteoById(sorteoId);\r\n\r\n    // Si el sorteo aún no aparece en sorteosData, crear un objeto temporal\r\n    if (!this.sorteosData[sorteoId]) {\r\n      this.sorteosData[sorteoId] = {\r\n        id: sorteoId,\r\n        fecha: hondurasToday,\r\n        sorteo: sorteoName,\r\n        horaCierre: hondurasToday,\r\n        numeroGanador: winningNumber,\r\n        factorMultiplicador: multiplicador,\r\n        totalVendido: 0,\r\n        totalPagado: 0,\r\n        gananciaNeta: 0,\r\n        cerrado: true\r\n      } as Sorteo;\r\n    }\r\n\r\n    // Forzar detección de cambios para actualizar la UI\r\n    this.cdr.detectChanges();\r\n\r\n    // Después de un breve delay, intentar refrescar nuevamente para asegurar datos actualizados\r\n    setTimeout(async () => {\r\n      await this.loadSorteoById(sorteoId);\r\n    }, 2000);\r\n\r\n  } catch (error) {\r\n    // En caso de error, asegurar que los datos locales estén actualizados\r\n    this.winningNumbers[sorteoName] = winningNumber;\r\n    this.factorMultiplicador[sorteoName] = multiplicador;\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n\r\n\r\n  getTotalSales(): number {\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getSucursalSummary(): { name: string, total: number, count: number }[] {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n    \r\n    for (const sale of this.sales) {\r\n      if (!summary[sale.sucursal]) {\r\n        summary[sale.sucursal] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sucursal].total += sale.total;\r\n      summary[sale.sucursal].count += 1;\r\n    }\r\n    \r\n    return Object.entries(summary).map(([name, data]) => ({ \r\n      name, \r\n      total: data.total, \r\n      count: data.count \r\n    }));\r\n  }\r\n  \r\n\r\n  // Métodos para cards de resumen\r\n  getTotalVendido(): number {\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getTotalPagado(): number {\r\n    return Object.values(this.sorteosData).reduce((total, sorteo) => total + (sorteo.totalPagado || 0), 0);\r\n  }\r\n\r\n  getGananciaNeta(): number {\r\n    return this.getTotalVendido() - this.getTotalPagado();\r\n  }\r\n\r\n  getTotalVentas(): number {\r\n    return this.sales.length;\r\n  }\r\n\r\n  // Métodos para filtros de fecha\r\n  async aplicarFiltros(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n      \r\n      // Validar que las fechas sean válidas\r\n      if (this.fechaDesde && this.fechaHasta) {\r\n        const fechaDesde = new Date(this.fechaDesde);\r\n        const fechaHasta = new Date(this.fechaHasta);\r\n        \r\n        if (fechaDesde > fechaHasta) {\r\n          this.notificationService.showError('La fecha desde no puede ser mayor que la fecha hasta');\r\n          this.isLoadingFilters = false;\r\n          return;\r\n        }\r\n        \r\n      }\r\n      \r\n      // Guardar estado de filtros\r\n      this.saveFilterState();\r\n      \r\n      // Recargar ventas\r\n      await this.loadSales();\r\n      \r\n    } catch (error) {\r\n      this.notificationService.showError('Error al aplicar filtros');\r\n    } finally {\r\n      // Asegurar que el loading se quite con un pequeño delay\r\n      setTimeout(() => {\r\n        this.isLoadingFilters = false;\r\n        this.cdr.detectChanges();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async limpiarFiltros(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      \r\n      // Reinicializar fechas usando date-fns\r\n      const fechaInicio = startOfDay(hondurasToday);\r\n      const fechaFin = endOfDay(hondurasToday);\r\n      \r\n      this.fechaDesde = this.formatDateTimeLocal(fechaInicio);\r\n      this.fechaHasta = this.formatDateTimeLocal(fechaFin);\r\n      this.selectedDate = hondurasToday.toISOString().split('T')[0];\r\n      this.selectedSorteoFilter = '';\r\n      \r\n      \r\n      // Guardar estado limpio\r\n      this.saveFilterState();\r\n      \r\n      await this.loadSales();\r\n      \r\n    } catch (error) {\r\n      this.notificationService.showError('Error al limpiar filtros');\r\n    } finally {\r\n      // Asegurar que el loading se quite con un pequeño delay\r\n      setTimeout(() => {\r\n        this.isLoadingFilters = false;\r\n        this.cdr.detectChanges();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async onFiltroFechaChange(): Promise<void> {\r\n    \r\n    // Auto-aplicar filtros cuando cambian las fechas\r\n    await this.aplicarFiltros();\r\n  }\r\n\r\n  async onDateChange(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n      \r\n      // Guardar cambio de fecha y recargar\r\n      this.saveFilterState();\r\n      await this.loadSales();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar la fecha');\r\n    } finally {\r\n      this.isLoadingFilters = false;\r\n    }\r\n  }\r\n\r\n  async onSorteoFilterChange(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n      \r\n      // Guardar cambio de sorteo y recargar\r\n      this.saveFilterState();\r\n      await this.loadSales();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar el filtro de sorteo');\r\n    } finally {\r\n      this.isLoadingFilters = false;\r\n    }\r\n  }\r\n\r\n  // Método específico para cuando cambia fechaDesde\r\n  async onFechaDesdeChange(): Promise<void> {\r\n    await this.aplicarFiltros();\r\n  }\r\n\r\n  // Método específico para cuando cambia fechaHasta\r\n  async onFechaHastaChange(): Promise<void> {\r\n    await this.aplicarFiltros();\r\n  }\r\n\r\n  async loadSalesByDateRange(): Promise<void> {\r\n    if (!this.fechaDesde || !this.fechaHasta) {\r\n      await this.loadSingleDateSales();\r\n      return;\r\n    }\r\n\r\n    // No cambiar isLoading aquí si ya estamos en modo filtros\r\n    if (!this.isLoadingFilters) {\r\n      this.isLoading = true;\r\n    }\r\n    try {\r\n      \r\n      // Usar date-fns para manejar las fechas correctamente\r\n      const fechaDesdeObj = startOfDay(new Date(this.fechaDesde));\r\n      const fechaHastaObj = endOfDay(new Date(this.fechaHasta));\r\n      \r\n      \r\n      // Validar que la fecha desde no sea mayor que la fecha hasta\r\n      if (fechaDesdeObj > fechaHastaObj) {\r\n        this.notificationService.showError('La fecha desde no puede ser mayor que la fecha hasta');\r\n        this.sales = [];\r\n        return;\r\n      }\r\n      \r\n      // Cargar ventas para cada día en el rango\r\n      let allSales: Sale[] = [];\r\n      let currentDate = new Date(fechaDesdeObj);\r\n      let daysProcessed = 0;\r\n      const maxDays = 31; // Límite de seguridad\r\n      \r\n      while (currentDate <= fechaHastaObj && daysProcessed < maxDays) {\r\n        \r\n        const daySales = await this.supabaseService.getSalesByDateAndSorteo(currentDate, this.selectedSorteoFilter);\r\n        \r\n        allSales = [...allSales, ...daySales];\r\n        \r\n        // Avanzar al siguiente día\r\n        currentDate = new Date(currentDate);\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n        daysProcessed++;\r\n      }\r\n\r\n      if (daysProcessed >= maxDays) {\r\n        this.notificationService.showInfo('Se procesaron los primeros 31 días del rango');\r\n      }\r\n\r\n      // Forzar actualización del array\r\n      this.sales = [...allSales];\r\n      \r\n      \r\n      // Cargar detalles de todas las ventas\r\n      for (const sale of this.sales) {\r\n        this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n      }\r\n      \r\n      // Forzar detección de cambios\r\n      this.cdr.detectChanges();\r\n      \r\n      \r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar las ventas: ' + error);\r\n      this.sales = [];\r\n    } finally {\r\n      // Solo cambiar isLoading si no estamos en modo filtros\r\n      if (!this.isLoadingFilters) {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Método auxiliar para cargar ventas de una sola fecha\r\n  private async loadSingleDateSales(): Promise<void> {\r\n    const fecha = this.selectedDate ? new Date(this.selectedDate) : this.supabaseService.getHondurasDateTime();\r\n    \r\n    this.sales = await this.supabaseService.getSalesByDateAndSorteo(fecha, this.selectedSorteoFilter);\r\n    this.sales = [...(this.sales || [])];\r\n    \r\n    for (const sale of this.sales) {\r\n      this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n    }\r\n    \r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  // Gestión de usuarios\r\n  async loadUsers(): Promise<void> {\r\n    try {\r\n      this.users = await this.supabaseService.getUsers();\r\n      \r\n      if (this.users.length === 0) {\r\n        this.notificationService.showInfo('No hay usuarios configurados. Use el botón Sincronizar para cargar usuarios desde Authentication.');\r\n      }\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar usuarios: ' + (error as any)?.message);\r\n      // Asegurar que users no sea undefined\r\n      this.users = [];\r\n    }\r\n  }\r\n\r\n  loadSorteoSchedules(): void {\r\n    this.sorteoSchedules = [...SORTEO_SCHEDULES];\r\n    \r\n    if (this.sorteoSchedules.length === 0) {\r\n      this.notificationService.showError('No se encontraron horarios de sorteos configurados');\r\n    } else {\r\n    }\r\n  }\r\n\r\n  closeUserModal(): void {\r\n    this.showUserModal = false;\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n  }\r\n\r\n  editUser(user: any): void {\r\n    this.editingUser = user;\r\n    this.userFormData = { ...user };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  async saveUser(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      \r\n      if (this.editingUser) {\r\n        // Actualizar usuario existente\r\n        await this.supabaseService.updateExistingUser(this.editingUser.id, {\r\n          email: this.userFormData.email,\r\n          role: this.userFormData.role,\r\n          sucursal: this.userFormData.sucursal,\r\n          active: this.userFormData.active\r\n        });\r\n        this.notificationService.showSuccess('Usuario actualizado exitosamente');\r\n      } else {\r\n        // Crear nuevo usuario\r\n        await this.supabaseService.createNewUser(this.userFormData);\r\n        this.notificationService.showSuccess('Usuario creado exitosamente');\r\n      }\r\n      \r\n      this.closeUserModal();\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al guardar el usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async toggleUserStatus(user: any): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      await this.supabaseService.toggleExistingUserStatus(user.id);\r\n      this.notificationService.showSuccess('Estado del usuario actualizado');\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar el estado del usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async deleteUser(userId: string): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Eliminar Usuario',\r\n      '¿Está seguro que desea eliminar este usuario?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      try {\r\n        this.isLoading = true;\r\n        // Implementar eliminación en SupabaseService\r\n        this.notificationService.showSuccess('Usuario eliminado exitosamente');\r\n        await this.loadUsers();\r\n      } catch (error) {\r\n        this.notificationService.showError('Error al eliminar el usuario');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  generateDailyReport(): void {\r\n    const reportDate = this.selectedDate ? new Date(this.selectedDate) : this.supabaseService.getHondurasDateTime();\r\n    this.printService.generateDailyReport(this.sales, reportDate);\r\n  }\r\n\r\n  // Método mejorado para reimprimir recibo desde admin\r\n  async reprintReceipt(sale: Sale): Promise<void> {\r\n    try {\r\n      \r\n      // Obtener detalles de la venta desde la base de datos\r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n      \r\n      if (details.length === 0) {\r\n        this.notificationService.showError('No se encontraron detalles para esta venta. No se puede reimprimir el recibo.');\r\n        return;\r\n      }\r\n      \r\n      // Generar recibo con los detalles obtenidos\r\n      this.printService.generateThermalReceipt(sale, details);\r\n      this.notificationService.showSuccess('Recibo enviado a impresión');\r\n      \r\n    } catch (error) {\r\n      this.notificationService.showError('Error al reimprimir el recibo. Por favor intente nuevamente.');\r\n    }\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    await this.supabaseService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  // Métodos para el nuevo diseño minimalista\r\n  formatDateTime(dateInput: string | Date): string {\r\n    const date = typeof dateInput === 'string' ? new Date(dateInput) : dateInput;\r\n    return date.toLocaleString('es-HN', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  }\r\n\r\n  // Método para formatear fecha para inputs datetime-local\r\n  private formatDateTimeLocal(date: Date): string {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  }\r\n\r\n  // Método para formatear fecha para mostrar en la UI\r\n  formatDateForDisplay(date: Date | string): string {\r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    return this.supabaseService.formatHondurasDateTime(dateObj);\r\n  }\r\n\r\n  // Métodos faltantes para el template del admin\r\n  exportarVentas(): void {\r\n    // Método legacy - ahora llama a Excel por defecto\r\n    this.exportarVentasExcel();\r\n  }\r\n\r\n  exportarVentasExcel(): void {\r\n    this.generateVentasReportExcel();\r\n  }\r\n\r\n  exportarVentasPDF(): void {\r\n    this.generateVentasReportPDF();\r\n  }\r\n\r\n  trackBySale(index: number, sale: Sale): string {\r\n    return sale.id;\r\n  }\r\n\r\n  trackByUser(index: number, user: any): string {\r\n    return user.id;\r\n  }\r\n\r\n  trackBySorteo(index: number, sorteo: any): string {\r\n    return sorteo.id || index.toString();\r\n  }\r\n\r\n  trackBySaleDetail(index: number, detail: SaleDetail): string {\r\n    return detail.id;\r\n  }\r\n\r\n  verDetalles(sale: Sale): void {\r\n    \r\n    // Primero cerrar cualquier modal que pueda estar abierto\r\n    this.showSaleDetailModal = false;\r\n    \r\n    // Obtener detalles de la venta\r\n    const details = this.getSaleDetails(sale.id);\r\n    \r\n    // Configurar modal\r\n    this.selectedSaleForDetail = sale;\r\n    this.selectedSaleDetails = details;\r\n    this.showSaleDetailModal = true;\r\n    \r\n    // Forzar detección de cambios\r\n    this.cdr.detectChanges();\r\n    \r\n  }\r\n\r\n  // Método para cerrar el modal de detalles\r\n  closeSaleDetailModal(): void {\r\n    \r\n    this.showSaleDetailModal = false;\r\n    this.selectedSaleForDetail = null;\r\n    this.selectedSaleDetails = [];\r\n    \r\n    // Forzar detección de cambios\r\n    this.cdr.detectChanges();\r\n    \r\n  }\r\n\r\n  // Método para forzar el cierre del modal\r\n  forceCloseSaleDetailModal(): void {\r\n    this.showSaleDetailModal = false;\r\n    this.selectedSaleForDetail = null;\r\n    this.selectedSaleDetails = [];\r\n  }\r\n\r\n  // Método de emergencia para resetear completamente el modal\r\n  resetModal(): void {\r\n    \r\n    // Cerrar TODOS los modales\r\n    this.showSaleDetailModal = false;\r\n    this.showUserModal = false;\r\n    this.showPasswordModal = false;\r\n    \r\n    // Limpiar datos de modales\r\n    this.selectedSaleForDetail = null;\r\n    this.selectedSaleDetails = [];\r\n    \r\n    // Solo si hay elementos trabados, limpiar el DOM\r\n    setTimeout(() => {\r\n      // Eliminar backdrop de Bootstrap si existe\r\n      const backdrops = document.querySelectorAll('.modal-backdrop');\r\n      backdrops.forEach(el => {\r\n        if (el.parentNode) {\r\n          el.parentNode.removeChild(el);\r\n        }\r\n      });\r\n      \r\n      // Remover clases del body\r\n      document.body.classList.remove('modal-open');\r\n      \r\n    }, 100);\r\n  }\r\n\r\n  // Método para calcular total de números en el modal\r\n  getTotalNumeros(): number {\r\n    return this.selectedSaleDetails.reduce((total, detail) => total + detail.monto, 0);\r\n  }\r\n\r\n  createUser(): void {\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  // ========================\r\n  // CAMBIO DE CONTRASEÑA\r\n  // ========================\r\n\r\n  changePassword(user: any): void {\r\n    this.selectedUserForPassword = user;\r\n    this.newPassword = '';\r\n    this.confirmPassword = '';\r\n    this.showPasswordModal = true;\r\n  }\r\n\r\n  closePasswordModal(): void {\r\n    this.showPasswordModal = false;\r\n    this.selectedUserForPassword = null;\r\n    this.newPassword = '';\r\n    this.confirmPassword = '';\r\n  }\r\n\r\n  async changeUserPassword(): Promise<void> {\r\n    if (this.newPassword !== this.confirmPassword) {\r\n      this.notificationService.showError('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    if (this.newPassword.length < 6) {\r\n      this.notificationService.showError('La contraseña debe tener al menos 6 caracteres');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.isLoading = true;\r\n      // Implementar método en SupabaseService para cambiar contraseña\r\n      await this.supabaseService.updateUserPassword(this.selectedUserForPassword.id, this.newPassword);\r\n      this.notificationService.showSuccess('Contraseña actualizada exitosamente');\r\n      this.closePasswordModal();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar la contraseña');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas en Excel\r\n  generateVentasReportExcel(): void {\r\n    if (this.sales.length === 0) {\r\n      this.notificationService.showError('No hay ventas para exportar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Generar CSV\r\n      let csvContent = 'Fecha,Sucursal,Sorteo,Total,Recibo,Correlativo,Números\\n';\r\n      \r\n      for (const sale of this.sales) {\r\n        const details = this.getSaleDetails(sale.id);\r\n        const numeros = details.map(d => `${d.numero}x${d.monto}`).join(';');\r\n        csvContent += `\"${this.formatDateTime(sale.createdAt)}\",\"${sale.sucursal}\",\"${sale.sorteo}\",\"${sale.total}\",\"${sale.numeroRecibo || sale.id.slice(-6)}\",\"${sale.correlativo}\",\"${numeros}\"\\n`;\r\n      }\r\n\r\n      // Descargar archivo\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const link = document.createElement('a');\r\n      const url = URL.createObjectURL(blob);\r\n      link.setAttribute('href', url);\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      link.setAttribute('download', `ventas_excel_${hondurasToday.toISOString().split('T')[0]}.csv`);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      \r\n      this.notificationService.showSuccess('Reporte Excel exportado exitosamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al exportar el reporte Excel');\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas en PDF\r\n  generateVentasReportPDF(): void {\r\n    if (this.sales.length === 0) {\r\n      this.notificationService.showError('No hay ventas para exportar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Usar el servicio de impresión para generar PDF\r\n      this.printService.generateVentasReportPDF(this.sales, this.saleDetails, {\r\n        fechaDesde: this.fechaDesde,\r\n        fechaHasta: this.fechaHasta,\r\n        sorteoFilter: this.selectedSorteoFilter\r\n      });\r\n      \r\n      this.notificationService.showSuccess('Reporte PDF generado exitosamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al exportar el reporte PDF');\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas (legacy)\r\n  generateVentasReport(): void {\r\n    // Mantener método legacy, ahora llama a Excel\r\n    this.generateVentasReportExcel();\r\n  }\r\n\r\n  onFactorChange(sorteoName: string, event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    if (target && target.value) {\r\n      this.factorMultiplicador[sorteoName] = +target.value;\r\n    }\r\n  }\r\n  // ========================\r\n  // MÉTODOS DE DEBUG\r\n  // ========================\r\n\r\n  async debugSorteoSchedules(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n    //  await this.supabaseService.debugSorteoSchedules();\r\n      this.notificationService.showSuccess('Revisa la consola para ver los resultados del debug');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error ejecutando debug');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n   \r\n\r\n  // ===== MÉTODOS PARA ACORDEÓN =====\r\n  \r\n  toggleSorteosSection(): void {\r\n    this.showSorteosSection = !this.showSorteosSection;\r\n  }\r\n\r\n  toggleUsersSection(): void {\r\n    this.showUsersSection = !this.showUsersSection;\r\n  }\r\n\r\n  // ===== MÉTODOS PARA ABRIR MODALES =====\r\n  \r\n  openCreateUserModal(): void {\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  async syncUsersFromAuth(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      this.notificationService.showInfo('Sincronizando usuarios desde auth.users...');\r\n      \r\n      // Usar el nuevo método de sincronización\r\n      await this.supabaseService.syncUsersFromAuth();\r\n      \r\n      // Recargar la lista de usuarios\r\n      await this.loadUsers();\r\n      \r\n      this.notificationService.showSuccess('Usuarios sincronizados correctamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al sincronizar usuarios');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Navegar a la gestión de usuarios\r\n  navigateToUsers(): void {\r\n    this.router.navigate(['/admin/users']);\r\n  }\r\n\r\n  // ===== MÉTODOS PARA MODAL DE FACTORES POR SUCURSAL =====\r\n\r\n  async openFactorsModal(sorteoName: string, winningNumber: number): Promise<void>;\r\n  async openFactorsModal(sorteo: SorteoSchedule, winningNumber: string): Promise<void>;\r\n  async openFactorsModal(sorteoOrName: SorteoSchedule | string, winningNumber: string | number): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      \r\n      // Cargar usuarios activos por sucursal\r\n      this.sucursalesFactores = await this.supabaseService.getActiveUsersBySucursal();\r\n      \r\n      // Inicializar factores con valores por defecto\r\n      this.factoresPorSucursal = {};\r\n      for (const sucursal of this.sucursalesFactores) {\r\n        this.factoresPorSucursal[sucursal.sucursal] = sucursal.factor;\r\n      }\r\n      \r\n      // Manejar ambos tipos de parámetros\r\n      if (typeof sorteoOrName === 'string') {\r\n        // Llamada desde la interfaz del sorteo (solo nombre y número)\r\n        const sorteoSchedule = SORTEO_SCHEDULES.find(s => s.name === sorteoOrName);\r\n        if (sorteoSchedule) {\r\n          this.currentSorteoForFactors = { \r\n            sorteo: sorteoSchedule, \r\n            winningNumber: winningNumber.toString() \r\n          };\r\n        }\r\n      } else {\r\n        // Llamada desde setWinningNumber (objeto completo)\r\n        this.currentSorteoForFactors = { \r\n          sorteo: sorteoOrName, \r\n          winningNumber: winningNumber.toString() \r\n        };\r\n      }\r\n      \r\n      this.showFactorsModal = true;\r\n      \r\n    } catch (error) {\r\n      console.error('Error al cargar sucursales:', error);\r\n      this.notificationService.showError('Error al cargar configuración de sucursales');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  closeFactorsModal(): void {\r\n    this.showFactorsModal = false;\r\n    this.currentSorteoForFactors = null;\r\n    this.factoresPorSucursal = {};\r\n    this.sucursalesFactores = [];\r\n  }\r\n\r\n  closeResumenModal(): void {\r\n    this.showResumenModal = false;\r\n    this.resumenSucursales = [];\r\n    this.currentSorteoForResumen = '';\r\n  }\r\n\r\n  async confirmWinningNumberWithFactors(): Promise<void> {\r\n    if (!this.currentSorteoForFactors) {\r\n      this.notificationService.showError('No hay sorteo seleccionado');\r\n      return;\r\n    }\r\n\r\n    const { sorteo, winningNumber } = this.currentSorteoForFactors;\r\n\r\n    try {\r\n      this.isLoading = true;\r\n      \r\n      // Usar fecha de Honduras\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      const fechaStr = hondurasToday.toISOString().split('T')[0];\r\n      const sorteoId = `${fechaStr}-${sorteo.name}`;\r\n      \r\n      // Crear sorteos por sucursal con factores específicos\r\n      await this.supabaseService.crearSorteosPorSucursal(\r\n        sorteoId,\r\n        winningNumber,\r\n        this.factoresPorSucursal\r\n      );\r\n      \r\n      // Calcular totales por sucursal\r\n      await this.supabaseService.calcularTotalesSorteoPorSucursal(sorteoId);\r\n      \r\n      // Cerrar modal de factores\r\n      this.closeFactorsModal();\r\n      \r\n      // Obtener resumen de sucursales para mostrar\r\n      this.resumenSucursales = await this.supabaseService.getSorteoResumenPorSucursal(sorteoId);\r\n      this.currentSorteoForResumen = `${sorteo.label} - Número Ganador: ${winningNumber.padStart(2, '0')}`;\r\n      \r\n      // Mostrar modal de resumen\r\n      this.showResumenModal = true;\r\n      \r\n      // Recargar datos\r\n      await this.loadSales();\r\n      await this.loadSorteosData();\r\n      \r\n      // Notificar actualización de resúmenes\r\n      this.supabaseService.notifyResumenUpdate();\r\n      \r\n      // Actualizar UI\r\n      this.winningNumbers[sorteo.name] = winningNumber;\r\n      \r\n      this.notificationService.showSuccess(\r\n        `Número ganador ${winningNumber.padStart(2, '0')} establecido con factores específicos por sucursal para ${sorteo.name}`\r\n      );\r\n      \r\n    } catch (error) {\r\n      console.error('Error al establecer número ganador:', error);\r\n      this.notificationService.showError('Error al establecer el número ganador con factores por sucursal');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Obtener lista única de sucursales\r\n  getUniqueSucursales(): string[] {\r\n    return [...new Set(this.sucursalesFactores.map(s => s.sucursal))];\r\n  }\r\n\r\n  // Actualizar factor para una sucursal específica\r\n  updateFactorForSucursal(sucursal: string, factor: string | number): void {\r\n    this.factoresPorSucursal[sucursal] = typeof factor === 'string' ? parseFloat(factor) : factor;\r\n  }\r\n\r\n  // Métodos auxiliares para el template\r\n  getUsersBySucursal(sucursal: string): SucursalFactor[] {\r\n    return this.sucursalesFactores.filter(s => s.sucursal === sucursal);\r\n  }\r\n\r\n  hasSucursalUsers(sucursal: string): boolean {\r\n    return this.sucursalesFactores.filter(s => s.sucursal === sucursal).length > 0;\r\n  }\r\n\r\n  // Métodos para calcular totales en el resumen\r\n  getTotalVendidoGeneral(): string {\r\n    const total = this.resumenSucursales.reduce((sum, s) => sum + (s.total_vendido || 0), 0);\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getTotalPagadoGeneral(): string {\r\n    const total = this.resumenSucursales.reduce((sum, s) => sum + (s.total_pagado || 0), 0);\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getGananciaTotalGeneral(): number {\r\n    return this.resumenSucursales.reduce((sum, s) => sum + (s.ganancia_neta || 0), 0);\r\n  }\r\n\r\n}\r\n","<!-- PANEL DE ADMINISTRACIÓN CON ACORDEÓN -->\r\n<div class=\"admin-interface\">\r\n  \r\n  <!-- Header -->\r\n  <div class=\"header-bar\">\r\n    <div class=\"admin-title\">\r\n      <h2><i class=\"fas fa-cog\"></i> Panel de Administración</h2>\r\n    </div>\r\n    \r\n    <div class=\"header-actions\">\r\n      <button class=\"btn-header btn-users\" (click)=\"navigateToUsers()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-users\"></i> Gestión de Usuarios\r\n      </button>\r\n      \r\n      <button class=\"btn-header btn-cerrar\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-sign-out-alt\"></i> Cerrar Sesión\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filtros de Fecha -->\r\n  <div class=\"filters-bar\">\r\n    <div class=\"filter-group\">\r\n      <label for=\"fechaDesde\">\r\n        <i class=\"fas fa-calendar-alt\"></i>\r\n        Desde:\r\n        <span class=\"loading-indicator\" *ngIf=\"isLoadingFilters\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n        </span>\r\n      </label>\r\n      <input type=\"datetime-local\" id=\"fechaDesde\" class=\"form-control\" \r\n             [(ngModel)]=\"fechaDesde\" (change)=\"onFiltroFechaChange()\"\r\n             [disabled]=\"isLoadingFilters\">\r\n    </div>\r\n    \r\n    <div class=\"filter-group\">\r\n      <label for=\"fechaHasta\">\r\n        <i class=\"fas fa-calendar-alt\"></i>\r\n        Hasta:\r\n        <span class=\"loading-indicator\" *ngIf=\"isLoadingFilters\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n        </span>\r\n      </label>\r\n      <input type=\"datetime-local\" id=\"fechaHasta\" class=\"form-control\" \r\n             [(ngModel)]=\"fechaHasta\" (change)=\"onFiltroFechaChange()\"\r\n             [disabled]=\"isLoadingFilters\">\r\n    </div>\r\n    \r\n    <div class=\"filter-group\">\r\n      <label for=\"sorteoFilter\">\r\n        <i class=\"fas fa-trophy\"></i>\r\n        Sorteo:\r\n        <span class=\"loading-indicator\" *ngIf=\"isLoadingFilters\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n        </span>\r\n      </label>\r\n      <select id=\"sorteoFilter\" class=\"form-control\" \r\n              [(ngModel)]=\"selectedSorteoFilter\" (change)=\"aplicarFiltros()\"\r\n              [disabled]=\"isLoadingFilters\">\r\n        <option value=\"\">Todos los sorteos</option>\r\n        <option *ngFor=\"let sorteo of sorteos\" [value]=\"sorteo.name\">{{ sorteo.label }}</option>\r\n      </select>\r\n    </div>\r\n    \r\n    <div class=\"filter-actions\">\r\n      <button class=\"btn-filter btn-primary\" (click)=\"aplicarFiltros()\" [disabled]=\"isLoading || isLoadingFilters\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoadingFilters; else searchIcon\"></i>\r\n        <ng-template #searchIcon><i class=\"fas fa-search\"></i></ng-template>\r\n        {{ isLoadingFilters ? 'Filtrando...' : 'Filtrar' }}\r\n      </button>\r\n      <button class=\"btn-filter btn-secondary\" (click)=\"limpiarFiltros()\" [disabled]=\"isLoading || isLoadingFilters\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoadingFilters; else eraserIcon\"></i>\r\n        <ng-template #eraserIcon><i class=\"fas fa-eraser\"></i></ng-template>\r\n        {{ isLoadingFilters ? 'Limpiando...' : 'Limpiar' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Contenido Principal -->\r\n  <div class=\"main-content\">\r\n    \r\n    <!-- Cards de Resumen -->\r\n    <div class=\"summary-cards\">\r\n      <div class=\"summary-card vendido\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-chart-line\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getTotalVendido().toFixed(2) }}</h3>\r\n          <p>Total Vendido</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card pagado\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-coins\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getTotalPagado().toFixed(2) }}</h3>\r\n          <p>Total Pagado</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card ganancia\" [class.positive]=\"getGananciaNeta() > 0\" [class.negative]=\"getGananciaNeta() < 0\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-piggy-bank\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getGananciaNeta().toFixed(2) }}</h3>\r\n          <p>Ganancia Neta</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card ventas\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-shopping-cart\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>{{ getTotalVentas() }}</h3>\r\n          <p>Ventas Totales</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sección de Sorteos con estilo minimalista -->\r\n    <div class=\"sorteos-section\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-dice\"></i> Gestión de Sorteos</h3>\r\n      </div>\r\n      \r\n      <div class=\"sorteos-grid\">\r\n        <div *ngFor=\"let sorteo of sorteos\" class=\"sorteo-card\">\r\n          <div class=\"sorteo-header\">\r\n            <h4>{{ sorteo.label }}</h4>\r\n            <div class=\"sorteo-status\">\r\n              <span class=\"status-badge\" [class.open]=\"isSorteoOpen(sorteo)\" [class.closed]=\"!isSorteoOpen(sorteo)\">\r\n                {{ isSorteoOpen(sorteo) ? 'Abierto' : 'Cerrado' }}\r\n              </span>\r\n              <span class=\"close-time\">{{ sorteo.closeTime }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"sorteo-content\">\r\n            <!-- Mostrar resultados solo si hay datos GUARDADOS en BD -->\r\n            <div *ngIf=\"hasSavedWinner(sorteo); else setWinner\">\r\n              <!-- Resultados del sorteo -->\r\n              <div class=\"winner-section\">\r\n                <div class=\"winner-number\">\r\n                  <i class=\"fas fa-trophy\"></i>\r\n                  <span>{{ getSorteoData(sorteo)?.numeroGanador || 'N/A' }}</span>\r\n                </div>\r\n                <div class=\"factor\">Factor: {{ getSorteoData(sorteo)?.factorMultiplicador || 70 }}</div>\r\n              </div>\r\n              \r\n              <div class=\"sorteo-stats\">\r\n                <div class=\"stat-item vendido\">\r\n                  <span class=\"label\">Vendido</span>\r\n                  <span class=\"value\">L {{ getSorteoData(sorteo)?.totalVendido?.toFixed(2) || '0.00' }}</span>\r\n                </div>\r\n                <div class=\"stat-item pagado\">\r\n                  <span class=\"label\">Pagado</span>\r\n                  <span class=\"value\">L {{ getSorteoData(sorteo)?.totalPagado?.toFixed(2) || '0.00' }}</span>\r\n                </div>\r\n                <div class=\"stat-item ganancia\" [class.positive]=\"(getSorteoData(sorteo)?.gananciaNeta || 0) > 0\" \r\n                     [class.negative]=\"(getSorteoData(sorteo)?.gananciaNeta || 0) < 0\">\r\n                  <span class=\"label\">Ganancia</span>\r\n                  <span class=\"value\">L {{ getSorteoData(sorteo)?.gananciaNeta?.toFixed(2) || '0.00' }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <ng-template #setWinner>\r\n              <!-- Formulario para establecer ganador solo si no está abierto -->\r\n              <div *ngIf=\"!isSorteoOpen(sorteo)\" class=\"winner-form\">\r\n                <div class=\"form-group\">\r\n                  <label>Número Ganador:</label>\r\n                  <input type=\"number\" class=\"form-input\" min=\"1\" max=\"99\" \r\n                         [(ngModel)]=\"winningNumbers[sorteo.name]\" \r\n                         [disabled]=\"isLoading\"\r\n                         placeholder=\"Ingrese número (1-99)\">\r\n                </div>\r\n                <button class=\"btn-set-winner\" (click)=\"openFactorsModal(sorteo.name, +winningNumbers[sorteo.name])\" \r\n                        [disabled]=\"!winningNumbers[sorteo.name] || isLoading\">\r\n                  <i class=\"fas fa-cog\"></i> \r\n                  <span *ngIf=\"isLoading\">Cargando...</span>\r\n                  <span *ngIf=\"!isLoading\">Configurar Factores</span>\r\n                </button>\r\n              </div>\r\n              \r\n              <!-- Mensaje cuando el sorteo está abierto -->\r\n              <div *ngIf=\"isSorteoOpen(sorteo)\" class=\"sorteo-open-message\">\r\n                <i class=\"fas fa-clock\"></i>\r\n                <span>Sorteo abierto - Esperando cierre</span>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Componente de Resumen de Sorteos -->\r\n    <app-resumen-sorteos></app-resumen-sorteos>\r\n\r\n    <!-- Sección de Ventas -->\r\n    <div class=\"ventas-section\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-list\"></i> Historial de Ventas</h3>\r\n        <div class=\"section-actions\">\r\n          <button class=\"btn-filter btn-primary\" (click)=\"exportarVentasExcel()\" [disabled]=\"isLoading\" title=\"Exportar a Excel\">\r\n            <i class=\"fas fa-file-excel\"></i> Excel\r\n          </button>\r\n          <button class=\"btn-filter btn-primary\" (click)=\"exportarVentasPDF()\" [disabled]=\"isLoading\" title=\"Exportar a PDF\">\r\n            <i class=\"fas fa-file-pdf\"></i> PDF\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"ventas-table-container\" *ngIf=\"sales.length > 0; else noSales\">\r\n        <!-- Loading overlay para filtros -->\r\n        <div class=\"loading-overlay\" *ngIf=\"isLoadingFilters\">\r\n          <div class=\"loading-content\">\r\n            <i class=\"fas fa-spinner fa-spin\"></i>\r\n            <span>Aplicando filtros...</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"ventas-table\" [class.loading]=\"isLoadingFilters\">\r\n          <div class=\"table-header\">\r\n            <div class=\"col-fecha\">Fecha</div>\r\n            <div class=\"col-sucursal\">Sucursal</div>\r\n            <div class=\"col-sorteo\">Sorteo</div>\r\n            <div class=\"col-total\">Total</div>\r\n            <div class=\"col-recibo\">Recibo</div>\r\n            <div class=\"col-acciones\">Acciones</div>\r\n          </div>\r\n          \r\n          <div class=\"table-body\">\r\n            <div *ngFor=\"let sale of sales; trackBy: trackBySale\" class=\"table-row\">\r\n              <div class=\"col-fecha\">{{ formatDateTime(sale.createdAt) }}</div>\r\n              <div class=\"col-sucursal\">{{ sale.sucursal }}</div>\r\n              <div class=\"col-sorteo\">{{ sale.sorteo }}</div>\r\n              <div class=\"col-total\">L {{ sale.total.toFixed(2) }}</div>\r\n              <div class=\"col-recibo\">{{ sale.numeroRecibo || sale.id.slice(-6) }}</div>\r\n              <div class=\"col-acciones\">\r\n                <button class=\"btn-table-action\" (click)=\"verDetalles(sale)\" title=\"Ver detalles\"\r\n                        [disabled]=\"isLoadingFilters\">\r\n                  <i class=\"fas fa-eye\"></i>\r\n                </button>\r\n                <button class=\"btn-table-action\" (click)=\"reprintReceipt(sale)\" title=\"Reimprimir\"\r\n                        [disabled]=\"isLoadingFilters\">\r\n                  <i class=\"fas fa-print\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <ng-template #noSales>\r\n        <div class=\"no-data-message\">\r\n          <i class=\"fas fa-inbox\"></i>\r\n          <h4>No hay ventas para mostrar</h4>\r\n          <p>Ajusta los filtros para ver diferentes resultados</p>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para crear/editar usuario -->\r\n<div class=\"modal fade\" [class.show]=\"showUserModal\" [style.display]=\"showUserModal ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" (click)=\"showUserModal && $event.target === $event.currentTarget && closeUserModal()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-user\"></i> {{ editingUser ? 'Editar Usuario' : 'Crear Usuario' }}\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"closeUserModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #userForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"userEmail\">Email:</label>\r\n            <input type=\"email\" id=\"userEmail\" class=\"form-input\" required\r\n                   [(ngModel)]=\"userFormData.email\" name=\"email\" \r\n                   placeholder=\"usuario@ejemplo.com\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"userName\">Nombre:</label>\r\n            <input type=\"text\" id=\"userName\" class=\"form-input\"\r\n                   [(ngModel)]=\"userFormData.nombre\" name=\"nombre\" \r\n                   placeholder=\"Nombre completo del usuario\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\" *ngIf=\"!editingUser\">\r\n            <label for=\"userPassword\">Contraseña:</label>\r\n            <input type=\"password\" id=\"userPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"userFormData.password\" name=\"password\" \r\n                   placeholder=\"Contraseña segura\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"userRole\">Rol:</label>\r\n            <select id=\"userRole\" class=\"form-input\" \r\n                    [(ngModel)]=\"userFormData.role\" name=\"role\" required>\r\n              <option value=\"admin\">Administrador</option>\r\n              <option value=\"sucursal\">Sucursal</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"form-group\" *ngIf=\"userFormData.role === 'sucursal'\">\r\n            <label for=\"userSucursal\">Sucursal:</label>\r\n            <input type=\"text\" id=\"userSucursal\" class=\"form-input\" \r\n                   [(ngModel)]=\"userFormData.sucursal\" name=\"sucursal\" \r\n                   placeholder=\"Nombre de la sucursal\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"checkbox-label\">\r\n              <input type=\"checkbox\" [(ngModel)]=\"userFormData.active\" name=\"active\">\r\n              <span class=\"checkmark\"></span>\r\n              Usuario Activo\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closeUserModal()\">\r\n          <i class=\"fas fa-times\"></i> Cancelar\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"saveUser()\" \r\n                [disabled]=\"!userForm.valid || isLoading\">\r\n          <i class=\"fas fa-save\"></i> {{ editingUser ? 'Actualizar' : 'Crear' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n \r\n\r\n<!-- Modal para cambiar contraseña de usuario -->\r\n<div class=\"modal fade\" [class.show]=\"showPasswordModal\" [style.display]=\"showPasswordModal ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" (click)=\"showPasswordModal && $event.target === $event.currentTarget && closePasswordModal()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-key\"></i> Cambiar Contraseña\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"closePasswordModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #passwordForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"newPassword\">Nueva Contraseña:</label>\r\n            <input type=\"password\" id=\"newPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"newPassword\" name=\"newPassword\" \r\n                   placeholder=\"Ingrese la nueva contraseña\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"confirmPassword\">Confirmar Contraseña:</label>\r\n            <input type=\"password\" id=\"confirmPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" \r\n                   placeholder=\"Confirme la nueva contraseña\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closePasswordModal()\">\r\n          <i class=\"fas fa-times\"></i> Cancelar\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"changeUserPassword()\" \r\n                [disabled]=\"!passwordForm.valid || newPassword !== confirmPassword || isLoading\">\r\n          <i class=\"fas fa-save\"></i> Cambiar Contraseña\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- MODAL DE DETALLES DE VENTA -->\r\n<div class=\"modal\" [style.display]=\"showSaleDetailModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showSaleDetailModal\" \r\n     (keydown.escape)=\"closeSaleDetailModal()\"\r\n     tabindex=\"0\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\"><i class=\"fas fa-receipt\"></i> Detalles de Venta</h3>\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"closeSaleDetailModal()\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"modal-body\" *ngIf=\"selectedSaleForDetail\">\r\n        <!-- Información General -->\r\n        <div class=\"sale-info-grid\">\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Recibo:</span>\r\n            <span class=\"value\">{{ selectedSaleForDetail.numeroRecibo }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Correlativo:</span>\r\n            <span class=\"value\">{{ selectedSaleForDetail.correlativo }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Fecha:</span>\r\n            <span class=\"value\">{{ formatDateTime(selectedSaleForDetail.createdAt) }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Sucursal:</span>\r\n            <span class=\"value\">{{ selectedSaleForDetail.sucursal }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Sorteo:</span>\r\n            <span class=\"value text-capitalize\">{{ selectedSaleForDetail.sorteo }}</span>\r\n          </div>\r\n          <div class=\"info-row total-row\">\r\n            <span class=\"label\">Total:</span>\r\n            <span class=\"value\">L {{ selectedSaleForDetail.total.toFixed(2) }}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Números Jugados -->\r\n        <div class=\"numbers-section\" *ngIf=\"selectedSaleDetails.length > 0\">\r\n          <h4><i class=\"fas fa-list\"></i> Números Jugados</h4>\r\n          <div class=\"numbers-grid\">\r\n            <div class=\"number-item\" *ngFor=\"let detail of selectedSaleDetails; trackBy: trackBySaleDetail\">\r\n              <div class=\"number-card\">\r\n                <div class=\"number\">{{ detail.numero.toString().padStart(2, '0') }}</div>\r\n                <div class=\"amount\">L {{ detail.monto.toFixed(2) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"numbers-summary\">\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">Cantidad de números:</span>\r\n              <span class=\"value\">{{ selectedSaleDetails.length }}</span>\r\n            </div>\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">Total apostado:</span>\r\n              <span class=\"value\">L {{ getTotalNumeros().toFixed(2) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"no-numbers\" *ngIf=\"selectedSaleDetails.length === 0\">\r\n          <i class=\"fas fa-exclamation-triangle\"></i>\r\n          <p>No se encontraron números para esta venta</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"reprintReceipt(selectedSaleForDetail!)\" \r\n                [disabled]=\"isLoading\">\r\n          <i class=\"fas fa-print\"></i> Reimprimir Recibo\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closeSaleDetailModal()\">\r\n          <i class=\"fas fa-times\"></i> Cerrar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para configurar factores por sucursal -->\r\n<div class=\"modal-overlay\" *ngIf=\"showFactorsModal\" (click)=\"closeFactorsModal()\">\r\n  <div class=\"modal-container factors-modal\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>\r\n        <i class=\"fas fa-calculator\"></i>\r\n        Configurar Factores por Sucursal\r\n      </h3>\r\n      <div class=\"sorteo-info\" *ngIf=\"currentSorteoForFactors\">\r\n        <div class=\"sorteo-badge\">{{ currentSorteoForFactors.sorteo.label }}</div>\r\n        <div class=\"winning-number\">Número Ganador: {{ currentSorteoForFactors.winningNumber.padStart(2, '0') }}</div>\r\n      </div>\r\n      <button class=\"btn-close\" (click)=\"closeFactorsModal()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n      <div class=\"factors-instruction\">\r\n        <i class=\"fas fa-info-circle\"></i>\r\n        <p>Configure el factor multiplicador para cada sucursal. Este factor determinará cuánto se paga por cada número ganador.</p>\r\n      </div>\r\n\r\n      <div class=\"factors-list\" *ngIf=\"sucursalesFactores.length > 0\">\r\n        <div class=\"factor-item\" *ngFor=\"let sucursal of getUniqueSucursales(); let i = index\">\r\n          <div class=\"sucursal-info\">\r\n            <div class=\"sucursal-name\">\r\n              <i class=\"fas fa-store\"></i>\r\n              {{ sucursal }}\r\n            </div>\r\n            <div class=\"sucursal-users\" *ngIf=\"hasSucursalUsers(sucursal)\">\r\n              <small>\r\n                Usuarios: \r\n                <span *ngFor=\"let user of getUsersBySucursal(sucursal); let last = last\">\r\n                  {{ user.email }}{{ !last ? ', ' : '' }}\r\n                </span>\r\n              </small>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"factor-input\">\r\n            <label>Factor (ej: 70)</label>\r\n            <div class=\"input-with-x\">\r\n              <input \r\n                type=\"number\" \r\n                min=\"1\" \r\n                max=\"999\" \r\n                step=\"0.1\"\r\n                [value]=\"factoresPorSucursal[sucursal] || 75\" \r\n                (input)=\"updateFactorForSucursal(sucursal, $any($event.target).value)\"\r\n                placeholder=\"70\">\r\n              <span class=\"x-multiplier\">x</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"loading-factors\" *ngIf=\"isLoading && sucursalesFactores.length === 0\">\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n        <p>Cargando configuración de sucursales...</p>\r\n      </div>\r\n\r\n      <div class=\"no-sucursales\" *ngIf=\"!isLoading && sucursalesFactores.length === 0\">\r\n        <i class=\"fas fa-exclamation-triangle\"></i>\r\n        <p>No se encontraron sucursales activas</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-modal btn-secondary\" (click)=\"closeFactorsModal()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-times\"></i>\r\n        Cancelar\r\n      </button>\r\n      <button class=\"btn-modal btn-primary\" (click)=\"confirmWinningNumberWithFactors()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading\"></i>\r\n        <i class=\"fas fa-trophy\" *ngIf=\"!isLoading\"></i>\r\n        {{ isLoading ? 'Estableciendo...' : 'Establecer Ganador' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para mostrar resumen por sucursales -->\r\n<div class=\"modal-overlay\" *ngIf=\"showResumenModal\" (click)=\"closeResumenModal()\">\r\n  <div class=\"modal-container resumen-modal\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>\r\n        <i class=\"fas fa-chart-bar\"></i>\r\n        Resumen de Cierre por Sucursales\r\n      </h3>\r\n      <button type=\"button\" class=\"btn-close\" (click)=\"closeResumenModal()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"modal-body\">\r\n      <div class=\"sorteo-info\">\r\n        <h4>{{ currentSorteoForResumen }}</h4>\r\n      </div>\r\n      \r\n      <div class=\"resumen-table\">\r\n        <div class=\"table-header\">\r\n          <div class=\"col-sucursal\">Sucursal</div>\r\n          <div class=\"col-factor\">Factor</div>\r\n          <div class=\"col-vendido\">Total Vendido</div>\r\n          <div class=\"col-pagado\">Total Pagado</div>\r\n          <div class=\"col-ganancia\">Ganancia Neta</div>\r\n        </div>\r\n        \r\n        <div class=\"table-row\" *ngFor=\"let sucursal of resumenSucursales\">\r\n          <div class=\"col-sucursal\">{{ sucursal.sucursal }}</div>\r\n          <div class=\"col-factor\">{{ sucursal.factor_multiplicador }}x</div>\r\n          <div class=\"col-vendido\">L {{ sucursal.total_vendido?.toFixed(2) || '0.00' }}</div>\r\n          <div class=\"col-pagado\">L {{ sucursal.total_pagado?.toFixed(2) || '0.00' }}</div>\r\n          <div class=\"col-ganancia\" \r\n               [class.positive]=\"(sucursal.ganancia_neta || 0) > 0\"\r\n               [class.negative]=\"(sucursal.ganancia_neta || 0) < 0\">\r\n            L {{ sucursal.ganancia_neta?.toFixed(2) || '0.00' }}\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Totales generales -->\r\n        <div class=\"table-footer\">\r\n          <div class=\"col-sucursal\"><strong>TOTAL GENERAL</strong></div>\r\n          <div class=\"col-factor\">-</div>\r\n          <div class=\"col-vendido\">\r\n            <strong>L {{ getTotalVendidoGeneral() }}</strong>\r\n          </div>\r\n          <div class=\"col-pagado\">\r\n            <strong>L {{ getTotalPagadoGeneral() }}</strong>\r\n          </div>\r\n          <div class=\"col-ganancia\"\r\n               [class.positive]=\"getGananciaTotalGeneral() > 0\"\r\n               [class.negative]=\"getGananciaTotalGeneral() < 0\">\r\n            <strong>L {{ getGananciaTotalGeneral().toFixed(2) }}</strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-modal btn-primary\" (click)=\"closeResumenModal()\">\r\n        <i class=\"fas fa-check\"></i>\r\n        Entendido\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"card\" style=\"max-width: 400px; margin: 100px auto;\">\r\n        <h2 class=\"text-center mb-3\">Sistema de Lotería</h2>\r\n        <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email:</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"email\" \r\n              name=\"email\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"email\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Contraseña:</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"password\" \r\n              name=\"password\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"password\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\r\n            {{ errorMessage }}\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            class=\"btn btn-primary w-100\" \r\n            [disabled]=\"!loginForm.valid || isLoading\">\r\n            {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .w-100 {\r\n      width: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: string = '';\r\n  password: string = '';\r\n  errorMessage: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Verificar si ya hay un usuario logueado con timeout\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      if (user) {\r\n        this.redirectUser(user);\r\n      }\r\n    });\r\n  }\r\n\r\n  async onLogin(): Promise<void> {\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n    this.notificationService.showLoading('Iniciando sesión...');\r\n\r\n    try {\r\n      \r\n      // Usar timeout para evitar que se cuelgue el login\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Login timeout')), 10000); // 10 segundos\r\n      });\r\n      \r\n      const loginPromise = this.supabaseService.login(this.email, this.password);\r\n      \r\n      const user = await Promise.race([loginPromise, timeoutPromise]) as any;\r\n      \r\n      \r\n      if (user) {\r\n        this.redirectUser(user);\r\n      } else {\r\n        this.errorMessage = 'Credenciales inválidas';\r\n      }\r\n    } catch (error: any) {\r\n      this.errorMessage = this.getErrorMessage(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  private redirectUser(user: any): void {\r\n    if (user.role === 'admin') {\r\n      this.router.navigate(['/admin']);\r\n    } else {\r\n      this.router.navigate(['/sucursal']);\r\n    }\r\n  }\r\n\r\n  private getErrorMessage(error: any): string {\r\n    switch (error.message) {\r\n      case 'Invalid login credentials':\r\n        return 'Credenciales inválidas';\r\n      case 'Email not confirmed':\r\n        return 'Email no confirmado';\r\n      case 'Too many requests':\r\n        return 'Demasiados intentos, intenta más tarde';\r\n      case 'Login timeout':\r\n        return 'Tiempo de espera agotado, intenta de nuevo';\r\n      default:\r\n        return 'Error en el inicio de sesión';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Subscription } from 'rxjs';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoSchedule, SORTEO_SCHEDULES } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-resumen-sorteos',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './resumen-sorteos.component.html',\r\n  styleUrl: './resumen-sorteos.component.scss'\r\n})\r\nexport class ResumenSorteosComponent implements OnInit, OnDestroy {\r\n  sorteos = SORTEO_SCHEDULES;\r\n  resumenPorSorteo: { [sorteoName: string]: any[] } = {};\r\n  ventasPorNumero: { [sorteoName: string]: { [numero: string]: number } } = {};\r\n  isLoading: boolean = false;\r\n  private subscription?: Subscription;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadResumenesSorteos();\r\n    \r\n    // Suscribirse a eventos de recarga desde otros componentes\r\n    this.subscription = this.supabaseService.resumenUpdateSubject?.subscribe(() => {\r\n      this.loadResumenesSorteos();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async loadResumenesSorteos(): Promise<void> {\r\n    this.isLoading = true;\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    const fechaStr = hondurasToday.toISOString().split('T')[0];\r\n\r\n    try {\r\n      for (const sorteo of this.sorteos) {\r\n        const sorteoId = `${fechaStr}-${sorteo.name}`;\r\n        try {\r\n          // Cargar resumen por sucursal\r\n          const resumen = await this.supabaseService.getSorteoResumenPorSucursal(sorteoId);\r\n          if (resumen && resumen.length > 0) {\r\n            this.resumenPorSorteo[sorteo.name] = resumen;\r\n          }\r\n\r\n          // Cargar ventas por número para este sorteo\r\n          await this.loadVentasPorNumero(sorteo.name, fechaStr);\r\n        } catch (error) {\r\n          console.error(`Error cargando resumen para ${sorteo.name}:`, error);\r\n        }\r\n      }\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para cargar ventas por número\r\n  async loadVentasPorNumero(sorteoName: string, fecha: string): Promise<void> {\r\n    try {\r\n      const ventasPorNumero = await this.supabaseService.getVentasPorNumero(sorteoName, fecha);\r\n      this.ventasPorNumero[sorteoName] = ventasPorNumero;\r\n    } catch (error) {\r\n      console.error(`Error cargando ventas por número para ${sorteoName}:`, error);\r\n      this.ventasPorNumero[sorteoName] = {};\r\n    }\r\n  }\r\n\r\n  // Función para obtener resumen de un sorteo específico\r\n  getResumenSorteo(sorteoName: string): any[] {\r\n    return this.resumenPorSorteo[sorteoName] || [];\r\n  }\r\n\r\n  // Función para verificar si un sorteo tiene resumen\r\n  hasResumenSorteo(sorteoName: string): boolean {\r\n    return this.resumenPorSorteo[sorteoName] && this.resumenPorSorteo[sorteoName].length > 0;\r\n  }\r\n\r\n  // Funciones auxiliares para cálculos\r\n  getTotalVendidoSorteo(sorteoName: string): string {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    const total = resumen.reduce((sum, s) => sum + (s.total_vendido || 0), 0);\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getTotalPagadoSorteo(sorteoName: string): string {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    const total = resumen.reduce((sum, s) => sum + (s.total_pagado || 0), 0);\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getGananciaTotalSorteo(sorteoName: string): number {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    return resumen.reduce((sum, s) => sum + (s.ganancia_neta || 0), 0);\r\n  }\r\n\r\n  // Función para obtener el número ganador de un sorteo\r\n  getNumeroGanador(sorteoName: string): string {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    return resumen.length > 0 ? resumen[0].numero_ganador || 'N/A' : 'N/A';\r\n  }\r\n\r\n  // Función para obtener el factor más común\r\n  getFactorPrincipal(sorteoName: string): number {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    return resumen.length > 0 ? resumen[0].factor_multiplicador || 70 : 70;\r\n  }\r\n\r\n  // Función para refrescar datos (para llamar desde el componente padre)\r\n  async refreshData(): Promise<void> {\r\n    await this.loadResumenesSorteos();\r\n  }\r\n\r\n  // Función para obtener sorteos con resumen (solo los cerrados)\r\n  getSorteosConResumen(): SorteoSchedule[] {\r\n    return this.sorteos.filter(sorteo => this.hasResumenSorteo(sorteo.name));\r\n  }\r\n\r\n  // Métodos para manejar ventas por número\r\n  getVentasPorNumero(sorteoName: string): { [numero: string]: number } {\r\n    return this.ventasPorNumero[sorteoName] || {};\r\n  }\r\n\r\n  hasVentasPorNumero(sorteoName: string): boolean {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    return Object.keys(ventas).length > 0;\r\n  }\r\n\r\n  getNumerosMasVendidos(sorteoName: string, top: number = 5): Array<{numero: string, total: number}> {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    return Object.entries(ventas)\r\n      .map(([numero, total]) => ({ numero, total }))\r\n      .sort((a, b) => b.total - a.total)\r\n      .slice(0, top);\r\n  }\r\n\r\n  getVentaTotalPorNumero(sorteoName: string, numero: string): number {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    return ventas[numero] || 0;\r\n  }\r\n\r\n  getMaxVentaPorNumero(sorteoName: string): number {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    const valores = Object.values(ventas);\r\n    return valores.length > 0 ? Math.max(...valores) : 0;\r\n  }\r\n\r\n  // Calcular promedio de ventas por número\r\n  getPromedioVentaPorNumero(sorteoName: string): number {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    const valores = Object.values(ventas);\r\n    if (valores.length === 0) return 0;\r\n    const suma = valores.reduce((acc, val) => acc + val, 0);\r\n    return suma / valores.length;\r\n  }\r\n\r\n  // Método auxiliar para obtener la cantidad de números vendidos\r\n  getCantidadNumerosVendidos(sorteoName: string): number {\r\n    return Object.keys(this.getVentasPorNumero(sorteoName)).length;\r\n  }\r\n\r\n  // Generar array de números del 00 al 99 para la tabla\r\n  getNumeros(): string[] {\r\n    const numeros = ['00']; // Empezar con 00\r\n    for (let i = 1; i <= 99; i++) {\r\n      numeros.push(i.toString().padStart(2, '0'));\r\n    }\r\n    return numeros;\r\n  }\r\n\r\n  // Obtener color de intensidad basado en el total vendido\r\n  getIntensidadColor(sorteoName: string, numero: string): string {\r\n    const venta = this.getVentaTotalPorNumero(sorteoName, numero);\r\n    const maxVenta = this.getMaxVentaPorNumero(sorteoName);\r\n    \r\n    if (venta === 0 || maxVenta === 0) return '';\r\n    \r\n    const intensidad = venta / maxVenta;\r\n    if (intensidad > 0.8) return 'intensidad-alta';\r\n    if (intensidad > 0.5) return 'intensidad-media';\r\n    if (intensidad > 0.2) return 'intensidad-baja';\r\n    return 'intensidad-minima';\r\n  }\r\n}\r\n","<!-- Sección de Resúmenes de Sorteos -->\r\n<div class=\"resumen-sorteos-section\">\r\n  <div class=\"section-header\">\r\n    <h3>\r\n      <i class=\"fas fa-chart-bar\"></i> \r\n      Resúmenes de Sorteos por Sucursales\r\n    </h3>\r\n    <div class=\"section-actions\">\r\n      <button class=\"btn-refresh\" (click)=\"loadResumenesSorteos()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-sync-alt\" [class.fa-spin]=\"isLoading\"></i>\r\n        Actualizar\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"loading-overlay\" *ngIf=\"isLoading\">\r\n    <div class=\"loading-content\">\r\n      <i class=\"fas fa-spinner fa-spin\"></i>\r\n      <span>Cargando resúmenes de sorteos...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"sorteos-resumen-container\" *ngIf=\"!isLoading\">\r\n    <div *ngIf=\"getSorteosConResumen().length === 0\" class=\"no-resumen-message\">\r\n      <div class=\"empty-state\">\r\n        <i class=\"fas fa-chart-line\"></i>\r\n        <h4>No hay sorteos cerrados</h4>\r\n        <p>Los resúmenes aparecerán aquí cuando se cierren los sorteos</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Card por cada sorteo cerrado -->\r\n    <div *ngFor=\"let sorteo of getSorteosConResumen()\" class=\"sorteo-resumen-card\">\r\n      <div class=\"card-header\">\r\n        <div class=\"sorteo-info\">\r\n          <h4>{{ sorteo.label }}</h4>\r\n          <span class=\"sorteo-time\">{{ sorteo.closeTime }}</span>\r\n        </div>\r\n        <div class=\"winner-info\">\r\n          <div class=\"winner-number\">\r\n            <i class=\"fas fa-trophy\"></i>\r\n            <span>{{ getNumeroGanador(sorteo.name) }}</span>\r\n          </div>\r\n          <div class=\"factor-info\">Factor: {{ getFactorPrincipal(sorteo.name) }}x</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card-body\">\r\n        <!-- Estadísticas generales -->\r\n        <div class=\"stats-overview\">\r\n          <div class=\"stat-card vendido\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"fas fa-coins\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-label\">Total Vendido</div>\r\n              <div class=\"stat-value\">L {{ getTotalVendidoSorteo(sorteo.name) }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"stat-card pagado\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"fas fa-hand-holding-usd\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-label\">Total Pagado</div>\r\n              <div class=\"stat-value\">L {{ getTotalPagadoSorteo(sorteo.name) }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"stat-card ganancia\" \r\n               [class.positive]=\"getGananciaTotalSorteo(sorteo.name) > 0\"\r\n               [class.negative]=\"getGananciaTotalSorteo(sorteo.name) < 0\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"fas fa-chart-line\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-label\">Ganancia Total</div>\r\n              <div class=\"stat-value\">L {{ getGananciaTotalSorteo(sorteo.name).toFixed(2) }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Tabla detallada por sucursales -->\r\n        <div class=\"detalle-sucursales\">\r\n          <h5>\r\n            <i class=\"fas fa-building\"></i>\r\n            Detalle por Sucursales\r\n          </h5>\r\n          \r\n          <div class=\"tabla-resumen\">\r\n            <div class=\"tabla-header\">\r\n              <div class=\"col-sucursal\">Sucursal</div>\r\n              <div class=\"col-factor\">Factor</div>\r\n              <div class=\"col-vendido\">Vendido</div>\r\n              <div class=\"col-pagado\">Pagado</div>\r\n              <div class=\"col-ganancia\">Ganancia</div>\r\n            </div>\r\n            \r\n            <div class=\"tabla-row\" *ngFor=\"let sucursal of getResumenSorteo(sorteo.name)\">\r\n              <div class=\"col-sucursal\" [attr.data-label]=\"'Sucursal'\">\r\n                <i class=\"fas fa-store\"></i>\r\n                {{ sucursal.sucursal }}\r\n              </div>\r\n              <div class=\"col-factor\" [attr.data-label]=\"'Factor'\">\r\n                {{ sucursal.factor_multiplicador }}x\r\n              </div>\r\n              <div class=\"col-vendido\" [attr.data-label]=\"'Vendido'\">\r\n                L {{ sucursal.total_vendido?.toFixed(2) || '0.00' }}\r\n              </div>\r\n              <div class=\"col-pagado\" [attr.data-label]=\"'Pagado'\">\r\n                L {{ sucursal.total_pagado?.toFixed(2) || '0.00' }}\r\n              </div>\r\n              <div class=\"col-ganancia\" [attr.data-label]=\"'Ganancia'\"\r\n                   [class.positive]=\"(sucursal.ganancia_neta || 0) > 0\"\r\n                   [class.negative]=\"(sucursal.ganancia_neta || 0) < 0\">\r\n                L {{ sucursal.ganancia_neta?.toFixed(2) || '0.00' }}\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Total -->\r\n            <div class=\"tabla-footer\">\r\n              <div class=\"col-sucursal\"><strong>TOTAL GENERAL</strong></div>\r\n              <div class=\"col-factor\">-</div>\r\n              <div class=\"col-vendido\">\r\n                <strong>L {{ getTotalVendidoSorteo(sorteo.name) }}</strong>\r\n              </div>\r\n              <div class=\"col-pagado\">\r\n                <strong>L {{ getTotalPagadoSorteo(sorteo.name) }}</strong>\r\n              </div>\r\n              <div class=\"col-ganancia\"\r\n                   [class.positive]=\"getGananciaTotalSorteo(sorteo.name) > 0\"\r\n                   [class.negative]=\"getGananciaTotalSorteo(sorteo.name) < 0\">\r\n                <strong>L {{ getGananciaTotalSorteo(sorteo.name).toFixed(2) }}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Cuadro resumen de ventas por número -->\r\n        <div class=\"ventas-por-numero\" *ngIf=\"hasVentasPorNumero(sorteo.name)\">\r\n          <h5>\r\n            <i class=\"fas fa-th\"></i>\r\n            Resumen de Ventas por Número\r\n          </h5>\r\n          \r\n          <!-- Números más vendidos (top 5) -->\r\n          <div class=\"top-numeros\">\r\n            <h6>\r\n              <i class=\"fas fa-trophy\"></i>\r\n              Top 5 Números Más Vendidos\r\n            </h6>\r\n            <div class=\"top-numeros-grid\">\r\n              <div class=\"top-numero-card\" *ngFor=\"let item of getNumerosMasVendidos(sorteo.name, 5); let i = index\">\r\n                <div class=\"numero\">{{ item.numero }}</div>\r\n                <div class=\"cantidad\">L {{ item.total.toFixed(2) }}</div>\r\n                <div class=\"posicion\">#{{ i + 1 }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Tablero de números 00-99 -->\r\n          <div class=\"tablero-numeros\">\r\n            <h6>\r\n              <i class=\"fas fa-grid-3x3\"></i>\r\n              Tablero Completo (00-99)\r\n            </h6>\r\n            <div class=\"numeros-grid\">\r\n              <div class=\"numero-cell\" \r\n                   *ngFor=\"let numero of getNumeros()\"\r\n                   [class]=\"getIntensidadColor(sorteo.name, numero)\"\r\n                   [title]=\"'Número ' + numero + ': L ' + getVentaTotalPorNumero(sorteo.name, numero).toFixed(2)\">\r\n                <span class=\"numero-label\">{{ numero }}</span>\r\n                <span class=\"numero-venta\">L {{ getVentaTotalPorNumero(sorteo.name, numero).toFixed(2) }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Estadísticas adicionales -->\r\n          <div class=\"estadisticas-adicionales\">\r\n            <h6>\r\n              <i class=\"fas fa-chart-bar\"></i>\r\n              Estadísticas de Ventas\r\n            </h6>\r\n            <div class=\"stats-adicionales-grid\">\r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-hashtag\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Números Diferentes Vendidos</span>\r\n                  <span class=\"stat-value\">{{ getCantidadNumerosVendidos(sorteo.name) }}</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-crown\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Número Más Vendido</span>\r\n                  <span class=\"stat-value\">\r\n                    {{ getNumerosMasVendidos(sorteo.name, 1).length > 0 ? getNumerosMasVendidos(sorteo.name, 1)[0].numero : 'N/A' }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-calculator\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Promedio por Número</span>\r\n                  <span class=\"stat-value\">L {{ getPromedioVentaPorNumero(sorteo.name).toFixed(2) }}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-chart-line\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Venta Máxima</span>\r\n                  <span class=\"stat-value\">L {{ getMaxVentaPorNumero(sorteo.name).toFixed(2) }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoService } from '../../services/sorteo.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail } from '../../models/interfaces';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-sucursal',\r\n  templateUrl: './sucursal.component.html',\r\n  styleUrls: ['./sucursal.component.scss']\r\n})\r\nexport class SucursalComponent implements OnInit, OnDestroy {\r\n  currentUser: any = null;\r\n  currentSorteo: SorteoSchedule | null = null;\r\n  timeUntilClose: string = '';\r\n  isSorteoOpen: boolean = false;\r\n\r\n  selectedNumber: number | null = null;\r\n  selectedAmount: number | null = null;\r\n  selectedNumbers: { numero: number, monto: number }[] = [];\r\n\r\n  // Propiedades para entrada individual\r\n  numero: number | null = null;\r\n  monto: number | null = null;\r\n\r\n  todaySales: Sale[] = [];\r\n  recentSales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  filteredSales: Sale[] = [];\r\n  filterDate: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  // Propiedades para el teclado numérico\r\n  numberInput: string = '';\r\n  showKeypad: boolean = false;\r\n  isBlocked: boolean = false;\r\n  currentInput: 'numero' | 'monto' = 'numero';\r\n\r\n  // Propiedades para el flujo de modales\r\n  showNumberModal: boolean = false;\r\n  showAmountModal: boolean = false;\r\n  showConfirmModal: boolean = false;\r\n  tempNumber: number | null = null;\r\n  tempAmount: number | null = null;\r\n  modalNumberInput: string = '';\r\n  modalAmountInput: string = '';\r\n\r\n  // Propiedades para la hora de Honduras\r\n  currentHondurasTime: string = '';\r\n\r\n  // Manejo de suscripciones y timers\r\n  private userSubscription?: Subscription;\r\n  private sorteoUpdateInterval?: any;\r\n  private timeCheckInterval?: any;\r\n  private hondurasTimeInterval?: any;\r\n  private isProcessingModal: boolean = false;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private sorteoService: SorteoService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userSubscription = this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      console.log('Usuario actual - Sucursal:', this.currentUser?.sucursal);\r\n      if (!user || user.role !== 'sucursal') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    this.initializeComponent();\r\n    this.checkTimeRestrictions();\r\n    this.updateHondurasTime();\r\n\r\n    // Verificar bloqueo cada minuto - usar método que se puede limpiar\r\n    this.timeCheckInterval = setInterval(() => {\r\n      this.checkTimeRestrictions();\r\n    }, 60000);\r\n\r\n    // Actualizar hora de Honduras cada segundo\r\n    this.hondurasTimeInterval = setInterval(() => {\r\n      this.updateHondurasTime();\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n    // Limpiar suscripciones y timers\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n    if (this.sorteoUpdateInterval) {\r\n      clearInterval(this.sorteoUpdateInterval);\r\n    }\r\n    if (this.timeCheckInterval) {\r\n      clearInterval(this.timeCheckInterval);\r\n    }\r\n    if (this.hondurasTimeInterval) {\r\n      clearInterval(this.hondurasTimeInterval);\r\n    }\r\n\r\n  }\r\n\r\n  private updateHondurasTime(): void {\r\n    const hondurasTime = this.supabaseService.getHondurasTimeNow();\r\n    const fullFormatted = this.supabaseService.formatDateForHonduras(hondurasTime);\r\n\r\n    const parts = fullFormatted.split(' ');\r\n    this.currentHondurasTime = `${parts[1]} ${parts[2]}`; // \"12:49:39 AM\"\r\n   }\r\n\r\n  private async initializeComponent(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      this.notificationService.showLoading('Cargando datos...');\r\n\r\n      // Primero asegurar que los horarios de sorteo estén actualizados\r\n      await this.sorteoService.refreshSorteoSchedules();\r\n      \r\n      await this.updateSorteoInfo();\r\n      await this.loadTodaySales();\r\n      await this.loadRecentSales();\r\n      this.setFilterDate();\r\n\r\n      // Limpiar timer anterior si existe\r\n      if (this.sorteoUpdateInterval) {\r\n        clearInterval(this.sorteoUpdateInterval);\r\n      }\r\n\r\n      // Actualizar cada minuto - usar método que se puede limpiar\r\n      this.sorteoUpdateInterval = setInterval(async () => {\r\n        await this.updateSorteoInfo();\r\n      }, 60000);\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar los datos');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  setFilterDate(): void {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    this.filterDate = hondurasToday.toISOString().split('T')[0];\r\n  }\r\n\r\n  onFilterDateChange(): void {\r\n    this.filterSales();\r\n  }\r\n\r\n  filterSales(): void {\r\n    if (!this.filterDate) {\r\n      this.filteredSales = this.todaySales;\r\n      return;\r\n    }\r\n\r\n    const filterDateObj = new Date(this.filterDate);\r\n    this.filteredSales = this.todaySales.filter(sale => {\r\n      const saleDate = new Date(sale.fecha);\r\n      return saleDate.toDateString() === filterDateObj.toDateString();\r\n    });\r\n  }\r\n\r\n  async updateSorteoInfo(): Promise<void> {\r\n    try {\r\n      \r\n      // Asegurar que tenemos los horarios más recientes\r\n      await this.sorteoService.refreshSorteoSchedules();\r\n      \r\n      this.currentSorteo = this.sorteoService.getCurrentSorteo();\r\n      \r\n\r\n      if (this.currentSorteo) {\r\n        this.isSorteoOpen = this.sorteoService.isSorteoOpen(this.currentSorteo);\r\n        this.timeUntilClose = this.sorteoService.getTimeUntilClose(this.currentSorteo);\r\n        \r\n      } else {\r\n        this.isSorteoOpen = false;\r\n        this.timeUntilClose = '';\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  addNumber(): void {\r\n    if (this.numero && this.monto &&\r\n      this.numero >= 0 && this.numero <= 99) {\r\n\r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.numero);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.monto!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.numero,\r\n          monto: this.monto\r\n        });\r\n      }\r\n\r\n      this.numero = null;\r\n      this.monto = null;\r\n      this.numberInput = '';\r\n      this.currentInput = 'numero';\r\n      this.notificationService.showSuccess('Número agregado', 'Número agregado exitosamente a la venta');\r\n    }\r\n  }\r\n\r\n  removeNumber(index: number): void {\r\n\r\n    this.selectedNumbers.splice(index, 1);\r\n\r\n    this.cdr.detectChanges(); // Forzar actualización visual inmediata\r\n  }\r\n\r\n  // Generar número de recibo único con correlativo\r\n  generateReceiptNumber(correlativo: number, sucursal: string): string {\r\n    const now = new Date();\r\n    const year = now.getFullYear().toString().slice(-2); // Últimos 2 dígitos del año\r\n    const month = (now.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = now.getDate().toString().padStart(2, '0');\r\n\r\n    // Formato: SUC001-REC-250717-0001\r\n    const sucursalCode = sucursal.replace(/\\s+/g, '').toUpperCase().substring(0, 3);\r\n    const correlativoFormatted = correlativo.toString().padStart(4, '0');\r\n    const numeroRecibo = `${sucursalCode}-REC-${year}${month}${day}-${correlativoFormatted}`;\r\n\r\n    return numeroRecibo;\r\n  }\r\n\r\n  getTotal(): number {\r\n    return this.selectedNumbers.reduce((total, item) => total + item.monto, 0);\r\n  }\r\n\r\n  async processSale(): Promise<void> {\r\n    if (!this.currentSorteo || !this.currentUser || this.selectedNumbers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Validar que el usuario tenga sucursal configurada\r\n    if (!this.currentUser.sucursal) {\r\n      await this.notificationService.showError(\r\n        'Error: El usuario no tiene una sucursal asignada. Contacte al administrador.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Confirmar venta\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Confirmar venta',\r\n      `¿Procesar venta por L. ${this.getTotal().toFixed(2)}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    this.notificationService.showLoading('Procesando venta...');\r\n\r\n    try {\r\n      // Obtener el siguiente correlativo para esta sucursal\r\n\r\n      const correlativo = await this.supabaseService.getNextCorrelativo(this.currentUser.sucursal);\r\n\r\n      // Generar número de recibo con correlativo\r\n      const numeroRecibo = this.generateReceiptNumber(correlativo, this.currentUser.sucursal);\r\n\r\n      const sale: any = {\r\n        userId: this.currentUser.id,\r\n        sucursal: this.currentUser.sucursal,\r\n        sorteo: this.currentSorteo.name,\r\n        fecha: this.supabaseService.getHondurasDateTime(),\r\n        total: this.getTotal(),\r\n        numeroRecibo: numeroRecibo,\r\n        correlativo: correlativo\r\n      };\r\n\r\n\r\n      const saleId = await this.supabaseService.createSale(sale);\r\n\r\n      // Crear detalles de venta\r\n      const saleDetails: SaleDetail[] = [];\r\n      for (const item of this.selectedNumbers) {\r\n        const detailId = await this.supabaseService.createSaleDetail({\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n        saleDetails.push({\r\n          id: detailId,\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n      }\r\n\r\n      // Generar e imprimir recibo\r\n      const saleWithId = { ...sale, id: saleId };\r\n\r\n      // Asegurar que los detalles tengan datos\r\n      if (saleDetails.length === 0) {\r\n        // Usar selectedNumbers como fallback\r\n        for (const item of this.selectedNumbers) {\r\n          saleDetails.push({\r\n            id: `temp-${Date.now()}-${item.numero}`,\r\n            saleId,\r\n            numero: item.numero,\r\n            monto: item.monto\r\n          });\r\n        }\r\n      }\r\n\r\n      this.printService.generateThermalReceipt(saleWithId, saleDetails);\r\n\r\n      // Limpiar selección inmediatamente después de enviar a imprimir\r\n      setTimeout(async () => {\r\n        // Limpiar selección inmediatamente\r\n        this.selectedNumbers = [];\r\n\r\n        // Resetear estado de modales\r\n        this.showNumberModal = false;\r\n        this.showAmountModal = false;\r\n        this.showConfirmModal = false;\r\n        this.modalNumberInput = '';\r\n        this.modalAmountInput = '';\r\n        this.tempNumber = null;\r\n        this.tempAmount = null;\r\n\r\n        this.cdr.detectChanges(); // Forzar actualización visual inmediata\r\n\r\n\r\n        // Recargar ventas actuales para mostrar la venta recién realizada\r\n        await this.loadTodaySales();\r\n        await this.loadRecentSales();\r\n\r\n\r\n        this.cdr.detectChanges(); // Forzar actualización después de cargar ventas\r\n      }, 100); // Pequeño retraso para evitar conflictos con la ventana de impresión\r\n\r\n      this.notificationService.showSuccess('Venta procesada e impresa exitosamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al procesar la venta');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  async loadTodaySales(): Promise<void> {\r\n    if (!this.currentUser) return;\r\n\r\n    try {\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      \r\n      const allSales = await this.supabaseService.getSalesByDateAndSorteo(hondurasToday, '');\r\n\r\n      this.todaySales = allSales.filter(sale => sale.sucursal === this.currentUser.sucursal);\r\n\r\n      // Cargar detalles de cada venta con timeout individual\r\n      for (const sale of this.todaySales) {\r\n        try {\r\n          const timeoutPromise = new Promise((_, reject) => {\r\n            setTimeout(() => reject(new Error('Timeout cargando detalles')), 3000);\r\n          });\r\n\r\n          const detailsPromise = this.supabaseService.getSaleDetails(sale.id);\r\n\r\n          this.saleDetails[sale.id] = await Promise.race([detailsPromise, timeoutPromise]) as SaleDetail[];\r\n        } catch (error) {\r\n          this.saleDetails[sale.id] = [];\r\n        }\r\n      }\r\n\r\n      this.filterSales();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar las ventas');\r\n    }\r\n  }\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Cerrar sesión',\r\n      '¿Está seguro que desea cerrar sesión?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      this.notificationService.showLoading('Cerrando sesión...');\r\n      try {\r\n        await this.supabaseService.logout();\r\n        this.router.navigate(['/login']);\r\n      } catch (error) {\r\n        this.notificationService.showError('Error al cerrar sesión');\r\n      } finally {\r\n        this.notificationService.hideLoading();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Métodos del teclado numérico\r\n  pressNumber(num: number) {\r\n    if (this.isBlocked) {\r\n      this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      return;\r\n    }\r\n\r\n    if (this.numberInput.length < 5) { // Máximo 5 dígitos\r\n      this.numberInput += num.toString();\r\n    }\r\n  }\r\n\r\n  clearNumber() {\r\n    this.numberInput = '';\r\n  }\r\n\r\n  acceptNumber() {\r\n    if (!this.numberInput) return;\r\n\r\n    if (this.currentInput === 'numero') {\r\n      const numero = parseInt(this.numberInput);\r\n      if (numero >= 0 && numero <= 99) {\r\n        this.numero = numero;\r\n        this.numberInput = '';\r\n        this.currentInput = 'monto';\r\n        this.notificationService.showInfo('Número seleccionado', 'Ahora ingresa el monto a apostar');\r\n      } else {\r\n        this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n      }\r\n    } else {\r\n      const monto = parseFloat(this.numberInput);\r\n      if (monto > 0 && monto <= 500) {\r\n        this.monto = monto;\r\n        this.addNumber();\r\n        this.numberInput = '';\r\n        this.currentInput = 'numero';\r\n      } else {\r\n        this.notificationService.showError('Monto inválido', 'El monto debe ser mayor a 0 y menor o igual a L. 500');\r\n      }\r\n    }\r\n  }\r\n\r\n  // Flujo de modales para selección de números\r\n  openNumberModal(): void {\r\n\r\n    if (this.isProcessingModal || this.isBlocked) {\r\n      if (this.isBlocked) {\r\n        this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    // Reiniciar estado de modales\r\n    this.closeAllModals();\r\n\r\n    // Eliminamos el setTimeout para evitar parpadeo\r\n    this.showNumberModal = true;\r\n    this.modalNumberInput = '';\r\n    this.cdr.detectChanges();\r\n    this.isProcessingModal = false;\r\n  }\r\n\r\n  closeAllModals(): void {\r\n    this.showNumberModal = false;\r\n    this.showAmountModal = false;\r\n    this.showConfirmModal = false;\r\n    this.modalNumberInput = '';\r\n    this.modalAmountInput = '';\r\n    this.tempNumber = null;\r\n    this.tempAmount = null;\r\n    this.isProcessingModal = false;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n  }\r\n\r\n  // Modal 1: Selección de número\r\n  pressModalNumber(num: number): void {\r\n    if (this.modalNumberInput.length < 2) {\r\n      this.modalNumberInput += num.toString();\r\n      this.cdr.detectChanges(); // Forzar actualización de la UI\r\n    }\r\n  }\r\n\r\n  clearModalNumber(): void {\r\n    this.modalNumberInput = '';\r\n    this.cdr.detectChanges(); // Forzar actualización inmediata\r\n  }\r\n\r\n  acceptModalNumber(): void {\r\n\r\n    // Evitar múltiples ejecuciones\r\n    if (!this.modalNumberInput || this.isProcessingModal) {\r\n      if (!this.modalNumberInput) {\r\n        this.notificationService.showError('Número requerido', 'Debe ingresar un número');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    // Formatear el número con ceros a la izquierda si es necesario\r\n    let formattedNumber = this.modalNumberInput.padStart(2, '0');\r\n    const numero = parseInt(formattedNumber);\r\n\r\n    if (numero >= 0 && numero <= 99) {\r\n      this.tempNumber = numero;\r\n\r\n      // Transición suave sin setTimeout\r\n      this.showNumberModal = false;\r\n      this.showAmountModal = true;\r\n      this.modalAmountInput = '';\r\n      this.isProcessingModal = false;\r\n      this.cdr.detectChanges();\r\n\r\n    } else {\r\n      this.isProcessingModal = false;\r\n      this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n    }\r\n  }\r\n\r\n  // Modal 2: Selección de apuesta\r\n  pressModalAmount(num: number): void {\r\n    if (this.modalAmountInput.length < 4) { // Máximo 4 dígitos para el monto\r\n      this.modalAmountInput += num.toString();\r\n      this.cdr.detectChanges(); // Forzar actualización de la UI\r\n    }\r\n  }\r\n\r\n  clearModalAmount(): void {\r\n    this.modalAmountInput = '';\r\n    this.cdr.detectChanges(); // Forzar actualización inmediata\r\n  }\r\n\r\n  acceptModalAmount(): void {\r\n\r\n    if (!this.modalAmountInput || this.isProcessingModal) {\r\n      if (!this.modalAmountInput) {\r\n        this.notificationService.showError('Monto requerido', 'Debe ingresar un monto');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    const monto = parseFloat(this.modalAmountInput);\r\n    if (monto > 0 && monto <= 1000) { // Límite de apuesta\r\n      this.tempAmount = monto;\r\n\r\n      // Transición suave sin setTimeout\r\n      this.showAmountModal = false;\r\n      this.showConfirmModal = true;\r\n      this.isProcessingModal = false;\r\n      this.cdr.detectChanges();\r\n    } else {\r\n      this.isProcessingModal = false;\r\n      this.notificationService.showError('Monto inválido', 'El monto debe estar entre 1 y 1000');\r\n    }\r\n  }\r\n\r\n  // Modal 3: Confirmación\r\n  confirmAddNumber(): void {\r\n    if (this.tempNumber !== null && this.tempAmount !== null) {\r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.tempNumber);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.tempAmount!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.tempNumber,\r\n          monto: this.tempAmount\r\n        });\r\n      }\r\n\r\n      // Quitar el modal de confirmación, solo cerrar modales\r\n      this.closeAllModals();\r\n      this.cdr.detectChanges(); // Forzar actualización final\r\n    }\r\n  }\r\n\r\n  cancelAddNumber(): void {\r\n    this.closeAllModals();\r\n  }\r\n\r\n  // Verificación de restricciones de tiempo\r\n  checkTimeRestrictions() {\r\n    if (!this.currentSorteo) return;\r\n\r\n    // Usar hora de Honduras en lugar de hora local\r\n    const hondurasNow = this.supabaseService.getHondurasDateTime();\r\n    const [hours, minutes] = this.currentSorteo.closeTime.split(':');\r\n    const closeTime = new Date(hondurasNow);\r\n    closeTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n\r\n\r\n    const timeDiff = closeTime.getTime() - hondurasNow.getTime();\r\n    const minutesLeft = Math.floor(timeDiff / (1000 * 60));\r\n\r\n\r\n    if (minutesLeft <= 5 && minutesLeft >= 0) {\r\n      this.isBlocked = true;\r\n      if (minutesLeft <= 0) {\r\n        this.notificationService.showWarning('Sorteo cerrado', 'El sorteo ya ha comenzado. No se pueden realizar más ventas.');\r\n      } else {\r\n        this.notificationService.showWarning('Ventas bloqueadas', `Faltan ${minutesLeft} minutos para el sorteo. Ventas bloqueadas.`);\r\n      }\r\n    } else {\r\n      this.isBlocked = false;\r\n    }\r\n  }\r\n\r\n  // Filtrar ventas solo del sorteo actual\r\n  getFilteredSales(): Sale[] {\r\n    if (!this.recentSales) return [];\r\n\r\n    // Usar hora de Honduras para filtrar\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    hondurasToday.setHours(0, 0, 0, 0);\r\n\r\n\r\n    const filteredSales = this.recentSales.filter((sale: Sale) => {\r\n      // Crear fecha de venta usando Honduras timezone\r\n      const saleDate = new Date(sale.createdAt);\r\n      const hondurasSaleDate = this.supabaseService.convertToHondurasTime(saleDate);\r\n      hondurasSaleDate.setHours(0, 0, 0, 0);\r\n      \r\n      const isToday = hondurasSaleDate.getTime() === hondurasToday.getTime();\r\n      \r\n      \r\n      return isToday;\r\n    });\r\n\r\n    return filteredSales;\r\n  }\r\n\r\n  // Obtener fecha de hoy formateada usando Honduras timezone\r\n  getTodayDate(): string {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    return hondurasToday.toLocaleDateString('es-HN', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n\r\n  // Formatear hora\r\n  formatTime(date: string | Date): string {\r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    return dateObj.toLocaleTimeString('es-HN', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: true\r\n    });\r\n  }\r\n\r\n  // Método para cargar ventas recientes (inicializar recentSales)\r\n  async loadRecentSales(): Promise<void> {\r\n    try {\r\n      // Asegurar que las ventas del día estén cargadas\r\n      if (!this.todaySales || this.todaySales.length === 0) {\r\n        await this.loadTodaySales();\r\n      }\r\n\r\n      // Asignar las ventas del día como ventas recientes\r\n      this.recentSales = [...this.todaySales];\r\n\r\n    } catch (error) {\r\n      this.recentSales = [];\r\n    }\r\n  }\r\n\r\n  // Método mejorado para reimprimir recibo\r\n  async reprintReceipt(sale: Sale): Promise<void> {\r\n    try {\r\n\r\n      this.notificationService.showLoading('Reimprimiendo recibo...');\r\n\r\n      // Obtener detalles de la venta desde la base de datos\r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n\r\n      if (details.length === 0) {\r\n        this.notificationService.showError('Sin detalles', 'No se encontraron detalles para esta venta. No se puede reimprimir el recibo.');\r\n        return;\r\n      }\r\n\r\n      // Generar recibo con los detalles obtenidos\r\n      this.printService.generateThermalReceipt(sale, details);\r\n\r\n      this.notificationService.showSuccess('Recibo reimpreso', `Recibo #${sale.numeroRecibo || sale.id} enviado a impresora`);\r\n\r\n    } catch (error) {\r\n      this.notificationService.showError('Error de reimpresión', 'Error al reimprimir el recibo. Por favor intente nuevamente.');\r\n    } finally {\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  // Funciones de optimización para trackBy\r\n  trackByIndex(index: number, item: any): number {\r\n    return index;\r\n  }\r\n\r\n  trackBySaleId(index: number, sale: Sale): string {\r\n    return sale.id;\r\n  }\r\n\r\n  trackByDetailId(index: number, detail: SaleDetail): string {\r\n    return detail.id;\r\n  }\r\n\r\n  // Función de debug temporal\r\n  debugModalState(): void {\r\n\r\n    // Forzar reinicio completo de los modales\r\n    this.closeAllModals();\r\n\r\n    alert(`Estado de modales:\r\n- showNumberModal: ${this.showNumberModal}\r\n- showAmountModal: ${this.showAmountModal}  \r\n- showConfirmModal: ${this.showConfirmModal}\r\n- isProcessingModal: ${this.isProcessingModal}\r\n- isBlocked: ${this.isBlocked}\r\nRevisa la consola para más detalles.`);\r\n  }\r\n\r\n  // Función para toggle manual de bloqueo\r\n  toggleBloqueo(): void {\r\n    this.isBlocked = !this.isBlocked;\r\n    const estado = this.isBlocked ? 'bloqueadas' : 'habilitadas';\r\n    this.notificationService.showInfo('Estado actualizado', `Ventas ${estado} manualmente`);\r\n  }\r\n\r\n  // Método de debug temporal para verificar conexión con BD\r\n  async debugSalesData(): Promise<void> {\r\n\r\n    try {\r\n      // Verificar permisos primero\r\n      await this.supabaseService.checkDatabasePermissions();\r\n\r\n      // Llamar al método de debug del servicio\r\n      await this.supabaseService.debugSalesData();\r\n\r\n      // Intentar cargar ventas de hoy directamente\r\n      await this.loadTodaySales();\r\n\r\n      // Probar con fechas diferentes\r\n      const yesterday = new Date();\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n      const yesterdaySales = await this.supabaseService.getSalesByDateAndSorteo(yesterday, '');\r\n\r\n      const tomorrow = new Date();\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n      const tomorrowSales = await this.supabaseService.getSalesByDateAndSorteo(tomorrow, '');\r\n\r\n      // Verificar estado de ventas recientes\r\n\r\n      // Probar refresh forzado\r\n      await this.loadRecentSales();\r\n\r\n    } catch (error) {\r\n    }\r\n  }\r\n}\r\n","<!-- NUEVA INTERFAZ BASADA EN MOCKUPS -->\r\n<div class=\"lottery-interface\">\r\n  <!-- Header -->\r\n  <div class=\"header-bar\">\r\n    <div class=\"time-display\">\r\n      <span class=\"time-label\">Hora Honduras:</span>\r\n      <span class=\"time-value\">{{ currentHondurasTime }}</span>\r\n    </div>\r\n    \r\n    <div class=\"sucursal-title\">\r\n      <h2>{{ currentUser?.sucursal || 'Sucursal 1' }}</h2>\r\n    </div>\r\n    \r\n    <button class=\"btn-header btn-cerrar\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n      Cerrar Sesión\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Contenido Principal -->\r\n  <div class=\"main-content\">\r\n    \r\n    <!-- Vista 1: Pantalla Principal con Botón VENTA -->\r\n    <div *ngIf=\"selectedNumbers.length === 0\" class=\"venta-screen\">\r\n      <div class=\"venta-button-container\">\r\n        <button class=\"btn-venta\" \r\n                (click)=\"openNumberModal()\" \r\n                [disabled]=\"isLoading || isBlocked || !isSorteoOpen\">\r\n          VENTA\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Info del sorteo -->\r\n      <div class=\"sorteo-info\" *ngIf=\"currentSorteo\">\r\n        <div class=\"alert alert-info\">\r\n          <strong>{{ currentSorteo.label }}</strong> - \r\n          <span *ngIf=\"isSorteoOpen\" class=\"text-success\">\r\n            Abierto (cierra {{ timeUntilClose }})\r\n          </span>\r\n          <span *ngIf=\"!isSorteoOpen\" class=\"text-danger\">\r\n            Cerrado\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Mensaje de bloqueo -->\r\n      <div *ngIf=\"isBlocked\" class=\"alert alert-danger\">\r\n        <i class=\"fas fa-lock\"></i> \r\n        <strong>Venta bloqueada:</strong> Faltan menos de 5 minutos para el cierre del sorteo.\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Vista 2: Tabla de Jugadas -->\r\n    <div *ngIf=\"selectedNumbers.length > 0\" class=\"jugadas-screen\">\r\n      \r\n      <!-- Tabla de jugadas -->\r\n      <div class=\"jugadas-table\">\r\n        <div class=\"table-header\">\r\n          <div class=\"col-numero\">#</div>\r\n          <div class=\"col-monto\">Monto</div>\r\n          <div class=\"col-accion\"></div>\r\n        </div>\r\n        \r\n        <div class=\"table-body\">\r\n          <div *ngFor=\"let item of selectedNumbers; let i = index; trackBy: trackByIndex\" \r\n               class=\"table-row\">\r\n            <div class=\"col-numero\">{{ item.numero.toString().padStart(2, '0') }}</div>\r\n            <div class=\"col-monto\">L {{ item.monto.toFixed(0) }}</div>\r\n            <div class=\"col-accion\">\r\n              <button class=\"btn-remove\" (click)=\"removeNumber(i)\" [disabled]=\"isLoading\">\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Botón Agregar más números -->\r\n      <div class=\"add-more-container\">\r\n        <button class=\"btn-add-more\" \r\n                (click)=\"openNumberModal()\" \r\n                [disabled]=\"isLoading || isBlocked\">\r\n          + Agregar Número\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Botón PAGAR -->\r\n      <div class=\"pagar-container\">\r\n        <button class=\"btn-pagar\" \r\n                (click)=\"processSale()\" \r\n                [disabled]=\"selectedNumbers.length === 0 || isLoading || isBlocked\">\r\n          PAGAR\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- Ventas Actuales (siempre visible en la parte inferior) -->\r\n  <div class=\"ventas-actuales\" *ngIf=\"recentSales.length > 0\">\r\n    <div class=\"ventas-header\">\r\n      <h4>Ventas actuales</h4>\r\n    </div>\r\n    \r\n    <div class=\"ventas-body\">\r\n      <div class=\"transacciones-header\">\r\n        Transacciones\r\n      </div>\r\n      \r\n      <div *ngFor=\"let sale of getFilteredSales(); trackBy: trackBySaleId\" class=\"transaccion-item\">\r\n        <div class=\"transaccion-left\">\r\n          <div class=\"fecha-hora\">{{ formatTime(sale.createdAt) }}</div>\r\n          <div class=\"numero-recibo\">Recibo: {{ sale.numeroRecibo || sale.id.slice(-6) }}</div>\r\n          <div class=\"correlativo\">Correlativo: {{ sale.correlativo || 'N/A' }}</div>\r\n          <div class=\"numeros-jugados\">\r\n            <span *ngFor=\"let detail of getSaleDetails(sale.id); trackBy: trackByDetailId\" class=\"numero-small\">\r\n              {{ detail.numero.toString().padStart(2, '0') }} x L{{ detail.monto.toFixed(0) }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"transaccion-right\">\r\n          <div class=\"total\">Total: L{{ sale.total.toFixed(0) }}</div>\r\n          <button class=\"btn-reimprimir\" (click)=\"reprintReceipt(sale)\">\r\n            🖨️ Reimprimir\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- Modal 1: Selección de Número -->\r\n<div class=\"modal\" [style.display]=\"showNumberModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showNumberModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-hashtag\"></i> Seleccionar Número\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"calculator-container\">\r\n          <!-- Display del número -->\r\n          <div class=\"calculator-display\">\r\n            <span class=\"display-label\">NUMERO</span>\r\n            <div class=\"display-value\">{{ (modalNumberInput || '00').padStart(2, '0') }}</div>\r\n          </div>\r\n          \r\n          <!-- Teclado numérico -->\r\n          <div class=\"calculator-keypad\">\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(1); $event.stopPropagation()\">1</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(2); $event.stopPropagation()\">2</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(3); $event.stopPropagation()\">3</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(4); $event.stopPropagation()\">4</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(5); $event.stopPropagation()\">5</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(6); $event.stopPropagation()\">6</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(7); $event.stopPropagation()\">7</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(8); $event.stopPropagation()\">8</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(9); $event.stopPropagation()\">9</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(0); $event.stopPropagation()\">0</button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-clear\" (click)=\"clearModalNumber(); $event.stopPropagation()\">\r\n                C\r\n              </button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-accept\" (click)=\"acceptModalNumber(); $event.stopPropagation()\" \r\n                      [disabled]=\"!modalNumberInput\">\r\n                Aceptar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 2: Selección de Apuesta -->\r\n<div class=\"modal\" [style.display]=\"showAmountModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showAmountModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-dollar-sign\"></i> Ingresar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"calculator-container\">\r\n          <!-- Display de la apuesta -->\r\n          <div class=\"calculator-display\">\r\n            <span class=\"display-label\">APUESTA</span>\r\n            <div class=\"display-value\">{{ modalAmountInput || '00' }}</div>\r\n          </div>\r\n          \r\n          <!-- Teclado numérico -->\r\n          <div class=\"calculator-keypad\">\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(1); $event.stopPropagation()\">1</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(2); $event.stopPropagation()\">2</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(3); $event.stopPropagation()\">3</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(4); $event.stopPropagation()\">4</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(5); $event.stopPropagation()\">5</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(6); $event.stopPropagation()\">6</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(7); $event.stopPropagation()\">7</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(8); $event.stopPropagation()\">8</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(9); $event.stopPropagation()\">9</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(0); $event.stopPropagation()\">0</button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-clear\" (click)=\"clearModalAmount(); $event.stopPropagation()\">\r\n                C\r\n              </button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-accept\" (click)=\"acceptModalAmount(); $event.stopPropagation()\" \r\n                      [disabled]=\"!modalAmountInput\">\r\n                Aceptar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 3: Confirmación -->\r\n<div class=\"modal\" [style.display]=\"showConfirmModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showConfirmModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-check-circle\"></i> Confirmar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"confirmation-container\">\r\n          <div class=\"confirmation-card\">\r\n            <div class=\"number-display-large\">\r\n              # {{ tempNumber !== null ? tempNumber.toString().padStart(2, '0') : '00' }}\r\n            </div>\r\n            <div class=\"amount-display\">\r\n              APUESTA: L {{ tempAmount || 0 }}\r\n            </div>\r\n            <div class=\"confirmation-buttons\">\r\n              <button type=\"button\" class=\"btn btn-success btn-lg\" (click)=\"confirmAddNumber()\">\r\n                <i class=\"fas fa-check\"></i> CONFIRMAR\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-secondary btn-lg\" (click)=\"cancelAddNumber()\">\r\n                <i class=\"fas fa-times\"></i> Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Eliminar el backdrop separado ya que usamos el modal completo -->\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { User, UserManagement } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.scss']\r\n})\r\nexport class UserManagementComponent implements OnInit, OnDestroy {\r\n  currentUser: any = null;\r\n  users: UserManagement[] = [];\r\n  isLoading: boolean = false;\r\n\r\n  // Modal para crear/editar usuario\r\n  showUserModal: boolean = false;\r\n  isEditMode: boolean = false;\r\n  selectedUser: UserManagement | null = null;\r\n\r\n  // Formulario de usuario\r\n  userForm = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    role: 'sucursal' as 'admin' | 'sucursal',\r\n    sucursal: '',\r\n    active: true\r\n  };\r\n\r\n  // Lista de sucursales predefinidas para autocompletado\r\n  sucursalesSugeridas: string[] = [\r\n    'Sucursal Central',\r\n    'Sucursal Norte', \r\n    'Sucursal Sur',\r\n    'Sucursal Este',\r\n    'Sucursal Oeste'\r\n  ];\r\n\r\n  private userSubscription?: Subscription;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSubscription = this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'admin') {\r\n        this.router.navigate(['/login']);\r\n        return;\r\n      }\r\n    });\r\n\r\n    this.loadUsers();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async loadUsers(): Promise<void> {\r\n    console.log('loadUsers iniciado, isLoading:', this.isLoading);\r\n    this.isLoading = true;\r\n    try {\r\n      console.log('Llamando getAllUsers...');\r\n      this.users = await this.supabaseService.getAllUsers();\r\n      console.log('Usuarios cargados:', this.users);\r\n    } catch (error) {\r\n      console.error('Error al cargar usuarios:', error);\r\n      this.notificationService.showError('Error al cargar usuarios');\r\n    } finally {\r\n      this.isLoading = false;\r\n      console.log('loadUsers terminado, isLoading:', this.isLoading);\r\n    }\r\n  }\r\n\r\n  openCreateUserModal(): void {\r\n    this.isEditMode = false;\r\n    this.selectedUser = null;\r\n    this.resetForm();\r\n    this.showUserModal = true;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  openEditUserModal(user: UserManagement): void {\r\n    this.isEditMode = true;\r\n    this.selectedUser = user;\r\n    this.userForm = {\r\n      email: user.email,\r\n      password: '', // No mostramos la contraseña actual\r\n      confirmPassword: '',\r\n      role: user.role,\r\n      sucursal: user.sucursal || '',\r\n      active: user.active\r\n    };\r\n    this.showUserModal = true;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n  }\r\n\r\n  closeUserModal(): void {\r\n    this.showUserModal = false;\r\n    this.resetForm();\r\n    this.selectedUser = null;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n  }\r\n\r\n  goToMainMenu(): void {\r\n    this.router.navigate(['/admin']);\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.userForm = {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n  }\r\n\r\n  async saveUser(): Promise<void> {\r\n    if (!this.validateForm()) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      if (this.isEditMode && this.selectedUser) {\r\n        // Actualizar usuario existente\r\n        await this.supabaseService.updateExistingUser(this.selectedUser.id, {\r\n          email: this.userForm.email,\r\n          role: this.userForm.role as 'admin' | 'sucursal',\r\n          sucursal: this.userForm.sucursal,\r\n          active: this.userForm.active\r\n        });\r\n\r\n        // Si se proporcionó una nueva contraseña, actualizarla\r\n        if (this.userForm.password && this.userForm.password.trim() !== '') {\r\n          await this.supabaseService.updateUserPassword(this.selectedUser.id, this.userForm.password);\r\n          this.notificationService.showSuccess('Usuario y contraseña actualizados exitosamente');\r\n        } else {\r\n          this.notificationService.showSuccess('Usuario actualizado exitosamente');\r\n        }\r\n      } else {\r\n        // Crear nuevo usuario\r\n        await this.supabaseService.createNewUser({\r\n          email: this.userForm.email,\r\n          role: this.userForm.role as 'admin' | 'sucursal',\r\n          sucursal: this.userForm.sucursal,\r\n          active: this.userForm.active\r\n        });\r\n        this.notificationService.showSuccess('Usuario creado exitosamente con contraseña temporal: LoteriaTemporal123!');\r\n      }\r\n\r\n      this.closeUserModal();\r\n      await this.loadUsers();\r\n    } catch (error: any) {\r\n      this.notificationService.showError(error.message || 'Error al guardar usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async deleteUser(user: UserManagement): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Eliminar usuario',\r\n      `¿Está seguro que desea eliminar al usuario ${user.email}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      await this.supabaseService.deleteExistingUser(user.id);\r\n      this.notificationService.showSuccess('Usuario eliminado exitosamente');\r\n      await this.loadUsers();\r\n    } catch (error: any) {\r\n      this.notificationService.showError(error.message || 'Error al eliminar usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async toggleUserStatus(user: UserManagement): Promise<void> {\r\n    const newStatus = !user.active;\r\n    const action = newStatus ? 'activar' : 'desactivar';\r\n    \r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      `${action.charAt(0).toUpperCase() + action.slice(1)} usuario`,\r\n      `¿Está seguro que desea ${action} al usuario ${user.email}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      await this.supabaseService.toggleExistingUserStatus(user.id);\r\n      this.notificationService.showSuccess(`Usuario ${action}ado exitosamente`);\r\n      await this.loadUsers();\r\n    } catch (error: any) {\r\n      this.notificationService.showError(error.message || `Error al ${action} usuario`);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private validateForm(): boolean {\r\n    if (!this.userForm.email) {\r\n      this.notificationService.showError('El email es requerido');\r\n      return false;\r\n    }\r\n\r\n    if (!this.isEditMode && !this.userForm.password) {\r\n      this.notificationService.showError('La contraseña es requerida para usuarios nuevos');\r\n      return false;\r\n    }\r\n\r\n    if (this.userForm.password && this.userForm.password.length < 6) {\r\n      this.notificationService.showError('La contraseña debe tener al menos 6 caracteres');\r\n      return false;\r\n    }\r\n\r\n    if (this.userForm.password && this.userForm.password !== this.userForm.confirmPassword) {\r\n      this.notificationService.showError('Las contraseñas no coinciden');\r\n      return false;\r\n    }\r\n\r\n    if (this.userForm.role === 'sucursal' && !this.userForm.sucursal.trim()) {\r\n      this.notificationService.showError('La sucursal es requerida para usuarios de tipo sucursal');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getRoleLabel(role: string): string {\r\n    return role === 'admin' ? 'Administrador' : 'Vendedor';\r\n  }\r\n\r\n  getStatusLabel(active: boolean): string {\r\n    return active ? 'Activo' : 'Inactivo';\r\n  }\r\n\r\n  getStatusClass(active: boolean): string {\r\n    return active ? 'status-active' : 'status-inactive';\r\n  }\r\n\r\n  // Función de trackBy para optimizar el rendimiento del ngFor\r\n  trackByUserId(index: number, user: UserManagement): string {\r\n    return user.id;\r\n  }\r\n\r\n}\r\n","<div class=\"user-management-container\">\r\n  <div class=\"header\">\r\n    <div class=\"header-left\">\r\n      <button class=\"btn-secondary\" \r\n              (click)=\"goToMainMenu()\" \r\n              [disabled]=\"isLoading\"\r\n              title=\"Regresar al menú principal\">\r\n        <i class=\"fas fa-arrow-left\"></i> Menú Principal\r\n      </button>\r\n      <h2>Gestión de Usuarios</h2>\r\n    </div>\r\n    <button class=\"btn-primary\" \r\n            (click)=\"openCreateUserModal()\" \r\n            [disabled]=\"isLoading\"\r\n            title=\"Crear nuevo usuario\">\r\n      <i class=\"fas fa-plus\"></i> Crear Usuario\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Tabla de usuarios -->\r\n  <div class=\"users-table-container\">\r\n    <table class=\"users-table\" *ngIf=\"!isLoading && users.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <th>Email</th>\r\n          <th>Rol</th>\r\n          <th>Sucursal</th>\r\n          <th>Estado</th>\r\n          <th>Fecha Creación</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of users; trackBy: trackByUserId\">\r\n          <td>{{ user.email }}</td>\r\n          <td>\r\n            <span class=\"role-badge\" [class]=\"'role-' + user.role\">\r\n              {{ getRoleLabel(user.role) }}\r\n            </span>\r\n          </td>\r\n          <td>{{ user.sucursal || '-' }}</td>\r\n          <td>\r\n            <span class=\"status-badge\" [class]=\"getStatusClass(user.active)\">\r\n              {{ getStatusLabel(user.active) }}\r\n            </span>\r\n          </td>\r\n          <td>{{ user.created_at | date:'dd/MM/yyyy' }}</td>\r\n          <td class=\"actions-cell\">\r\n            <button class=\"btn-icon btn-edit\" \r\n                    (click)=\"openEditUserModal(user)\" \r\n                    [disabled]=\"isLoading\"\r\n                    title=\"Editar usuario\">\r\n              <i class=\"fas fa-edit\"></i>\r\n            </button>\r\n            <button class=\"btn-icon btn-toggle\" \r\n                    (click)=\"toggleUserStatus(user)\" \r\n                    [disabled]=\"isLoading\"\r\n                    [title]=\"user.active ? 'Desactivar usuario' : 'Activar usuario'\">\r\n              <i class=\"fas\" [class]=\"user.active ? 'fa-eye-slash' : 'fa-eye'\"></i>\r\n            </button>\r\n            <button class=\"btn-icon btn-delete\" \r\n                    (click)=\"deleteUser(user)\" \r\n                    [disabled]=\"isLoading\"\r\n                    title=\"Eliminar usuario\">\r\n              <i class=\"fas fa-trash\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Estado de carga -->\r\n    <div class=\"loading-state\" *ngIf=\"isLoading\">\r\n      <i class=\"fas fa-spinner fa-spin\"></i>\r\n      <p>Cargando usuarios...</p>\r\n    </div>\r\n\r\n    <!-- Estado vacío -->\r\n    <div class=\"empty-state\" *ngIf=\"!isLoading && users.length === 0\">\r\n      <i class=\"fas fa-users\"></i>\r\n      <h3>No hay usuarios registrados</h3>\r\n      <p>Comience creando el primer usuario del sistema</p>\r\n      <button class=\"btn-primary\" (click)=\"openCreateUserModal()\">\r\n        <i class=\"fas fa-plus\"></i> Crear Primer Usuario\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para crear/editar usuario -->\r\n<div class=\"modal-overlay\" *ngIf=\"showUserModal\" (click)=\"closeUserModal()\">\r\n  <div class=\"modal-container\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>{{ isEditMode ? 'Editar Usuario' : 'Crear Usuario' }}</h3>\r\n      <button class=\"btn-close\" (click)=\"closeUserModal()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n      <form class=\"user-form\">\r\n        <!-- Email -->\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email *</label>\r\n          <input type=\"email\" \r\n                 id=\"email\" \r\n                 [(ngModel)]=\"userForm.email\" \r\n                 name=\"email\"\r\n                 [disabled]=\"isEditMode\"\r\n                 placeholder=\"ejemplo@correo.com\"\r\n                 required>\r\n        </div>\r\n\r\n        <!-- Contraseña -->\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">\r\n            Contraseña {{ isEditMode ? '(dejar vacío para mantener actual)' : '*' }}\r\n          </label>\r\n          <input type=\"password\" \r\n                 id=\"password\" \r\n                 [(ngModel)]=\"userForm.password\" \r\n                 name=\"password\"\r\n                 placeholder=\"Mínimo 6 caracteres\"\r\n                 [required]=\"!isEditMode\">\r\n        </div>\r\n\r\n        <!-- Confirmar Contraseña (siempre mostrar para usuarios nuevos, o si hay contraseña para editar) -->\r\n        <div class=\"form-group\" *ngIf=\"!isEditMode || userForm.password\">\r\n          <label for=\"confirmPassword\">Confirmar Contraseña *</label>\r\n          <input type=\"password\" \r\n                 id=\"confirmPassword\" \r\n                 [(ngModel)]=\"userForm.confirmPassword\" \r\n                 name=\"confirmPassword\"\r\n                 placeholder=\"Repetir la contraseña\"\r\n                 [required]=\"!isEditMode || userForm.password\">\r\n        </div>\r\n\r\n        <!-- Rol -->\r\n        <div class=\"form-group\">\r\n          <label for=\"role\">Rol *</label>\r\n          <select id=\"role\" \r\n                  [(ngModel)]=\"userForm.role\" \r\n                  name=\"role\"\r\n                  required>\r\n            <option value=\"admin\">Administrador</option>\r\n            <option value=\"sucursal\">Vendedor</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Sucursal (solo para rol sucursal) -->\r\n        <div class=\"form-group\" *ngIf=\"userForm.role === 'sucursal'\">\r\n          <label for=\"sucursal\">Sucursal *</label>\r\n          <input type=\"text\" \r\n                 id=\"sucursal\" \r\n                 [(ngModel)]=\"userForm.sucursal\" \r\n                 name=\"sucursal\"\r\n                 placeholder=\"Ingrese el nombre de la sucursal\"\r\n                 list=\"sucursales-list\"\r\n                 required>\r\n          <datalist id=\"sucursales-list\">\r\n            <option *ngFor=\"let sucursal of sucursalesSugeridas\" [value]=\"sucursal\">\r\n          </datalist>\r\n          <small class=\"form-help\">Puedes escribir cualquier nombre o seleccionar una opción</small>\r\n        </div>\r\n\r\n        <!-- Estado activo -->\r\n        <div class=\"form-group checkbox-group\">\r\n          <label class=\"checkbox-label\">\r\n            <input type=\"checkbox\" \r\n                   [(ngModel)]=\"userForm.active\" \r\n                   name=\"active\">\r\n            <span class=\"checkmark\"></span>\r\n            Usuario activo\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-secondary\" (click)=\"closeUserModal()\" [disabled]=\"isLoading\">\r\n        Cancelar\r\n      </button>\r\n      <button class=\"btn-primary\" (click)=\"saveUser()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading\"></i>\r\n        {{ isEditMode ? 'Actualizar' : 'Crear' }} Usuario\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(8000), // Aumentar timeout a 8 segundos\r\n      map(user => {\r\n        const isAdmin = user?.role === 'admin';\r\n        return isAdmin;\r\n      }),\r\n      tap(isAdmin => {\r\n        if (!isAdmin) {\r\n          this.router.navigate(['/sucursal']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(8000), // Aumentar timeout a 8 segundos\r\n      map(user => {\r\n        return !!user;\r\n      }),\r\n      tap(isAuthenticated => {\r\n        if (!isAuthenticated) {\r\n          this.router.navigate(['/login']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        // Dar más tiempo antes de redirigir\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export interface User {\r\n  id: string;\r\n  email: string;\r\n  role: 'admin' | 'sucursal';\r\n  sucursal?: string;\r\n  active: boolean;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface UserManagement {\r\n  id: string;\r\n  email: string;\r\n  role: 'admin' | 'sucursal';\r\n  sucursal?: string;\r\n  active: boolean;\r\n  createdAt: Date;\r\n  password?: string;\r\n  raw_user_meta_data?: any;\r\n  created_at?: string;\r\n}\r\n\r\nexport interface Sale {\r\n  id: string;\r\n  userId: string;\r\n  sucursal: string;\r\n  sorteo: 'mañana' | 'tarde' | 'noche';\r\n  fecha: Date;\r\n  total: number;\r\n  numeroRecibo: string; // Número único de recibo\r\n  correlativo: number; // Correlativo secuencial por sucursal\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface SaleDetail {\r\n  id: string;\r\n  saleId: string;\r\n  numero: number;\r\n  monto: number;\r\n}\r\n\r\nexport interface Sorteo {\r\n  id: string;\r\n  fecha: Date;\r\n  sorteo: 'mañana' | 'tarde' | 'noche';\r\n  horaCierre: Date;\r\n  numeroGanador?: string;\r\n  factorMultiplicador: number; // Factor para calcular ganancias (ej: 70)\r\n  totalVendido: number;\r\n  totalPagado: number;\r\n  gananciaNeta: number;\r\n  cerrado: boolean;\r\n  sucursal?: string; // Nueva propiedad para sorteos por sucursal\r\n}\r\n\r\nexport interface SucursalFactor {\r\n  sucursal: string;\r\n  factor: number;\r\n  usuario?: string;\r\n  email?: string;\r\n}\r\n\r\nexport interface SorteoSchedule {\r\n  name: 'mañana' | 'tarde' | 'noche';\r\n  label: string;\r\n  closeTime: string; // \"10:55\", \"14:55\", \"20:55\"\r\n}\r\n\r\nexport const SORTEO_SCHEDULES: SorteoSchedule[] = [\r\n  { name: 'mañana', label: 'Mañana', closeTime: '9:15' },\r\n  { name: 'tarde', label: 'Tarde', closeTime: '14:55' },\r\n  { name: 'noche', label: 'Noche', closeTime: '20:55' }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  private loadingInstance: any = null;\r\n\r\n  constructor() { }\r\n\r\n  // Mostrar mensaje de éxito\r\n  async showSuccess(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'success',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#28a745'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de error\r\n  async showError(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'error',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#dc3545'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de información\r\n  async showInfo(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'info',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#007bff'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de advertencia\r\n  async showWarning(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'warning',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#ffc107'\r\n    });\r\n  }\r\n\r\n  // Mostrar confirmación\r\n  async showConfirmation(\r\n    title: string, \r\n    text?: string, \r\n    confirmButtonText: string = 'Sí, confirmar',\r\n    cancelButtonText: string = 'Cancelar'\r\n  ): Promise<boolean> {\r\n    const result = await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText,\r\n      cancelButtonText,\r\n      confirmButtonColor: '#28a745',\r\n      cancelButtonColor: '#dc3545'\r\n    });\r\n\r\n    return result.isConfirmed;\r\n  }\r\n\r\n  // Mostrar loader\r\n  showLoading(title: string = 'Cargando...'): void {\r\n    this.hideLoading(); // Cerrar cualquier loading anterior\r\n    \r\n    this.loadingInstance = Swal.fire({\r\n      title,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showConfirmButton: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Cerrar loader\r\n  hideLoading(): void {\r\n    if (this.loadingInstance) {\r\n      Swal.close();\r\n      this.loadingInstance = null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { Sale, SaleDetail } from '../models/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrintService {\r\n\r\n  constructor() { }\r\n\r\n  // Generar PDF térmico para venta\r\n  generateThermalReceipt(sale: Sale, details: SaleDetail[]): void {\r\n\r\n    // Si no hay detalles, crear datos de prueba\r\n    if (!details || details.length === 0) {\r\n      details = [\r\n        { id: 'test1', saleId: sale.id, numero: 11, monto: 40 },\r\n        { id: 'test2', saleId: sale.id, numero: 54, monto: 10 }\r\n      ];\r\n    }\r\n\r\n    try {\r\n      // Crear PDF para impresión térmica\r\n      const pdf = new jsPDF({\r\n        orientation: 'portrait',\r\n        unit: 'mm',\r\n        format: [80, 150]\r\n      });\r\n\r\n\r\n      // Configuración básica\r\n      let y = 10;\r\n      const lineHeight = 5;\r\n\r\n      // Título\r\n      pdf.setFontSize(14);\r\n      pdf.text('LOTERIA', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      pdf.setFontSize(10);\r\n      pdf.text('RECIBO DE VENTA', 40, y, { align: 'center' });\r\n      y += lineHeight + 2;\r\n\r\n      // Número de recibo\r\n      pdf.setFontSize(9);\r\n      pdf.text(`Recibo #: ${sale.numeroRecibo || 'N/A'}`, 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Línea\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Sucursal\r\n      pdf.setFontSize(12);\r\n      pdf.text(sale.sucursal || 'Sucursal 1', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Sorteo\r\n      pdf.setFontSize(9);\r\n      pdf.text(`Sorteo: ${sale.sorteo}`, 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Fecha\r\n      const fecha = new Date(sale.fecha).toLocaleString();\r\n      pdf.text(`Fecha: ${fecha}`, 40, y, { align: 'center' });\r\n      y += lineHeight + 2;\r\n\r\n      // Encabezados\r\n      pdf.setFontSize(10);\r\n      pdf.text('Numero', 20, y, { align: 'center' });\r\n      pdf.text('Valor', 60, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Línea\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Detalles\r\n      let total = 0;\r\n      for (const detail of details) {\r\n        pdf.text(detail.numero.toString().padStart(2, '0'), 20, y, { align: 'center' });\r\n        pdf.text(`L ${detail.monto}`, 60, y, { align: 'center' });\r\n        total += detail.monto;\r\n        y += lineHeight;\r\n      }\r\n\r\n      // Línea\r\n      y += 2;\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Total\r\n      pdf.setFontSize(12);\r\n      pdf.text('Total a pagar:', 10, y);\r\n      pdf.text(`L ${total}`, 70, y, { align: 'right' });\r\n      y += lineHeight + 2;\r\n\r\n      // Mensaje\r\n      pdf.setFontSize(8);\r\n      pdf.text('Gracias por su compra!', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n      pdf.text('Mucha suerte!', 40, y, { align: 'center' });\r\n\r\n\r\n      // FUNCIÓN DE IMPRESIÓN DIRECTA\r\n      // Crear blob para impresión\r\n      const pdfData = pdf.output('arraybuffer');\r\n      const blob = new Blob([pdfData], { type: 'application/pdf' });\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      \r\n      // Abrir en nueva ventana para impresión manual controlada por el usuario\r\n      const printWindow = window.open(url, '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\r\n      \r\n      if (printWindow) {\r\n        printWindow.onload = () => {\r\n          // Enfocar la ventana\r\n          printWindow.focus();\r\n          \r\n          // Ejecutar impresión automáticamente\r\n          setTimeout(() => {\r\n            try {\r\n              printWindow.print();\r\n            } catch (printError) {\r\n            }\r\n          }, 1000); // Esperar 1 segundo para que cargue completamente\r\n          \r\n          // Limpiar URL cuando la ventana se cierre (detección manual)\r\n          const checkClosed = setInterval(() => {\r\n            if (printWindow.closed) {\r\n              clearInterval(checkClosed);\r\n              URL.revokeObjectURL(url);\r\n            }\r\n          }, 1000);\r\n        };\r\n      } else {\r\n        \r\n        // Fallback: usar iframe como respaldo\r\n        const printFrame = document.createElement('iframe');\r\n        printFrame.style.display = 'none';\r\n        printFrame.src = url;\r\n        \r\n        document.body.appendChild(printFrame);\r\n        \r\n        printFrame.onload = () => {\r\n          try {\r\n            printFrame.contentWindow?.focus();\r\n            printFrame.contentWindow?.print();\r\n            \r\n            // Limpiar después de 5 segundos en modo iframe\r\n            setTimeout(() => {\r\n              document.body.removeChild(printFrame);\r\n              URL.revokeObjectURL(url);\r\n            }, 5000);\r\n            \r\n          } catch (printError) {\r\n          }\r\n        };\r\n      }\r\n\r\n    } catch (error: any) {\r\n      alert('Error al generar el recibo: ' + (error?.message || error));\r\n    }\r\n  }\r\n\r\n  // Método de prueba para generar un recibo con datos fijos\r\n  generateTestReceipt(): void {\r\n    \r\n    const testSale: Sale = {\r\n      id: 'test-123',\r\n      userId: 'user1',\r\n      sucursal: 'Sucursal 1',\r\n      sorteo: 'mañana',\r\n      fecha: new Date(),\r\n      total: 50,\r\n      numeroRecibo: 'SUC-REC-250717-0001',\r\n      correlativo: 1,\r\n      createdAt: new Date()\r\n    };\r\n\r\n    const testDetails: SaleDetail[] = [\r\n      { id: 'detail1', saleId: 'test-123', numero: 11, monto: 40 },\r\n      { id: 'detail2', saleId: 'test-123', numero: 54, monto: 10 }\r\n    ];\r\n\r\n    this.generateThermalReceipt(testSale, testDetails);\r\n  }\r\n\r\n  // Generar PDF de reporte diario\r\n  generateDailyReport(sales: Sale[], fecha: Date): void {\r\n    const pdf = new jsPDF();\r\n    \r\n    pdf.setFontSize(16);\r\n    pdf.text('REPORTE DIARIO DE VENTAS', 105, 20, { align: 'center' });\r\n    \r\n    pdf.setFontSize(12);\r\n    pdf.text(`Fecha: ${fecha.toLocaleDateString()}`, 20, 35);\r\n    \r\n    // Aquí se puede expandir para incluir más detalles del reporte\r\n    let yPos = 50;\r\n    \r\n    // Resumen por sorteo\r\n    const sorteoSummary = this.calculateSorteoSummary(sales);\r\n    \r\n    pdf.setFontSize(14);\r\n    pdf.text('RESUMEN POR SORTEO:', 20, yPos);\r\n    yPos += 10;\r\n    \r\n    pdf.setFontSize(10);\r\n    for (const [sorteo, data] of Object.entries(sorteoSummary)) {\r\n      pdf.text(`${sorteo.toUpperCase()}: L. ${data.total.toFixed(2)} (${data.count} ventas)`, 25, yPos);\r\n      yPos += 7;\r\n    }\r\n    \r\n    // Total general\r\n    const totalGeneral = sales.reduce((sum, sale) => sum + sale.total, 0);\r\n    yPos += 10;\r\n    pdf.setFontSize(12);\r\n    pdf.text(`TOTAL GENERAL: L. ${totalGeneral.toFixed(2)}`, 20, yPos);\r\n    \r\n    pdf.save(`reporte_diario_${fecha.toISOString().split('T')[0]}.pdf`);\r\n  }\r\n\r\n  private calculateSorteoSummary(sales: Sale[]): { [key: string]: { total: number, count: number } } {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n    \r\n    for (const sale of sales) {\r\n      if (!summary[sale.sorteo]) {\r\n        summary[sale.sorteo] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sorteo].total += sale.total;\r\n      summary[sale.sorteo].count += 1;\r\n    }\r\n    \r\n    return summary;\r\n  }\r\n\r\n  // Generar reporte de ventas en PDF\r\n  generateVentasReportPDF(sales: Sale[], saleDetails: { [key: string]: SaleDetail[] }, filters: any): void {\r\n    try {\r\n      const doc = new jsPDF();\r\n      \r\n      // Header profesional con logo y título\r\n      doc.setFillColor(52, 73, 94); // Color azul oscuro\r\n      doc.rect(0, 0, 210, 35, 'F'); // Rectángulo header\r\n      \r\n      doc.setTextColor(255, 255, 255); // Texto blanco\r\n      doc.setFontSize(24);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('SISTEMA DE LOTERÍA', 105, 20, { align: 'center' });\r\n      \r\n      doc.setFontSize(14);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.text('REPORTE DE VENTAS', 105, 28, { align: 'center' });\r\n      \r\n      // Resetear color de texto\r\n      doc.setTextColor(0, 0, 0);\r\n      \r\n      // Información del reporte en formato profesional\r\n      let yPos = 50;\r\n      doc.setFontSize(12);\r\n      doc.setFont('helvetica', 'bold');\r\n      \r\n      // Sección de información general con fondo gris claro\r\n      doc.setFillColor(248, 249, 250);\r\n      doc.rect(15, yPos - 5, 180, 40, 'F');\r\n      doc.setDrawColor(200, 200, 200);\r\n      doc.rect(15, yPos - 5, 180, 40, 'S');\r\n      \r\n      yPos += 5;\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(11);\r\n      doc.text('INFORMACIÓN DEL REPORTE', 20, yPos);\r\n      yPos += 8;\r\n      \r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(10);\r\n      \r\n      if (filters.fechaDesde || filters.fechaHasta) {\r\n        const fechaTexto = filters.fechaDesde && filters.fechaHasta \r\n          ? `Período: ${new Date(filters.fechaDesde).toLocaleDateString()} - ${new Date(filters.fechaHasta).toLocaleDateString()}`\r\n          : filters.fechaDesde \r\n            ? `Desde: ${new Date(filters.fechaDesde).toLocaleDateString()}`\r\n            : `Hasta: ${new Date(filters.fechaHasta).toLocaleDateString()}`;\r\n        doc.text(fechaTexto, 25, yPos);\r\n        yPos += 6;\r\n      }\r\n      \r\n      if (filters.sorteoFilter) {\r\n        doc.text(`Sorteo: ${filters.sorteoFilter}`, 25, yPos);\r\n        yPos += 6;\r\n      }\r\n      \r\n      const now = new Date();\r\n      doc.text(`Fecha de generación: ${now.toLocaleDateString()} - ${now.toLocaleTimeString()}`, 25, yPos);\r\n      yPos += 6;\r\n      \r\n      doc.text(`Total de transacciones: ${sales.length}`, 25, yPos);\r\n      yPos += 20;\r\n      \r\n      // Resumen por sucursal en formato tabla\r\n      const sucursalTotals: { [key: string]: { total: number, count: number } } = {};\r\n      sales.forEach(sale => {\r\n        if (!sucursalTotals[sale.sucursal]) {\r\n          sucursalTotals[sale.sucursal] = { total: 0, count: 0 };\r\n        }\r\n        sucursalTotals[sale.sucursal].total += sale.total;\r\n        sucursalTotals[sale.sucursal].count += 1;\r\n      });\r\n      \r\n      // Header del resumen con estilo\r\n      doc.setFillColor(52, 73, 94);\r\n      doc.setTextColor(255, 255, 255);\r\n      doc.rect(15, yPos - 3, 180, 10, 'F');\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(12);\r\n      doc.text('RESUMEN POR SUCURSAL', 105, yPos + 3, { align: 'center' });\r\n      yPos += 15;\r\n      \r\n      // Resetear color\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(10);\r\n      \r\n      // Crear mini tabla para resumen\r\n      Object.entries(sucursalTotals).forEach(([sucursal, data], index) => {\r\n        const fillColor = index % 2 === 0 ? [245, 245, 245] : [255, 255, 255];\r\n        doc.setFillColor(fillColor[0], fillColor[1], fillColor[2]);\r\n        doc.rect(15, yPos - 2, 180, 8, 'F');\r\n        \r\n        doc.text(`${sucursal}:`, 25, yPos + 2);\r\n        doc.text(`${data.count} ventas`, 105, yPos + 2, { align: 'center' });\r\n        doc.text(`L ${data.total.toFixed(2)}`, 175, yPos + 2, { align: 'right' });\r\n        yPos += 8;\r\n      });\r\n      \r\n      yPos += 5;\r\n      \r\n      // Total general destacado\r\n      const totalGeneral = sales.reduce((sum, sale) => sum + sale.total, 0);\r\n      doc.setFillColor(46, 204, 113); // Verde\r\n      doc.rect(15, yPos - 3, 180, 12, 'F');\r\n      doc.setTextColor(255, 255, 255);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(14);\r\n      doc.text(`TOTAL GENERAL: L ${totalGeneral.toFixed(2)}`, 105, yPos + 4, { align: 'center' });\r\n      yPos += 20;\r\n      \r\n      // Resetear para la tabla\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(12);\r\n      doc.text('DETALLE DE VENTAS:', 20, yPos);\r\n      yPos += 10;\r\n      \r\n      // Preparar datos para la tabla\r\n      const tableData = sales.map(sale => {\r\n        const details = saleDetails[sale.id] || [];\r\n        const numerosText = details.map(d => `${d.numero.toString().padStart(2, '0')}xL${d.monto}`).join(', ');\r\n        \r\n        // Formatear fecha con hora\r\n        const saleDate = new Date(sale.createdAt);\r\n        const fechaHoraStr = `${saleDate.toLocaleDateString()} ${saleDate.toLocaleTimeString('es-ES', { \r\n          hour: '2-digit', \r\n          minute: '2-digit' \r\n        })}`;\r\n        \r\n        return [\r\n          fechaHoraStr,\r\n          sale.numeroRecibo || sale.id.slice(-6),\r\n          sale.sucursal,\r\n          sale.sorteo,\r\n          numerosText,\r\n          `L ${sale.total.toFixed(2)}`\r\n        ];\r\n      });\r\n      \r\n      // Crear tabla con autoTable\r\n      autoTable(doc, {\r\n        startY: yPos,\r\n        head: [['Fecha/Hora', 'Recibo', 'Sucursal', 'Sorteo', 'Números', 'Total']],\r\n        body: tableData,\r\n        theme: 'grid',\r\n        headStyles: {\r\n          fillColor: [66, 139, 202],\r\n          textColor: 255,\r\n          fontSize: 10,\r\n          fontStyle: 'bold',\r\n          halign: 'center'\r\n        },\r\n        bodyStyles: {\r\n          fontSize: 9,\r\n          cellPadding: 3\r\n        },\r\n        columnStyles: {\r\n          0: { cellWidth: 35, halign: 'center' }, // Fecha/Hora (más ancho)\r\n          1: { cellWidth: 30, halign: 'center' }, // Recibo\r\n          2: { cellWidth: 25, halign: 'center' }, // Sucursal\r\n          3: { cellWidth: 20, halign: 'center' }, // Sorteo\r\n          4: { cellWidth: 45, halign: 'left' },   // Números\r\n          5: { cellWidth: 25, halign: 'right' }   // Total\r\n        },\r\n        alternateRowStyles: {\r\n          fillColor: [245, 245, 245]\r\n        },\r\n        margin: { left: 15, right: 15 },\r\n        didDrawPage: function(data: any) {\r\n          // Pie de página\r\n          doc.setFontSize(8);\r\n          doc.text(`Página ${data.pageNumber}`, 160, 290);\r\n          doc.text(`Generado el ${new Date().toLocaleString()}`, 15, 290);\r\n        }\r\n      });\r\n      \r\n      // Guardar el PDF\r\n      const fileName = `reporte_ventas_${new Date().toISOString().split('T')[0]}.pdf`;\r\n      doc.save(fileName);\r\n      \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SORTEO_SCHEDULES, SorteoSchedule } from '../models/interfaces';\nimport { SupabaseService } from './supabase.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SorteoService {\n  private sorteoSchedules: SorteoSchedule[] = [...SORTEO_SCHEDULES];\n  \n  constructor(private supabaseService: SupabaseService) { \n    this.loadSorteoSchedules();\n  }\n\n  private async loadSorteoSchedules(): Promise<void> {\n    try {\n      // Usar siempre los horarios definidos en las interfaces\n      this.sorteoSchedules = [...SORTEO_SCHEDULES];\n      \n      // Opcionalmente, si quieres usar horarios dinámicos de la BD, descomenta:\n      /*\n      const dynamicSchedules = await this.supabaseService.getSorteoSchedules();\n      \n      if (dynamicSchedules.length > 0) {\n        this.sorteoSchedules = dynamicSchedules.map(schedule => ({\n          name: schedule.name,\n          label: schedule.label,\n          closeTime: schedule.close_time  // Mapear de close_time a closeTime\n        }));\n      }\n      */\n    } catch (error) {\n      // Mantener los horarios por defecto en caso de error\n      this.sorteoSchedules = [...SORTEO_SCHEDULES];\n    }\n  }\n\n  async refreshSorteoSchedules(): Promise<void> {\n    await this.loadSorteoSchedules();\n  }\n\n  getCurrentSorteo(): SorteoSchedule | null {\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\n    const currentHour = hondurasTime.getHours();\n    const currentMinute = hondurasTime.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n    \n    for (const sorteo of this.sorteoSchedules) {\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\n      \n      if (currentTimeInMinutes < closeTimeInMinutes) {\n        return sorteo;\n      }\n    }\n    \n    // Si ya pasaron todos los sorteos del día, retorna null\n    return null;\n  }\n\n  getNextSorteo(): SorteoSchedule | null {\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\n    const currentHour = hondurasTime.getHours();\n    const currentMinute = hondurasTime.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n    \n    for (const sorteo of this.sorteoSchedules) {\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\n      \n      if (currentTimeInMinutes < closeTimeInMinutes) {\n        return sorteo;\n      }\n    }\n    \n    // Si ya pasaron todos los sorteos del día, retorna el primero del siguiente día\n    return this.sorteoSchedules[0] || null;\n  }\n\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\n    const currentHour = hondurasTime.getHours();\n    const currentMinute = hondurasTime.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n    \n    const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\n    const closeTimeInMinutes = closeHour * 60 + closeMinute;\n    \n    return currentTimeInMinutes < closeTimeInMinutes;\n  }\n\n  getTimeUntilClose(sorteo: SorteoSchedule): string {\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\n    const [hours, minutes] = sorteo.closeTime.split(':');\n    const closeTime = new Date(hondurasTime);\n    closeTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\n    \n    if (closeTime <= hondurasTime) {\n      return '00:00';\n    }\n    \n    const diff = closeTime.getTime() - hondurasTime.getTime();\n    const hoursLeft = Math.floor(diff / (1000 * 60 * 60));\n    const minutesLeft = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n    \n    const timeLeft = `${hoursLeft.toString().padStart(2, '0')}:${minutesLeft.toString().padStart(2, '0')}`;\n    \n    return timeLeft;\n  }\n\n  getAllSorteos(): SorteoSchedule[] {\n    return this.sorteoSchedules;\n  }\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { createClient, SupabaseClient, User as SupabaseUser } from '@supabase/supabase-js';\r\nimport { environment } from '../../environments/environment';\r\nimport { User, Sale, SaleDetail, Sorteo, SorteoSchedule, SORTEO_SCHEDULES, SucursalFactor } from '../models/interfaces';\r\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { toZonedTime, fromZonedTime, formatInTimeZone } from 'date-fns-tz';\r\nimport { es } from 'date-fns/locale';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupabaseService {\r\n  private supabase: SupabaseClient;\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n  \r\n  // Subject para comunicación entre componentes\r\n  public resumenUpdateSubject = new Subject<void>();\r\n\r\n\r\n\r\n  constructor() {\r\n    this.supabase = createClient(environment.supabase.url, environment.supabase.key);\r\n    \r\n    // Inicializar sesión existente\r\n    this.initializeSession();\r\n    \r\n    // Escuchar cambios en la autenticación\r\n    this.supabase.auth.onAuthStateChange(async (event, session) => {\r\n      if (session?.user && session.user.email) {\r\n        // Obtener sucursal del metadata si existe, sino usar método por email\r\n        const userMetadata = (session.user as any).user_metadata || {};\r\n        const rawMetadata = (session.user as any).raw_user_meta_data || {};\r\n        const metaSucursal = userMetadata.sucursal || rawMetadata.sucursal;\r\n        const metaRole = userMetadata.role || rawMetadata.role;\r\n        \r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email,\r\n          role: metaRole || (session.user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal'),\r\n          sucursal: metaSucursal || this.getSucursalFromEmail(session.user.email),\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n        \r\n        this.currentUserSubject.next(userData);\r\n      } else {\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Inicializar sesión existente\r\n  private async initializeSession(): Promise<void> {\r\n    try {\r\n      const { data: { session }, error } = await this.supabase.auth.getSession();\r\n      \r\n      if (error) {\r\n        this.currentUserSubject.next(null);\r\n        return;\r\n      }\r\n      \r\n      if (session?.user && session.user.email) {\r\n        // Obtener sucursal del metadata si existe, sino usar método por email\r\n        const userMetadata = (session.user as any).user_metadata || {};\r\n        const rawMetadata = (session.user as any).raw_user_meta_data || {};\r\n        const metaSucursal = userMetadata.sucursal || rawMetadata.sucursal;\r\n        const metaRole = userMetadata.role || rawMetadata.role;\r\n        \r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email,\r\n          role: metaRole || (session.user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal'),\r\n          sucursal: metaSucursal || this.getSucursalFromEmail(session.user.email),\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n        \r\n        this.currentUserSubject.next(userData);\r\n      } else {\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    } catch (error) {\r\n      this.currentUserSubject.next(null);\r\n    }\r\n  }\r\n\r\n  // Cargar datos del usuario en segundo plano\r\n  private async loadUserDataInBackground(uid: string): Promise<void> {\r\n    try {\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Background load timeout')), 5000);\r\n      });\r\n      \r\n      const queryPromise = this.supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('id', uid)\r\n        .single();\r\n      \r\n      const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n      \r\n      if (data && !error) {\r\n        const updatedUser: User = {\r\n          id: data.id,\r\n          email: data.email,\r\n          role: data.role,\r\n          sucursal: data.sucursal,\r\n          active: data.active,\r\n          createdAt: new Date(data.created_at)\r\n        };\r\n        this.currentUserSubject.next(updatedUser);\r\n      }\r\n    } catch (error) {\r\n      // No hacer nada, mantener los datos por defecto\r\n    }\r\n  }\r\n\r\n  // Autenticación\r\n  async login(email: string, password: string): Promise<User | null> {\r\n    try {\r\n      const { data, error } = await this.supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      if (data.user && data.user.email) {\r\n        // Obtener sucursal del metadata si existe, sino usar método por email\r\n        const userMetadata = (data.user as any).user_metadata || {};\r\n        const rawMetadata = (data.user as any).raw_user_meta_data || {};\r\n        const metaSucursal = userMetadata.sucursal || rawMetadata.sucursal;\r\n        const metaRole = userMetadata.role || rawMetadata.role;\r\n        \r\n        const userData: User = {\r\n          id: data.user.id,\r\n          email: data.user.email,\r\n          role: metaRole || (data.user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal'),\r\n          sucursal: metaSucursal || this.getSucursalFromEmail(data.user.email),\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n        \r\n        this.currentUserSubject.next(userData);\r\n        return userData;\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private getSucursalFromEmail(email: string): string {\r\n    if (email === 'gerencia@loteria.com') return '';\r\n    if (email.includes('venta1')) return 'Sucursal 1';\r\n    if (email.includes('venta2')) return 'Sucursal 2';\r\n    if (email.includes('venta3')) return 'Sucursal 3';\r\n    if (email.includes('venta4')) return 'Sucursal 4';\r\n    return 'Principal';\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const { error } = await this.supabase.auth.signOut();\r\n    if (error) throw error;\r\n  }\r\n\r\n  // Verificar conexión a la base de datos\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('usuarios')\r\n        .select('count')\r\n        .limit(1);\r\n      \r\n      return !error;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Usuarios\r\n  async getUserData(uid: string): Promise<User | null> {\r\n    try {\r\n      // Primero obtener datos básicos de auth\r\n      const { data: authUser, error: authError } = await this.supabase.auth.getUser();\r\n      \r\n      if (authError || !authUser.user) {\r\n        return null;\r\n      }\r\n\r\n      // Datos por defecto usando auth\r\n      const defaultUserData: User = {\r\n        id: authUser.user.id,\r\n        email: authUser.user.email || '',\r\n        role: 'sucursal' as const,\r\n        sucursal: 'Principal',\r\n        active: true,\r\n        createdAt: new Date()\r\n      };\r\n\r\n      // Intentar obtener datos de la tabla users con timeout muy corto\r\n      try {\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => reject(new Error('Database timeout')), 1000); // 1 segundo timeout\r\n        });\r\n        \r\n        const queryPromise = this.supabase\r\n          .from('users')\r\n          .select('*')\r\n          .eq('id', uid)\r\n          .single();\r\n        \r\n        const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n        \r\n        if (data && !error) {\r\n          return {\r\n            id: data.id,\r\n            email: data.email,\r\n            role: data.role,\r\n            sucursal: data.sucursal,\r\n            active: data.active,\r\n            createdAt: new Date(data.created_at)\r\n          } as User;\r\n        }\r\n      } catch (dbError) {\r\n        // Error/timeout consultando tabla users, usar datos por defecto\r\n      }\r\n\r\n      return defaultUserData;\r\n      \r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Ventas\r\n  async getNextCorrelativo(sucursal: string): Promise<number> {\r\n    try {\r\n      // Obtener el correlativo más alto para esta sucursal en el día actual\r\n      const today = new Date();\r\n      const startOfDay = new Date(today);\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date(today);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n      \r\n      // Obtener solo las del día actual\r\n      const { data, error } = await this.supabase\r\n        .from('sales')\r\n        .select('correlativo, fecha, created_at')\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', startOfDay.toISOString())\r\n        .lte('fecha', endOfDay.toISOString())\r\n        .order('correlativo', { ascending: false })\r\n        .limit(1);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      const nextCorrelativo = data && data.length > 0 ? (data[0].correlativo || 0) + 1 : 1;\r\n      \r\n      return nextCorrelativo;\r\n    } catch (error) {\r\n      // En caso de error, usar 1 como fallback\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  async createSale(sale: Omit<Sale, 'id' | 'createdAt'>): Promise<string> {\r\n    try {\r\n      // Obtener fecha/hora actual en Honduras\r\n      const hondurasTime = this.getHondurasDateTime();\r\n      // Convertir a UTC para guardar en la base de datos\r\n      const utcTime = this.hondurasToUtc(hondurasTime);\r\n\r\n      const saleData = {\r\n        user_id: sale.userId,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: utcTime.toISOString(),\r\n        total: sale.total,\r\n        numero_recibo: sale.numeroRecibo,\r\n        correlativo: sale.correlativo,\r\n        created_at: utcTime.toISOString()\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sales')\r\n        .insert([saleData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSaleDetail(detail: Omit<SaleDetail, 'id'>): Promise<string> {\r\n    try {\r\n      // Validar que los datos sean válidos\r\n      if (detail.numero === null || detail.numero === undefined) {\r\n        throw new Error('Número no puede ser null o undefined');\r\n      }\r\n      \r\n      if (detail.monto === null || detail.monto === undefined || detail.monto <= 0) {\r\n        throw new Error('Monto debe ser mayor a 0');\r\n      }\r\n      \r\n      // Convertir el número a string con formato de 2 dígitos (00, 01, 02, etc.)\r\n      const numeroString = detail.numero.toString().padStart(2, '0');\r\n      \r\n      const detailData = {\r\n        sale_id: detail.saleId,\r\n        numero: numeroString,  // Enviar como string\r\n        monto: Number(detail.monto)\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .insert([detailData])\r\n        .select()\r\n        .single();\r\n      \r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async getSalesByDateAndSorteo(fecha: Date, sorteo: string): Promise<Sale[]> {\r\n    try {\r\n      // Crear rango de fechas para el día seleccionado en hora de Honduras\r\n      const startOfDayHonduras = new Date(fecha);\r\n      startOfDayHonduras.setHours(0, 0, 0, 0);\r\n      const endOfDayHonduras = new Date(fecha);\r\n      endOfDayHonduras.setHours(23, 59, 59, 999);\r\n\r\n      // Convertir a UTC para consultar en la base de datos\r\n      const startOfDayUtc = this.hondurasToUtc(startOfDayHonduras);\r\n      const endOfDayUtc = this.hondurasToUtc(endOfDayHonduras);\r\n\r\n      let query = this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', startOfDayUtc.toISOString())\r\n        .lte('fecha', endOfDayUtc.toISOString())\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (sorteo && sorteo.trim() !== '') {\r\n        query = query.eq('sorteo', sorteo);\r\n      }\r\n\r\n      const { data, error } = await query;\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      \r\n      if (!data || data.length === 0) {\r\n        return [];\r\n      }\r\n\r\n      const mappedSales = data.map(sale => ({\r\n        id: sale.id,\r\n        userId: sale.user_id,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: this.parseDateFromDatabase(sale.fecha), // Convertir a hora Honduras\r\n        total: sale.total,\r\n        numeroRecibo: sale.numero_recibo || sale.id.slice(-6),\r\n        correlativo: sale.correlativo || 0,\r\n        createdAt: this.parseDateFromDatabase(sale.created_at) // Convertir a hora Honduras\r\n      })) as Sale[];\r\n\r\n      return mappedSales;\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getSaleDetails(saleId: string): Promise<SaleDetail[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .select('*')\r\n        .eq('sale_id', saleId);\r\n\r\n      if (error) throw error;\r\n\r\n      return data.map(detail => ({\r\n        id: detail.id,\r\n        saleId: detail.sale_id,\r\n        numero: parseInt(detail.numero), // Convertir string a número para la interfaz\r\n        monto: detail.monto\r\n      })) as SaleDetail[];\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Sorteos\r\n  async createOrUpdateSorteo(sorteo: Omit<Sorteo, 'id'>): Promise<string> {\r\n    try {\r\n      const sorteoId = `${sorteo.fecha.toDateString()}-${sorteo.sorteo}`;\r\n      \r\n      // Asegurar formato de string para numero_ganador\r\n      const numeroGanadorString = (sorteo.numeroGanador ?? '').toString().padStart(2, '0');\r\n      \r\n      const sorteoData = {\r\n        id: sorteoId,\r\n        fecha: sorteo.fecha.toISOString(),\r\n        sorteo: sorteo.sorteo,\r\n        hora_cierre: sorteo.horaCierre.toISOString(),\r\n        numero_ganador: numeroGanadorString,\r\n        factor_multiplicador: sorteo.factorMultiplicador,\r\n        total_vendido: sorteo.totalVendido,\r\n        total_pagado: sorteo.totalPagado,\r\n        ganancia_neta: sorteo.gananciaNeta,\r\n        cerrado: sorteo.cerrado\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .upsert([sorteoData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getSorteo(fecha: Date, sorteo: string): Promise<Sorteo | null> {\r\n    try {\r\n      const sorteoId = `${fecha.toDateString()}-${sorteo}`;\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No se encontró el registro\r\n          return null;\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      return {\r\n        id: data.id,\r\n        fecha: new Date(data.fecha),\r\n        sorteo: data.sorteo,\r\n        horaCierre: new Date(data.hora_cierre),\r\n        // Mantener como string ya que numero_ganador es tipo text\r\n        numeroGanador: data.numero_ganador || '',\r\n        factorMultiplicador: data.factor_multiplicador,\r\n        totalVendido: data.total_vendido,\r\n        totalPagado: data.total_pagado,\r\n        gananciaNeta: data.ganancia_neta,\r\n        cerrado: data.cerrado\r\n      } as Sorteo;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Método específico para verificar si un sorteo existe por ID (maneja múltiples sucursales)\r\n  async getSorteoById(sorteoId: string): Promise<Sorteo | null> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        // Si es un error de permisos (406, RLS), lanzar para manejo especial\r\n        if (error.code === '42501' || error.details?.includes('permission denied')) {\r\n          throw { ...error, isRLSError: true };\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      if (!data || data.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      // Si hay múltiples sucursales, usar la primera para mostrar datos básicos\r\n      const firstRecord = data[0];\r\n      \r\n      return {\r\n        id: firstRecord.id,\r\n        fecha: new Date(firstRecord.fecha),\r\n        sorteo: firstRecord.sorteo,\r\n        horaCierre: new Date(firstRecord.hora_cierre),\r\n        numeroGanador: firstRecord.numero_ganador || '',\r\n        factorMultiplicador: firstRecord.factor_multiplicador,\r\n        totalVendido: firstRecord.total_vendido,\r\n        totalPagado: firstRecord.total_pagado,\r\n        gananciaNeta: firstRecord.ganancia_neta,\r\n        cerrado: firstRecord.cerrado,\r\n        sucursal: firstRecord.sucursal\r\n      } as Sorteo;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para obtener resumen de todas las sucursales de un sorteo\r\n  async getSorteoResumenPorSucursal(sorteoId: string): Promise<any[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('sucursal, numero_ganador, factor_multiplicador, total_vendido, total_pagado, ganancia_neta')\r\n        .eq('id', sorteoId)\r\n        .order('sucursal');\r\n\r\n      if (error) {\r\n        console.error('Error al obtener resumen por sucursal:', error);\r\n        return [];\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      console.error('Error al obtener resumen por sucursal:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Método alternativo que usa una consulta sin RLS estricto\r\n  async getSorteoByIdSimple(sorteoId: string): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_sorteo_simple', { sorteo_id: sorteoId });\r\n\r\n      if (error) {\r\n        return null;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Método específico para insertar un nuevo sorteo\r\n  async insertNewSorteo(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n      \r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n      const hondurasDateTime = this.getHondurasDateTime();\r\n      \r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .insert({\r\n          id: sorteoId,\r\n          fecha: hondurasDateTime.toISOString(),\r\n          sorteo: sorteoId.split('-').slice(1).join('-'),\r\n          hora_cierre: hondurasDateTime.toISOString(),\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          total_vendido: 0,\r\n          total_pagado: 0,\r\n          ganancia_neta: 0,\r\n          cerrado: true\r\n        });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateSorteoWinner(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n      \r\n      // Asegurar formato de 2 dígitos si es número\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n      \r\n      // Primero intentar hacer un update simple\r\n      const { data: existingData, error: selectError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('id')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n      \r\n      if (selectError && selectError.code !== 'PGRST116') {\r\n        throw selectError;\r\n      }\r\n      \r\n      let result;\r\n      \r\n      if (existingData) {\r\n        // El sorteo existe, hacer update\r\n        result = await this.supabase\r\n          .from('sorteos')\r\n          .update({\r\n            numero_ganador: numeroString,\r\n            factor_multiplicador: factorMultiplicador,\r\n            cerrado: true\r\n          })\r\n          .eq('id', sorteoId);\r\n      } else {\r\n        // El sorteo no existe, hacer insert con las columnas correctas\r\n        const hondurasDateTime = this.getHondurasDateTime();\r\n        result = await this.supabase\r\n          .from('sorteos')\r\n          .insert({\r\n            id: sorteoId,\r\n            fecha: hondurasDateTime.toISOString(),\r\n            sorteo: sorteoId.split('-').slice(1).join('-'), // Extraer nombre del sorteo\r\n            hora_cierre: hondurasDateTime.toISOString(),\r\n            numero_ganador: numeroString,\r\n            factor_multiplicador: factorMultiplicador,\r\n            total_vendido: 0,\r\n            total_pagado: 0,\r\n            ganancia_neta: 0,\r\n            cerrado: true\r\n          });\r\n      }\r\n\r\n      if (result.error) {\r\n        throw result.error;\r\n      }\r\n      \r\n      \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSorteo(sorteoId: string, sorteoName: string, fecha: Date): Promise<void> {\r\n    try {\r\n      const hondurasDateTime = this.getHondurasDateTime();\r\n      \r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .insert({\r\n          id: sorteoId,\r\n          fecha: hondurasDateTime.toISOString(),\r\n          sorteo: sorteoName,\r\n          hora_cierre: hondurasDateTime.toISOString(),\r\n          numero_ganador: null,\r\n          factor_multiplicador: 70,\r\n          total_vendido: 0,\r\n          total_pagado: 0,\r\n          ganancia_neta: 0,\r\n          cerrado: false\r\n        });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método alternativo para actualizar sorteo sin políticas RLS complejas\r\n  async updateSorteoWinnerDirect(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n      \r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n      \r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          cerrado: true\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método súper simple que solo hace UPDATE (último recurso)\r\n  async updateSorteoWinnerSimple(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n      \r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n      \r\n      // Solo hacer UPDATE, sin verificaciones\r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          cerrado: true\r\n        })\r\n        .eq('id', sorteoId);\r\n          \r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async calculateSorteoWinnings(sorteoId: string): Promise<void> {\r\n    try {\r\n      // Obtener el sorteo\r\n      const { data: sorteo, error: sorteoError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (sorteoError) throw sorteoError;\r\n      if (!sorteo.numero_ganador) return;\r\n\r\n      // Obtener todas las ventas del sorteo\r\n      const { data: sales, error: salesError } = await this.supabase\r\n        .from('sales')\r\n        .select('*, sale_details(*)')\r\n        .eq('sorteo', sorteo.sorteo)\r\n        .gte('fecha', new Date(sorteo.fecha).toISOString().split('T')[0])\r\n        .lt('fecha', new Date(new Date(sorteo.fecha).getTime() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]);\r\n\r\n      if (salesError) throw salesError;\r\n\r\n      // Calcular total vendido\r\n      let totalVendido = 0;\r\n      let totalPagado = 0;\r\n\r\n      for (const sale of sales) {\r\n        for (const detail of sale.sale_details) {\r\n          totalVendido += detail.monto;\r\n          \r\n          // Comparar números: convertir detail.numero a string para comparar con numero_ganador (text)\r\n          if (detail.numero.toString().padStart(2, '0') === sorteo.numero_ganador) {\r\n            totalPagado += detail.monto * sorteo.factor_multiplicador;\r\n          }\r\n        }\r\n      }\r\n\r\n      const gananciaNeta = totalVendido - totalPagado;\r\n\r\n      // Actualizar el sorteo con los cálculos\r\n      const { error: updateError } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          total_vendido: totalVendido,\r\n          total_pagado: totalPagado,\r\n          ganancia_neta: gananciaNeta\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (updateError) throw updateError;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método de debug para verificar conexión y datos\r\n  async debugSalesData(): Promise<void> {\r\n    try {\r\n\r\n      // Verificar conexión básica\r\n      const { data: tablesData, error: tablesError } = await this.supabase\r\n        .from('sales')\r\n        .select('count(*)', { count: 'exact', head: true });\r\n\r\n      if (tablesError) {\r\n        return;\r\n      }\r\n\r\n\r\n      // Verificar ventas de hoy sin filtros\r\n      const today = new Date();\r\n      const startOfDay = new Date(today);\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date(today);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n\r\n\r\n      const { data: todayData, error: todayError } = await this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', startOfDay.toISOString())\r\n        .lte('fecha', endOfDay.toISOString());\r\n\r\n      if (todayError) {\r\n        return;\r\n      }\r\n\r\n      if (todayData && todayData.length > 0) {\r\n      }\r\n\r\n      // Verificar ventas de los últimos 3 días\r\n      const threeDaysAgo = new Date(today);\r\n      threeDaysAgo.setDate(threeDaysAgo.getDate() - 3);\r\n      threeDaysAgo.setHours(0, 0, 0, 0);\r\n\r\n      const { data: recentData, error: recentError } = await this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', threeDaysAgo.toISOString())\r\n        .order('created_at', { ascending: false })\r\n        .limit(10);\r\n\r\n      if (recentError) {\r\n        return;\r\n      }\r\n\r\n      if (recentData && recentData.length > 0) {\r\n        recentData.forEach((sale, index) => {\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para verificar permisos y políticas RLS\r\n  async checkDatabasePermissions(): Promise<void> {\r\n    try {\r\n      \r\n      // Verificar sesión actual\r\n      const { data: session, error: sessionError } = await this.supabase.auth.getSession();\r\n      if (sessionError) {\r\n        return;\r\n      }\r\n      \r\n      \r\n      // Probar consulta simple a la tabla sales\r\n      const { data: simpleQuery, error: simpleError } = await this.supabase\r\n        .from('sales')\r\n        .select('id, sucursal, created_at')\r\n        .limit(1);\r\n      \r\n      if (simpleError) {\r\n      } else {\r\n      }\r\n      \r\n      // Probar inserción de test (para verificar permisos de escritura)\r\n      const testSale = {\r\n        user_id: session?.session?.user?.id || 'test-user',\r\n        sucursal: 'TEST',\r\n        sorteo: 'test',\r\n        fecha: new Date().toISOString(),\r\n        total: 0,\r\n        numero_recibo: 'TEST-001',\r\n        correlativo: 999\r\n      };\r\n      \r\n      const { data: insertTest, error: insertError } = await this.supabase\r\n        .from('sales')\r\n        .insert(testSale)\r\n        .select();\r\n      \r\n      if (insertError) {\r\n      } else {\r\n        \r\n        // Eliminar el registro de prueba\r\n        if (insertTest && insertTest.length > 0) {\r\n          await this.supabase\r\n            .from('sales')\r\n            .delete()\r\n            .eq('id', insertTest[0].id);\r\n        }\r\n      }\r\n      \r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // GESTIÓN DE USUARIOS\r\n  // ========================\r\n\r\n  async getUsers(): Promise<User[]> {\r\n    try {\r\n      \r\n      // Retornar usuarios por defecto simples para que funcione\r\n      return [\r\n        {\r\n          id: '1',\r\n          email: 'gerencia@loteria.com',\r\n          role: 'admin',\r\n          sucursal: '',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '2', \r\n          email: 'venta1@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 1',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '3',\r\n          email: 'venta2@loteria.com', \r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 2',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '4',\r\n          email: 'venta3@loteria.com',\r\n          role: 'sucursal', \r\n          sucursal: 'Sucursal 3',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '5',\r\n          email: 'venta4@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 4', \r\n          active: true,\r\n          createdAt: new Date()\r\n        }\r\n      ];\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private getDefaultUsers(): User[] {\r\n    return [\r\n      {\r\n        id: '1',\r\n        email: 'admin@loteria.com',\r\n        role: 'admin',\r\n        sucursal: '',\r\n        active: true,\r\n        createdAt: new Date()\r\n      },\r\n      {\r\n        id: '2',\r\n        email: 'sucursal1@loteria.com',\r\n        role: 'sucursal',\r\n        sucursal: 'Sucursal 1',\r\n        active: true,\r\n        createdAt: new Date()\r\n      }\r\n    ];\r\n  }\r\n\r\n  private async createProfilesFromAuthUsers(authUsers: any[]): Promise<void> {\r\n    try {\r\n      const profilesData = authUsers.map(authUser => ({\r\n        id: authUser.id,\r\n        email: authUser.email,\r\n        role: authUser.email?.includes('admin') || authUser.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal',\r\n        sucursal: this.getSucursalFromEmail(authUser.email || ''),\r\n        active: true,\r\n        created_at: new Date(authUser.created_at).toISOString()\r\n      }));\r\n\r\n      const { error } = await this.supabase\r\n        .from('profiles')\r\n        .upsert(profilesData, { onConflict: 'id' });\r\n\r\n      if (error) {\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // GESTIÓN DE SORTEOS\r\n  // ========================\r\n\r\n  async getSorteoSchedules(): Promise<any[]> {\r\n    try {\r\n      \r\n      const { data, error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .select('*')\r\n        .order('close_time', { ascending: true });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSorteoSchedule(sorteoData: { name: string, label: string, close_time: string }): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .insert([sorteoData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateSorteoSchedule(sorteoId: string, updates: { name?: string, label?: string, close_time?: string }): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .update(updates)\r\n        .eq('id', sorteoId)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteSorteoSchedule(sorteoId: string): Promise<void> {\r\n    try {\r\n      const { error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .delete()\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // MÉTODOS DE DEBUG Y SETUP\r\n  // ========================\r\n \r\n\r\n  async initializeSorteoSchedules(): Promise<void> {\r\n    try {\r\n      // Crear los sorteos por defecto si no existen\r\n      const defaultSorteos: SorteoSchedule[] = [...SORTEO_SCHEDULES];\r\n\r\n      for (const sorteo of defaultSorteos) {\r\n        const { error } = await this.supabase\r\n          .from('sorteo_schedules')\r\n          .upsert(sorteo, { onConflict: 'name' });\r\n\r\n        if (error) {\r\n        } else {\r\n        }\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para inicializar la tabla de perfiles si no existe\r\n  async initializeProfilesTable(): Promise<void> {\r\n    try {\r\n      \r\n      // Simplemente intentar hacer una consulta para ver si la tabla existe\r\n      const { error } = await this.supabase\r\n        .from('profiles')\r\n        .select('count', { count: 'exact', head: true });\r\n      \r\n      if (error) {\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para sincronizar usuarios manualmente\r\n  async syncUsersFromAuth(): Promise<void> {\r\n    try {\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // ========== FUNCIONES DE TIMEZONE HONDURAS CON DATE-FNS-TZ ==========\r\n  private readonly HONDURAS_TIMEZONE = 'America/Tegucigalpa';\r\n\r\n  // Función para obtener la fecha/hora actual en Honduras\r\n  getHondurasDateTime(): Date {\r\n    const now = new Date();\r\n    return toZonedTime(now, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Función para formatear fecha/hora en formato de Honduras\r\n  formatHondurasDateTime(date?: Date): string {\r\n    const targetDate = date || new Date();\r\n    return formatInTimeZone(targetDate, this.HONDURAS_TIMEZONE, 'yyyy-MM-dd hh:mm:ss a', { \r\n      locale: es \r\n    });\r\n  }\r\n\r\n  // Función para convertir una fecha de Honduras a UTC para guardar en BD\r\n  private hondurasToUtc(date: Date): Date {\r\n    return fromZonedTime(date, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Función para convertir una fecha UTC de BD a hora de Honduras\r\n  private utcToHonduras(utcDate: Date): Date {\r\n    return toZonedTime(utcDate, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método público para convertir cualquier fecha a hora de Honduras\r\n  convertToHondurasTime(date: Date): Date {\r\n    return toZonedTime(date, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método público para que los componentes obtengan la hora de Honduras\r\n  getHondurasTimeNow(): Date {\r\n    return this.getHondurasDateTime();\r\n  }\r\n\r\n  // Método público para formatear fechas en hora de Honduras con formato legible\r\n  formatDateForHonduras(date?: Date): string {\r\n    const targetDate = date || new Date();\r\n    return formatInTimeZone(targetDate, this.HONDURAS_TIMEZONE, 'dd/MM/yyyy hh:mm:ss a', { \r\n      locale: es \r\n    });\r\n  }\r\n\r\n  // Método público para parsear fechas de la base de datos a hora de Honduras\r\n  parseDateFromDatabase(isoString: string): Date {\r\n    const utcDate = parseISO(isoString);\r\n    return toZonedTime(utcDate, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // ============= MÉTODOS DE GESTIÓN DE USUARIOS =============\r\n\r\n  // Obtener todos los usuarios del sistema desde auth.users\r\n  async getAllUsers(): Promise<User[]> {\r\n    try {\r\n      // Usar la API de administración para obtener usuarios de auth.users\r\n      const { data, error } = await this.supabase.auth.admin.listUsers();\r\n\r\n      console.log('Usuarios obtenidos:', data);\r\n      if (error) {\r\n        console.error('Error obteniendo usuarios:', error);\r\n        // Si falla, usar datos por defecto\r\n        return this.getDefaultUsersForManagement();\r\n      }\r\n\r\n      // Mapear los usuarios de auth a nuestro formato\r\n      return data.users.map((user: any) => ({\r\n        id: user.id,\r\n        email: user.email || '',\r\n        role: (user.user_metadata?.['role'] || (user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal')) as 'admin' | 'sucursal',\r\n        sucursal: user.user_metadata?.['sucursal'] || this.getSucursalFromEmail(user.email || ''),\r\n        active: user.user_metadata?.['active'] ?? !(user['banned_until']),\r\n        createdAt: new Date(user.created_at)\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios:', error);\r\n      // Retornar usuarios por defecto si falla\r\n      return this.getDefaultUsersForManagement();\r\n    }\r\n  }\r\n\r\n  // Usuarios por defecto para gestión\r\n  private getDefaultUsersForManagement(): User[] {\r\n    return [\r\n      {\r\n        id: 'default-admin',\r\n        email: 'gerencia@loteria.com',\r\n        role: 'admin',\r\n        sucursal: '',\r\n        active: true,\r\n        createdAt: new Date()\r\n      },\r\n      {\r\n        id: 'default-venta1',\r\n        email: 'venta1@loteria.com',\r\n        role: 'sucursal',\r\n        sucursal: 'Sucursal 1',\r\n        active: true,\r\n        createdAt: new Date()\r\n      },\r\n      {\r\n        id: 'default-venta2',\r\n        email: 'venta2@loteria.com',\r\n        role: 'sucursal',\r\n        sucursal: 'Sucursal 2',\r\n        active: true,\r\n        createdAt: new Date()\r\n      }\r\n    ];\r\n  }\r\n\r\n  // Crear un nuevo usuario en el sistema usando auth.users\r\n  async createNewUser(userData: { email: string; role: 'admin' | 'sucursal'; sucursal?: string; active?: boolean }): Promise<User> {\r\n    try {\r\n      console.log('Creando usuario:', userData);\r\n      \r\n      // Crear usuario directamente en auth.users\r\n      const { data: authData, error: authError } = await this.supabase.auth.admin.createUser({\r\n        email: userData.email,\r\n        password: 'LoteriaTemporal123!', // Contraseña temporal\r\n        email_confirm: true,\r\n        user_metadata: {\r\n          role: userData.role,\r\n          sucursal: userData.sucursal || '',\r\n          active: userData.active !== undefined ? userData.active : true\r\n        }\r\n      });\r\n\r\n      if (authError) {\r\n        throw authError;\r\n      }\r\n\r\n      console.log('Usuario creado exitosamente:', authData.user.email);\r\n\r\n      // Retornar el usuario en nuestro formato\r\n      return {\r\n        id: authData.user.id,\r\n        email: authData.user.email || '',\r\n        role: userData.role,\r\n        sucursal: userData.sucursal || '',\r\n        active: userData.active !== undefined ? userData.active : true,\r\n        createdAt: new Date(authData.user.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al crear usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Actualizar un usuario existente usando auth.users\r\n  async updateExistingUser(userId: string, updates: { email?: string; role?: 'admin' | 'sucursal'; sucursal?: string; active?: boolean }): Promise<User> {\r\n    try {\r\n      console.log('Actualizando usuario:', userId, updates);\r\n      \r\n      // Preparar los metadatos del usuario\r\n      const userMetadata: any = {};\r\n      if (updates.role) userMetadata['role'] = updates.role;\r\n      if (updates.sucursal !== undefined) userMetadata['sucursal'] = updates.sucursal;\r\n      if (updates.active !== undefined) userMetadata['active'] = updates.active;\r\n\r\n      // Actualizar en auth.users\r\n      const updateData: any = {};\r\n      if (updates.email) updateData.email = updates.email;\r\n      if (Object.keys(userMetadata).length > 0) updateData.user_metadata = userMetadata;\r\n      \r\n      // Si se quiere desactivar el usuario, usar ban\r\n      if (updates.active === false) {\r\n        updateData.ban_duration = '876000h'; // Ban muy largo para simular desactivación\r\n      } else if (updates.active === true) {\r\n        updateData.ban_duration = 'none'; // Remover ban\r\n      }\r\n\r\n      const { data, error } = await this.supabase.auth.admin.updateUserById(userId, updateData);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Usuario actualizado exitosamente:', data.user.email);\r\n\r\n      // Retornar el usuario actualizado en nuestro formato\r\n      return {\r\n        id: data.user.id,\r\n        email: data.user.email || '',\r\n        role: updates.role || (data.user.user_metadata?.['role'] as 'admin' | 'sucursal') || 'sucursal',\r\n        sucursal: updates.sucursal || data.user.user_metadata?.['sucursal'] || '',\r\n        active: updates.active !== undefined ? updates.active : !(data.user as any)['banned_until'],\r\n        createdAt: new Date(data.user.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al actualizar usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Eliminar un usuario usando auth.users\r\n  async deleteExistingUser(userId: string): Promise<void> {\r\n    try {\r\n      console.log('Eliminando usuario:', userId);\r\n      \r\n      const { error } = await this.supabase.auth.admin.deleteUser(userId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Usuario eliminado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al eliminar usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Alternar el estado activo/inactivo de un usuario usando auth.users\r\n  async toggleExistingUserStatus(userId: string): Promise<User> {\r\n    try {\r\n      console.log('Alternando estado del usuario:', userId);\r\n      \r\n      // Primero obtener el usuario actual de auth.users\r\n      const { data: authUser, error: fetchError } = await this.supabase.auth.admin.getUserById(userId);\r\n\r\n      if (fetchError) {\r\n        throw fetchError;\r\n      }\r\n\r\n      // Determinar el estado actual desde los metadatos o si está baneado\r\n      const currentActive = authUser.user.user_metadata?.['active'] ?? !(authUser.user as any)['banned_until'];\r\n      const newStatus = !currentActive;\r\n\r\n      // Actualizar el estado del usuario\r\n      const updateData: any = {\r\n        user_metadata: {\r\n          ...authUser.user.user_metadata,\r\n          ['active']: newStatus\r\n        }\r\n      };\r\n\r\n      // Si se está desactivando, ban el usuario\r\n      if (!newStatus) {\r\n        updateData.ban_duration = '876000h'; // Ban muy largo para simular desactivación\r\n      } else {\r\n        updateData.ban_duration = 'none'; // Remover ban\r\n      }\r\n\r\n      const { data, error } = await this.supabase.auth.admin.updateUserById(userId, updateData);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Estado del usuario alternado exitosamente:', newStatus ? 'Activo' : 'Inactivo');\r\n\r\n      return {\r\n        id: data.user.id,\r\n        email: data.user.email || '',\r\n        role: (data.user.user_metadata?.['role'] as 'admin' | 'sucursal') || 'sucursal',\r\n        sucursal: data.user.user_metadata?.['sucursal'] || '',\r\n        active: newStatus,\r\n        createdAt: new Date(data.user.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al alternar estado del usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Actualizar contraseña de un usuario usando auth.users\r\n  async updateUserPassword(userId: string, newPassword: string): Promise<void> {\r\n    try {\r\n      console.log('Actualizando contraseña del usuario:', userId);\r\n      \r\n      const { error } = await this.supabase.auth.admin.updateUserById(userId, {\r\n        password: newPassword\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Contraseña actualizada exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al actualizar contraseña:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Enviar email de restablecimiento de contraseña\r\n  async sendPasswordReset(email: string): Promise<void> {\r\n    try {\r\n      const { error } = await this.supabase.auth.resetPasswordForEmail(email, {\r\n        redirectTo: `${window.location.origin}/reset-password`\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // GESTIÓN DE SORTEOS POR SUCURSAL\r\n  // ========================\r\n\r\n  // Obtener usuarios activos agrupados por sucursal\r\n  async getActiveUsersBySucursal(): Promise<SucursalFactor[]> {\r\n    try {\r\n      // Intentar usar la función SQL primero\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_active_users_by_sucursal');\r\n\r\n      if (error) {\r\n        console.warn('Función get_active_users_by_sucursal falló, intentando consulta directa:', error);\r\n        \r\n        // Fallback: consulta directa a auth.users\r\n        const { data: usersData, error: usersError } = await this.supabase.auth.admin.listUsers();\r\n        \r\n        if (usersError) {\r\n          throw usersError;\r\n        }\r\n\r\n        // Procesar usuarios y agrupar por sucursal\r\n        const sucursalesMap = new Map<string, SucursalFactor>();\r\n        \r\n        for (const user of usersData.users) {\r\n          if (user.email === 'gerencia@loteria.com' || !user.email_confirmed_at || !user.email) {\r\n            continue;\r\n          }\r\n          \r\n          let sucursal = 'Principal';\r\n          if (user.user_metadata && user.user_metadata['sucursal']) {\r\n            sucursal = user.user_metadata['sucursal'];\r\n          } else if (user.email.includes('venta1')) {\r\n            sucursal = 'Sucursal 1';\r\n          } else if (user.email.includes('venta2')) {\r\n            sucursal = 'Sucursal 2';\r\n          } else if (user.email.includes('venta3')) {\r\n            sucursal = 'Sucursal 3';\r\n          } else if (user.email.includes('venta4')) {\r\n            sucursal = 'Sucursal 4';\r\n          }\r\n          \r\n          if (!sucursalesMap.has(sucursal)) {\r\n            sucursalesMap.set(sucursal, {\r\n              sucursal,\r\n              factor: 75,\r\n              usuario: user.id,\r\n              email: user.email || ''\r\n            });\r\n          }\r\n        }\r\n        \r\n        return Array.from(sucursalesMap.values());\r\n      }\r\n\r\n      return (data || []).map((user: any) => ({\r\n        sucursal: user.sucursal,\r\n        factor: user.factor_default,\r\n        usuario: user.user_id,\r\n        email: user.email\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios por sucursal:', error);\r\n      // Fallback final con datos por defecto\r\n      return [\r\n        { sucursal: 'Sucursal 1', factor: 75, usuario: '', email: 'venta1@loteria.com' },\r\n        { sucursal: 'Sucursal 2', factor: 75, usuario: '', email: 'venta2@loteria.com' },\r\n        { sucursal: 'Sucursal 3', factor: 75, usuario: '', email: 'venta3@loteria.com' },\r\n        { sucursal: 'Sucursal 4', factor: 75, usuario: '', email: 'venta4@loteria.com' },\r\n        { sucursal: 'Principal', factor: 75, usuario: '', email: 'principal@loteria.com' }\r\n      ];\r\n    }\r\n  }\r\n\r\n  // Crear sorteos por sucursal con factores específicos\r\n  async crearSorteosPorSucursal(\r\n    sorteoId: string, \r\n    numeroGanador: string, \r\n    factoresPorSucursal: { [sucursal: string]: number }\r\n  ): Promise<void> {\r\n    try {\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n      \r\n      const { data, error } = await this.supabase\r\n        .rpc('crear_sorteos_por_sucursal', {\r\n          p_sorteo_id: sorteoId,\r\n          p_numero_ganador: numeroString,\r\n          p_factores_json: factoresPorSucursal\r\n        });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Sorteos creados por sucursal exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al crear sorteos por sucursal:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Calcular totales de sorteo por sucursal\r\n  async calcularTotalesSorteoPorSucursal(sorteoId: string): Promise<void> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .rpc('calcular_totales_sorteo_por_sucursal', {\r\n          p_sorteo_id: sorteoId\r\n        });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Totales calculados por sucursal exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al calcular totales por sucursal:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Obtener sorteos por sucursal para una fecha y tipo específicos\r\n  async getSorteosPorSucursal(fecha: Date, sorteo: string): Promise<Sorteo[]> {\r\n    try {\r\n      const fechaStr = fecha.toISOString().split('T')[0];\r\n      const sorteoId = `${fechaStr}-${sorteo}`;\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .order('sucursal');\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return (data || []).map(item => ({\r\n        id: item.id,\r\n        fecha: new Date(item.fecha),\r\n        sorteo: item.sorteo,\r\n        horaCierre: new Date(item.hora_cierre),\r\n        numeroGanador: item.numero_ganador || '',\r\n        factorMultiplicador: item.factor_multiplicador,\r\n        totalVendido: item.total_vendido,\r\n        totalPagado: item.total_pagado,\r\n        gananciaNeta: item.ganancia_neta,\r\n        cerrado: item.cerrado,\r\n        sucursal: item.sucursal\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener sorteos por sucursal:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Obtener resumen consolidado de un sorteo (todas las sucursales)\r\n  async getResumenConsolidadoSorteo(fecha: Date, sorteo: string): Promise<{\r\n    numeroGanador: string;\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    cerrado: boolean;\r\n    detallesPorSucursal: any[];\r\n  }> {\r\n    try {\r\n      const sorteosPorSucursal = await this.getSorteosPorSucursal(fecha, sorteo);\r\n      \r\n      if (sorteosPorSucursal.length === 0) {\r\n        return {\r\n          numeroGanador: '',\r\n          totalVendido: 0,\r\n          totalPagado: 0,\r\n          gananciaNeta: 0,\r\n          cerrado: false,\r\n          detallesPorSucursal: []\r\n        };\r\n      }\r\n\r\n      const resumen = {\r\n        numeroGanador: sorteosPorSucursal[0].numeroGanador || '',\r\n        totalVendido: sorteosPorSucursal.reduce((sum, s) => sum + s.totalVendido, 0),\r\n        totalPagado: sorteosPorSucursal.reduce((sum, s) => sum + s.totalPagado, 0),\r\n        gananciaNeta: sorteosPorSucursal.reduce((sum, s) => sum + s.gananciaNeta, 0),\r\n        cerrado: sorteosPorSucursal.every(s => s.cerrado),\r\n        detallesPorSucursal: sorteosPorSucursal.map(s => ({\r\n          sucursal: s.sucursal,\r\n          factor: s.factorMultiplicador,\r\n          vendido: s.totalVendido,\r\n          pagado: s.totalPagado,\r\n          ganancia: s.gananciaNeta\r\n        }))\r\n      };\r\n\r\n      return resumen;\r\n    } catch (error) {\r\n      console.error('Error al obtener resumen consolidado:', error);\r\n      return {\r\n        numeroGanador: '',\r\n        totalVendido: 0,\r\n        totalPagado: 0,\r\n        gananciaNeta: 0,\r\n        cerrado: false,\r\n        detallesPorSucursal: []\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener ventas agrupadas por número para un sorteo específico en una fecha\r\n   */\r\n  async getVentasPorNumero(sorteoName: string, fecha: string): Promise<{ [numero: string]: number }> {\r\n    try {\r\n      const { data: ventas, error } = await this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          details:sale_details(numero, monto)\r\n        `)\r\n        .eq('sorteo', sorteoName)\r\n        .gte('created_at', `${fecha}T00:00:00`)\r\n        .lt('created_at', `${fecha}T23:59:59`);\r\n\r\n      if (error) {\r\n        console.error('Error al obtener ventas por número:', error);\r\n        return {};\r\n      }\r\n\r\n      const ventasPorNumero: { [numero: string]: number } = {};\r\n\r\n      // Procesar todas las ventas y detalles\r\n      ventas?.forEach(venta => {\r\n        venta.details?.forEach((detalle: any) => {\r\n          const numero = detalle.numero.toString().padStart(2, '0');\r\n          const monto = detalle.monto || 0;\r\n          \r\n          if (!ventasPorNumero[numero]) {\r\n            ventasPorNumero[numero] = 0;\r\n          }\r\n          ventasPorNumero[numero] += monto;\r\n        });\r\n      });\r\n\r\n      return ventasPorNumero;\r\n    } catch (error) {\r\n      console.error('Error en getVentasPorNumero:', error);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Notificar actualización de resúmenes\r\n   */\r\n  notifyResumenUpdate(): void {\r\n    this.resumenUpdateSubject.next();\r\n  }\r\n\r\n}\r\n","export const environment = {\r\n  production: false,\r\n   supabase: {\r\n    url: 'https://oxuhcoubrpupjmjvyzbv.supabase.co',\r\n    // ⚠️ CAMBIAR ESTA KEY POR TU SERVICE_ROLE KEY\r\n    // Ve a Supabase Dashboard → Settings → API → service_role key\r\n    key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im94dWhjb3VicnB1cGptanZ5emJ2Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MjcxNzU0MiwiZXhwIjoyMDY4MjkzNTQyfQ.xAawEVJAtjAvxAo1iUeWw2w33IvismG_k92spFgEyYI' // Reemplaza con tu service_role key real\r\n  }\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n"],"names":["AppComponent","constructor","supabaseService","router","ngOnInit","currentUser$","subscribe","user","url","includes","navigate","i0","ɵɵdirectiveInject","i1","SupabaseService","i2","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","FormsModule","RouterModule","CommonModule","LoginComponent","SucursalComponent","AdminComponent","UserManagementComponent","ResumenSorteosComponent","AuthGuard","AdminGuard","routes","path","redirectTo","pathMatch","component","canActivate","AppModule","bootstrap","imports","forRoot","declarations","startOfDay","endOfDay","SORTEO_SCHEDULES","ɵɵtext","ɵɵproperty","sorteo_r2","name","ɵɵadvance","ɵɵtextInterpolate","label","tmp_9_0","ctx_r3","getSorteoData","sorteo_r3","numeroGanador","ɵɵtextInterpolate1","tmp_10_0","factorMultiplicador","tmp_11_0","totalVendido","toFixed","tmp_12_0","totalPagado","ɵɵclassProp","tmp_13_0","gananciaNeta","tmp_14_0","tmp_15_0","ɵɵtwoWayListener","AdminComponent_div_86_ng_template_11_div_0_Template_input_ngModelChange_4_listener","$event","ɵɵrestoreView","_r5","ɵɵnextContext","$implicit","ɵɵtwoWayBindingSet","winningNumbers","ɵɵresetView","ɵɵlistener","AdminComponent_div_86_ng_template_11_div_0_Template_button_click_5_listener","openFactorsModal","ɵɵtemplate","AdminComponent_div_86_ng_template_11_div_0_span_7_Template","AdminComponent_div_86_ng_template_11_div_0_span_8_Template","ɵɵtwoWayProperty","isLoading","AdminComponent_div_86_ng_template_11_div_0_Template","AdminComponent_div_86_ng_template_11_div_1_Template","isSorteoOpen","AdminComponent_div_86_div_10_Template","AdminComponent_div_86_ng_template_11_Template","ɵɵtemplateRefExtractor","closeTime","hasSavedWinner","setWinner_r6","AdminComponent_div_100_div_17_Template_button_click_12_listener","sale_r8","_r7","verDetalles","AdminComponent_div_100_div_17_Template_button_click_14_listener","reprintReceipt","formatDateTime","createdAt","sucursal","sorteo","total","numeroRecibo","id","slice","isLoadingFilters","AdminComponent_div_100_div_1_Template","AdminComponent_div_100_div_17_Template","sales","trackBySale","AdminComponent_div_124_Template_input_ngModelChange_3_listener","_r9","userFormData","password","AdminComponent_div_133_Template_input_ngModelChange_3_listener","_r10","detail_r11","numero","toString","padStart","monto","AdminComponent_div_183_div_32_div_5_Template","selectedSaleDetails","trackBySaleDetail","length","getTotalNumeros","AdminComponent_div_183_div_32_Template","AdminComponent_div_183_div_33_Template","selectedSaleForDetail","correlativo","currentSorteoForFactors","winningNumber","ɵɵtextInterpolate2","user_r14","email","last_r15","AdminComponent_div_191_div_14_div_1_div_5_span_3_Template","getUsersBySucursal","sucursal_r16","AdminComponent_div_191_div_14_div_1_div_5_Template","AdminComponent_div_191_div_14_div_1_Template_input_input_10_listener","_r13","updateFactorForSucursal","target","value","hasSucursalUsers","factoresPorSucursal","AdminComponent_div_191_div_14_div_1_Template","getUniqueSucursales","AdminComponent_div_191_Template_div_click_0_listener","_r12","closeFactorsModal","AdminComponent_div_191_Template_div_click_1_listener","stopPropagation","AdminComponent_div_191_div_6_Template","AdminComponent_div_191_Template_button_click_7_listener","AdminComponent_div_191_div_14_Template","AdminComponent_div_191_div_15_Template","AdminComponent_div_191_div_16_Template","AdminComponent_div_191_Template_button_click_18_listener","AdminComponent_div_191_Template_button_click_21_listener","confirmWinningNumberWithFactors","AdminComponent_div_191_i_22_Template","AdminComponent_div_191_i_23_Template","sucursalesFactores","sucursal_r18","factor_multiplicador","total_vendido","total_pagado","ganancia_neta","AdminComponent_div_192_Template_div_click_0_listener","_r17","closeResumenModal","AdminComponent_div_192_Template_div_click_1_listener","AdminComponent_div_192_Template_button_click_6_listener","AdminComponent_div_192_div_24_Template","AdminComponent_div_192_Template_button_click_41_listener","currentSorteoForResumen","resumenSucursales","getTotalVendidoGeneral","getTotalPagadoGeneral","getGananciaTotalGeneral","notificationService","printService","cdr","currentUser","sorteos","saleDetails","sorteosData","selectedSorteoFilter","selectedDate","fechaDesde","fechaHasta","users","showUserModal","editingUser","role","active","showSaleDetailModal","showSorteoModal","editingSorteo","sorteoSchedules","showPasswordModal","selectedUserForPassword","newPassword","confirmPassword","showSorteosSection","showUsersSection","showFactorsModal","showResumenModal","hondurasToday","getHondurasDateTime","toISOString","split","loadFilterState","fechaInicio","fechaFin","formatDateTimeLocal","savedFilters","localStorage","getItem","filters","JSON","parse","error","saveFilterState","setItem","stringify","loadSales","loadSorteosData","initializeUsers","loadSorteoSchedules","_this","_asyncToGenerator","initializeProfilesTable","loadUsers","Date","showError","now","hours","minutes","setHours","parseInt","todayString","sorteoId","isSorteoCerrado","sorteoData","cerrado","hasTemporaryWinnerData","loadSorteoById","_this2","getSorteoById","sorteoName","detectChanges","isRLSError","code","simpleData","getSorteoByIdSimple","data","fecha","horaCierre","hora_cierre","numero_ganador","fallbackError","refreshTodaysSorteos","_this3","_this4","loadSalesByDateRange","fechaParaConsulta","getSalesByDateAndSorteo","sale","getSaleDetails","saleId","setWinningNumber","_this5","calculateSorteoResults","_x","_x2","_this6","multiplicador","sorteoSales","details","detail","createOrUpdateSorteo","apply","arguments","_this7","status","updateSorteoUI","_this8","setTimeout","getTotalSales","reduce","getSucursalSummary","summary","count","Object","entries","map","getTotalVendido","getTotalPagado","values","getGananciaNeta","getTotalVentas","aplicarFiltros","_this9","limpiarFiltros","_this0","onFiltroFechaChange","_this1","onDateChange","_this10","onSorteoFilterChange","_this11","onFechaDesdeChange","_this12","onFechaHastaChange","_this13","_this14","loadSingleDateSales","fechaDesdeObj","fechaHastaObj","allSales","currentDate","daysProcessed","maxDays","daySales","setDate","getDate","showInfo","_this15","_this16","getUsers","message","closeUserModal","editUser","saveUser","_this17","updateExistingUser","showSuccess","createNewUser","toggleUserStatus","_this18","toggleExistingUserStatus","deleteUser","userId","_this19","confirmed","showConfirmation","generateDailyReport","reportDate","_this20","generateThermalReceipt","logout","_this21","dateInput","date","toLocaleString","year","month","day","hour","minute","getFullYear","String","getMonth","getHours","getMinutes","formatDateForDisplay","dateObj","formatHondurasDateTime","exportarVentas","exportarVentasExcel","generateVentasReportExcel","exportarVentasPDF","generateVentasReportPDF","index","trackByUser","trackBySorteo","closeSaleDetailModal","forceCloseSaleDetailModal","resetModal","backdrops","document","querySelectorAll","forEach","el","parentNode","removeChild","body","classList","remove","createUser","changePassword","closePasswordModal","changeUserPassword","_this22","updateUserPassword","csvContent","numeros","d","join","blob","Blob","type","link","createElement","URL","createObjectURL","setAttribute","style","visibility","appendChild","click","sorteoFilter","generateVentasReport","onFactorChange","event","debugSorteoSchedules","_this23","toggleSorteosSection","toggleUsersSection","openCreateUserModal","syncUsersFromAuth","_this24","navigateToUsers","sorteoOrName","_this25","getActiveUsersBySucursal","factor","sorteoSchedule","find","s","console","_this26","fechaStr","crearSorteosPorSucursal","calcularTotalesSorteoPorSucursal","getSorteoResumenPorSucursal","notifyResumenUpdate","Set","parseFloat","filter","sum","NotificationService","i3","PrintService","i4","ChangeDetectorRef","AdminComponent_Template","AdminComponent_Template_button_click_7_listener","_r1","AdminComponent_Template_button_click_10_listener","AdminComponent_span_18_Template","AdminComponent_Template_input_ngModelChange_19_listener","AdminComponent_Template_input_change_19_listener","AdminComponent_span_24_Template","AdminComponent_Template_input_ngModelChange_25_listener","AdminComponent_Template_input_change_25_listener","AdminComponent_span_30_Template","AdminComponent_Template_select_ngModelChange_31_listener","AdminComponent_Template_select_change_31_listener","AdminComponent_option_34_Template","AdminComponent_Template_button_click_36_listener","AdminComponent_i_37_Template","AdminComponent_ng_template_38_Template","AdminComponent_Template_button_click_41_listener","AdminComponent_i_42_Template","AdminComponent_ng_template_43_Template","AdminComponent_div_86_Template","AdminComponent_Template_button_click_94_listener","AdminComponent_Template_button_click_97_listener","AdminComponent_div_100_Template","AdminComponent_ng_template_101_Template","AdminComponent_Template_div_click_103_listener","currentTarget","AdminComponent_Template_button_click_110_listener","AdminComponent_Template_input_ngModelChange_119_listener","AdminComponent_Template_input_ngModelChange_123_listener","nombre","AdminComponent_div_124_Template","AdminComponent_Template_select_ngModelChange_128_listener","AdminComponent_div_133_Template","AdminComponent_Template_input_ngModelChange_136_listener","AdminComponent_Template_button_click_140_listener","AdminComponent_Template_button_click_143_listener","AdminComponent_Template_div_click_146_listener","AdminComponent_Template_button_click_153_listener","AdminComponent_Template_input_ngModelChange_162_listener","AdminComponent_Template_input_ngModelChange_166_listener","AdminComponent_Template_button_click_168_listener","AdminComponent_Template_button_click_171_listener","AdminComponent_Template_div_keydown_escape_174_listener","AdminComponent_Template_div_click_175_listener","AdminComponent_Template_button_click_181_listener","AdminComponent_div_183_Template","AdminComponent_Template_button_click_185_listener","AdminComponent_Template_button_click_188_listener","AdminComponent_div_191_Template","AdminComponent_div_192_Template","searchIcon_r19","eraserIcon_r20","noSales_r21","ɵɵstyleProp","userForm_r22","valid","passwordForm_r23","ctx_r1","errorMessage","redirectUser","onLogin","showLoading","timeoutPromise","Promise","_","reject","Error","loginPromise","login","race","getErrorMessage","hideLoading","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_9_listener","LoginComponent_Template_input_ngModelChange_13_listener","LoginComponent_div_14_Template","loginForm_r3","sucursal_r1","item_r2","i_r3","ɵɵclassMap","ctx_r5","getIntensidadColor","sorteo_r5","numero_r4","getVentaTotalPorNumero","ResumenSorteosComponent_div_10_div_2_div_72_div_9_Template","ResumenSorteosComponent_div_10_div_2_div_72_div_15_Template","getNumerosMasVendidos","getNumeros","getCantidadNumerosVendidos","getPromedioVentaPorNumero","getMaxVentaPorNumero","ResumenSorteosComponent_div_10_div_2_div_56_Template","ResumenSorteosComponent_div_10_div_2_div_72_Template","getNumeroGanador","getFactorPrincipal","getTotalVendidoSorteo","getTotalPagadoSorteo","getGananciaTotalSorteo","getResumenSorteo","hasVentasPorNumero","ResumenSorteosComponent_div_10_div_1_Template","ResumenSorteosComponent_div_10_div_2_Template","getSorteosConResumen","resumenPorSorteo","ventasPorNumero","loadResumenesSorteos","subscription","resumenUpdateSubject","ngOnDestroy","unsubscribe","resumen","loadVentasPorNumero","getVentasPorNumero","hasResumenSorteo","refreshData","ventas","keys","top","sort","a","b","valores","Math","max","suma","acc","val","i","push","venta","maxVenta","intensidad","standalone","features","ɵɵStandaloneFeature","ResumenSorteosComponent_Template","ResumenSorteosComponent_Template_button_click_6_listener","ResumenSorteosComponent_div_9_Template","ResumenSorteosComponent_div_10_Template","NgForOf","NgIf","styles","timeUntilClose","SucursalComponent_div_13_div_4_span_5_Template","SucursalComponent_div_13_div_4_span_6_Template","currentSorteo","SucursalComponent_div_13_Template_button_click_2_listener","openNumberModal","SucursalComponent_div_13_div_4_Template","SucursalComponent_div_13_div_5_Template","isBlocked","SucursalComponent_div_14_div_9_Template_button_click_6_listener","i_r5","_r4","removeNumber","item_r6","SucursalComponent_div_14_div_9_Template","SucursalComponent_div_14_Template_button_click_11_listener","_r3","SucursalComponent_div_14_Template_button_click_14_listener","processSale","selectedNumbers","trackByIndex","detail_r8","SucursalComponent_div_15_div_7_span_9_Template","SucursalComponent_div_15_div_7_Template_button_click_13_listener","sale_r9","formatTime","trackByDetailId","SucursalComponent_div_15_div_7_Template","getFilteredSales","trackBySaleId","sorteoService","selectedNumber","selectedAmount","todaySales","recentSales","filteredSales","filterDate","numberInput","showKeypad","currentInput","showNumberModal","showAmountModal","showConfirmModal","tempNumber","tempAmount","modalNumberInput","modalAmountInput","currentHondurasTime","isProcessingModal","userSubscription","log","initializeComponent","checkTimeRestrictions","updateHondurasTime","timeCheckInterval","setInterval","hondurasTimeInterval","sorteoUpdateInterval","clearInterval","hondurasTime","getHondurasTimeNow","fullFormatted","formatDateForHonduras","parts","refreshSorteoSchedules","updateSorteoInfo","loadTodaySales","loadRecentSales","setFilterDate","onFilterDateChange","filterSales","filterDateObj","saleDate","toDateString","getCurrentSorteo","getTimeUntilClose","addNumber","existingIndex","findIndex","n","splice","generateReceiptNumber","sucursalCode","replace","toUpperCase","substring","correlativoFormatted","getTotal","item","getNextCorrelativo","createSale","detailId","createSaleDetail","saleWithId","detailsPromise","pressNumber","num","clearNumber","acceptNumber","closeAllModals","pressModalNumber","clearModalNumber","acceptModalNumber","formattedNumber","pressModalAmount","clearModalAmount","acceptModalAmount","confirmAddNumber","cancelAddNumber","hondurasNow","timeDiff","getTime","minutesLeft","floor","showWarning","hondurasSaleDate","convertToHondurasTime","isToday","getTodayDate","toLocaleDateString","weekday","toLocaleTimeString","hour12","debugModalState","alert","toggleBloqueo","estado","debugSalesData","checkDatabasePermissions","yesterday","yesterdaySales","tomorrow","tomorrowSales","SorteoService","i5","SucursalComponent_Template","SucursalComponent_Template_button_click_10_listener","SucursalComponent_div_13_Template","SucursalComponent_div_14_Template","SucursalComponent_div_15_Template","SucursalComponent_Template_div_click_16_listener","SucursalComponent_Template_div_click_17_listener","SucursalComponent_Template_button_click_23_listener","SucursalComponent_Template_button_click_35_listener","SucursalComponent_Template_button_click_37_listener","SucursalComponent_Template_button_click_39_listener","SucursalComponent_Template_button_click_42_listener","SucursalComponent_Template_button_click_44_listener","SucursalComponent_Template_button_click_46_listener","SucursalComponent_Template_button_click_49_listener","SucursalComponent_Template_button_click_51_listener","SucursalComponent_Template_button_click_53_listener","SucursalComponent_Template_button_click_56_listener","SucursalComponent_Template_button_click_58_listener","SucursalComponent_Template_button_click_60_listener","SucursalComponent_Template_div_click_62_listener","SucursalComponent_Template_div_click_63_listener","SucursalComponent_Template_button_click_69_listener","SucursalComponent_Template_button_click_81_listener","SucursalComponent_Template_button_click_83_listener","SucursalComponent_Template_button_click_85_listener","SucursalComponent_Template_button_click_88_listener","SucursalComponent_Template_button_click_90_listener","SucursalComponent_Template_button_click_92_listener","SucursalComponent_Template_button_click_95_listener","SucursalComponent_Template_button_click_97_listener","SucursalComponent_Template_button_click_99_listener","SucursalComponent_Template_button_click_102_listener","SucursalComponent_Template_button_click_104_listener","SucursalComponent_Template_button_click_106_listener","SucursalComponent_Template_div_click_108_listener","SucursalComponent_Template_div_click_109_listener","SucursalComponent_Template_button_click_115_listener","SucursalComponent_Template_button_click_126_listener","SucursalComponent_Template_button_click_129_listener","UserManagementComponent_table_12_tr_16_Template_button_click_15_listener","user_r2","ctx_r2","openEditUserModal","UserManagementComponent_table_12_tr_16_Template_button_click_17_listener","UserManagementComponent_table_12_tr_16_Template_button_click_19_listener","getRoleLabel","getStatusClass","getStatusLabel","ɵɵpipeBind2","created_at","UserManagementComponent_table_12_tr_16_Template","trackByUserId","UserManagementComponent_div_14_Template_button_click_6_listener","UserManagementComponent_div_15_div_17_Template_input_ngModelChange_3_listener","_r6","userForm","isEditMode","sucursal_r8","UserManagementComponent_div_15_div_26_Template_input_ngModelChange_3_listener","UserManagementComponent_div_15_div_26_option_5_Template","sucursalesSugeridas","UserManagementComponent_div_15_Template_div_click_0_listener","UserManagementComponent_div_15_Template_div_click_1_listener","UserManagementComponent_div_15_Template_button_click_5_listener","UserManagementComponent_div_15_Template_input_ngModelChange_12_listener","UserManagementComponent_div_15_Template_input_ngModelChange_16_listener","UserManagementComponent_div_15_div_17_Template","UserManagementComponent_div_15_Template_select_ngModelChange_21_listener","UserManagementComponent_div_15_div_26_Template","UserManagementComponent_div_15_Template_input_ngModelChange_29_listener","UserManagementComponent_div_15_Template_button_click_33_listener","UserManagementComponent_div_15_Template_button_click_35_listener","UserManagementComponent_div_15_i_36_Template","selectedUser","getAllUsers","resetForm","goToMainMenu","validateForm","trim","deleteExistingUser","newStatus","action","charAt","UserManagementComponent_Template","UserManagementComponent_Template_button_click_3_listener","UserManagementComponent_Template_button_click_8_listener","UserManagementComponent_table_12_Template","UserManagementComponent_div_13_Template","UserManagementComponent_div_14_Template","UserManagementComponent_div_15_Template","tap","timeout","catchError","of","pipe","isAdmin","ɵɵinject","factory","ɵfac","providedIn","isAuthenticated","Swal","loadingInstance","title","text","fire","icon","confirmButtonText","confirmButtonColor","cancelButtonText","result","showCancelButton","cancelButtonColor","isConfirmed","allowOutsideClick","allowEscapeKey","showConfirmButton","didOpen","close","jsPDF","autoTable","pdf","orientation","unit","format","y","lineHeight","setFontSize","align","line","pdfData","output","printWindow","window","open","onload","focus","print","printError","checkClosed","closed","revokeObjectURL","printFrame","display","src","contentWindow","generateTestReceipt","testSale","testDetails","yPos","sorteoSummary","calculateSorteoSummary","totalGeneral","save","doc","setFillColor","rect","setTextColor","setFont","setDrawColor","fechaTexto","sucursalTotals","fillColor","tableData","numerosText","fechaHoraStr","startY","head","theme","headStyles","textColor","fontSize","fontStyle","halign","bodyStyles","cellPadding","columnStyles","cellWidth","alternateRowStyles","margin","left","right","didDrawPage","pageNumber","fileName","currentHour","currentMinute","currentTimeInMinutes","closeHour","closeMinute","Number","closeTimeInMinutes","getNextSorteo","diff","hoursLeft","timeLeft","getAllSorteos","createClient","environment","BehaviorSubject","Subject","parseISO","toZonedTime","fromZonedTime","formatInTimeZone","es","currentUserSubject","asObservable","HONDURAS_TIMEZONE","supabase","key","initializeSession","auth","onAuthStateChange","_ref","session","userMetadata","user_metadata","rawMetadata","raw_user_meta_data","metaSucursal","metaRole","userData","getSucursalFromEmail","next","getSession","loadUserDataInBackground","uid","queryPromise","from","select","eq","single","updatedUser","signInWithPassword","signOut","testConnection","limit","getUserData","authUser","authError","getUser","defaultUserData","dbError","today","gte","lte","order","ascending","nextCorrelativo","utcTime","hondurasToUtc","saleData","user_id","numero_recibo","insert","undefined","numeroString","detailData","sale_id","startOfDayHonduras","endOfDayHonduras","startOfDayUtc","endOfDayUtc","query","mappedSales","parseDateFromDatabase","numeroGanadorString","upsert","getSorteo","firstRecord","rpc","sorteo_id","insertNewSorteo","hondurasDateTime","updateSorteoWinner","existingData","selectError","update","createSorteo","updateSorteoWinnerDirect","updateSorteoWinnerSimple","calculateSorteoWinnings","sorteoError","salesError","lt","sale_details","updateError","tablesData","tablesError","todayData","todayError","threeDaysAgo","recentData","recentError","sessionError","simpleQuery","simpleError","insertTest","insertError","delete","getDefaultUsers","createProfilesFromAuthUsers","authUsers","profilesData","onConflict","getSorteoSchedules","createSorteoSchedule","updateSorteoSchedule","updates","_this27","deleteSorteoSchedule","_this28","initializeSorteoSchedules","_this29","defaultSorteos","_this30","targetDate","locale","utcToHonduras","utcDate","isoString","_this31","admin","listUsers","getDefaultUsersForManagement","_this32","authData","email_confirm","_this33","updateData","ban_duration","updateUserById","_this34","_this35","fetchError","getUserById","currentActive","_this36","sendPasswordReset","_this37","resetPasswordForEmail","location","origin","_this38","warn","usersData","usersError","sucursalesMap","Map","email_confirmed_at","has","set","usuario","Array","factor_default","_this39","p_sorteo_id","p_numero_ganador","p_factores_json","_this40","getSorteosPorSucursal","_this41","getResumenConsolidadoSorteo","_this42","sorteosPorSucursal","detallesPorSucursal","every","vendido","pagado","ganancia","_this43","detalle","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}