{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/login/login.component.ts","./src/app/components/resumen-sorteos/resumen-sorteos.component.ts","./src/app/components/resumen-sorteos/resumen-sorteos.component.html","./src/app/components/sucursal/sucursal.component.ts","./src/app/components/sucursal/sucursal.component.html","./src/app/components/user-management/user-management.component.ts","./src/app/components/user-management/user-management.component.html","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/models/interfaces.ts","./src/app/services/export.service.ts","./src/app/services/notification.service.ts","./src/app/services/print.service.ts","./src/app/services/sorteo.service.ts","./src/app/services/supabase.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SupabaseService } from './services/supabase.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"app-container\">\n      <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: [`\n    .app-container {\n      min-height: 100vh;\n      background-color: #f5f5f5;\n    }\n  `]\n})\nexport class AppComponent implements OnInit {\n  \n  constructor(\n    private supabaseService: SupabaseService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // Verificar estado de autenticación al iniciar\n    this.supabaseService.currentUser$.subscribe(user => {\n      if (!user && !this.router.url.includes('login')) {\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SucursalComponent } from './components/sucursal/sucursal.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { UserManagementComponent } from './components/user-management/user-management.component';\nimport { ResumenSorteosComponent } from './components/resumen-sorteos/resumen-sorteos.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminGuard } from './guards/admin.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'sucursal', component: SucursalComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard, AdminGuard] },\n  { path: 'admin/users', component: UserManagementComponent, canActivate: [AuthGuard, AdminGuard] },\n  { path: '**', redirectTo: '/login' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SucursalComponent,\n    AdminComponent,\n    UserManagementComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    ResumenSorteosComponent\n  ],\n  providers: [ AuthGuard, AdminGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { startOfDay, endOfDay } from 'date-fns';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { ExportService, ReportData } from '../../services/export.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail, Sorteo, SORTEO_SCHEDULES, SucursalFactor } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  currentUser: any = null;\r\n  sorteos = SORTEO_SCHEDULES; // Usar directamente las interfaces en lugar de base de datos\r\n  sales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  sorteosData: { [key: string]: Sorteo } = {};\r\n  winningNumbers: { [key: string]: string } = {};\r\n  factorMultiplicador: { [key: string]: number } = {};\r\n  selectedSorteoFilter: string = '';\r\n  isLoading: boolean = false;\r\n  isLoadingFilters: boolean = false; // Loading específico para filtros\r\n  selectedDate: string = '';\r\n  \r\n\r\n  // Nuevas propiedades para las mejoras\r\n  fechaDesde: string = '';\r\n  fechaHasta: string = '';\r\n  users: any[] = [];\r\n  showUserModal: boolean = false;\r\n  editingUser: any = null;\r\n  userFormData: any = {\r\n    email: '',\r\n    password: '',\r\n    role: 'sucursal',\r\n    sucursal: '',\r\n    active: true\r\n  };\r\n\r\n  // Propiedades para modal de detalles de venta\r\n  showSaleDetailModal: boolean = false;\r\n  selectedSaleForDetail: Sale | null = null;\r\n  selectedSaleDetails: SaleDetail[] = [];\r\n\r\n  // Propiedades para gestión de sorteos\r\n  showSorteoModal: boolean = false;\r\n  editingSorteo: any = null;\r\n   \r\n   sorteoSchedules: SorteoSchedule[] = [...SORTEO_SCHEDULES];\r\n\r\n  // Propiedades para cambio de contraseña\r\n  showPasswordModal: boolean = false;\r\n  selectedUserForPassword: any = null;\r\n  newPassword: string = '';\r\n  confirmPassword: string = '';\r\n\r\n  // Propiedades para acordeón\r\n  showSorteosSection: boolean = false;\r\n  showUsersSection: boolean = false;\r\n\r\n  // Propiedades para modal de factores por sucursal\r\n  showFactorsModal: boolean = false;\r\n  sucursalesFactores: SucursalFactor[] = [];\r\n  factoresPorSucursal: { [sucursal: string]: number } = {};\r\n  currentSorteoForFactors: { sorteo: SorteoSchedule, winningNumber: string } | null = null;\r\n\r\n  // Propiedades optimizadas para caché de datos\r\n  private cachedDashboardData: any = null;\r\n  private cachedNumbersData: any = null;\r\n  private lastDataFetch: Date | null = null;\r\n  private cacheValidTime = 30000; // 30 segundos de caché\r\n\r\n  // Propiedades para resumen de cierre por sucursales\r\n  showResumenModal: boolean = false;\r\n  resumenSucursales: any[] = [];\r\n  currentSorteoForResumen: string = '';\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private exportService: ExportService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    // Inicializar fechas usando timezone de Honduras para filtros\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    this.selectedDate = this.supabaseService.formatDateTimeLocalHonduras(hondurasToday).split('T')[0];\r\n    \r\n    \r\n    // FORZAR CIERRE DE TODOS LOS MODALES AL INICIALIZAR\r\n    this.showSaleDetailModal = false;\r\n    this.showUserModal = false;\r\n    this.showPasswordModal = false;\r\n    this.showFactorsModal = false;\r\n    this.showResumenModal = false;\r\n    \r\n    // Recuperar filtros de localStorage o usar valores por defecto\r\n    this.loadFilterState();\r\n    \r\n    // Si no hay filtros guardados, usar fecha de Honduras para inicializar\r\n    if (!this.fechaDesde || !this.fechaHasta) {\r\n      const fechaInicio = this.supabaseService.getStartOfDayHonduras(hondurasToday);\r\n      const fechaFin = this.supabaseService.getEndOfDayHonduras(hondurasToday);\r\n      \r\n      this.fechaDesde = this.supabaseService.formatDateTimeLocalHonduras(fechaInicio);\r\n      this.fechaHasta = this.supabaseService.formatDateTimeLocalHonduras(fechaFin);\r\n    }\r\n    \r\n  }\r\n\r\n  // Método para cargar estado de filtros desde localStorage\r\n  private loadFilterState(): void {\r\n    try {\r\n      const savedFilters = localStorage.getItem('admin-filters');\r\n      if (savedFilters) {\r\n        const filters = JSON.parse(savedFilters);\r\n        this.fechaDesde = filters.fechaDesde || '';\r\n        this.fechaHasta = filters.fechaHasta || '';\r\n        this.selectedSorteoFilter = filters.selectedSorteoFilter || '';\r\n        this.selectedDate = filters.selectedDate || '';\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para guardar estado de filtros en localStorage\r\n  private saveFilterState(): void {\r\n    try {\r\n      const filters = {\r\n        fechaDesde: this.fechaDesde,\r\n        fechaHasta: this.fechaHasta,\r\n        selectedSorteoFilter: this.selectedSorteoFilter,\r\n        selectedDate: this.selectedDate\r\n      };\r\n      localStorage.setItem('admin-filters', JSON.stringify(filters));\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'admin') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    // Cargar datos iniciales\r\n    this.loadSales();\r\n    this.loadSorteosData(); // Cargar datos de sorteos existentes\r\n    this.initializeUsers();\r\n    this.loadSorteoSchedules(); // Ya no es async\r\n  }\r\n\r\n  async initializeUsers(): Promise<void> {\r\n    try {\r\n      // Inicializar la tabla de perfiles\r\n      await this.supabaseService.initializeProfilesTable();\r\n      // Cargar usuarios\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      // Si falla, mostramos usuarios por defecto para que funcione la interfaz\r\n      this.users = [\r\n        {\r\n          id: '1',\r\n          email: 'admin@loteria.com',\r\n          role: 'admin',\r\n          sucursal: '',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '2',\r\n          email: 'sucursal1@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 1',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '3',\r\n          email: 'sucursal2@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 2',\r\n          active: false,\r\n          createdAt: new Date()\r\n        }\r\n      ];\r\n      this.notificationService.showError('No se pudieron cargar usuarios de la base de datos. Mostrando datos de ejemplo.');\r\n    }\r\n  }\r\n\r\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\r\n    const now = this.supabaseService.getHondurasDateTime();\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const closeTime = new Date(now);\r\n    closeTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    \r\n    return now <= closeTime;\r\n  }\r\n\r\n  getSorteoData(sorteo: SorteoSchedule): Sorteo | undefined {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    const todayString = this.supabaseService.formatDateOnlyForSupabase(hondurasToday);\r\n    const sorteoId = `${todayString}-${sorteo.name}`;\r\n    \r\n    \r\n    // SOLO retornar datos reales de la BD, NO crear objetos temporales\r\n    return this.sorteosData[sorteoId];\r\n  }\r\n\r\n  // Método para verificar si el sorteo está cerrado basado en datos guardados en BD\r\n  isSorteoCerrado(sorteo: SorteoSchedule): boolean {\r\n    const sorteoData = this.getSorteoData(sorteo);\r\n    // Solo considerar cerrado si está marcado como cerrado en BD O si tiene numeroGanador en BD\r\n    return !!(sorteoData?.cerrado || sorteoData?.numeroGanador);\r\n  }\r\n\r\n  // Método para verificar si hay un número ganador guardado (no temporal)\r\n  hasSavedWinner(sorteo: SorteoSchedule): boolean {\r\n    const sorteoData = this.getSorteoData(sorteo);\r\n    // Solo considerar guardado si hay datos REALES de BD con número ganador\r\n    return !!(sorteoData?.numeroGanador);\r\n  }\r\n\r\n  // Método para verificar si hay datos temporales en el formulario\r\n  hasTemporaryWinnerData(sorteo: SorteoSchedule): boolean {\r\n    return !!(this.winningNumbers[sorteo.name] && !this.hasSavedWinner(sorteo));\r\n  }\r\n\r\n  // Método para cargar un sorteo específico por ID y actualizar la UI\r\n  async loadSorteoById(sorteoId: string): Promise<void> {\r\n    try {\r\n      \r\n      const sorteo = await this.supabaseService.getSorteoById(sorteoId);\r\n      \r\n      if (sorteo) {\r\n        // Actualizar en sorteosData\r\n        this.sorteosData[sorteoId] = sorteo;\r\n        \r\n        // También actualizar el número ganador local si está disponible\r\n        const sorteoName = sorteo.sorteo;\r\n        if (sorteo.numeroGanador) {\r\n          this.winningNumbers[sorteoName] = sorteo.numeroGanador;\r\n        }\r\n        \r\n        // Forzar actualización de la vista\r\n        this.cdr.detectChanges();\r\n      } else {\r\n      }\r\n    } catch (error: any) {\r\n      \r\n      // Si es error de RLS, intentar método alternativo\r\n      if (error?.isRLSError || error?.code === '42501') {\r\n        try {\r\n          const simpleData = await this.supabaseService.getSorteoByIdSimple(sorteoId);\r\n          if (simpleData && simpleData.length > 0) {\r\n            const data = simpleData[0];\r\n            \r\n            // Crear objeto Sorteo desde datos simples\r\n            const sorteo: Sorteo = {\r\n              id: sorteoId,\r\n              fecha: data.fecha ? new Date(data.fecha) : new Date(),\r\n              sorteo: data.sorteo || sorteoId.split('-')[1],\r\n              horaCierre: data.hora_cierre ? new Date(data.hora_cierre) : new Date(),\r\n              numeroGanador: data.numero_ganador || '',\r\n              factorMultiplicador: data.factor_multiplicador || 0,\r\n              totalVendido: data.total_vendido || 0,\r\n              totalPagado: data.total_pagado || 0,\r\n              gananciaNeta: data.ganancia_neta || 0,\r\n              cerrado: data.cerrado || false\r\n            };\r\n            \r\n            // Actualizar en sorteosData\r\n            this.sorteosData[sorteoId] = sorteo;\r\n            \r\n            // Actualizar número ganador local\r\n            if (sorteo.numeroGanador) {\r\n              this.winningNumbers[sorteo.sorteo] = sorteo.numeroGanador;\r\n            }\r\n            \r\n            this.cdr.detectChanges();\r\n          }\r\n        } catch (fallbackError) {\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Método para refrescar todos los sorteos del día actual\r\n  async refreshTodaysSorteos(): Promise<void> {\r\n    try {\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      const todayString = this.supabaseService.formatDateOnlyForSupabase(hondurasToday);\r\n      \r\n      for (const sorteo of this.sorteoSchedules) {\r\n        const sorteoId = `${todayString}-${sorteo.name}`;\r\n        await this.loadSorteoById(sorteoId);\r\n      }\r\n      \r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  async loadSales(): Promise<void> {\r\n    try {\r\n      // No cambiar isLoading aquí si ya estamos en modo filtros\r\n      if (!this.isLoadingFilters) {\r\n        this.isLoading = true;\r\n      }\r\n\r\n      // Limpiar caché cuando se cargan nuevos datos\r\n      this.clearCache();\r\n      \r\n      // Si hay filtros de rango de fechas, usar el método de rango optimizado\r\n      if (this.fechaDesde && this.fechaHasta) {\r\n        await this.loadSalesByDateRangeOptimized();\r\n        return;\r\n      }\r\n      \r\n      // Determinar fecha para consulta individual\r\n      let fechaParaConsulta: Date;\r\n      \r\n      if (this.selectedDate) {\r\n        // Si hay fecha seleccionada, usar esa fecha\r\n        fechaParaConsulta = new Date(this.selectedDate);\r\n      } else {\r\n        // Por defecto, usar hoy\r\n        fechaParaConsulta = this.supabaseService.getHondurasDateTime();\r\n      }\r\n      \r\n      console.log('Cargando ventas optimizadas para fecha:', fechaParaConsulta);\r\n      \r\n      // Usar método optimizado para una sola fecha\r\n      const optimizedData = await this.supabaseService.getDailyOptimizedData(\r\n        fechaParaConsulta,\r\n        this.selectedSorteoFilter\r\n      );\r\n      \r\n      // Asignar datos\r\n      this.sales = optimizedData.sales;\r\n      this.saleDetails = optimizedData.saleDetails;\r\n      this.cachedDashboardData = optimizedData.dashboardData;\r\n      this.lastDataFetch = new Date();\r\n      \r\n      console.log('Datos optimizados cargados:', {\r\n        ventas: this.sales.length,\r\n        totalVendido: optimizedData.dashboardData.totalVendido\r\n      });\r\n      \r\n      // Forzar detección de cambios\r\n      this.cdr.detectChanges();\r\n      \r\n    } catch (error) {\r\n      console.error('Error al cargar ventas optimizadas:', error);\r\n      this.sales = [];\r\n      this.saleDetails = {};\r\n      this.clearCache();\r\n      this.notificationService.showError('Error al cargar las ventas');\r\n    } finally {\r\n      // Solo cambiar isLoading si no estamos en modo filtros\r\n      if (!this.isLoadingFilters) {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Método optimizado para rangos de fechas\r\n  async loadSalesByDateRangeOptimized(): Promise<void> {\r\n    if (!this.fechaDesde || !this.fechaHasta) {\r\n      await this.loadSingleDateSales();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Cargando rango de fechas optimizado:', this.fechaDesde, 'hasta', this.fechaHasta);\r\n      \r\n      // Convertir strings de datetime-local a fechas\r\n      const fechaDesdeUtc = this.supabaseService.parseLocalDateTimeToUtc(this.fechaDesde);\r\n      const fechaHastaUtc = this.supabaseService.parseLocalDateTimeToUtc(this.fechaHasta);\r\n      \r\n      // Validar fechas\r\n      if (fechaDesdeUtc > fechaHastaUtc) {\r\n        this.notificationService.showError('La fecha desde no puede ser mayor que la fecha hasta');\r\n        this.sales = [];\r\n        this.saleDetails = {};\r\n        return;\r\n      }\r\n\r\n      // Usar método optimizado del servicio\r\n      const optimizedData = await this.supabaseService.getSalesWithDetailsOptimized(\r\n        fechaDesdeUtc,\r\n        fechaHastaUtc,\r\n        this.selectedSorteoFilter\r\n      );\r\n\r\n      // Asignar datos\r\n      this.sales = optimizedData.sales;\r\n      this.saleDetails = optimizedData.saleDetails;\r\n      \r\n      // Obtener datos del dashboard para el rango\r\n      const dashboardData = await this.supabaseService.getAdminDashboardData(\r\n        fechaDesdeUtc,\r\n        fechaHastaUtc,\r\n        this.selectedSorteoFilter\r\n      );\r\n      \r\n      this.cachedDashboardData = dashboardData;\r\n      this.cachedNumbersData = dashboardData.numerosPorSorteo;\r\n      this.lastDataFetch = new Date();\r\n      \r\n      console.log('Datos de rango optimizados cargados:', {\r\n        ventas: this.sales.length,\r\n        totalVendido: dashboardData.totalVendido\r\n      });\r\n      \r\n      // Forzar detección de cambios\r\n      this.cdr.detectChanges();\r\n      \r\n    } catch (error) {\r\n      console.error('Error al cargar rango optimizado:', error);\r\n      this.notificationService.showError('Error al cargar las ventas: ' + error);\r\n      this.sales = [];\r\n      this.saleDetails = {};\r\n      this.clearCache();\r\n    }\r\n  }\r\n\r\n  // Método para limpiar caché\r\n  private clearCache(): void {\r\n    this.cachedDashboardData = null;\r\n    this.cachedNumbersData = null;\r\n    this.lastDataFetch = null;\r\n  }\r\n\r\n  // Verificar si el caché es válido\r\n  private isCacheValid(): boolean {\r\n    if (!this.lastDataFetch || !this.cachedDashboardData) {\r\n      return false;\r\n    }\r\n    return (new Date().getTime() - this.lastDataFetch.getTime()) < this.cacheValidTime;\r\n  }\r\n\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async setWinningNumber(sorteo: SorteoSchedule): Promise<void> {\r\n    const winningNumber = this.winningNumbers[sorteo.name];\r\n    \r\n    if (!winningNumber) {\r\n      this.notificationService.showError('Por favor ingrese un número ganador');\r\n      return;\r\n    }\r\n\r\n    // Verificar autenticación\r\n    if (!this.currentUser) {\r\n      this.notificationService.showError('Usuario no autenticado. Por favor inicie sesión nuevamente.');\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n\r\n    // Abrir modal para configurar factores por sucursal\r\n    await this.openFactorsModal(sorteo, winningNumber);\r\n  }\r\n\r\n  private async calculateSorteoResults(sorteo: SorteoSchedule, winningNumber: string, multiplicador: number = 70): Promise<void> {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    \r\n    const sorteoSales = await this.supabaseService.getSalesByDateAndSorteo(hondurasToday, sorteo.name);\r\n    \r\n    let totalVendido = 0;\r\n    let totalPagado = 0;\r\n    \r\n    for (const sale of sorteoSales) {\r\n      totalVendido += sale.total;\r\n      \r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n      for (const detail of details) {\r\n        if (detail.numero.toString() === winningNumber) {\r\n          totalPagado += detail.monto * multiplicador;\r\n        }\r\n      }\r\n    }\r\n    \r\n    const gananciaNeta = totalVendido - totalPagado;\r\n    \r\n    // Actualizar o crear sorteo\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const horaCierre = new Date();\r\n    horaCierre.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    await this.supabaseService.createOrUpdateSorteo({\r\n      fecha: hondurasToday,\r\n      sorteo: sorteo.name,\r\n      horaCierre,\r\n      numeroGanador: winningNumber,\r\n      factorMultiplicador: multiplicador,\r\n      totalVendido,\r\n      totalPagado,\r\n      gananciaNeta,\r\n      cerrado: true\r\n    });\r\n  }\r\n\r\n  // Método para recargar datos de sorteos desde la base de datos\r\n  private async loadSorteosData(): Promise<void> {\r\n    try {\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      \r\n      // Limpiar datos actuales\r\n      this.sorteosData = {};\r\n      \r\n      // Cargar datos de sorteos para cada tipo\r\n      for (const sorteo of this.sorteos) {\r\n        try {\r\n          const sorteoId = `${this.supabaseService.formatDateOnlyForSupabase(hondurasToday)}-${sorteo.name}`;\r\n          const sorteoData = await this.supabaseService.getSorteoById(sorteoId);\r\n          \r\n          if (sorteoData) {\r\n            this.sorteosData[sorteoId] = sorteoData; // Usar sorteoId como clave\r\n            \r\n            // Sincronizar con variables locales\r\n            this.winningNumbers[sorteo.name] = sorteoData.numeroGanador || '';\r\n            this.factorMultiplicador[sorteo.name] = sorteoData.factorMultiplicador || 70;\r\n          }\r\n        } catch (error: any) {\r\n          \r\n          // Si es error 406 o RLS, intentar método alternativo\r\n          if (error?.status === 406 || error?.code === '42501') {\r\n            // Aquí podrías implementar un método alternativo si tienes uno\r\n          }\r\n        }\r\n      }\r\n      \r\n      \r\n      // Forzar actualización de la UI\r\n      this.cdr.detectChanges();\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para actualizar la UI específicamente después de establecer ganador\r\n  private async updateSorteoUI(sorteoName: string, winningNumber: string, multiplicador: number): Promise<void> {\r\n  try {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    const sorteoId = `${this.supabaseService.formatDateOnlyForSupabase(hondurasToday)}-${sorteoName}`;\r\n\r\n    // Actualizar datos locales inmediatamente\r\n    this.winningNumbers[sorteoName] = winningNumber;\r\n    this.factorMultiplicador[sorteoName] = multiplicador;\r\n\r\n    // Intentar cargar datos actualizados desde la base de datos\r\n    await this.loadSorteoById(sorteoId);\r\n\r\n    // Si el sorteo aún no aparece en sorteosData, crear un objeto temporal\r\n    if (!this.sorteosData[sorteoId]) {\r\n      this.sorteosData[sorteoId] = {\r\n        id: sorteoId,\r\n        fecha: hondurasToday,\r\n        sorteo: sorteoName,\r\n        horaCierre: hondurasToday,\r\n        numeroGanador: winningNumber,\r\n        factorMultiplicador: multiplicador,\r\n        totalVendido: 0,\r\n        totalPagado: 0,\r\n        gananciaNeta: 0,\r\n        cerrado: true\r\n      } as Sorteo;\r\n    }\r\n\r\n    // Forzar detección de cambios para actualizar la UI\r\n    this.cdr.detectChanges();\r\n\r\n    // Después de un breve delay, intentar refrescar nuevamente para asegurar datos actualizados\r\n    setTimeout(async () => {\r\n      await this.loadSorteoById(sorteoId);\r\n    }, 2000);\r\n\r\n  } catch (error) {\r\n    // En caso de error, asegurar que los datos locales estén actualizados\r\n    this.winningNumbers[sorteoName] = winningNumber;\r\n    this.factorMultiplicador[sorteoName] = multiplicador;\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n\r\n\r\n  getTotalSales(): number {\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getSucursalSummary(): { name: string, total: number, count: number }[] {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n    \r\n    for (const sale of this.sales) {\r\n      if (!summary[sale.sucursal]) {\r\n        summary[sale.sucursal] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sucursal].total += sale.total;\r\n      summary[sale.sucursal].count += 1;\r\n    }\r\n    \r\n    return Object.entries(summary).map(([name, data]) => ({ \r\n      name, \r\n      total: data.total, \r\n      count: data.count \r\n    }));\r\n  }\r\n  \r\n\r\n  // Métodos para cards de resumen\r\n  getTotalVendido(): number {\r\n    // Usar caché si está disponible y válido\r\n    if (this.isCacheValid() && this.cachedDashboardData) {\r\n      return this.cachedDashboardData.totalVendido;\r\n    }\r\n    \r\n    // Fallback al cálculo tradicional si no hay caché\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getTotalPagado(): number {\r\n    // Usar caché si está disponible y válido\r\n    if (this.isCacheValid() && this.cachedDashboardData) {\r\n      return this.cachedDashboardData.totalPagado;\r\n    }\r\n    \r\n    // Fallback al cálculo tradicional si no hay caché\r\n    let totalPagado = 0;\r\n    \r\n    // Calcular total pagado basándose en sorteos cerrados y números ganadores\r\n    for (const sale of this.sales) {\r\n      const sorteoSchedule = this.sorteos.find(s => s.name === sale.sorteo);\r\n      if (sorteoSchedule) {\r\n        const sorteoData = this.getSorteoData(sorteoSchedule);\r\n        if (sorteoData && sorteoData.cerrado && sorteoData.numeroGanador) {\r\n          const saleDetails = this.getSaleDetails(sale.id);\r\n          for (const detail of saleDetails) {\r\n            if (detail.numero.toString() === sorteoData.numeroGanador.toString()) {\r\n              const factor = sorteoData.factorMultiplicador || 70;\r\n              totalPagado += detail.monto * factor;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return totalPagado;\r\n  }\r\n\r\n  getGananciaNeta(): number {\r\n    return this.getTotalVendido() - this.getTotalPagado();\r\n  }\r\n\r\n  getTotalVentas(): number {\r\n    return this.sales.length;\r\n  }\r\n\r\n  // Métodos para filtros de fecha\r\n  async aplicarFiltros(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n      \r\n      // Validar que las fechas sean válidas\r\n      if (this.fechaDesde && this.fechaHasta) {\r\n        const fechaDesde = new Date(this.fechaDesde);\r\n        const fechaHasta = new Date(this.fechaHasta);\r\n        \r\n        if (fechaDesde > fechaHasta) {\r\n          this.notificationService.showError('La fecha desde no puede ser mayor que la fecha hasta');\r\n          this.isLoadingFilters = false;\r\n          return;\r\n        }\r\n        \r\n      }\r\n      \r\n      // Guardar estado de filtros\r\n      this.saveFilterState();\r\n      \r\n      // Recargar ventas\r\n      await this.loadSales();\r\n      \r\n    } catch (error) {\r\n      this.notificationService.showError('Error al aplicar filtros');\r\n    } finally {\r\n      // Asegurar que el loading se quite con un pequeño delay\r\n      setTimeout(() => {\r\n        this.isLoadingFilters = false;\r\n        this.cdr.detectChanges();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async limpiarFiltros(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      \r\n      // Reinicializar fechas usando zona horaria de Honduras\r\n      const fechaInicio = this.supabaseService.getStartOfDayHonduras(hondurasToday);\r\n      const fechaFin = this.supabaseService.getEndOfDayHonduras(hondurasToday);\r\n      \r\n      this.fechaDesde = this.supabaseService.formatDateTimeLocalHonduras(fechaInicio);\r\n      this.fechaHasta = this.supabaseService.formatDateTimeLocalHonduras(fechaFin);\r\n      this.selectedDate = this.supabaseService.formatDateTimeLocalHonduras(hondurasToday).split('T')[0];\r\n      this.selectedSorteoFilter = '';\r\n      \r\n      \r\n      // Guardar estado limpio\r\n      this.saveFilterState();\r\n      \r\n      await this.loadSales();\r\n      \r\n    } catch (error) {\r\n      this.notificationService.showError('Error al limpiar filtros');\r\n    } finally {\r\n      // Asegurar que el loading se quite con un pequeño delay\r\n      setTimeout(() => {\r\n        this.isLoadingFilters = false;\r\n        this.cdr.detectChanges();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async onFiltroFechaChange(): Promise<void> {\r\n    \r\n    // Auto-aplicar filtros cuando cambian las fechas\r\n    await this.aplicarFiltros();\r\n  }\r\n\r\n  async onDateChange(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n      \r\n      // Guardar cambio de fecha y recargar\r\n      this.saveFilterState();\r\n      await this.loadSales();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar la fecha');\r\n    } finally {\r\n      this.isLoadingFilters = false;\r\n    }\r\n  }\r\n\r\n  async onSorteoFilterChange(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n      \r\n      // Guardar cambio de sorteo y recargar\r\n      this.saveFilterState();\r\n      await this.loadSales();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar el filtro de sorteo');\r\n    } finally {\r\n      this.isLoadingFilters = false;\r\n    }\r\n  }\r\n\r\n  // Método específico para cuando cambia fechaDesde\r\n  async onFechaDesdeChange(): Promise<void> {\r\n    await this.aplicarFiltros();\r\n  }\r\n\r\n  // Método específico para cuando cambia fechaHasta\r\n  async onFechaHastaChange(): Promise<void> {\r\n    await this.aplicarFiltros();\r\n  }\r\n\r\n  async loadSalesByDateRange(): Promise<void> {\r\n    if (!this.fechaDesde || !this.fechaHasta) {\r\n      await this.loadSingleDateSales();\r\n      return;\r\n    }\r\n\r\n    // No cambiar isLoading aquí si ya estamos en modo filtros\r\n    if (!this.isLoadingFilters) {\r\n      this.isLoading = true;\r\n    }\r\n    try {\r\n      \r\n      // Convertir strings de datetime-local a fechas UTC para la base de datos\r\n      const fechaDesdeUtc = this.supabaseService.parseLocalDateTimeToUtc(this.fechaDesde);\r\n      const fechaHastaUtc = this.supabaseService.parseLocalDateTimeToUtc(this.fechaHasta);\r\n      \r\n      // Validar que la fecha desde no sea mayor que la fecha hasta\r\n      if (fechaDesdeUtc > fechaHastaUtc) {\r\n        this.notificationService.showError('La fecha desde no puede ser mayor que la fecha hasta');\r\n        this.sales = [];\r\n        return;\r\n      }\r\n      \r\n      // Cargar ventas para cada día en el rango usando fechas en Honduras\r\n      let allSales: Sale[] = [];\r\n      let currentDate = new Date(fechaDesdeUtc);\r\n      let daysProcessed = 0;\r\n      const maxDays = 31; // Límite de seguridad\r\n      \r\n      while (currentDate <= fechaHastaUtc && daysProcessed < maxDays) {\r\n        \r\n        const daySales = await this.supabaseService.getSalesByDateAndSorteo(currentDate, this.selectedSorteoFilter);\r\n        \r\n        allSales = [...allSales, ...daySales];\r\n        \r\n        // Avanzar al siguiente día usando fecha UTC\r\n        currentDate = new Date(currentDate);\r\n        currentDate.setUTCDate(currentDate.getUTCDate() + 1);\r\n        daysProcessed++;\r\n      }\r\n\r\n      if (daysProcessed >= maxDays) {\r\n        this.notificationService.showInfo('Se procesaron los primeros 31 días del rango');\r\n      }\r\n\r\n      // Forzar actualización del array\r\n      this.sales = [...allSales];\r\n      \r\n      \r\n      // Cargar detalles de todas las ventas\r\n      for (const sale of this.sales) {\r\n        this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n      }\r\n      \r\n      // Forzar detección de cambios\r\n      this.cdr.detectChanges();\r\n      \r\n      \r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar las ventas: ' + error);\r\n      this.sales = [];\r\n    } finally {\r\n      // Solo cambiar isLoading si no estamos en modo filtros\r\n      if (!this.isLoadingFilters) {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Método auxiliar para cargar ventas de una sola fecha\r\n  private async loadSingleDateSales(): Promise<void> {\r\n    const fecha = this.selectedDate ? new Date(this.selectedDate) : this.supabaseService.getHondurasDateTime();\r\n    \r\n    this.sales = await this.supabaseService.getSalesByDateAndSorteo(fecha, this.selectedSorteoFilter);\r\n    this.sales = [...(this.sales || [])];\r\n    \r\n    for (const sale of this.sales) {\r\n      this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n    }\r\n    \r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  // Gestión de usuarios\r\n  async loadUsers(): Promise<void> {\r\n    try {\r\n      this.users = await this.supabaseService.getUsers();\r\n      \r\n      if (this.users.length === 0) {\r\n        this.notificationService.showInfo('No hay usuarios configurados. Use el botón Sincronizar para cargar usuarios desde Authentication.');\r\n      }\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar usuarios: ' + (error as any)?.message);\r\n      // Asegurar que users no sea undefined\r\n      this.users = [];\r\n    }\r\n  }\r\n\r\n  loadSorteoSchedules(): void {\r\n    this.sorteoSchedules = [...SORTEO_SCHEDULES];\r\n    \r\n    if (this.sorteoSchedules.length === 0) {\r\n      this.notificationService.showError('No se encontraron horarios de sorteos configurados');\r\n    } else {\r\n    }\r\n  }\r\n\r\n  closeUserModal(): void {\r\n    this.showUserModal = false;\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n  }\r\n\r\n  editUser(user: any): void {\r\n    this.editingUser = user;\r\n    this.userFormData = { ...user };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  async saveUser(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      \r\n      if (this.editingUser) {\r\n        // Actualizar usuario existente\r\n        await this.supabaseService.updateExistingUser(this.editingUser.id, {\r\n          email: this.userFormData.email,\r\n          role: this.userFormData.role,\r\n          sucursal: this.userFormData.sucursal,\r\n          active: this.userFormData.active\r\n        });\r\n        this.notificationService.showSuccess('Usuario actualizado exitosamente');\r\n      } else {\r\n        // Crear nuevo usuario\r\n        await this.supabaseService.createNewUser(this.userFormData);\r\n        this.notificationService.showSuccess('Usuario creado exitosamente');\r\n      }\r\n      \r\n      this.closeUserModal();\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al guardar el usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async toggleUserStatus(user: any): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      await this.supabaseService.toggleExistingUserStatus(user.id);\r\n      this.notificationService.showSuccess('Estado del usuario actualizado');\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar el estado del usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async deleteUser(userId: string): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Eliminar Usuario',\r\n      '¿Está seguro que desea eliminar este usuario?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      try {\r\n        this.isLoading = true;\r\n        // Implementar eliminación en SupabaseService\r\n        this.notificationService.showSuccess('Usuario eliminado exitosamente');\r\n        await this.loadUsers();\r\n      } catch (error) {\r\n        this.notificationService.showError('Error al eliminar el usuario');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  generateDailyReport(): void {\r\n    const reportDate = this.selectedDate ? new Date(this.selectedDate) : this.supabaseService.getHondurasDateTime();\r\n    this.printService.generateDailyReport(this.sales, reportDate);\r\n  }\r\n\r\n  // Método mejorado para reimprimir recibo desde admin\r\n  async reprintReceipt(sale: Sale): Promise<void> {\r\n    try {\r\n      \r\n      // Obtener detalles de la venta desde la base de datos\r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n      \r\n      if (details.length === 0) {\r\n        this.notificationService.showError('No se encontraron detalles para esta venta. No se puede reimprimir el recibo.');\r\n        return;\r\n      }\r\n      \r\n      // Generar recibo con los detalles obtenidos\r\n      this.printService.generateThermalReceipt(sale, details);\r\n      this.notificationService.showSuccess('Recibo enviado a impresión');\r\n      \r\n    } catch (error) {\r\n      this.notificationService.showError('Error al reimprimir el recibo. Por favor intente nuevamente.');\r\n    }\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    await this.supabaseService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  // Métodos para el nuevo diseño minimalista\r\n  formatDateTime(dateInput: string | Date): string {\r\n    const date = typeof dateInput === 'string' ? new Date(dateInput) : dateInput;\r\n    return date.toLocaleString('es-HN', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  }\r\n\r\n  // Método para formatear fecha para inputs datetime-local (DEPRECATED - usar supabaseService)\r\n  private formatDateTimeLocal(date: Date): string {\r\n    // Delegar al servicio de Supabase para consistencia\r\n    return this.supabaseService.formatDateTimeLocalHonduras(date);\r\n  }\r\n\r\n  // Método para formatear fecha para mostrar en la UI\r\n  formatDateForDisplay(date: Date | string): string {\r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    return this.supabaseService.formatHondurasDateTime(dateObj);\r\n  }\r\n\r\n  // Métodos faltantes para el template del admin\r\n  exportarVentas(): void {\r\n    // Método legacy - ahora llama a Excel por defecto\r\n    this.exportarVentasExcel();\r\n  }\r\n\r\n  exportarVentasExcel(): void {\r\n    this.generateVentasReportExcel();\r\n  }\r\n\r\n  exportarVentasPDF(): void {\r\n    this.generateVentasReportPDF();\r\n  }\r\n\r\n  trackBySale(index: number, sale: Sale): string {\r\n    return sale.id;\r\n  }\r\n\r\n  trackByUser(index: number, user: any): string {\r\n    return user.id;\r\n  }\r\n\r\n  trackBySorteo(index: number, sorteo: any): string {\r\n    return sorteo.id || index.toString();\r\n  }\r\n\r\n  trackBySaleDetail(index: number, detail: SaleDetail): string {\r\n    return detail.id;\r\n  }\r\n\r\n  verDetalles(sale: Sale): void {\r\n    \r\n    // Primero cerrar cualquier modal que pueda estar abierto\r\n    this.showSaleDetailModal = false;\r\n    \r\n    // Obtener detalles de la venta\r\n    const details = this.getSaleDetails(sale.id);\r\n    \r\n    // Configurar modal\r\n    this.selectedSaleForDetail = sale;\r\n    this.selectedSaleDetails = details;\r\n    this.showSaleDetailModal = true;\r\n    \r\n    // Forzar detección de cambios\r\n    this.cdr.detectChanges();\r\n    \r\n  }\r\n\r\n  // Método para cerrar el modal de detalles\r\n  closeSaleDetailModal(): void {\r\n    \r\n    this.showSaleDetailModal = false;\r\n    this.selectedSaleForDetail = null;\r\n    this.selectedSaleDetails = [];\r\n    \r\n    // Forzar detección de cambios\r\n    this.cdr.detectChanges();\r\n    \r\n  }\r\n\r\n  // Método para forzar el cierre del modal\r\n  forceCloseSaleDetailModal(): void {\r\n    this.showSaleDetailModal = false;\r\n    this.selectedSaleForDetail = null;\r\n    this.selectedSaleDetails = [];\r\n  }\r\n\r\n  // Método de emergencia para resetear completamente el modal\r\n  resetModal(): void {\r\n    \r\n    // Cerrar TODOS los modales\r\n    this.showSaleDetailModal = false;\r\n    this.showUserModal = false;\r\n    this.showPasswordModal = false;\r\n    \r\n    // Limpiar datos de modales\r\n    this.selectedSaleForDetail = null;\r\n    this.selectedSaleDetails = [];\r\n    \r\n    // Solo si hay elementos trabados, limpiar el DOM\r\n    setTimeout(() => {\r\n      // Eliminar backdrop de Bootstrap si existe\r\n      const backdrops = document.querySelectorAll('.modal-backdrop');\r\n      backdrops.forEach(el => {\r\n        if (el.parentNode) {\r\n          el.parentNode.removeChild(el);\r\n        }\r\n      });\r\n      \r\n      // Remover clases del body\r\n      document.body.classList.remove('modal-open');\r\n      \r\n    }, 100);\r\n  }\r\n\r\n  // Método para calcular total de números en el modal\r\n  getTotalNumeros(): number {\r\n    return this.selectedSaleDetails.reduce((total, detail) => total + detail.monto, 0);\r\n  }\r\n\r\n  createUser(): void {\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  // ========================\r\n  // CAMBIO DE CONTRASEÑA\r\n  // ========================\r\n\r\n  changePassword(user: any): void {\r\n    this.selectedUserForPassword = user;\r\n    this.newPassword = '';\r\n    this.confirmPassword = '';\r\n    this.showPasswordModal = true;\r\n  }\r\n\r\n  closePasswordModal(): void {\r\n    this.showPasswordModal = false;\r\n    this.selectedUserForPassword = null;\r\n    this.newPassword = '';\r\n    this.confirmPassword = '';\r\n  }\r\n\r\n  async changeUserPassword(): Promise<void> {\r\n    if (this.newPassword !== this.confirmPassword) {\r\n      this.notificationService.showError('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    if (this.newPassword.length < 6) {\r\n      this.notificationService.showError('La contraseña debe tener al menos 6 caracteres');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.isLoading = true;\r\n      // Implementar método en SupabaseService para cambiar contraseña\r\n      await this.supabaseService.updateUserPassword(this.selectedUserForPassword.id, this.newPassword);\r\n      this.notificationService.showSuccess('Contraseña actualizada exitosamente');\r\n      this.closePasswordModal();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar la contraseña');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas en Excel\r\n  generateVentasReportExcel(): void {\r\n    if (this.sales.length === 0) {\r\n      this.notificationService.showError('No hay ventas para exportar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Generar CSV\r\n      let csvContent = 'Fecha,Sucursal,Sorteo,Total,Recibo,Correlativo,Números\\n';\r\n      \r\n      for (const sale of this.sales) {\r\n        const details = this.getSaleDetails(sale.id);\r\n        const numeros = details.map(d => `${d.numero}x${d.monto}`).join(';');\r\n        csvContent += `\"${this.formatDateTime(sale.createdAt)}\",\"${sale.sucursal}\",\"${sale.sorteo}\",\"${sale.total}\",\"${sale.numeroRecibo || sale.id.slice(-6)}\",\"${sale.correlativo}\",\"${numeros}\"\\n`;\r\n      }\r\n\r\n      // Descargar archivo\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const link = document.createElement('a');\r\n      const url = URL.createObjectURL(blob);\r\n      link.setAttribute('href', url);\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      link.setAttribute('download', `ventas_excel_${this.supabaseService.formatDateOnlyForSupabase(hondurasToday)}.csv`);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      \r\n      this.notificationService.showSuccess('Reporte Excel exportado exitosamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al exportar el reporte Excel');\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas en PDF\r\n  generateVentasReportPDF(): void {\r\n    if (this.sales.length === 0) {\r\n      this.notificationService.showError('No hay ventas para exportar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Usar el servicio de impresión para generar PDF\r\n      this.printService.generateVentasReportPDF(this.sales, this.saleDetails, {\r\n        fechaDesde: this.fechaDesde,\r\n        fechaHasta: this.fechaHasta,\r\n        sorteoFilter: this.selectedSorteoFilter\r\n      });\r\n      \r\n      this.notificationService.showSuccess('Reporte PDF generado exitosamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al exportar el reporte PDF');\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas (legacy)\r\n  generateVentasReport(): void {\r\n    // Mantener método legacy, ahora llama a Excel\r\n    this.generateVentasReportExcel();\r\n  }\r\n\r\n  onFactorChange(sorteoName: string, event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    if (target && target.value) {\r\n      this.factorMultiplicador[sorteoName] = +target.value;\r\n    }\r\n  }\r\n  // ========================\r\n  // MÉTODOS DE DEBUG\r\n  // ========================\r\n\r\n  async debugSorteoSchedules(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n    //  await this.supabaseService.debugSorteoSchedules();\r\n      this.notificationService.showSuccess('Revisa la consola para ver los resultados del debug');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error ejecutando debug');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n   \r\n\r\n  // ===== MÉTODOS PARA ACORDEÓN =====\r\n  \r\n  toggleSorteosSection(): void {\r\n    this.showSorteosSection = !this.showSorteosSection;\r\n  }\r\n\r\n  toggleUsersSection(): void {\r\n    this.showUsersSection = !this.showUsersSection;\r\n  }\r\n\r\n  // ===== MÉTODOS PARA ABRIR MODALES =====\r\n  \r\n  openCreateUserModal(): void {\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  async syncUsersFromAuth(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      this.notificationService.showInfo('Sincronizando usuarios desde auth.users...');\r\n      \r\n      // Usar el nuevo método de sincronización\r\n      await this.supabaseService.syncUsersFromAuth();\r\n      \r\n      // Recargar la lista de usuarios\r\n      await this.loadUsers();\r\n      \r\n      this.notificationService.showSuccess('Usuarios sincronizados correctamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al sincronizar usuarios');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Navegar a la gestión de usuarios\r\n  navigateToUsers(): void {\r\n    this.router.navigate(['/admin/users']);\r\n  }\r\n\r\n  // ===== MÉTODOS PARA MODAL DE FACTORES POR SUCURSAL =====\r\n\r\n  async openFactorsModal(sorteoName: string, winningNumber: number): Promise<void>;\r\n  async openFactorsModal(sorteo: SorteoSchedule, winningNumber: string): Promise<void>;\r\n  async openFactorsModal(sorteoOrName: SorteoSchedule | string, winningNumber: string | number): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      \r\n      // Cargar usuarios activos por sucursal\r\n      this.sucursalesFactores = await this.supabaseService.getActiveUsersBySucursal();\r\n      \r\n      // Inicializar factores con valores por defecto\r\n      this.factoresPorSucursal = {};\r\n      for (const sucursal of this.sucursalesFactores) {\r\n        this.factoresPorSucursal[sucursal.sucursal] = sucursal.factor;\r\n      }\r\n      \r\n      // Manejar ambos tipos de parámetros\r\n      if (typeof sorteoOrName === 'string') {\r\n        // Llamada desde la interfaz del sorteo (solo nombre y número)\r\n        const sorteoSchedule = SORTEO_SCHEDULES.find(s => s.name === sorteoOrName);\r\n        if (sorteoSchedule) {\r\n          this.currentSorteoForFactors = { \r\n            sorteo: sorteoSchedule, \r\n            winningNumber: winningNumber.toString() \r\n          };\r\n        }\r\n      } else {\r\n        // Llamada desde setWinningNumber (objeto completo)\r\n        this.currentSorteoForFactors = { \r\n          sorteo: sorteoOrName, \r\n          winningNumber: winningNumber.toString() \r\n        };\r\n      }\r\n      \r\n      this.showFactorsModal = true;\r\n      \r\n    } catch (error) {\r\n      console.error('Error al cargar sucursales:', error);\r\n      this.notificationService.showError('Error al cargar configuración de sucursales');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  closeFactorsModal(): void {\r\n    this.showFactorsModal = false;\r\n    this.currentSorteoForFactors = null;\r\n    this.factoresPorSucursal = {};\r\n    this.sucursalesFactores = [];\r\n  }\r\n\r\n  closeResumenModal(): void {\r\n    this.showResumenModal = false;\r\n    this.resumenSucursales = [];\r\n    this.currentSorteoForResumen = '';\r\n  }\r\n\r\n  async confirmWinningNumberWithFactors(): Promise<void> {\r\n    if (!this.currentSorteoForFactors) {\r\n      this.notificationService.showError('No hay sorteo seleccionado');\r\n      return;\r\n    }\r\n\r\n    const { sorteo, winningNumber } = this.currentSorteoForFactors;\r\n\r\n    try {\r\n      this.isLoading = true;\r\n      \r\n      // Usar fecha de Honduras\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      const fechaStr = this.supabaseService.formatDateOnlyForSupabase(hondurasToday);\r\n      const sorteoId = `${fechaStr}-${sorteo.name}`;\r\n      \r\n      // Crear sorteos por sucursal con factores específicos\r\n      await this.supabaseService.crearSorteosPorSucursal(\r\n        sorteoId,\r\n        winningNumber,\r\n        this.factoresPorSucursal\r\n      );\r\n      \r\n      // Calcular totales por sucursal\r\n      await this.supabaseService.calcularTotalesSorteoPorSucursal(sorteoId);\r\n      \r\n      // Cerrar modal de factores\r\n      this.closeFactorsModal();\r\n      \r\n      // Obtener resumen de sucursales para mostrar\r\n      this.resumenSucursales = await this.supabaseService.getSorteoResumenPorSucursal(sorteoId);\r\n      this.currentSorteoForResumen = `${sorteo.label} - Número Ganador: ${winningNumber.padStart(2, '0')}`;\r\n      \r\n      // Mostrar modal de resumen\r\n      this.showResumenModal = true;\r\n      \r\n      // Recargar datos\r\n      await this.loadSales();\r\n      await this.loadSorteosData();\r\n      \r\n      // Notificar actualización de resúmenes\r\n      this.supabaseService.notifyResumenUpdate();\r\n      \r\n      // Actualizar UI\r\n      this.winningNumbers[sorteo.name] = winningNumber;\r\n      \r\n      this.notificationService.showSuccess(\r\n        `Número ganador ${winningNumber.padStart(2, '0')} establecido con factores específicos por sucursal para ${sorteo.name}`\r\n      );\r\n      \r\n    } catch (error) {\r\n      console.error('Error al establecer número ganador:', error);\r\n      this.notificationService.showError('Error al establecer el número ganador con factores por sucursal');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Obtener lista única de sucursales\r\n  getUniqueSucursales(): string[] {\r\n    return [...new Set(this.sucursalesFactores.map(s => s.sucursal))];\r\n  }\r\n\r\n  // Actualizar factor para una sucursal específica\r\n  updateFactorForSucursal(sucursal: string, factor: string | number): void {\r\n    this.factoresPorSucursal[sucursal] = typeof factor === 'string' ? parseFloat(factor) : factor;\r\n  }\r\n\r\n  // Métodos auxiliares para el template\r\n  getUsersBySucursal(sucursal: string): SucursalFactor[] {\r\n    return this.sucursalesFactores.filter(s => s.sucursal === sucursal);\r\n  }\r\n\r\n  hasSucursalUsers(sucursal: string): boolean {\r\n    return this.sucursalesFactores.filter(s => s.sucursal === sucursal).length > 0;\r\n  }\r\n\r\n  // Métodos para calcular totales en el resumen\r\n  getTotalVendidoGeneral(): string {\r\n    const total = this.getTotalVendido();\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getTotalPagadoGeneral(): string {\r\n    const total = this.getTotalPagado();\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getGananciaTotalGeneral(): number {\r\n    return this.getGananciaNeta();\r\n  }\r\n\r\n  // Método para calcular el total de la cantidad del número ganador\r\n  getTotalCantidadNumeroGanador(): number {\r\n    if (!this.resumenSucursales || this.resumenSucursales.length === 0) {\r\n      return 0;\r\n    }\r\n    \r\n    return this.resumenSucursales.reduce((total, sucursal) => {\r\n      return total + (sucursal.cantidad_numero_ganador || 0);\r\n    }, 0);\r\n  }\r\n\r\n  // Método para obtener resumen de ventas por número\r\n  getNumbersSummary(): Array<{numero: number, totalVendido: number, cantidadVentas: number, porcentaje: number}> {\r\n    // Usar caché si está disponible y válido\r\n    if (this.isCacheValid() && this.cachedNumbersData) {\r\n      const totalGeneral = this.cachedNumbersData.get('total') || 0;\r\n      const result: Array<{numero: number, totalVendido: number, cantidadVentas: number, porcentaje: number}> = [];\r\n      \r\n      this.cachedNumbersData.forEach((value: any, key: string) => {\r\n        if (key !== 'total' && typeof value === 'object' && value.totalVendido !== undefined) {\r\n          result.push({\r\n            numero: parseInt(key),\r\n            totalVendido: value.totalVendido,\r\n            cantidadVentas: value.cantidadVentas,\r\n            porcentaje: totalGeneral > 0 ? (value.totalVendido / totalGeneral) * 100 : 0\r\n          });\r\n        }\r\n      });\r\n      \r\n      return result.sort((a, b) => b.totalVendido - a.totalVendido);\r\n    }\r\n    \r\n    // Fallback al cálculo tradicional si no hay caché\r\n    const sales = this.sales;\r\n    const numeroStats: { [numero: number]: { totalVendido: number, cantidadVentas: number } } = {};\r\n    let totalGeneral = 0;\r\n\r\n    // Procesar todas las ventas\r\n    sales.forEach((sale: Sale) => {\r\n      const details = this.getSaleDetails(sale.id);\r\n      details.forEach(detail => {\r\n        if (!numeroStats[detail.numero]) {\r\n          numeroStats[detail.numero] = { totalVendido: 0, cantidadVentas: 0 };\r\n        }\r\n        numeroStats[detail.numero].totalVendido += detail.monto;\r\n        numeroStats[detail.numero].cantidadVentas += 1;\r\n        totalGeneral += detail.monto;\r\n      });\r\n    });\r\n\r\n    // Convertir a array y calcular porcentajes\r\n    return Object.entries(numeroStats)\r\n      .map(([numero, stats]) => ({\r\n        numero: parseInt(numero),\r\n        totalVendido: stats.totalVendido,\r\n        cantidadVentas: stats.cantidadVentas,\r\n        porcentaje: totalGeneral > 0 ? (stats.totalVendido / totalGeneral) * 100 : 0\r\n      }))\r\n      .sort((a, b) => b.totalVendido - a.totalVendido); // Ordenar por total vendido descendente\r\n  }\r\n\r\n  // Método para obtener números vendidos agrupados por sorteo y sucursal\r\n  getNumbersSummaryBySorteoAndSucursal(): Array<{\r\n    sorteo: string, \r\n    sucursales: Array<{\r\n      sucursal: string,\r\n      numeros: Array<{numero: number, totalVendido: number, cantidadVentas: number, porcentaje: number}>\r\n    }>\r\n  }> {\r\n    const groups: {[sorteo: string]: {[sucursal: string]: {[numero: number]: {totalVendido: number, cantidadVentas: number}}}} = {};\r\n    \r\n    // Agrupar por sorteo, sucursal y número\r\n    this.sales.forEach(sale => {\r\n      const sorteo = sale.sorteo || 'Sin Sorteo';\r\n      const sucursal = sale.sucursal || 'Sin Sucursal';\r\n      \r\n      if (!groups[sorteo]) {\r\n        groups[sorteo] = {};\r\n      }\r\n      if (!groups[sorteo][sucursal]) {\r\n        groups[sorteo][sucursal] = {};\r\n      }\r\n      \r\n      const details = this.getSaleDetails(sale.id);\r\n      details.forEach(detail => {\r\n        const numero = parseInt(detail.numero.toString());\r\n        if (!groups[sorteo][sucursal][numero]) {\r\n          groups[sorteo][sucursal][numero] = {totalVendido: 0, cantidadVentas: 0};\r\n        }\r\n        groups[sorteo][sucursal][numero].totalVendido += detail.monto;\r\n        groups[sorteo][sucursal][numero].cantidadVentas += 1;\r\n      });\r\n    });\r\n\r\n    // Convertir a array y calcular porcentajes\r\n    return Object.keys(groups).map(sorteo => {\r\n      const sorteoData = groups[sorteo];\r\n      \r\n      const sucursales = Object.keys(sorteoData).map(sucursal => {\r\n        const sucursalData = sorteoData[sucursal];\r\n        const totalSucursal = Object.values(sucursalData).reduce((sum, data) => sum + data.totalVendido, 0);\r\n        \r\n        const numeros = Object.keys(sucursalData).map(numeroStr => {\r\n          const numero = parseInt(numeroStr);\r\n          const data = sucursalData[numero];\r\n          return {\r\n            numero,\r\n            totalVendido: data.totalVendido,\r\n            cantidadVentas: data.cantidadVentas,\r\n            porcentaje: totalSucursal > 0 ? (data.totalVendido / totalSucursal) * 100 : 0\r\n          };\r\n        }).sort((a, b) => b.totalVendido - a.totalVendido);\r\n\r\n        return {\r\n          sucursal,\r\n          numeros\r\n        };\r\n      });\r\n\r\n      return {\r\n        sorteo,\r\n        sucursales\r\n      };\r\n    });\r\n  }\r\n\r\n  // Métodos auxiliares para la vista de números vendidos\r\n  getSorteoTotal(sorteoGroup: any): number {\r\n    return sorteoGroup.sucursales.reduce((total: number, sucursal: any) => {\r\n      return total + sucursal.numeros.reduce((subtotal: number, numero: any) => subtotal + numero.totalVendido, 0);\r\n    }, 0);\r\n  }\r\n\r\n  getSucursalTotal(sucursalGroup: any): number {\r\n    return sucursalGroup.numeros.reduce((total: number, numero: any) => total + numero.totalVendido, 0);\r\n  }\r\n\r\n  // Métodos para el tablero de números completo\r\n  getAllNumbers(): number[] {\r\n    const numbers = [];\r\n    for (let i = 0; i <= 99; i++) {\r\n      numbers.push(i);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getNumeroVenta(sucursalGroup: any, numero: number): number {\r\n    const numeroData = sucursalGroup.numeros.find((n: any) => n.numero === numero);\r\n    return numeroData ? numeroData.totalVendido : 0;\r\n  }\r\n\r\n  getNumeroIntensity(sucursalGroup: any, numero: number): string {\r\n    const venta = this.getNumeroVenta(sucursalGroup, numero);\r\n    const maxVenta = Math.max(...sucursalGroup.numeros.map((n: any) => n.totalVendido));\r\n    \r\n    if (venta === 0) return 'sin-venta';\r\n    if (maxVenta === 0) return 'sin-venta';\r\n    \r\n    const intensidad = venta / maxVenta;\r\n    \r\n    if (intensidad >= 0.8) return 'intensidad-muy-alta';\r\n    if (intensidad >= 0.6) return 'intensidad-alta';\r\n    if (intensidad >= 0.4) return 'intensidad-media';\r\n    if (intensidad >= 0.2) return 'intensidad-baja';\r\n    return 'intensidad-muy-baja';\r\n  }\r\n\r\n  // Métodos de exportación\r\n  private prepareReportData(): any {\r\n    // Obtener fecha del filtro actual\r\n    const fechaReporte = this.fechaDesde ? \r\n      this.supabaseService.formatDateOnlyForSupabase(this.supabaseService.parseLocalDateTimeToUtc(this.fechaDesde)) :\r\n      this.selectedDate || this.supabaseService.formatDateOnlyForSupabase(this.supabaseService.getHondurasDateTime());\r\n    \r\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\r\n    const fechaHora = this.supabaseService.formatHondurasDateTime(hondurasTime);\r\n    const [, hora, periodo] = fechaHora.split(' ');\r\n    \r\n    // Describir filtros aplicados\r\n    let filtroAplicado = 'Todos los datos';\r\n    if (this.fechaDesde && this.fechaHasta) {\r\n      filtroAplicado = `Desde: ${this.fechaDesde} Hasta: ${this.fechaHasta}`;\r\n    } else if (this.fechaDesde) {\r\n      filtroAplicado = `Desde: ${this.fechaDesde}`;\r\n    } else if (this.fechaHasta) {\r\n      filtroAplicado = `Hasta: ${this.fechaHasta}`;\r\n    }\r\n    if (this.selectedSorteoFilter) {\r\n      filtroAplicado += ` - Sorteo: ${this.selectedSorteoFilter}`;\r\n    }\r\n\r\n    // 1. DASHBOARD PRINCIPAL (4 cards como se ven en pantalla)\r\n    const dashboardData = {\r\n      totalVendido: this.getTotalVendido(),\r\n      totalPagado: this.getTotalPagado(),\r\n      gananciaNeta: this.getGananciaNeta(),\r\n      ventasTotales: this.getTotalVentas()\r\n    };\r\n\r\n    // 2. NÚMEROS POR SORTEO Y SUCURSAL (tableros completos como se ven)\r\n    const numerosPorSorteo = this.getNumbersSummaryBySorteoAndSucursal();\r\n\r\n    // 3. DETALLE POR SUCURSALES (LA PARTE MÁS IMPORTANTE)\r\n    const numeroGanador = this.resumenSucursales.length > 0 ? this.resumenSucursales[0].numero_ganador : '';\r\n    const detallePorSucursales = {\r\n      headers: ['Sucursal', 'Factor', `Cantidad #${numeroGanador}`, 'Total Vendido', 'Total Pagado', 'Ganancia Neta'],\r\n      filas: this.resumenSucursales.map(sucursal => ({\r\n        sucursal: sucursal.sucursal,\r\n        factor: `${sucursal.factor_multiplicador}x`,\r\n        cantidadNumeroGanador: sucursal.cantidad_numero_ganador || 0,\r\n        totalVendido: sucursal.total_vendido || 0,\r\n        totalPagado: sucursal.total_pagado || 0,\r\n        gananciaNeta: sucursal.ganancia_neta || 0\r\n      })),\r\n      totales: {\r\n        sucursal: 'TOTAL GENERAL',\r\n        factor: '-',\r\n        cantidadNumeroGanador: this.getTotalCantidadNumeroGanador(),\r\n        totalVendido: parseFloat(this.getTotalVendidoGeneral()),\r\n        totalPagado: parseFloat(this.getTotalPagadoGeneral()),\r\n        gananciaNeta: this.getGananciaTotalGeneral()\r\n      }\r\n    };\r\n\r\n    return {\r\n      // Información del reporte\r\n      fechaReporte: fechaReporte,\r\n      horaReporte: `${hora} ${periodo}`,\r\n      filtroAplicado: filtroAplicado,\r\n      \r\n      // Datos principales\r\n      dashboard: dashboardData,\r\n      numerosPorSorteo: numerosPorSorteo,\r\n      detallePorSucursales: detallePorSucursales\r\n    };\r\n  }\r\n\r\n  // Método para exportar datos tal como se ven en el admin\r\n  private prepareVisualReportData(): any {\r\n    // Datos del dashboard tal como aparecen en la interfaz admin\r\n    const totalVendidoGeneral = this.getTotalVendido();\r\n    const totalPagadoGeneral = this.getTotalPagado();\r\n    const gananciaNeta = totalVendidoGeneral - totalPagadoGeneral;\r\n    \r\n    // Usar timezone de Honduras para fecha y hora\r\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\r\n    const fechaFormateada = this.supabaseService.formatHondurasDateTime(hondurasTime);\r\n    const [fecha, horaCompleta] = fechaFormateada.split(' ');\r\n    const hora = horaCompleta || '';\r\n    const periodo = fechaFormateada.includes('AM') ? 'AM' : 'PM';\r\n    \r\n    // Descripción de filtros\r\n    let filtrosAplicados = 'Todos los datos';\r\n    if (this.fechaDesde && this.fechaHasta) {\r\n      const fechaDesdeOnly = this.fechaDesde.split('T')[0];\r\n      const fechaHastaOnly = this.fechaHasta.split('T')[0];\r\n      filtrosAplicados = `Desde: ${fechaDesdeOnly} Hasta: ${fechaHastaOnly}`;\r\n    } else if (this.selectedDate) {\r\n      filtrosAplicados = `Fecha: ${this.selectedDate}`;\r\n    }\r\n    if (this.selectedSorteoFilter) {\r\n      filtrosAplicados += ` - Sorteo: ${this.selectedSorteoFilter}`;\r\n    }\r\n\r\n    // 1. DASHBOARD CARDS (como aparecen arriba del admin)\r\n    const dashboard = {\r\n      totalVendido: totalVendidoGeneral,\r\n      totalPagado: totalPagadoGeneral,\r\n      gananciaNeta: gananciaNeta,\r\n      ventasTotales: this.sales.length\r\n    };\r\n\r\n    // 2. NÚMEROS POR SORTEO (formato tablero como en el admin)\r\n    const numerosPorSorteo = this.getNumbersSummaryBySorteoAndSucursal();\r\n\r\n    // 3. DETALLE POR SUCURSALES (LA MÁS IMPORTANTE - exacto como tabla admin)\r\n    let detallePorSucursales;\r\n    \r\n    if (this.resumenSucursales && this.resumenSucursales.length > 0) {\r\n      // Usar datos existentes de resumenSucursales\r\n      detallePorSucursales = {\r\n        headers: ['Sucursal', 'Factor', 'Total Vendido', 'Total Pagado', 'Ganancia Neta'],\r\n        filas: this.resumenSucursales.map(resumen => [\r\n          resumen.sucursal,\r\n          `${resumen.factor_multiplicador || 70}x`,\r\n          `L ${(resumen.total_vendido || 0).toLocaleString('es-HN', {minimumFractionDigits: 2})}`,\r\n          `L ${(resumen.total_pagado || 0).toLocaleString('es-HN', {minimumFractionDigits: 2})}`,\r\n          `L ${(resumen.ganancia_neta || 0).toLocaleString('es-HN', {minimumFractionDigits: 2})}`\r\n        ]),\r\n        totales: [\r\n          'TOTAL GENERAL',\r\n          '',\r\n          `L ${totalVendidoGeneral.toLocaleString('es-HN', {minimumFractionDigits: 2})}`,\r\n          `L ${totalPagadoGeneral.toLocaleString('es-HN', {minimumFractionDigits: 2})}`,\r\n          `L ${gananciaNeta.toLocaleString('es-HN', {minimumFractionDigits: 2})}`\r\n        ]\r\n      };\r\n    } else {\r\n      // Calcular desde las ventas actuales si no hay resumenSucursales\r\n      const sucursalesMap = new Map();\r\n      \r\n      // Agrupar ventas por sucursal\r\n      this.sales.forEach(sale => {\r\n        const sucursal = sale.sucursal || 'Sin Sucursal';\r\n        if (!sucursalesMap.has(sucursal)) {\r\n          sucursalesMap.set(sucursal, {\r\n            sucursal: sucursal,\r\n            factor: 70, // Factor por defecto\r\n            totalVendido: 0,\r\n            totalPagado: 0,\r\n            gananciaNeta: 0\r\n          });\r\n        }\r\n        const data = sucursalesMap.get(sucursal);\r\n        data.totalVendido += sale.total;\r\n        \r\n        // Calcular total pagado basado en sorteos cerrados\r\n        const sorteoSchedule = this.sorteos.find(s => s.name === sale.sorteo);\r\n        if (sorteoSchedule) {\r\n          const sorteoData = this.getSorteoData(sorteoSchedule);\r\n          if (sorteoData && sorteoData.cerrado && sorteoData.numeroGanador) {\r\n            const saleDetails = this.getSaleDetails(sale.id);\r\n            saleDetails.forEach(detail => {\r\n              if (parseInt(detail.numero.toString()) === parseInt(sorteoData.numeroGanador || '0')) {\r\n                data.totalPagado += detail.monto * (sorteoData.factorMultiplicador || 70);\r\n              }\r\n            });\r\n          }\r\n        }\r\n        \r\n        data.gananciaNeta = data.totalVendido - data.totalPagado;\r\n      });\r\n      \r\n      const sucursalesArray = Array.from(sucursalesMap.values());\r\n      \r\n      detallePorSucursales = {\r\n        headers: ['Sucursal', 'Factor', 'Total Vendido', 'Total Pagado', 'Ganancia Neta'],\r\n        filas: sucursalesArray.map(sucursal => [\r\n          sucursal.sucursal,\r\n          `${sucursal.factor}x`,\r\n          `L ${sucursal.totalVendido.toLocaleString('es-HN', {minimumFractionDigits: 2})}`,\r\n          `L ${sucursal.totalPagado.toLocaleString('es-HN', {minimumFractionDigits: 2})}`,\r\n          `L ${sucursal.gananciaNeta.toLocaleString('es-HN', {minimumFractionDigits: 2})}`\r\n        ]),\r\n        totales: [\r\n          'TOTAL GENERAL',\r\n          '',\r\n          `L ${totalVendidoGeneral.toLocaleString('es-HN', {minimumFractionDigits: 2})}`,\r\n          `L ${totalPagadoGeneral.toLocaleString('es-HN', {minimumFractionDigits: 2})}`,\r\n          `L ${gananciaNeta.toLocaleString('es-HN', {minimumFractionDigits: 2})}`\r\n        ]\r\n      };\r\n    }\r\n\r\n    return {\r\n      fecha: fecha || hondurasTime.toLocaleDateString('es-HN'),\r\n      hora: hora || hondurasTime.toLocaleTimeString('es-HN'),\r\n      filtros: filtrosAplicados,\r\n      dashboard: dashboard,\r\n      numerosPorSorteo: numerosPorSorteo,\r\n      detallePorSucursales: detallePorSucursales\r\n    };\r\n  }\r\n\r\n  async downloadDailyReportExcel(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      const reportData = this.prepareVisualReportData();\r\n      await this.exportService.exportVisualToExcel(reportData, `reporte-admin-visual-${this.selectedDate}`);\r\n      this.notificationService.showSuccess('Reporte Excel descargado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error descargando reporte Excel:', error);\r\n      this.notificationService.showError('Error al descargar el reporte Excel');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async downloadDailyReportPDF(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      const reportData = this.prepareVisualReportData();\r\n      await this.exportService.exportVisualToPDF(reportData, `reporte-admin-visual-${this.selectedDate}`);\r\n      this.notificationService.showSuccess('Reporte PDF descargado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error descargando reporte PDF:', error);\r\n      this.notificationService.showError('Error al descargar el reporte PDF');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- PANEL DE ADMINISTRACIÓN CON ACORDEÓN -->\r\n<div class=\"admin-interface\">\r\n  \r\n  <!-- Header -->\r\n  <div class=\"header-bar\">\r\n    <div class=\"admin-title\">\r\n      <h2><i class=\"fas fa-cog\"></i> Panel de Administración</h2>\r\n    </div>\r\n    \r\n    <div class=\"header-actions\">\r\n      <button class=\"btn-header btn-users\" (click)=\"navigateToUsers()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-users\"></i> Gestión de Usuarios\r\n      </button>\r\n      \r\n      <button class=\"btn-header btn-cerrar\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-sign-out-alt\"></i> Cerrar Sesión\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filtros de Fecha -->\r\n  <div class=\"filters-bar\">\r\n    <div class=\"filter-group\">\r\n      <label for=\"fechaDesde\">\r\n        <i class=\"fas fa-calendar-alt\"></i>\r\n        Desde:\r\n        <span class=\"loading-indicator\" *ngIf=\"isLoadingFilters\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n        </span>\r\n      </label>\r\n      <input type=\"datetime-local\" id=\"fechaDesde\" class=\"form-control\" \r\n             [(ngModel)]=\"fechaDesde\" (change)=\"onFiltroFechaChange()\"\r\n             [disabled]=\"isLoadingFilters\">\r\n    </div>\r\n    \r\n    <div class=\"filter-group\">\r\n      <label for=\"fechaHasta\">\r\n        <i class=\"fas fa-calendar-alt\"></i>\r\n        Hasta:\r\n        <span class=\"loading-indicator\" *ngIf=\"isLoadingFilters\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n        </span>\r\n      </label>\r\n      <input type=\"datetime-local\" id=\"fechaHasta\" class=\"form-control\" \r\n             [(ngModel)]=\"fechaHasta\" (change)=\"onFiltroFechaChange()\"\r\n             [disabled]=\"isLoadingFilters\">\r\n    </div>\r\n    \r\n    <div class=\"filter-group\">\r\n      <label for=\"sorteoFilter\">\r\n        <i class=\"fas fa-trophy\"></i>\r\n        Sorteo:\r\n        <span class=\"loading-indicator\" *ngIf=\"isLoadingFilters\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n        </span>\r\n      </label>\r\n      <select id=\"sorteoFilter\" class=\"form-control\" \r\n              [(ngModel)]=\"selectedSorteoFilter\" (change)=\"aplicarFiltros()\"\r\n              [disabled]=\"isLoadingFilters\">\r\n        <option value=\"\">Todos los sorteos</option>\r\n        <option *ngFor=\"let sorteo of sorteos\" [value]=\"sorteo.name\">{{ sorteo.label }}</option>\r\n      </select>\r\n    </div>\r\n    \r\n    <div class=\"filter-actions\">\r\n      <button class=\"btn-filter btn-primary\" (click)=\"aplicarFiltros()\" [disabled]=\"isLoading || isLoadingFilters\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoadingFilters; else searchIcon\"></i>\r\n        <ng-template #searchIcon><i class=\"fas fa-search\"></i></ng-template>\r\n        {{ isLoadingFilters ? 'Filtrando...' : 'Filtrar' }}\r\n      </button>\r\n      <button class=\"btn-filter btn-secondary\" (click)=\"limpiarFiltros()\" [disabled]=\"isLoading || isLoadingFilters\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoadingFilters; else eraserIcon\"></i>\r\n        <ng-template #eraserIcon><i class=\"fas fa-eraser\"></i></ng-template>\r\n        {{ isLoadingFilters ? 'Limpiando...' : 'Limpiar' }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Botones de Exportación -->\r\n    <div class=\"export-actions\">\r\n      <div class=\"export-label\">\r\n        <i class=\"fas fa-download\"></i>\r\n        Descargar Reporte Diario:\r\n      </div>\r\n      <button class=\"btn-export btn-excel\" (click)=\"downloadDailyReportExcel()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading; else excelIcon\"></i>\r\n        <ng-template #excelIcon><i class=\"fas fa-file-excel\"></i></ng-template>\r\n        Excel\r\n      </button>\r\n      <button class=\"btn-export btn-pdf\" (click)=\"downloadDailyReportPDF()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading; else pdfIcon\"></i>\r\n        <ng-template #pdfIcon><i class=\"fas fa-file-pdf\"></i></ng-template>\r\n        PDF\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Contenido Principal -->\r\n  <div class=\"main-content\">\r\n    \r\n    <!-- Cards de Resumen -->\r\n    <div class=\"summary-cards\">\r\n      <div class=\"summary-card vendido\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-chart-line\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getTotalVendido().toFixed(2) }}</h3>\r\n          <p>Total Vendido</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card pagado\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-coins\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getTotalPagado().toFixed(2) }}</h3>\r\n          <p>Total Pagado</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card ganancia\" [class.positive]=\"getGananciaNeta() > 0\" [class.negative]=\"getGananciaNeta() < 0\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-piggy-bank\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getGananciaNeta().toFixed(2) }}</h3>\r\n          <p>Ganancia Neta</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card ventas\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-shopping-cart\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>{{ getTotalVentas() }}</h3>\r\n          <p>Ventas Totales</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sección de Información del Número Ganador -->\r\n    <div class=\"numero-ganador-section\" *ngIf=\"resumenSucursales && resumenSucursales.length > 0\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-trophy\"></i> Información del Número Ganador</h3>\r\n        <div class=\"section-subtitle\">Detalle de pagos por sucursal</div>\r\n      </div>\r\n      \r\n      <div class=\"numero-ganador-card\">\r\n        <div class=\"numero-ganador-header\">\r\n          <div class=\"numero-display\">\r\n            <span class=\"numero-text\">{{ resumenSucursales[0]?.numero_ganador || '00' }}</span>\r\n            <span class=\"numero-label\">Número Ganador</span>\r\n          </div>\r\n          <div class=\"totales-general\">\r\n            <div class=\"total-item\">\r\n              <span class=\"total-value\">L {{ getTotalCantidadNumeroGanador().toFixed(2) }}</span>\r\n              <span class=\"total-label\">Total Comprado</span>\r\n            </div>\r\n            <div class=\"total-item\">\r\n              <span class=\"total-value\">L {{ getTotalPagadoGeneral() }}</span>\r\n              <span class=\"total-label\">Total a Pagar</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"sucursales-detalle\">\r\n          <div class=\"detalle-header\">\r\n            <span>Sucursal</span>\r\n            <span>Factor</span>\r\n            <span>Cantidad</span>\r\n            <span>Pago</span>\r\n          </div>\r\n          <div class=\"detalle-row\" *ngFor=\"let sucursal of resumenSucursales\">\r\n            <span class=\"sucursal-name\">{{ sucursal.sucursal }}</span>\r\n            <span class=\"factor-value\">{{ sucursal.factor_multiplicador }}x</span>\r\n            <span class=\"cantidad-value\">L {{ (sucursal.cantidad_numero_ganador || 0).toFixed(2) }}</span>\r\n            <span class=\"pago-value\">L {{ ((sucursal.cantidad_numero_ganador || 0) * (sucursal.factor_multiplicador || 1)).toFixed(2) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sección de Números Vendidos por Sorteo -->\r\n    <div class=\"numeros-vendidos-section\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-chart-bar\"></i> Números Vendidos por Sorteo</h3>\r\n        <div class=\"section-subtitle\">Vista en tiempo real de las ventas por sorteo</div>\r\n      </div>\r\n      \r\n      <div class=\"sorteos-numeros-grid\" *ngIf=\"sales.length > 0; else noVentasNumeros\">\r\n        <div *ngFor=\"let sorteoGroup of getNumbersSummaryBySorteoAndSucursal()\" class=\"sorteo-numeros-card\">\r\n          <div class=\"sorteo-numeros-header\">\r\n            <h4>{{ sorteoGroup.sorteo }}</h4>\r\n            <div class=\"sorteo-total\">\r\n              Total: L {{ getSorteoTotal(sorteoGroup).toFixed(2) }}\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"sucursales-container\">\r\n            <div *ngFor=\"let sucursalGroup of sorteoGroup.sucursales\" class=\"sucursal-group\">\r\n              <div class=\"sucursal-header\">\r\n                <h5>{{ sucursalGroup.sucursal }}</h5>\r\n                <span class=\"sucursal-total\">L {{ getSucursalTotal(sucursalGroup).toFixed(2) }}</span>\r\n              </div>\r\n              \r\n              <!-- Top 5 números más vendidos -->\r\n              <div class=\"top-numeros-section\">\r\n                <h6>\r\n                  <i class=\"fas fa-trophy\"></i>\r\n                  Top 5 Números Más Vendidos\r\n                </h6>\r\n                <div class=\"top-numeros-grid\">\r\n                  <div class=\"top-numero-card\" *ngFor=\"let numero of sucursalGroup.numeros.slice(0, 5); let i = index\">\r\n                    <div class=\"numero\">{{ numero.numero.toString().padStart(2, '0') }}</div>\r\n                    <div class=\"cantidad\">L {{ numero.totalVendido.toFixed(2) }}</div>\r\n                    <div class=\"posicion\">#{{ i + 1 }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Tablero completo de números 00-99 -->\r\n              <div class=\"tablero-numeros\">\r\n                <h6>\r\n                  <i class=\"fas fa-grid-3x3\"></i>\r\n                  Tablero Completo (00-99)\r\n                </h6>\r\n                <div class=\"numeros-grid-completo\">\r\n                  <div class=\"numero-cell\" \r\n                       *ngFor=\"let num of getAllNumbers()\"\r\n                       [class]=\"getNumeroIntensity(sucursalGroup, num)\"\r\n                       [title]=\"'Número ' + num.toString().padStart(2, '0') + ': L ' + getNumeroVenta(sucursalGroup, num).toFixed(2)\">\r\n                    <span class=\"numero-label\">{{ num.toString().padStart(2, '0') }}</span>\r\n                    <span class=\"numero-venta\">L {{ getNumeroVenta(sucursalGroup, num).toFixed(2) }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <ng-template #noVentasNumeros>\r\n        <div class=\"no-data-message\">\r\n          <i class=\"fas fa-chart-bar\"></i>\r\n          <h4>No hay ventas por números para mostrar</h4>\r\n          <p>Las estadísticas aparecerán cuando haya ventas registradas</p>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n\r\n    <!-- Sección de Sorteos con estilo minimalista -->\r\n    <div class=\"sorteos-section\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-dice\"></i> Gestión de Sorteos</h3>\r\n      </div>\r\n      \r\n      <div class=\"sorteos-grid\">\r\n        <div *ngFor=\"let sorteo of sorteos\" class=\"sorteo-card\">\r\n          <div class=\"sorteo-header\">\r\n            <h4>{{ sorteo.label }}</h4>\r\n            <div class=\"sorteo-status\">\r\n              <span class=\"status-badge\" [class.open]=\"isSorteoOpen(sorteo)\" [class.closed]=\"!isSorteoOpen(sorteo)\">\r\n                {{ isSorteoOpen(sorteo) ? 'Abierto' : 'Cerrado' }}\r\n              </span>\r\n              <span class=\"close-time\">{{ sorteo.closeTime }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"sorteo-content\">\r\n            <!-- Mostrar resultados solo si hay datos GUARDADOS en BD -->\r\n            <div *ngIf=\"hasSavedWinner(sorteo); else setWinner\">\r\n              <!-- Resultados del sorteo -->\r\n              <div class=\"winner-section\">\r\n                <div class=\"winner-number\">\r\n                  <i class=\"fas fa-trophy\"></i>\r\n                  <span>{{ getSorteoData(sorteo)?.numeroGanador || 'N/A' }}</span>\r\n                </div>\r\n                <div class=\"factor\">Factor: {{ getSorteoData(sorteo)?.factorMultiplicador || 70 }}</div>\r\n              </div>\r\n            \r\n            </div>\r\n            \r\n            <ng-template #setWinner>\r\n              <!-- Formulario para establecer ganador solo si no está abierto -->\r\n              <div *ngIf=\"!isSorteoOpen(sorteo)\" class=\"winner-form\">\r\n                <div class=\"form-group\">\r\n                  <label>Número Ganador:</label>\r\n                  <input type=\"number\" class=\"form-input\" min=\"1\" max=\"99\" \r\n                         [(ngModel)]=\"winningNumbers[sorteo.name]\" \r\n                         [disabled]=\"isLoading\"\r\n                         placeholder=\"Ingrese número (1-99)\">\r\n                </div>\r\n                <button class=\"btn-set-winner\" (click)=\"openFactorsModal(sorteo.name, +winningNumbers[sorteo.name])\" \r\n                        [disabled]=\"!winningNumbers[sorteo.name] || isLoading\">\r\n                  <i class=\"fas fa-cog\"></i> \r\n                  <span *ngIf=\"isLoading\">Cargando...</span>\r\n                  <span *ngIf=\"!isLoading\">Configurar Factores</span>\r\n                </button>\r\n              </div>\r\n              \r\n              <!-- Mensaje cuando el sorteo está abierto -->\r\n              <div *ngIf=\"isSorteoOpen(sorteo)\" class=\"sorteo-open-message\">\r\n                <i class=\"fas fa-clock\"></i>\r\n                <span>Sorteo abierto - Esperando cierre</span>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Componente de Resumen de Sorteos -->\r\n    <app-resumen-sorteos></app-resumen-sorteos>\r\n\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para crear/editar usuario -->\r\n<div class=\"modal fade\" [class.show]=\"showUserModal\" [style.display]=\"showUserModal ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" (click)=\"showUserModal && $event.target === $event.currentTarget && closeUserModal()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-user\"></i> {{ editingUser ? 'Editar Usuario' : 'Crear Usuario' }}\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"closeUserModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #userForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"userEmail\">Email:</label>\r\n            <input type=\"email\" id=\"userEmail\" class=\"form-input\" required\r\n                   [(ngModel)]=\"userFormData.email\" name=\"email\" \r\n                   placeholder=\"usuario@ejemplo.com\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"userName\">Nombre:</label>\r\n            <input type=\"text\" id=\"userName\" class=\"form-input\"\r\n                   [(ngModel)]=\"userFormData.nombre\" name=\"nombre\" \r\n                   placeholder=\"Nombre completo del usuario\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\" *ngIf=\"!editingUser\">\r\n            <label for=\"userPassword\">Contraseña:</label>\r\n            <input type=\"password\" id=\"userPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"userFormData.password\" name=\"password\" \r\n                   placeholder=\"Contraseña segura\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"userRole\">Rol:</label>\r\n            <select id=\"userRole\" class=\"form-input\" \r\n                    [(ngModel)]=\"userFormData.role\" name=\"role\" required>\r\n              <option value=\"admin\">Administrador</option>\r\n              <option value=\"sucursal\">Sucursal</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"form-group\" *ngIf=\"userFormData.role === 'sucursal'\">\r\n            <label for=\"userSucursal\">Sucursal:</label>\r\n            <input type=\"text\" id=\"userSucursal\" class=\"form-input\" \r\n                   [(ngModel)]=\"userFormData.sucursal\" name=\"sucursal\" \r\n                   placeholder=\"Nombre de la sucursal\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"checkbox-label\">\r\n              <input type=\"checkbox\" [(ngModel)]=\"userFormData.active\" name=\"active\">\r\n              <span class=\"checkmark\"></span>\r\n              Usuario Activo\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closeUserModal()\">\r\n          <i class=\"fas fa-times\"></i> Cancelar\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"saveUser()\" \r\n                [disabled]=\"!userForm.valid || isLoading\">\r\n          <i class=\"fas fa-save\"></i> {{ editingUser ? 'Actualizar' : 'Crear' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n \r\n\r\n<!-- Modal para cambiar contraseña de usuario -->\r\n<div class=\"modal fade\" [class.show]=\"showPasswordModal\" [style.display]=\"showPasswordModal ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" (click)=\"showPasswordModal && $event.target === $event.currentTarget && closePasswordModal()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-key\"></i> Cambiar Contraseña\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"closePasswordModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #passwordForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"newPassword\">Nueva Contraseña:</label>\r\n            <input type=\"password\" id=\"newPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"newPassword\" name=\"newPassword\" \r\n                   placeholder=\"Ingrese la nueva contraseña\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"confirmPassword\">Confirmar Contraseña:</label>\r\n            <input type=\"password\" id=\"confirmPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" \r\n                   placeholder=\"Confirme la nueva contraseña\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closePasswordModal()\">\r\n          <i class=\"fas fa-times\"></i> Cancelar\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"changeUserPassword()\" \r\n                [disabled]=\"!passwordForm.valid || newPassword !== confirmPassword || isLoading\">\r\n          <i class=\"fas fa-save\"></i> Cambiar Contraseña\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- MODAL DE DETALLES DE VENTA -->\r\n<div class=\"modal\" [style.display]=\"showSaleDetailModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showSaleDetailModal\" \r\n     (keydown.escape)=\"closeSaleDetailModal()\"\r\n     tabindex=\"0\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\"><i class=\"fas fa-receipt\"></i> Detalles de Venta</h3>\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"closeSaleDetailModal()\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"modal-body\" *ngIf=\"selectedSaleForDetail\">\r\n        <!-- Información General -->\r\n        <div class=\"sale-info-grid\">\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Recibo:</span>\r\n            <span class=\"value\">{{ selectedSaleForDetail.numeroRecibo }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Correlativo:</span>\r\n            <span class=\"value\">{{ selectedSaleForDetail.correlativo }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Fecha:</span>\r\n            <span class=\"value\">{{ formatDateTime(selectedSaleForDetail.createdAt) }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Sucursal:</span>\r\n            <span class=\"value\">{{ selectedSaleForDetail.sucursal }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Sorteo:</span>\r\n            <span class=\"value text-capitalize\">{{ selectedSaleForDetail.sorteo }}</span>\r\n          </div>\r\n          <div class=\"info-row total-row\">\r\n            <span class=\"label\">Total:</span>\r\n            <span class=\"value\">L {{ selectedSaleForDetail.total.toFixed(2) }}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Números Jugados -->\r\n        <div class=\"numbers-section\" *ngIf=\"selectedSaleDetails.length > 0\">\r\n          <h4><i class=\"fas fa-list\"></i> Números Jugados</h4>\r\n          <div class=\"numbers-grid\">\r\n            <div class=\"number-item\" *ngFor=\"let detail of selectedSaleDetails; trackBy: trackBySaleDetail\">\r\n              <div class=\"number-card\">\r\n                <div class=\"number\">{{ detail.numero.toString().padStart(2, '0') }}</div>\r\n                <div class=\"amount\">L {{ detail.monto.toFixed(2) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"numbers-summary\">\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">Cantidad de números:</span>\r\n              <span class=\"value\">{{ selectedSaleDetails.length }}</span>\r\n            </div>\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">Total apostado:</span>\r\n              <span class=\"value\">L {{ getTotalNumeros().toFixed(2) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"no-numbers\" *ngIf=\"selectedSaleDetails.length === 0\">\r\n          <i class=\"fas fa-exclamation-triangle\"></i>\r\n          <p>No se encontraron números para esta venta</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"reprintReceipt(selectedSaleForDetail!)\" \r\n                [disabled]=\"isLoading\">\r\n          <i class=\"fas fa-print\"></i> Reimprimir Recibo\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closeSaleDetailModal()\">\r\n          <i class=\"fas fa-times\"></i> Cerrar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para configurar factores por sucursal -->\r\n<div class=\"modal-overlay\" *ngIf=\"showFactorsModal\" (click)=\"closeFactorsModal()\">\r\n  <div class=\"modal-container factors-modal\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>\r\n        <i class=\"fas fa-calculator\"></i>\r\n        Configurar Factores por Sucursal\r\n      </h3>\r\n      <div class=\"sorteo-info\" *ngIf=\"currentSorteoForFactors\">\r\n        <div class=\"sorteo-badge\">{{ currentSorteoForFactors.sorteo.label }}</div>\r\n        <div class=\"winning-number\">Número Ganador: {{ currentSorteoForFactors.winningNumber.padStart(2, '0') }}</div>\r\n      </div>\r\n      <button class=\"btn-close\" (click)=\"closeFactorsModal()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n      <div class=\"factors-instruction\">\r\n        <i class=\"fas fa-info-circle\"></i>\r\n        <p>Configure el factor multiplicador para cada sucursal. Este factor determinará cuánto se paga por cada número ganador.</p>\r\n      </div>\r\n\r\n      <div class=\"factors-list\" *ngIf=\"sucursalesFactores.length > 0\">\r\n        <div class=\"factor-item\" *ngFor=\"let sucursal of getUniqueSucursales(); let i = index\">\r\n          <div class=\"sucursal-info\">\r\n            <div class=\"sucursal-name\">\r\n              <i class=\"fas fa-store\"></i>\r\n              {{ sucursal }}\r\n            </div>\r\n            <div class=\"sucursal-users\" *ngIf=\"hasSucursalUsers(sucursal)\">\r\n              <small>\r\n                Usuarios: \r\n                <span *ngFor=\"let user of getUsersBySucursal(sucursal); let last = last\">\r\n                  {{ user.email }}{{ !last ? ', ' : '' }}\r\n                </span>\r\n              </small>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"factor-input\">\r\n            <label>Factor (ej: 70)</label>\r\n            <div class=\"input-with-x\">\r\n              <input \r\n                type=\"number\" \r\n                min=\"1\" \r\n                max=\"999\" \r\n                step=\"0.1\"\r\n                [value]=\"factoresPorSucursal[sucursal] || 75\" \r\n                (input)=\"updateFactorForSucursal(sucursal, $any($event.target).value)\"\r\n                placeholder=\"70\">\r\n              <span class=\"x-multiplier\">x</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"loading-factors\" *ngIf=\"isLoading && sucursalesFactores.length === 0\">\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n        <p>Cargando configuración de sucursales...</p>\r\n      </div>\r\n\r\n      <div class=\"no-sucursales\" *ngIf=\"!isLoading && sucursalesFactores.length === 0\">\r\n        <i class=\"fas fa-exclamation-triangle\"></i>\r\n        <p>No se encontraron sucursales activas</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-modal btn-secondary\" (click)=\"closeFactorsModal()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-times\"></i>\r\n        Cancelar\r\n      </button>\r\n      <button class=\"btn-modal btn-primary\" (click)=\"confirmWinningNumberWithFactors()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading\"></i>\r\n        <i class=\"fas fa-trophy\" *ngIf=\"!isLoading\"></i>\r\n        {{ isLoading ? 'Estableciendo...' : 'Establecer Ganador' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para mostrar resumen por sucursales -->\r\n<div class=\"modal-overlay\" *ngIf=\"showResumenModal\" (click)=\"closeResumenModal()\">\r\n  <div class=\"modal-container resumen-modal\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>\r\n        <i class=\"fas fa-chart-bar\"></i>\r\n        Resumen de Cierre por Sucursales\r\n      </h3>\r\n      <button type=\"button\" class=\"btn-close\" (click)=\"closeResumenModal()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"modal-body\">\r\n      <div class=\"sorteo-info\">\r\n        <h4>{{ currentSorteoForResumen }}</h4>\r\n      </div>\r\n      \r\n      <div class=\"resumen-table\">\r\n        <div class=\"table-header\">\r\n          <div class=\"col-sucursal\">Sucursal</div>\r\n          <div class=\"col-factor\">Factor</div>\r\n          <div class=\"col-numero-ganador\">Cantidad #{{ resumenSucursales[0]?.numero_ganador || '00' }}</div>\r\n          <div class=\"col-vendido\">Total Vendido</div>\r\n          <div class=\"col-pagado\">Total Pagado</div>\r\n          <div class=\"col-ganancia\">Ganancia Neta</div>\r\n        </div>\r\n        \r\n        <div class=\"table-row\" *ngFor=\"let sucursal of resumenSucursales\">\r\n          <div class=\"col-sucursal\">{{ sucursal.sucursal }}</div>\r\n          <div class=\"col-factor\">{{ sucursal.factor_multiplicador }}x</div>\r\n          <div class=\"col-numero-ganador\">\r\n            <span class=\"cantidad-numero\">L {{ (sucursal.cantidad_numero_ganador || 0).toFixed(2) }}</span>\r\n            <small class=\"multiplicacion\">x{{ sucursal.factor_multiplicador }} = L {{ ((sucursal.cantidad_numero_ganador || 0) * (sucursal.factor_multiplicador || 1)).toFixed(2) }}</small>\r\n          </div>\r\n          <div class=\"col-vendido\">L {{ sucursal.total_vendido?.toFixed(2) || '0.00' }}</div>\r\n          <div class=\"col-pagado\">L {{ sucursal.total_pagado?.toFixed(2) || '0.00' }}</div>\r\n          <div class=\"col-ganancia\" \r\n               [class.positive]=\"(sucursal.ganancia_neta || 0) > 0\"\r\n               [class.negative]=\"(sucursal.ganancia_neta || 0) < 0\">\r\n            L {{ sucursal.ganancia_neta?.toFixed(2) || '0.00' }}\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Totales generales -->\r\n        <div class=\"table-footer\">\r\n          <div class=\"col-sucursal\"><strong>TOTAL GENERAL</strong></div>\r\n          <div class=\"col-factor\">-</div>\r\n          <div class=\"col-numero-ganador\">\r\n            <strong>L {{ getTotalCantidadNumeroGanador().toFixed(2) }}</strong>\r\n          </div>\r\n          <div class=\"col-vendido\">\r\n            <strong>L {{ getTotalVendidoGeneral() }}</strong>\r\n          </div>\r\n          <div class=\"col-pagado\">\r\n            <strong>L {{ getTotalPagadoGeneral() }}</strong>\r\n          </div>\r\n          <div class=\"col-ganancia\"\r\n               [class.positive]=\"getGananciaTotalGeneral() > 0\"\r\n               [class.negative]=\"getGananciaTotalGeneral() < 0\">\r\n            <strong>L {{ getGananciaTotalGeneral().toFixed(2) }}</strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-modal btn-primary\" (click)=\"closeResumenModal()\">\r\n        <i class=\"fas fa-check\"></i>\r\n        Entendido\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"card\" style=\"max-width: 400px; margin: 100px auto;\">\r\n        <h2 class=\"text-center mb-3\">Sistema de Lotería</h2>\r\n        <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email:</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"email\" \r\n              name=\"email\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"email\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Contraseña:</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"password\" \r\n              name=\"password\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"password\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\r\n            {{ errorMessage }}\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            class=\"btn btn-primary w-100\" \r\n            [disabled]=\"!loginForm.valid || isLoading\">\r\n            {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .w-100 {\r\n      width: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: string = '';\r\n  password: string = '';\r\n  errorMessage: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Verificar si ya hay un usuario logueado con timeout\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      if (user) {\r\n        this.redirectUser(user);\r\n      }\r\n    });\r\n  }\r\n\r\n  async onLogin(): Promise<void> {\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n    this.notificationService.showLoading('Iniciando sesión...');\r\n\r\n    try {\r\n      \r\n      // Usar timeout para evitar que se cuelgue el login\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Login timeout')), 10000); // 10 segundos\r\n      });\r\n      \r\n      const loginPromise = this.supabaseService.login(this.email, this.password);\r\n      \r\n      const user = await Promise.race([loginPromise, timeoutPromise]) as any;\r\n      \r\n      \r\n      if (user) {\r\n        this.redirectUser(user);\r\n      } else {\r\n        this.errorMessage = 'Credenciales inválidas';\r\n      }\r\n    } catch (error: any) {\r\n      this.errorMessage = this.getErrorMessage(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  private redirectUser(user: any): void {\r\n    if (user.role === 'admin') {\r\n      this.router.navigate(['/admin']);\r\n    } else {\r\n      this.router.navigate(['/sucursal']);\r\n    }\r\n  }\r\n\r\n  private getErrorMessage(error: any): string {\r\n    switch (error.message) {\r\n      case 'Invalid login credentials':\r\n        return 'Credenciales inválidas';\r\n      case 'Email not confirmed':\r\n        return 'Email no confirmado';\r\n      case 'Too many requests':\r\n        return 'Demasiados intentos, intenta más tarde';\r\n      case 'Login timeout':\r\n        return 'Tiempo de espera agotado, intenta de nuevo';\r\n      default:\r\n        return 'Error en el inicio de sesión';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Subscription } from 'rxjs';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoSchedule, SORTEO_SCHEDULES } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-resumen-sorteos',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './resumen-sorteos.component.html',\r\n  styleUrl: './resumen-sorteos.component.scss'\r\n})\r\nexport class ResumenSorteosComponent implements OnInit, OnDestroy {\r\n  sorteos = SORTEO_SCHEDULES;\r\n  resumenPorSorteo: { [sorteoName: string]: any[] } = {};\r\n  ventasPorNumero: { [sorteoName: string]: { [numero: string]: number } } = {};\r\n  isLoading: boolean = false;\r\n  private subscription?: Subscription;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadResumenesSorteos();\r\n    \r\n    // Suscribirse a eventos de recarga desde otros componentes\r\n    this.subscription = this.supabaseService.resumenUpdateSubject?.subscribe(() => {\r\n      this.loadResumenesSorteos();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async loadResumenesSorteos(): Promise<void> {\r\n    this.isLoading = true;\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    const fechaStr = hondurasToday.toISOString().split('T')[0];\r\n\r\n    try {\r\n      for (const sorteo of this.sorteos) {\r\n        const sorteoId = `${fechaStr}-${sorteo.name}`;\r\n        try {\r\n          // Cargar resumen por sucursal\r\n          const resumen = await this.supabaseService.getSorteoResumenPorSucursal(sorteoId);\r\n          if (resumen && resumen.length > 0) {\r\n            this.resumenPorSorteo[sorteo.name] = resumen;\r\n          }\r\n\r\n          // Cargar ventas por número para este sorteo\r\n          await this.loadVentasPorNumero(sorteo.name, fechaStr);\r\n        } catch (error) {\r\n          console.error(`Error cargando resumen para ${sorteo.name}:`, error);\r\n        }\r\n      }\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para cargar ventas por número\r\n  async loadVentasPorNumero(sorteoName: string, fecha: string): Promise<void> {\r\n    try {\r\n      const ventasPorNumero = await this.supabaseService.getVentasPorNumero(sorteoName, fecha);\r\n      this.ventasPorNumero[sorteoName] = ventasPorNumero;\r\n    } catch (error) {\r\n      console.error(`Error cargando ventas por número para ${sorteoName}:`, error);\r\n      this.ventasPorNumero[sorteoName] = {};\r\n    }\r\n  }\r\n\r\n  // Función para obtener resumen de un sorteo específico\r\n  getResumenSorteo(sorteoName: string): any[] {\r\n    return this.resumenPorSorteo[sorteoName] || [];\r\n  }\r\n\r\n  // Función para verificar si un sorteo tiene resumen\r\n  hasResumenSorteo(sorteoName: string): boolean {\r\n    return this.resumenPorSorteo[sorteoName] && this.resumenPorSorteo[sorteoName].length > 0;\r\n  }\r\n\r\n  // Funciones auxiliares para cálculos\r\n  getTotalVendidoSorteo(sorteoName: string): string {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    const total = resumen.reduce((sum, s) => sum + (s.total_vendido || 0), 0);\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getTotalPagadoSorteo(sorteoName: string): string {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    const total = resumen.reduce((sum, s) => sum + (s.total_pagado || 0), 0);\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getGananciaTotalSorteo(sorteoName: string): number {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    return resumen.reduce((sum, s) => sum + (s.ganancia_neta || 0), 0);\r\n  }\r\n\r\n  // Función para obtener el número ganador de un sorteo\r\n  getNumeroGanador(sorteoName: string): string {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    return resumen.length > 0 ? resumen[0].numero_ganador || 'N/A' : 'N/A';\r\n  }\r\n\r\n  // Función para obtener el factor más común\r\n  getFactorPrincipal(sorteoName: string): number {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    return resumen.length > 0 ? resumen[0].factor_multiplicador || 70 : 70;\r\n  }\r\n\r\n  // Función para refrescar datos (para llamar desde el componente padre)\r\n  async refreshData(): Promise<void> {\r\n    await this.loadResumenesSorteos();\r\n  }\r\n\r\n  // Función para obtener sorteos con resumen (solo los cerrados)\r\n  getSorteosConResumen(): SorteoSchedule[] {\r\n    return this.sorteos.filter(sorteo => this.hasResumenSorteo(sorteo.name));\r\n  }\r\n\r\n  // Métodos para manejar ventas por número\r\n  getVentasPorNumero(sorteoName: string): { [numero: string]: number } {\r\n    return this.ventasPorNumero[sorteoName] || {};\r\n  }\r\n\r\n  hasVentasPorNumero(sorteoName: string): boolean {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    return Object.keys(ventas).length > 0;\r\n  }\r\n\r\n  getNumerosMasVendidos(sorteoName: string, top: number = 5): Array<{numero: string, total: number}> {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    return Object.entries(ventas)\r\n      .map(([numero, total]) => ({ numero, total }))\r\n      .sort((a, b) => b.total - a.total)\r\n      .slice(0, top);\r\n  }\r\n\r\n  getVentaTotalPorNumero(sorteoName: string, numero: string): number {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    return ventas[numero] || 0;\r\n  }\r\n\r\n  getMaxVentaPorNumero(sorteoName: string): number {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    const valores = Object.values(ventas);\r\n    return valores.length > 0 ? Math.max(...valores) : 0;\r\n  }\r\n\r\n  // Calcular promedio de ventas por número\r\n  getPromedioVentaPorNumero(sorteoName: string): number {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    const valores = Object.values(ventas);\r\n    if (valores.length === 0) return 0;\r\n    const suma = valores.reduce((acc, val) => acc + val, 0);\r\n    return suma / valores.length;\r\n  }\r\n\r\n  // Método auxiliar para obtener la cantidad de números vendidos\r\n  getCantidadNumerosVendidos(sorteoName: string): number {\r\n    return Object.keys(this.getVentasPorNumero(sorteoName)).length;\r\n  }\r\n\r\n  // Generar array de números del 00 al 99 para la tabla\r\n  getNumeros(): string[] {\r\n    const numeros = ['00']; // Empezar con 00\r\n    for (let i = 1; i <= 99; i++) {\r\n      numeros.push(i.toString().padStart(2, '0'));\r\n    }\r\n    return numeros;\r\n  }\r\n\r\n  // Obtener color de intensidad basado en el total vendido\r\n  getIntensidadColor(sorteoName: string, numero: string): string {\r\n    const venta = this.getVentaTotalPorNumero(sorteoName, numero);\r\n    const maxVenta = this.getMaxVentaPorNumero(sorteoName);\r\n    \r\n    if (venta === 0 || maxVenta === 0) return '';\r\n    \r\n    const intensidad = venta / maxVenta;\r\n    if (intensidad > 0.8) return 'intensidad-alta';\r\n    if (intensidad > 0.5) return 'intensidad-media';\r\n    if (intensidad > 0.2) return 'intensidad-baja';\r\n    return 'intensidad-minima';\r\n  }\r\n}\r\n","<!-- Sección de Resúmenes de Sorteos -->\r\n<div class=\"resumen-sorteos-section\">\r\n  <div class=\"section-header\">\r\n    <h3>\r\n      <i class=\"fas fa-chart-bar\"></i> \r\n      Resúmenes de Sorteos por Sucursales\r\n    </h3>\r\n    <div class=\"section-actions\">\r\n      <button class=\"btn-refresh\" (click)=\"loadResumenesSorteos()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-sync-alt\" [class.fa-spin]=\"isLoading\"></i>\r\n        Actualizar\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"loading-overlay\" *ngIf=\"isLoading\">\r\n    <div class=\"loading-content\">\r\n      <i class=\"fas fa-spinner fa-spin\"></i>\r\n      <span>Cargando resúmenes de sorteos...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"sorteos-resumen-container\" *ngIf=\"!isLoading\">\r\n    <div *ngIf=\"getSorteosConResumen().length === 0\" class=\"no-resumen-message\">\r\n      <div class=\"empty-state\">\r\n        <i class=\"fas fa-chart-line\"></i>\r\n        <h4>No hay sorteos cerrados</h4>\r\n        <p>Los resúmenes aparecerán aquí cuando se cierren los sorteos</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Card por cada sorteo cerrado -->\r\n    <div *ngFor=\"let sorteo of getSorteosConResumen()\" class=\"sorteo-resumen-card\">\r\n      <div class=\"card-header\">\r\n        <div class=\"sorteo-info\">\r\n          <h4>{{ sorteo.label }}</h4>\r\n          <span class=\"sorteo-time\">{{ sorteo.closeTime }}</span>\r\n        </div>\r\n        <div class=\"winner-info\">\r\n          <div class=\"winner-number\">\r\n            <i class=\"fas fa-trophy\"></i>\r\n            <span>{{ getNumeroGanador(sorteo.name) }}</span>\r\n          </div>\r\n          <div class=\"factor-info\">Factor: {{ getFactorPrincipal(sorteo.name) }}x</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card-body\">\r\n        <!-- Estadísticas generales -->\r\n        <div class=\"stats-overview\">\r\n          <div class=\"stat-card vendido\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"fas fa-coins\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-label\">Total Vendido</div>\r\n              <div class=\"stat-value\">L {{ getTotalVendidoSorteo(sorteo.name) }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"stat-card pagado\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"fas fa-hand-holding-usd\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-label\">Total Pagado</div>\r\n              <div class=\"stat-value\">L {{ getTotalPagadoSorteo(sorteo.name) }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"stat-card ganancia\" \r\n               [class.positive]=\"getGananciaTotalSorteo(sorteo.name) > 0\"\r\n               [class.negative]=\"getGananciaTotalSorteo(sorteo.name) < 0\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"fas fa-chart-line\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-label\">Ganancia Total</div>\r\n              <div class=\"stat-value\">L {{ getGananciaTotalSorteo(sorteo.name).toFixed(2) }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Tabla detallada por sucursales -->\r\n        <div class=\"detalle-sucursales\">\r\n          <h5>\r\n            <i class=\"fas fa-building\"></i>\r\n            Detalle por Sucursales\r\n          </h5>\r\n          \r\n          <div class=\"tabla-resumen\">\r\n            <div class=\"tabla-header\">\r\n              <div class=\"col-sucursal\">Sucursal</div>\r\n              <div class=\"col-factor\">Factor</div>\r\n              <div class=\"col-vendido\">Vendido</div>\r\n              <div class=\"col-pagado\">Pagado</div>\r\n              <div class=\"col-ganancia\">Ganancia</div>\r\n            </div>\r\n            \r\n            <div class=\"tabla-row\" *ngFor=\"let sucursal of getResumenSorteo(sorteo.name)\">\r\n              <div class=\"col-sucursal\" [attr.data-label]=\"'Sucursal'\">\r\n                <i class=\"fas fa-store\"></i>\r\n                {{ sucursal.sucursal }}\r\n              </div>\r\n              <div class=\"col-factor\" [attr.data-label]=\"'Factor'\">\r\n                {{ sucursal.factor_multiplicador }}x\r\n              </div>\r\n              <div class=\"col-vendido\" [attr.data-label]=\"'Vendido'\">\r\n                L {{ sucursal.total_vendido?.toFixed(2) || '0.00' }}\r\n              </div>\r\n              <div class=\"col-pagado\" [attr.data-label]=\"'Pagado'\">\r\n                L {{ sucursal.total_pagado?.toFixed(2) || '0.00' }}\r\n              </div>\r\n              <div class=\"col-ganancia\" [attr.data-label]=\"'Ganancia'\"\r\n                   [class.positive]=\"(sucursal.ganancia_neta || 0) > 0\"\r\n                   [class.negative]=\"(sucursal.ganancia_neta || 0) < 0\">\r\n                L {{ sucursal.ganancia_neta?.toFixed(2) || '0.00' }}\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Total -->\r\n            <div class=\"tabla-footer\">\r\n              <div class=\"col-sucursal\"><strong>TOTAL GENERAL</strong></div>\r\n              <div class=\"col-factor\">-</div>\r\n              <div class=\"col-vendido\">\r\n                <strong>L {{ getTotalVendidoSorteo(sorteo.name) }}</strong>\r\n              </div>\r\n              <div class=\"col-pagado\">\r\n                <strong>L {{ getTotalPagadoSorteo(sorteo.name) }}</strong>\r\n              </div>\r\n              <div class=\"col-ganancia\"\r\n                   [class.positive]=\"getGananciaTotalSorteo(sorteo.name) > 0\"\r\n                   [class.negative]=\"getGananciaTotalSorteo(sorteo.name) < 0\">\r\n                <strong>L {{ getGananciaTotalSorteo(sorteo.name).toFixed(2) }}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Cuadro resumen de ventas por número -->\r\n        <div class=\"ventas-por-numero\" *ngIf=\"hasVentasPorNumero(sorteo.name)\">\r\n          <h5>\r\n            <i class=\"fas fa-th\"></i>\r\n            Resumen de Ventas por Número\r\n          </h5>\r\n          \r\n          <!-- Números más vendidos (top 5) -->\r\n          <div class=\"top-numeros\">\r\n            <h6>\r\n              <i class=\"fas fa-trophy\"></i>\r\n              Top 5 Números Más Vendidos\r\n            </h6>\r\n            <div class=\"top-numeros-grid\">\r\n              <div class=\"top-numero-card\" *ngFor=\"let item of getNumerosMasVendidos(sorteo.name, 5); let i = index\">\r\n                <div class=\"numero\">{{ item.numero }}</div>\r\n                <div class=\"cantidad\">L {{ item.total.toFixed(2) }}</div>\r\n                <div class=\"posicion\">#{{ i + 1 }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Tablero de números 00-99 -->\r\n          <div class=\"tablero-numeros\">\r\n            <h6>\r\n              <i class=\"fas fa-grid-3x3\"></i>\r\n              Tablero Completo (00-99)\r\n            </h6>\r\n            <div class=\"numeros-grid\">\r\n              <div class=\"numero-cell\" \r\n                   *ngFor=\"let numero of getNumeros()\"\r\n                   [class]=\"getIntensidadColor(sorteo.name, numero)\"\r\n                   [title]=\"'Número ' + numero + ': L ' + getVentaTotalPorNumero(sorteo.name, numero).toFixed(2)\">\r\n                <span class=\"numero-label\">{{ numero }}</span>\r\n                <span class=\"numero-venta\">L {{ getVentaTotalPorNumero(sorteo.name, numero).toFixed(2) }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Estadísticas adicionales -->\r\n          <div class=\"estadisticas-adicionales\">\r\n            <h6>\r\n              <i class=\"fas fa-chart-bar\"></i>\r\n              Estadísticas de Ventas\r\n            </h6>\r\n            <div class=\"stats-adicionales-grid\">\r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-hashtag\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Números Diferentes Vendidos</span>\r\n                  <span class=\"stat-value\">{{ getCantidadNumerosVendidos(sorteo.name) }}</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-crown\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Número Más Vendido</span>\r\n                  <span class=\"stat-value\">\r\n                    {{ getNumerosMasVendidos(sorteo.name, 1).length > 0 ? getNumerosMasVendidos(sorteo.name, 1)[0].numero : 'N/A' }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-calculator\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Promedio por Número</span>\r\n                  <span class=\"stat-value\">L {{ getPromedioVentaPorNumero(sorteo.name).toFixed(2) }}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-chart-line\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Venta Máxima</span>\r\n                  <span class=\"stat-value\">L {{ getMaxVentaPorNumero(sorteo.name).toFixed(2) }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoService } from '../../services/sorteo.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail } from '../../models/interfaces';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-sucursal',\r\n  templateUrl: './sucursal.component.html',\r\n  styleUrls: ['./sucursal.component.scss']\r\n})\r\nexport class SucursalComponent implements OnInit, OnDestroy {\r\n  currentUser: any = null;\r\n  currentSorteo: SorteoSchedule | null = null;\r\n  timeUntilClose: string = '';\r\n  isSorteoOpen: boolean = false;\r\n\r\n  selectedNumber: number | null = null;\r\n  selectedAmount: number | null = null;\r\n  selectedNumbers: { numero: number, monto: number }[] = [];\r\n\r\n  // Propiedades para entrada individual\r\n  numero: number | null = null;\r\n  monto: number | null = null;\r\n\r\n  todaySales: Sale[] = [];\r\n  recentSales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  filteredSales: Sale[] = [];\r\n  filterDate: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  // Propiedades para el teclado numérico\r\n  numberInput: string = '';\r\n  showKeypad: boolean = false;\r\n  isBlocked: boolean = false;\r\n  currentInput: 'numero' | 'monto' = 'numero';\r\n\r\n  // Propiedades para el flujo de modales\r\n  showNumberModal: boolean = false;\r\n  showAmountModal: boolean = false;\r\n  showConfirmModal: boolean = false;\r\n  tempNumber: number | null = null;\r\n  tempAmount: number | null = null;\r\n  modalNumberInput: string = '';\r\n  modalAmountInput: string = '';\r\n\r\n  // Propiedades para el stepper de monto\r\n  stepperAmount: number = 5; // Monto mínimo\r\n  maxAmount: number = 1000; // Monto máximo configurable (opcional)\r\n  stepIncrement: number = 5; // Incremento de 5 en 5\r\n\r\n  // Propiedades para tabs de sorteos\r\n  activeTab: 'manana' | 'tarde' | 'noche' = 'manana';\r\n  sorteoData: { [key: string]: any } = {};\r\n\r\n  // Propiedades para la hora de Honduras\r\n  currentHondurasTime: string = '';\r\n\r\n  // Propiedades para información de bloqueo\r\n  blockMessage: string = '';\r\n  blockDetail: string = '';\r\n  nextSorteoName: string = '';\r\n  nextSorteoOpenTime: string = '';\r\n  timeUntilNextOpening: string = '';\r\n\r\n  // Manejo de suscripciones y timers\r\n  private userSubscription?: Subscription;\r\n  private sorteoUpdateInterval?: any;\r\n  private timeCheckInterval?: any;\r\n  private hondurasTimeInterval?: any;\r\n  private isProcessingModal: boolean = false;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private sorteoService: SorteoService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userSubscription = this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      console.log('Usuario actual - Sucursal:', this.currentUser?.sucursal);\r\n      if (!user || user.role !== 'sucursal') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    this.initializeComponent();\r\n    this.checkTimeRestrictions();\r\n    this.updateHondurasTime();\r\n\r\n    // Verificar bloqueo cada minuto - usar método que se puede limpiar\r\n    this.timeCheckInterval = setInterval(() => {\r\n      this.checkTimeRestrictions();\r\n    }, 500);\r\n\r\n    // Actualizar hora de Honduras cada segundo\r\n    this.hondurasTimeInterval = setInterval(() => {\r\n      this.updateHondurasTime();\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n    // Limpiar suscripciones y timers\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n    if (this.sorteoUpdateInterval) {\r\n      clearInterval(this.sorteoUpdateInterval);\r\n    }\r\n    if (this.timeCheckInterval) {\r\n      clearInterval(this.timeCheckInterval);\r\n    }\r\n    if (this.hondurasTimeInterval) {\r\n      clearInterval(this.hondurasTimeInterval);\r\n    }\r\n\r\n  }\r\n\r\n  private updateHondurasTime(): void {\r\n    const hondurasTime = this.supabaseService.getHondurasTimeNow();\r\n    const fullFormatted = this.supabaseService.formatDateForHonduras(hondurasTime);\r\n\r\n    const parts = fullFormatted.split(' ');\r\n    this.currentHondurasTime = `${parts[1]} ${parts[2]}`; // \"12:49:39 AM\"\r\n  }\r\n\r\n  private async initializeComponent(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      this.notificationService.showLoading('Cargando datos...');\r\n\r\n      // Primero asegurar que los horarios de sorteo estén actualizados\r\n      await this.sorteoService.refreshSorteoSchedules();\r\n\r\n      await this.updateSorteoInfo();\r\n      this.setFilterDate();\r\n\r\n      // Limpiar timer anterior si existe\r\n      if (this.sorteoUpdateInterval) {\r\n        clearInterval(this.sorteoUpdateInterval);\r\n      }\r\n\r\n      // Actualizar cada minuto - usar método que se puede limpiar\r\n      this.sorteoUpdateInterval = setInterval(async () => {\r\n        await this.updateSorteoInfo();\r\n      }, 500);\r\n\r\n      // Cargar datos iniciales de todos los tabs\r\n      await this.loadAllSorteoData();\r\n\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar los datos');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  setFilterDate(): void {\r\n    // Obtiene la fecha/hora actual en Honduras\r\n    const hondurasNow = this.supabaseService.getHondurasDateTime();\r\n    // Formatea sin zona: \"YYYY-MM-DD hh:mm:ss\" y extrae la parte de fecha\r\n    const formatted = this.supabaseService.formatLocalDateForSupabase(hondurasNow);\r\n    this.filterDate = formatted.split(' ')[0]; // -> \"YYYY-MM-DD\"\r\n  }\r\n\r\n\r\n  onFilterDateChange(): void {\r\n    this.filterSales();\r\n  }\r\n\r\n  filterSales(): void {\r\n    if (!this.filterDate) {\r\n      this.filteredSales = this.todaySales;\r\n      return;\r\n    }\r\n\r\n    const filterDateObj = new Date(this.filterDate);\r\n    this.filteredSales = this.todaySales.filter(sale => {\r\n      const saleDate = new Date(sale.fecha);\r\n      return saleDate.toDateString() === filterDateObj.toDateString();\r\n    });\r\n  }\r\n\r\n  async updateSorteoInfo(): Promise<void> {\r\n    try {\r\n\r\n      // Asegurar que tenemos los horarios más recientes\r\n      await this.sorteoService.refreshSorteoSchedules();\r\n\r\n      this.currentSorteo = this.sorteoService.getCurrentSorteo();\r\n\r\n\r\n      if (this.currentSorteo) {\r\n        this.isSorteoOpen = this.sorteoService.isSorteoOpen(this.currentSorteo);\r\n        this.timeUntilClose = this.sorteoService.getTimeUntilClose(this.currentSorteo);\r\n\r\n      } else {\r\n        this.isSorteoOpen = false;\r\n        this.timeUntilClose = '';\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  addNumber(): void {\r\n    if (this.numero && this.monto &&\r\n      this.numero >= 0 && this.numero <= 99) {\r\n\r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.numero);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.monto!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.numero,\r\n          monto: this.monto\r\n        });\r\n      }\r\n\r\n      this.numero = null;\r\n      this.monto = null;\r\n      this.numberInput = '';\r\n      this.currentInput = 'numero';\r\n      this.notificationService.showSuccess('Número agregado', 'Número agregado exitosamente a la venta');\r\n    }\r\n  }\r\n\r\n  removeNumber(index: number): void {\r\n\r\n    this.selectedNumbers.splice(index, 1);\r\n\r\n    this.cdr.detectChanges(); // Forzar actualización visual inmediata\r\n  }\r\n\r\n  // Generar número de recibo único con correlativo\r\n  private generateReceiptNumber(correlativo: number, sucursal: string): string {\r\n    // Obtener fecha actual de Honduras como Date\r\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\r\n    // Formatear sin zona para Supabase: \"YYYY-MM-DD hh:mm:ss\"\r\n    const formatted = this.supabaseService.formatLocalDateForSupabase(hondurasTime);\r\n    // Extraer sólo la parte de fecha\r\n    const datePart = formatted.split(' ')[0]; // \"YYYY-MM-DD\"\r\n    const [yearFull, month, day] = datePart.split('-');\r\n    const year = yearFull.slice(-2); // últimos dos dígitos\r\n\r\n    const sucursalCode = sucursal.replace(/\\s+/g, '').toUpperCase().substring(0, 3);\r\n    const correlativoFormatted = correlativo.toString().padStart(4, '0');\r\n\r\n    return `${sucursalCode}-REC-${year}${month}${day}-${correlativoFormatted}`;\r\n  }\r\n\r\n  getTotal(): number {\r\n    return this.selectedNumbers.reduce((total, item) => total + item.monto, 0);\r\n  }\r\n\r\n  async processSale(): Promise<void> {\r\n    if (!this.currentSorteo || !this.currentUser || this.selectedNumbers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Validar que el usuario tenga sucursal configurada\r\n    if (!this.currentUser.sucursal) {\r\n      await this.notificationService.showError(\r\n        'Error: El usuario no tiene una sucursal asignada. Contacte al administrador.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Confirmar venta\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Confirmar venta',\r\n      `¿Procesar venta por L. ${this.getTotal().toFixed(2)}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    this.notificationService.showLoading('Procesando venta...');\r\n\r\n    try {\r\n      // Obtener el siguiente correlativo para esta sucursal\r\n\r\n      const correlativo = await this.supabaseService.getNextCorrelativo(this.currentUser.sucursal);\r\n\r\n      // Generar número de recibo con correlativo\r\n      const numeroRecibo = this.generateReceiptNumber(correlativo, this.currentUser.sucursal);\r\n\r\n      const sale: any = {\r\n        userId: this.currentUser.id,\r\n        sucursal: this.currentUser.sucursal,\r\n        sorteo: this.currentSorteo.name,\r\n        fecha: this.supabaseService.getHondurasDateTime(),\r\n        total: this.getTotal(),\r\n        numeroRecibo: numeroRecibo,\r\n        correlativo: correlativo\r\n      };\r\n\r\n\r\n      const saleId = await this.supabaseService.createSale(sale);\r\n\r\n      // Crear detalles de venta\r\n      const saleDetails: SaleDetail[] = [];\r\n      for (const item of this.selectedNumbers) {\r\n        const detailId = await this.supabaseService.createSaleDetail({\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n        saleDetails.push({\r\n          id: detailId,\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n      }\r\n\r\n      // Generar e imprimir recibo\r\n      const saleWithId = { ...sale, id: saleId };\r\n\r\n      // Asegurar que los detalles tengan datos\r\n      if (saleDetails.length === 0) {\r\n        // Usar selectedNumbers como fallback\r\n        for (const item of this.selectedNumbers) {\r\n          saleDetails.push({\r\n            id: `temp-${Date.now()}-${item.numero}`,\r\n            saleId,\r\n            numero: item.numero,\r\n            monto: item.monto\r\n          });\r\n        }\r\n      }\r\n\r\n      this.printService.generateThermalReceipt(saleWithId, saleDetails);\r\n\r\n      // Limpiar selección inmediatamente después de enviar a imprimir\r\n      setTimeout(async () => {\r\n        // Limpiar selección inmediatamente\r\n        this.selectedNumbers = [];\r\n\r\n        // Resetear estado de modales\r\n        this.showNumberModal = false;\r\n        this.showAmountModal = false;\r\n        this.showConfirmModal = false;\r\n        this.modalNumberInput = '';\r\n        this.modalAmountInput = '';\r\n        this.tempNumber = null;\r\n        this.tempAmount = null;\r\n\r\n        this.cdr.detectChanges(); // Forzar actualización visual inmediata\r\n\r\n        // Recargar datos de sorteos para mostrar la venta recién realizada\r\n        await this.loadAllSorteoData();\r\n\r\n        this.cdr.detectChanges(); // Forzar actualización después de cargar datos\r\n      }, 100); // Pequeño retraso para evitar conflictos con la ventana de impresión\r\n\r\n      this.notificationService.showSuccess('Venta procesada e impresa exitosamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al procesar la venta');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Cerrar sesión',\r\n      '¿Está seguro que desea cerrar sesión?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      this.notificationService.showLoading('Cerrando sesión...');\r\n      try {\r\n        await this.supabaseService.logout();\r\n        this.router.navigate(['/login']);\r\n      } catch (error) {\r\n        this.notificationService.showError('Error al cerrar sesión');\r\n      } finally {\r\n        this.notificationService.hideLoading();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Métodos del teclado numérico\r\n  pressNumber(num: number) {\r\n    if (this.isBlocked) {\r\n      this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      return;\r\n    }\r\n\r\n    if (this.numberInput.length < 5) { // Máximo 5 dígitos\r\n      this.numberInput += num.toString();\r\n    }\r\n  }\r\n\r\n  clearNumber() {\r\n    this.numberInput = '';\r\n  }\r\n\r\n  acceptNumber() {\r\n    if (!this.numberInput) return;\r\n\r\n    if (this.currentInput === 'numero') {\r\n      const numero = parseInt(this.numberInput);\r\n      if (numero >= 0 && numero <= 99) {\r\n        this.numero = numero;\r\n        this.numberInput = '';\r\n        this.currentInput = 'monto';\r\n        this.notificationService.showInfo('Número seleccionado', 'Ahora ingresa el monto a apostar');\r\n      } else {\r\n        this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n      }\r\n    } else {\r\n      const monto = parseFloat(this.numberInput);\r\n      if (monto > 0 && monto <= 500) {\r\n        this.monto = monto;\r\n        this.addNumber();\r\n        this.numberInput = '';\r\n        this.currentInput = 'numero';\r\n      } else {\r\n        this.notificationService.showError('Monto inválido', 'El monto debe ser mayor a 0 y menor o igual a L. 500');\r\n      }\r\n    }\r\n  }\r\n\r\n  // Flujo de modales para selección de números\r\n  openNumberModal(): void {\r\n\r\n    if (this.isProcessingModal || this.isBlocked) {\r\n      if (this.isBlocked) {\r\n        this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    // Reiniciar estado de modales\r\n    this.closeAllModals();\r\n\r\n    // Eliminamos el setTimeout para evitar parpadeo\r\n    this.showNumberModal = true;\r\n    this.modalNumberInput = '';\r\n    this.cdr.detectChanges();\r\n    this.isProcessingModal = false;\r\n  }\r\n\r\n  closeAllModals(): void {\r\n    this.showNumberModal = false;\r\n    this.showAmountModal = false;\r\n    this.showConfirmModal = false;\r\n    this.modalNumberInput = '';\r\n    this.modalAmountInput = '';\r\n    this.tempNumber = null;\r\n    this.tempAmount = null;\r\n    this.isProcessingModal = false;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n  }\r\n\r\n  // Modal 1: Selección de número\r\n  pressModalNumber(num: number): void {\r\n    if (this.modalNumberInput.length < 2) {\r\n      this.modalNumberInput += num.toString();\r\n      this.cdr.detectChanges(); // Forzar actualización de la UI\r\n    }\r\n  }\r\n\r\n  clearModalNumber(): void {\r\n    this.modalNumberInput = '';\r\n    this.cdr.detectChanges(); // Forzar actualización inmediata\r\n  }\r\n\r\n  acceptModalNumber(): void {\r\n\r\n    // Evitar múltiples ejecuciones\r\n    if (!this.modalNumberInput || this.isProcessingModal) {\r\n      if (!this.modalNumberInput) {\r\n        this.notificationService.showError('Número requerido', 'Debe ingresar un número');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    // Formatear el número con ceros a la izquierda si es necesario\r\n    let formattedNumber = this.modalNumberInput.padStart(2, '0');\r\n    const numero = parseInt(formattedNumber);\r\n\r\n    if (numero >= 0 && numero <= 99) {\r\n      this.tempNumber = numero;\r\n\r\n      // Transición suave sin setTimeout\r\n      this.showNumberModal = false;\r\n      this.showAmountModal = true;\r\n      this.modalAmountInput = '';\r\n      this.stepperAmount = 5; // Reiniciar stepper al mínimo\r\n      this.isProcessingModal = false;\r\n      this.cdr.detectChanges();\r\n\r\n    } else {\r\n      this.isProcessingModal = false;\r\n      this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n    }\r\n  }\r\n\r\n  // Modal 2: Stepper de monto\r\n  increaseAmount(): void {\r\n    if (this.stepperAmount < this.maxAmount) {\r\n      this.stepperAmount += this.stepIncrement;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  decreaseAmount(): void {\r\n    if (this.stepperAmount > 5) { // Mínimo L 5\r\n      this.stepperAmount -= this.stepIncrement;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  resetAmount(): void {\r\n    this.stepperAmount = 5; // Reiniciar al mínimo\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  acceptStepperAmount(): void {\r\n    if (this.isProcessingModal) {\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    if (this.stepperAmount >= 5 && this.stepperAmount <= this.maxAmount) {\r\n      this.tempAmount = this.stepperAmount;\r\n\r\n      // Transición al modal de confirmación\r\n      this.showAmountModal = false;\r\n      this.showConfirmModal = true;\r\n      this.isProcessingModal = false;\r\n      this.cdr.detectChanges();\r\n    } else {\r\n      this.isProcessingModal = false;\r\n      this.notificationService.showError('Monto inválido', `El monto debe estar entre L 5 y L ${this.maxAmount}`);\r\n    }\r\n  }\r\n\r\n  // Modal 3: Confirmación\r\n  confirmAddNumber(): void {\r\n    if (this.tempNumber !== null && this.tempAmount !== null) {\r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.tempNumber);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.tempAmount!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.tempNumber,\r\n          monto: this.tempAmount\r\n        });\r\n      }\r\n\r\n      // Quitar el modal de confirmación, solo cerrar modales\r\n      this.closeAllModals();\r\n      this.cdr.detectChanges(); // Forzar actualización final\r\n    }\r\n  }\r\n\r\n  cancelAddNumber(): void {\r\n    this.closeAllModals();\r\n  }\r\n\r\n  // Verificación de restricciones de tiempo\r\n  private checkTimeRestrictions(): void {\r\n    // Obtener hora de Honduras formateada\r\n    const hnFormatted = this.supabaseService.formatLocalDateForSupabase(\r\n      this.supabaseService.getHondurasDateTime()\r\n    );\r\n    const [, timePart] = hnFormatted.split(' ');\r\n    const [hourStr, minuteStr] = timePart.split(':');\r\n    const currentTotalMinutes = parseInt(hourStr, 10) * 60 + parseInt(minuteStr, 10);\r\n\r\n    // Obtener todos los sorteos configurados\r\n    const sorteos = this.sorteoService.getAllSorteos();\r\n    let isInActivePeriod = false;\r\n    let activeSorteo: any = null;\r\n\r\n    // Verificar si estamos en un período activo de ventas\r\n    for (const sorteo of sorteos) {\r\n      const [openHour, openMinute] = sorteo.openTime.split(':').map(Number);\r\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\r\n      \r\n      const openTimeInMinutes = openHour * 60 + openMinute;\r\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\r\n      \r\n      // Caso especial para sorteo de noche que puede cruzar medianoche\r\n      if (sorteo.name === 'noche') {\r\n        if (closeTimeInMinutes < openTimeInMinutes) {\r\n          // Cruza medianoche\r\n          if (currentTotalMinutes >= openTimeInMinutes || currentTotalMinutes <= closeTimeInMinutes) {\r\n            isInActivePeriod = true;\r\n            activeSorteo = sorteo;\r\n            break;\r\n          }\r\n        } else {\r\n          // No cruza medianoche\r\n          if (currentTotalMinutes >= openTimeInMinutes && currentTotalMinutes <= closeTimeInMinutes) {\r\n            isInActivePeriod = true;\r\n            activeSorteo = sorteo;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        // Sorteos normales (mañana y tarde)\r\n        if (currentTotalMinutes >= openTimeInMinutes && currentTotalMinutes <= closeTimeInMinutes) {\r\n          isInActivePeriod = true;\r\n          activeSorteo = sorteo;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Si no estamos en un período activo, bloquear ventas\r\n    if (!isInActivePeriod) {\r\n      // Buscar el próximo sorteo que abrirá\r\n      const nextSorteo = this.getNextOpeningSorteo(currentTotalMinutes);\r\n      \r\n      if (nextSorteo) {\r\n        this.blockMessage = 'Ventas cerradas';\r\n        this.blockDetail = `El próximo sorteo ${nextSorteo.label} abre a las ${nextSorteo.openTime}`;\r\n        this.nextSorteoName = nextSorteo.label;\r\n        this.nextSorteoOpenTime = nextSorteo.openTime;\r\n        this.timeUntilNextOpening = this.calculateTimeUntilOpening(currentTotalMinutes, nextSorteo);\r\n        \r\n        // Solo mostrar notificación la primera vez que se bloquea\r\n        if (!this.isBlocked) {\r\n          this.notificationService.showWarning(this.blockMessage, this.blockDetail);\r\n        }\r\n      } else {\r\n        this.blockMessage = 'Ventas cerradas';\r\n        this.blockDetail = 'No hay sorteos disponibles en este momento';\r\n        this.nextSorteoName = '';\r\n        this.nextSorteoOpenTime = '';\r\n        this.timeUntilNextOpening = '';\r\n        \r\n        if (!this.isBlocked) {\r\n          this.notificationService.showWarning(this.blockMessage, this.blockDetail);\r\n        }\r\n      }\r\n      \r\n      this.isBlocked = true;\r\n      this.cdr.detectChanges(); // Forzar actualización de la UI\r\n      return;\r\n    }\r\n\r\n    // Si estamos en período activo, verificar restricciones del sorteo actual\r\n    if (!this.currentSorteo || !activeSorteo) {\r\n      this.isBlocked = false;\r\n      return;\r\n    }\r\n\r\n    // Hora de cierre del sorteo activo\r\n    const [closeHourStr, closeMinuteStr] = activeSorteo.closeTime.split(':');\r\n    const closeTotalMinutes = parseInt(closeHourStr, 10) * 60 + parseInt(closeMinuteStr, 10);\r\n\r\n    // Calcula minutos restantes (manejar cruce de medianoche)\r\n    let minutesLeft = closeTotalMinutes - currentTotalMinutes;\r\n    if (activeSorteo.name === 'noche' && closeTotalMinutes < currentTotalMinutes) {\r\n      // Si es sorteo nocturno que cruza medianoche\r\n      minutesLeft = (24 * 60 + closeTotalMinutes) - currentTotalMinutes;\r\n    }\r\n\r\n    // Bloquear ventas en los últimos 5 minutos antes del sorteo\r\n    if (minutesLeft <= 5 && minutesLeft >= 0) {\r\n      if (!this.isBlocked) {\r\n        if (minutesLeft <= 0) {\r\n          this.blockMessage = 'Sorteo cerrado';\r\n          this.blockDetail = 'El sorteo ya ha comenzado. No se pueden realizar más ventas.';\r\n          this.notificationService.showWarning(this.blockMessage, this.blockDetail);\r\n        } else {\r\n          this.blockMessage = 'Ventas bloqueadas';\r\n          this.blockDetail = `Faltan ${minutesLeft} minutos para el sorteo. Ventas bloqueadas.`;\r\n          this.notificationService.showWarning(this.blockMessage, this.blockDetail);\r\n        }\r\n        this.nextSorteoName = '';\r\n        this.nextSorteoOpenTime = '';\r\n        this.timeUntilNextOpening = '';\r\n      }\r\n      this.isBlocked = true;\r\n    } else {\r\n      // Limpiar mensajes de bloqueo cuando se desbloquea\r\n      if (this.isBlocked) {\r\n        this.blockMessage = '';\r\n        this.blockDetail = '';\r\n        this.nextSorteoName = '';\r\n        this.nextSorteoOpenTime = '';\r\n        this.timeUntilNextOpening = '';\r\n      }\r\n      this.isBlocked = false;\r\n    }\r\n    \r\n    this.cdr.detectChanges(); // Forzar actualización de la UI\r\n  }\r\n\r\n  // Método para encontrar el próximo sorteo que abrirá\r\n  private getNextOpeningSorteo(currentTotalMinutes: number): any {\r\n    const sorteos = this.sorteoService.getAllSorteos();\r\n    \r\n    // Buscar el próximo sorteo del mismo día\r\n    for (const sorteo of sorteos) {\r\n      const [openHour, openMinute] = sorteo.openTime.split(':').map(Number);\r\n      const openTimeInMinutes = openHour * 60 + openMinute;\r\n      \r\n      if (openTimeInMinutes > currentTotalMinutes) {\r\n        return sorteo;\r\n      }\r\n    }\r\n    \r\n    // Si no hay más sorteos hoy, el próximo será mañana (primer sorteo del día)\r\n    return sorteos[0] || null;\r\n  }\r\n\r\n  // Método para calcular el tiempo hasta la próxima apertura\r\n  private calculateTimeUntilOpening(currentTotalMinutes: number, nextSorteo: any): string {\r\n    if (!nextSorteo) return '';\r\n    \r\n    const [openHour, openMinute] = nextSorteo.openTime.split(':').map(Number);\r\n    const openTimeInMinutes = openHour * 60 + openMinute;\r\n    \r\n    let minutesUntilOpening: number;\r\n    \r\n    if (openTimeInMinutes > currentTotalMinutes) {\r\n      // Sorteo abre hoy\r\n      minutesUntilOpening = openTimeInMinutes - currentTotalMinutes;\r\n    } else {\r\n      // Sorteo abre mañana (es el primer sorteo del día)\r\n      minutesUntilOpening = (24 * 60) - currentTotalMinutes + openTimeInMinutes;\r\n    }\r\n    \r\n    const hours = Math.floor(minutesUntilOpening / 60);\r\n    const minutes = minutesUntilOpening % 60;\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes}m`;\r\n    } else {\r\n      return `${minutes}m`;\r\n    }\r\n  }\r\n  // Obtener fecha de hoy formateada usando Honduras timezone\r\n  getTodayDate(): string {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    return hondurasToday.toLocaleDateString('es-HN', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n\r\n  // Método mejorado para reimprimir recibo\r\n  async reprintReceipt(sale: Sale): Promise<void> {\r\n    try {\r\n\r\n      this.notificationService.showLoading('Reimprimiendo recibo...');\r\n\r\n      // Obtener detalles de la venta desde la base de datos\r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n\r\n      if (details.length === 0) {\r\n        this.notificationService.showError('Sin detalles', 'No se encontraron detalles para esta venta. No se puede reimprimir el recibo.');\r\n        return;\r\n      }\r\n\r\n      // Generar recibo con los detalles obtenidos\r\n      this.printService.generateThermalReceipt(sale, details);\r\n\r\n      this.notificationService.showSuccess('Recibo reimpreso', `Recibo #${sale.numeroRecibo || sale.id} enviado a impresora`);\r\n\r\n    } catch (error) {\r\n      this.notificationService.showError('Error de reimpresión', 'Error al reimprimir el recibo. Por favor intente nuevamente.');\r\n    } finally {\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  // Funciones de optimización para trackBy\r\n  trackByIndex(index: number, item: any): number {\r\n    return index;\r\n  }\r\n\r\n  trackBySaleId(index: number, sale: Sale): string {\r\n    return sale.id;\r\n  }\r\n\r\n  trackByDetailId(index: number, detail: SaleDetail): string {\r\n    return detail.id;\r\n  }\r\n\r\n  // Función de debug temporal\r\n  debugModalState(): void {\r\n\r\n    // Forzar reinicio completo de los modales\r\n    this.closeAllModals();\r\n\r\n    alert(`Estado de modales:\r\n- showNumberModal: ${this.showNumberModal}\r\n- showAmountModal: ${this.showAmountModal}  \r\n- showConfirmModal: ${this.showConfirmModal}\r\n- isProcessingModal: ${this.isProcessingModal}\r\n- isBlocked: ${this.isBlocked}\r\nRevisa la consola para más detalles.`);\r\n  }\r\n\r\n  // Función para toggle manual de bloqueo\r\n  toggleBloqueo(): void {\r\n    this.isBlocked = !this.isBlocked;\r\n    const estado = this.isBlocked ? 'bloqueadas' : 'habilitadas';\r\n    this.notificationService.showInfo('Estado actualizado', `Ventas ${estado} manualmente`);\r\n  }\r\n\r\n\r\n  // ===== MÉTODOS PARA TABS DE SORTEOS =====\r\n\r\n  async loadAllSorteoData(): Promise<void> {\r\n    try {\r\n      console.log('Cargando datos de sorteos de forma optimizada...');\r\n      // Construir un Date a partir de filterDate (ej. \"2025-07-24\")\r\n      const fecha = new Date(this.filterDate + 'T00:00:00');\r\n      const sucursal = this.currentUser?.sucursal || 'Sucursal 1';\r\n\r\n      // Inicializar estructura\r\n      this.sorteoData = {\r\n        manana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      // Ahora sí cargamos con la fecha filtrada\r\n      await this.loadSorteoDataOptimized(fecha, sucursal);\r\n\r\n      // Determinar y mostrar el tab activo\r\n      this.activeTab = this.getCurrentSorteoTab();\r\n      console.log('Datos de sorteos cargados:', this.sorteoData);\r\n      this.cdr.detectChanges();\r\n    } catch (error) {\r\n      console.error('Error cargando datos de sorteos:', error);\r\n    }\r\n  }\r\n\r\n\r\n  // Método optimizado que hace una sola consulta agregada\r\n\r\n  private async loadSorteoDataOptimized(fecha: Date, sucursal: string): Promise<void> {\r\n    try {\r\n      console.log('Cargando datos de sorteos optimizados para fecha:', fecha, 'y sucursal:', sucursal);\r\n      // Determinar rango completo del día\r\n      const startOfDay = new Date(fecha);\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date(fecha);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n\r\n      // Formatear fechas para Supabase\r\n      const startStr = this.supabaseService.formatLocalDateForSupabase(startOfDay);\r\n      const endStr = this.supabaseService.formatLocalDateForSupabase(endOfDay);\r\n      console.log('Rango formateado para consulta:', startStr, '->', endStr);\r\n\r\n      // Consulta optimizada que obtiene todos los datos del día en una sola petición\r\n      const { data, error } = await this.supabaseService.client\r\n        .from('sales')\r\n        .select(`\r\n        sorteo,\r\n        sale_details(numero, monto)\r\n      `)\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', startStr)\r\n        .lte('fecha', endStr);\r\n      console.log('Consulta optimizada ejecutada:', { data, error });\r\n\r\n      if (error) {\r\n        console.error('Error en consulta optimizada:', error);\r\n        return;\r\n      }\r\n\r\n      console.log('Datos obtenidos de consulta optimizada:', data);\r\n\r\n      // Procesar los datos agregándolos por sorteo\r\n      if (data?.length) {\r\n        data.forEach((sale: any) => {\r\n          const clave = sale.sorteo?.toLowerCase() as 'manana' | 'tarde' | 'noche';\r\n          let mapped: 'manana' | 'tarde' | 'noche' = clave;\r\n          if (sale.sorteo?.toLowerCase() === 'mañana' || sale.sorteo?.toLowerCase() === 'manana') {\r\n            mapped = 'manana';\r\n          }\r\n\r\n          const target = this.sorteoData[mapped];\r\n          if (target && sale.sale_details) {\r\n            sale.sale_details.forEach((detail: any) => {\r\n              target.totalVendido += detail.monto;\r\n              const numStr = detail.numero.toString();\r\n              if (!target.numerosVendidos[numStr]) {\r\n                target.numerosVendidos[numStr] = 0;\r\n              }\r\n              target.numerosVendidos[numStr] += detail.monto;\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Datos procesados y agregados:', this.sorteoData);\r\n    } catch (error) {\r\n      console.error('Error en loadSorteoDataOptimized:', error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Determinar el sorteo actual basado en la hora de Honduras y los horarios configurados\r\n  private getCurrentSorteoTab(): 'manana' | 'tarde' | 'noche' {\r\n    console.log('Determinando sorteo actual basado en hora de Honduras y horarios configurados...');\r\n    \r\n    // Obtener la hora actual de Honduras\r\n    const hondurasNow = this.supabaseService.getHondurasDateTime();\r\n    const [, timeStr] = this.supabaseService\r\n      .formatLocalDateForSupabase(hondurasNow)\r\n      .split(' ');\r\n    const [hourStr, minuteStr] = timeStr.split(':');\r\n    const currentHour = parseInt(hourStr, 10);\r\n    const currentMinute = parseInt(minuteStr, 10);\r\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\r\n\r\n    console.log(`Hora actual de Honduras: ${hourStr.padStart(2, '0')}:${minuteStr.padStart(2, '0')}`);\r\n\r\n    // Obtener todos los sorteos configurados\r\n    const sorteos = this.sorteoService.getAllSorteos();\r\n    \r\n    // Encontrar el sorteo activo basado en los horarios configurados\r\n    for (const sorteo of sorteos) {\r\n      const [openHour, openMinute] = sorteo.openTime.split(':').map(Number);\r\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\r\n      \r\n      const openTimeInMinutes = openHour * 60 + openMinute;\r\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\r\n      \r\n      console.log(`Verificando sorteo ${sorteo.name}: ${sorteo.openTime} - ${sorteo.closeTime}`);\r\n      \r\n      // Caso especial para sorteo de noche que puede cruzar medianoche\r\n      if (sorteo.name === 'noche') {\r\n        // Si closeTime es menor que openTime, significa que cruza medianoche\r\n        if (closeTimeInMinutes < openTimeInMinutes) {\r\n          // Caso 1: Hora actual está después de la apertura (mismo día)\r\n          // Caso 2: Hora actual está antes del cierre (día siguiente)\r\n          if (currentTimeInMinutes >= openTimeInMinutes || currentTimeInMinutes <= closeTimeInMinutes) {\r\n            console.log(`Sorteo detectado: ${sorteo.name} (cruza medianoche)`);\r\n            return sorteo.name;\r\n          }\r\n        } else {\r\n          // Sorteo de noche normal (no cruza medianoche)\r\n          if (currentTimeInMinutes >= openTimeInMinutes && currentTimeInMinutes <= closeTimeInMinutes) {\r\n            console.log(`Sorteo detectado: ${sorteo.name} (mismo día)`);\r\n            return sorteo.name;\r\n          }\r\n        }\r\n      } else {\r\n        // Sorteos normales (mañana y tarde)\r\n        if (currentTimeInMinutes >= openTimeInMinutes && currentTimeInMinutes <= closeTimeInMinutes) {\r\n          console.log(`Sorteo detectado: ${sorteo.name} (${sorteo.openTime} - ${sorteo.closeTime})`);\r\n          return sorteo.name;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Si no encuentra ningún sorteo activo, determinar cuál mostrar basado en proximidad\r\n    console.log('No se encontró sorteo activo, determinando por proximidad...');\r\n    \r\n    // Buscar el próximo sorteo que abrirá\r\n    const nextSorteo = this.getNextOpeningSorteo(currentTimeInMinutes);\r\n    if (nextSorteo) {\r\n      console.log(`Próximo sorteo: ${nextSorteo.name} abre a las ${nextSorteo.openTime}`);\r\n      return nextSorteo.name;\r\n    }\r\n\r\n    // Si no hay próximo sorteo (caso muy raro), buscar el más reciente que cerró\r\n    const recentlyClosedSorteo = this.getRecentlyClosedSorteo(currentTimeInMinutes);\r\n    if (recentlyClosedSorteo) {\r\n      console.log(`Sorteo recién cerrado: ${recentlyClosedSorteo.name}`);\r\n      return recentlyClosedSorteo.name;\r\n    }\r\n\r\n    // Último fallback: usar mañana por defecto\r\n    console.log('Último fallback: usando mañana por defecto');\r\n    return 'manana';\r\n  }\r\n\r\n  // Método para encontrar el sorteo que cerró más recientemente\r\n  private getRecentlyClosedSorteo(currentTotalMinutes: number): any {\r\n    const sorteos = this.sorteoService.getAllSorteos();\r\n    let recentlyClosedSorteo: any = null;\r\n    let minTimeSinceClosure = Infinity;\r\n    \r\n    for (const sorteo of sorteos) {\r\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\r\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\r\n      \r\n      let timeSinceClosure: number;\r\n      \r\n      if (sorteo.name === 'noche' && closeTimeInMinutes < currentTotalMinutes) {\r\n        // Sorteo nocturno que cerró hoy muy temprano\r\n        timeSinceClosure = currentTotalMinutes - closeTimeInMinutes;\r\n      } else if (closeTimeInMinutes < currentTotalMinutes) {\r\n        // Sorteo que cerró hoy\r\n        timeSinceClosure = currentTotalMinutes - closeTimeInMinutes;\r\n      } else {\r\n        // Sorteo que cerrará más tarde o mañana\r\n        timeSinceClosure = (24 * 60) - (closeTimeInMinutes - currentTotalMinutes);\r\n      }\r\n      \r\n      if (timeSinceClosure < minTimeSinceClosure && timeSinceClosure > 0) {\r\n        minTimeSinceClosure = timeSinceClosure;\r\n        recentlyClosedSorteo = sorteo;\r\n      }\r\n    }\r\n    \r\n    return recentlyClosedSorteo;\r\n  }\r\n\r\n\r\n  async setActiveTab(tab: 'manana' | 'tarde' | 'noche'): Promise<void> {\r\n    this.activeTab = tab;\r\n    // Ya no necesitamos cargar números vendidos porque ya están cargados en loadAllSorteoData\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  // Método eliminado - ya no es necesario porque cargamos todo de una vez\r\n  // private async loadNumerosVendidosForTab() - reemplazado por loadSorteoDataOptimized\r\n\r\n  async loadSorteoData(sorteo: string): Promise<void> {\r\n    // Este método ya no es necesario porque cargamos todo de una vez\r\n    // Lo mantenemos por compatibilidad pero no hace nada\r\n    return;\r\n  }\r\n\r\n  getSorteoTotalVendido(sorteo: string): number {\r\n    return this.sorteoData[sorteo]?.totalVendido || 0;\r\n  }\r\n\r\n  getSorteoNumeroGanador(sorteo: string): number | null {\r\n    return this.sorteoData[sorteo]?.numeroGanador || null;\r\n  }\r\n\r\n  getSorteoTotalPagar(sorteo: string): number {\r\n    return this.sorteoData[sorteo]?.totalPagar || 0;\r\n  }\r\n\r\n  getSorteoNumerosVendidos(sorteo: string): Array<{ numero: number, total: number }> {\r\n    const numerosVendidos = this.sorteoData[sorteo]?.numerosVendidos || {};\r\n    return Object.keys(numerosVendidos).map(numero => ({\r\n      numero: parseInt(numero),\r\n      total: numerosVendidos[numero]\r\n    })).sort((a, b) => a.numero - b.numero); // Ordenar por número ascendente (00-99)\r\n  }\r\n\r\n  private calculateTotalPayout(sorteo: string, numeroGanador: number, factor: number): number {\r\n    const numerosVendidos = this.sorteoData[sorteo]?.numerosVendidos || {};\r\n    if (numerosVendidos[numeroGanador]) {\r\n      return numerosVendidos[numeroGanador] * factor;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n","<!-- NUEVA INTERFAZ BASADA EN MOCKUPS -->\r\n<div class=\"lottery-interface\">\r\n  <!-- Header -->\r\n  <div class=\"header-bar\">\r\n    <div class=\"time-display\">\r\n      <span class=\"time-label\">Hora Honduras:</span>\r\n      <span class=\"time-value\">{{ currentHondurasTime }}</span>\r\n    </div>\r\n    \r\n    <div class=\"sucursal-title\">\r\n      <h2>{{ currentUser?.sucursal || 'Sucursal 1' }}</h2>\r\n    </div>\r\n    \r\n    <button class=\"btn-header btn-cerrar\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n      Cerrar Sesión\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Contenido Principal -->\r\n  <div class=\"main-content\">\r\n    \r\n    <!-- Vista 1: Pantalla Principal con Botón VENTA -->\r\n    <div *ngIf=\"selectedNumbers.length === 0\" class=\"venta-screen\">\r\n      <div class=\"venta-button-container\">\r\n        <button class=\"btn-venta\" \r\n                (click)=\"openNumberModal()\" \r\n                [disabled]=\"isLoading || isBlocked || !isSorteoOpen\">\r\n          VENTA\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Info del sorteo -->\r\n      <div class=\"sorteo-info\" *ngIf=\"currentSorteo\">\r\n        <div class=\"alert alert-info\">\r\n          <strong>{{ currentSorteo.label }}</strong> - \r\n          <span *ngIf=\"isSorteoOpen\" class=\"text-success\">\r\n            Abierto (cierra {{ timeUntilClose }})\r\n          </span>\r\n          <span *ngIf=\"!isSorteoOpen\" class=\"text-danger\">\r\n            Cerrado\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Mensaje de bloqueo mejorado -->\r\n      <div *ngIf=\"isBlocked\" class=\"alert alert-danger block-info\">\r\n        <div class=\"block-header\">\r\n          <i class=\"fas fa-lock\"></i> \r\n          <strong>{{ blockMessage }}</strong>\r\n        </div>\r\n        \r\n        <div class=\"block-details\" *ngIf=\"blockDetail\">\r\n          <p>{{ blockDetail }}</p>\r\n        </div>\r\n        \r\n        <!-- Información detallada del próximo sorteo (solo cuando no hay sorteo activo) -->\r\n        <div *ngIf=\"nextSorteoName && nextSorteoOpenTime\" class=\"next-sorteo-info\">\r\n          <div class=\"next-sorteo-card\">\r\n            <div class=\"sorteo-name\">\r\n              <i class=\"fas fa-clock\"></i>\r\n              <span>{{ nextSorteoName }}</span>\r\n            </div>\r\n            <div class=\"opening-time\">\r\n              <span class=\"label\">Abre a las:</span>\r\n              <span class=\"time\">{{ nextSorteoOpenTime }}</span>\r\n            </div>\r\n            <div class=\"countdown\" *ngIf=\"timeUntilNextOpening\">\r\n              <span class=\"label\">Tiempo restante:</span>\r\n              <span class=\"time-remaining\">{{ timeUntilNextOpening }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Mensaje para bloqueo por cierre (últimos 5 minutos) -->\r\n        <div *ngIf=\"!nextSorteoName && blockDetail.includes('minutos')\" class=\"closing-warning\">\r\n          <i class=\"fas fa-exclamation-triangle\"></i>\r\n          <span>El sorteo cerrará pronto</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Vista 2: Tabla de Jugadas -->\r\n    <div *ngIf=\"selectedNumbers.length > 0\" class=\"jugadas-screen\">\r\n      \r\n      <!-- Tabla de jugadas -->\r\n      <div class=\"jugadas-table\">\r\n        <div class=\"table-header\">\r\n          <div class=\"col-numero\">#</div>\r\n          <div class=\"col-monto\">Monto</div>\r\n          <div class=\"col-accion\"></div>\r\n        </div>\r\n        \r\n        <div class=\"table-body\">\r\n          <div *ngFor=\"let item of selectedNumbers; let i = index; trackBy: trackByIndex\" \r\n               class=\"table-row\">\r\n            <div class=\"col-numero\">{{ item.numero.toString().padStart(2, '0') }}</div>\r\n            <div class=\"col-monto\">L {{ item.monto.toFixed(0) }}</div>\r\n            <div class=\"col-accion\">\r\n              <button class=\"btn-remove\" (click)=\"removeNumber(i)\" [disabled]=\"isLoading\">\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Total a Pagar -->\r\n      <div class=\"total-container\">\r\n        <div class=\"total-card\">\r\n          <div class=\"total-label\">Total a Pagar:</div>\r\n          <div class=\"total-amount\">L {{ getTotal().toFixed(2) }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Botón Agregar más números -->\r\n      <div class=\"add-more-container\">\r\n        <button class=\"btn-add-more\" \r\n                (click)=\"openNumberModal()\" \r\n                [disabled]=\"isLoading || isBlocked\">\r\n          + Agregar Número\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Botón PAGAR -->\r\n      <div class=\"pagar-container\">\r\n        <button class=\"btn-pagar\" \r\n                (click)=\"processSale()\" \r\n                [disabled]=\"selectedNumbers.length === 0 || isLoading || isBlocked\">\r\n          PAGAR\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- TABS DE SORTEOS -->\r\n  <div class=\"sorteos-tabs-section\">\r\n    <div class=\"tabs-header\">\r\n      <button class=\"tab-btn\" \r\n              [class.active]=\"activeTab === 'manana'\"\r\n              (click)=\"setActiveTab('manana')\">\r\n        <i class=\"fas fa-sun\"></i> Mañana\r\n      </button>\r\n      <button class=\"tab-btn\" \r\n              [class.active]=\"activeTab === 'tarde'\"\r\n              (click)=\"setActiveTab('tarde')\">\r\n        <i class=\"fas fa-cloud-sun\"></i> Tarde\r\n      </button>\r\n      <button class=\"tab-btn\" \r\n              [class.active]=\"activeTab === 'noche'\"\r\n              (click)=\"setActiveTab('noche')\">\r\n        <i class=\"fas fa-moon\"></i> Noche\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <!-- Tab Mañana -->\r\n      <div *ngIf=\"activeTab === 'manana'\" class=\"tab-panel\">\r\n        <div class=\"sorteo-summary\">\r\n          <div class=\"summary-card\">\r\n            <div class=\"summary-label\">Total Vendido</div>\r\n            <div class=\"summary-value\">L {{ getSorteoTotalVendido('manana').toFixed(2) }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoNumeroGanador('manana') !== null\">\r\n            <div class=\"summary-label\">Número Ganador</div>\r\n            <div class=\"summary-value winner-number\">{{ getSorteoNumeroGanador('manana')!.toString().padStart(2, '0') }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoTotalPagar('manana') > 0\">\r\n            <div class=\"summary-label\">Total a Pagar</div>\r\n            <div class=\"summary-value payout\">L {{ getSorteoTotalPagar('manana').toFixed(2) }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"numeros-vendidos\">\r\n          <h5>Números Vendidos</h5>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('manana').length > 0\" class=\"numeros-grid\">\r\n            <div *ngFor=\"let numero of getSorteoNumerosVendidos('manana')\" class=\"numero-vendido-item\">\r\n              <span class=\"numero\">{{ numero.numero.toString().padStart(2, '0') }}</span>\r\n              <span class=\"monto\">L {{ numero.total.toFixed(0) }}</span>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('manana').length === 0\" class=\"no-data\">\r\n            <p>No hay números vendidos para este sorteo</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Tab Tarde -->\r\n      <div *ngIf=\"activeTab === 'tarde'\" class=\"tab-panel\">\r\n        <div class=\"sorteo-summary\">\r\n          <div class=\"summary-card\">\r\n            <div class=\"summary-label\">Total Vendido</div>\r\n            <div class=\"summary-value\">L {{ getSorteoTotalVendido('tarde').toFixed(2) }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoNumeroGanador('tarde') !== null\">\r\n            <div class=\"summary-label\">Número Ganador</div>\r\n            <div class=\"summary-value winner-number\">{{ getSorteoNumeroGanador('tarde')!.toString().padStart(2, '0') }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoTotalPagar('tarde') > 0\">\r\n            <div class=\"summary-label\">Total a Pagar</div>\r\n            <div class=\"summary-value payout\">L {{ getSorteoTotalPagar('tarde').toFixed(2) }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"numeros-vendidos\">\r\n          <h5>Números Vendidos</h5>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('tarde').length > 0\" class=\"numeros-grid\">\r\n            <div *ngFor=\"let numero of getSorteoNumerosVendidos('tarde')\" class=\"numero-vendido-item\">\r\n              <span class=\"numero\">{{ numero.numero.toString().padStart(2, '0') }}</span>\r\n              <span class=\"monto\">L {{ numero.total.toFixed(0) }}</span>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('tarde').length === 0\" class=\"no-data\">\r\n            <p>No hay números vendidos para este sorteo</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Tab Noche -->\r\n      <div *ngIf=\"activeTab === 'noche'\" class=\"tab-panel\">\r\n        <div class=\"sorteo-summary\">\r\n          <div class=\"summary-card\">\r\n            <div class=\"summary-label\">Total Vendido</div>\r\n            <div class=\"summary-value\">L {{ getSorteoTotalVendido('noche').toFixed(2) }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoNumeroGanador('noche') !== null\">\r\n            <div class=\"summary-label\">Número Ganador</div>\r\n            <div class=\"summary-value winner-number\">{{ getSorteoNumeroGanador('noche')!.toString().padStart(2, '0') }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoTotalPagar('noche') > 0\">\r\n            <div class=\"summary-label\">Total a Pagar</div>\r\n            <div class=\"summary-value payout\">L {{ getSorteoTotalPagar('noche').toFixed(2) }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"numeros-vendidos\">\r\n          <h5>Números Vendidos</h5>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('noche').length > 0\" class=\"numeros-grid\">\r\n            <div *ngFor=\"let numero of getSorteoNumerosVendidos('noche')\" class=\"numero-vendido-item\">\r\n              <span class=\"numero\">{{ numero.numero.toString().padStart(2, '0') }}</span>\r\n              <span class=\"monto\">L {{ numero.total.toFixed(0) }}</span>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('noche').length === 0\" class=\"no-data\">\r\n            <p>No hay números vendidos para este sorteo</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- Modal 1: Selección de Número -->\r\n<div class=\"modal\" [style.display]=\"showNumberModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showNumberModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-hashtag\"></i> Seleccionar Número\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"calculator-container\">\r\n          <!-- Display del número -->\r\n          <div class=\"calculator-display\">\r\n            <span class=\"display-label\">NUMERO</span>\r\n            <div class=\"display-value\">{{ (modalNumberInput || '00').padStart(2, '0') }}</div>\r\n          </div>\r\n          \r\n          <!-- Teclado numérico -->\r\n          <div class=\"calculator-keypad\">\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(1); $event.stopPropagation()\">1</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(2); $event.stopPropagation()\">2</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(3); $event.stopPropagation()\">3</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(4); $event.stopPropagation()\">4</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(5); $event.stopPropagation()\">5</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(6); $event.stopPropagation()\">6</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(7); $event.stopPropagation()\">7</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(8); $event.stopPropagation()\">8</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(9); $event.stopPropagation()\">9</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(0); $event.stopPropagation()\">0</button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-clear\" (click)=\"clearModalNumber(); $event.stopPropagation()\">\r\n                C\r\n              </button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-accept\" (click)=\"acceptModalNumber(); $event.stopPropagation()\" \r\n                      [disabled]=\"!modalNumberInput\">\r\n                Aceptar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 2: Selección de Apuesta -->\r\n<div class=\"modal\" [style.display]=\"showAmountModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showAmountModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-dollar-sign\"></i> Ingresar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"stepper-container\">\r\n          \r\n          <!-- Control Stepper -->\r\n          <div class=\"stepper-controls\">\r\n            <button type=\"button\" \r\n                    class=\"stepper-btn stepper-minus\" \r\n                    (click)=\"decreaseAmount(); $event.stopPropagation()\"\r\n                    [disabled]=\"stepperAmount <= 5\">\r\n              <i class=\"fas fa-minus\"></i>\r\n            </button>\r\n            \r\n            <div class=\"stepper-value\">\r\n              <span class=\"amount-large\">{{ stepperAmount }}</span>\r\n              <span class=\"currency\">Lempiras</span>\r\n            </div>\r\n            \r\n            <button type=\"button\" \r\n                    class=\"stepper-btn stepper-plus\" \r\n                    (click)=\"increaseAmount(); $event.stopPropagation()\"\r\n                    [disabled]=\"stepperAmount >= maxAmount\">\r\n              <i class=\"fas fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n          \r\n          <!-- Botones de acción -->\r\n          <div class=\"stepper-actions\">\r\n            <button type=\"button\" \r\n                    class=\"btn btn-outline-secondary btn-lg stepper-action-btn\" \r\n                    (click)=\"resetAmount(); $event.stopPropagation()\">\r\n              <i class=\"fas fa-redo\"></i> Reiniciar\r\n            </button>\r\n            \r\n            <button type=\"button\" \r\n                    class=\"btn btn-success btn-lg stepper-action-btn\" \r\n                    (click)=\"acceptStepperAmount(); $event.stopPropagation()\"\r\n                    [disabled]=\"stepperAmount < 5\">\r\n              <i class=\"fas fa-check\"></i> Aceptar\r\n            </button>\r\n          </div>\r\n          \r\n          <!-- Información adicional -->\r\n          <div class=\"stepper-info\">\r\n            <small class=\"text-muted\">\r\n              <i class=\"fas fa-info-circle\"></i> \r\n              Monto mínimo: L 5 • Se incrementa de 5 en 5\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 3: Confirmación -->\r\n<div class=\"modal\" [style.display]=\"showConfirmModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showConfirmModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-check-circle\"></i> Confirmar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"confirmation-container\">\r\n          <div class=\"confirmation-card\">\r\n            <div class=\"number-display-large\">\r\n              # {{ tempNumber !== null ? tempNumber.toString().padStart(2, '0') : '00' }}\r\n            </div>\r\n            <div class=\"amount-display\">\r\n              APUESTA: L {{ tempAmount || 0 }}\r\n            </div>\r\n            <div class=\"confirmation-buttons\">\r\n              <button type=\"button\" class=\"btn btn-success btn-lg\" (click)=\"confirmAddNumber()\">\r\n                <i class=\"fas fa-check\"></i> CONFIRMAR\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-secondary btn-lg\" (click)=\"cancelAddNumber()\">\r\n                <i class=\"fas fa-times\"></i> Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Eliminar el backdrop separado ya que usamos el modal completo -->\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { User, UserManagement } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.scss']\r\n})\r\nexport class UserManagementComponent implements OnInit, OnDestroy {\r\n  currentUser: any = null;\r\n  users: UserManagement[] = [];\r\n  isLoading: boolean = false;\r\n\r\n  // Modal para crear/editar usuario\r\n  showUserModal: boolean = false;\r\n  isEditMode: boolean = false;\r\n  selectedUser: UserManagement | null = null;\r\n\r\n  // Formulario de usuario\r\n  userForm = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    role: 'sucursal' as 'admin' | 'sucursal',\r\n    sucursal: '',\r\n    active: true\r\n  };\r\n\r\n  // Lista de sucursales predefinidas para autocompletado\r\n  sucursalesSugeridas: string[] = [\r\n    'Sucursal Central',\r\n    'Sucursal Norte', \r\n    'Sucursal Sur',\r\n    'Sucursal Este',\r\n    'Sucursal Oeste'\r\n  ];\r\n\r\n  private userSubscription?: Subscription;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSubscription = this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'admin') {\r\n        this.router.navigate(['/login']);\r\n        return;\r\n      }\r\n    });\r\n\r\n    this.loadUsers();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async loadUsers(): Promise<void> {\r\n    console.log('loadUsers iniciado, isLoading:', this.isLoading);\r\n    this.isLoading = true;\r\n    try {\r\n      console.log('Llamando getAllUsers...');\r\n      this.users = await this.supabaseService.getAllUsers();\r\n      console.log('Usuarios cargados:', this.users);\r\n    } catch (error) {\r\n      console.error('Error al cargar usuarios:', error);\r\n      this.notificationService.showError('Error al cargar usuarios');\r\n    } finally {\r\n      this.isLoading = false;\r\n      console.log('loadUsers terminado, isLoading:', this.isLoading);\r\n    }\r\n  }\r\n\r\n  openCreateUserModal(): void {\r\n    this.isEditMode = false;\r\n    this.selectedUser = null;\r\n    this.resetForm();\r\n    this.showUserModal = true;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  openEditUserModal(user: UserManagement): void {\r\n    this.isEditMode = true;\r\n    this.selectedUser = user;\r\n    this.userForm = {\r\n      email: user.email,\r\n      password: '', // No mostramos la contraseña actual\r\n      confirmPassword: '',\r\n      role: user.role,\r\n      sucursal: user.sucursal || '',\r\n      active: user.active\r\n    };\r\n    this.showUserModal = true;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n  }\r\n\r\n  closeUserModal(): void {\r\n    this.showUserModal = false;\r\n    this.resetForm();\r\n    this.selectedUser = null;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n  }\r\n\r\n  goToMainMenu(): void {\r\n    this.router.navigate(['/admin']);\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.userForm = {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n  }\r\n\r\n  async saveUser(): Promise<void> {\r\n    if (!this.validateForm()) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      if (this.isEditMode && this.selectedUser) {\r\n        // Actualizar usuario existente\r\n        await this.supabaseService.updateExistingUser(this.selectedUser.id, {\r\n          email: this.userForm.email,\r\n          role: this.userForm.role as 'admin' | 'sucursal',\r\n          sucursal: this.userForm.sucursal,\r\n          active: this.userForm.active\r\n        });\r\n\r\n        // Si se proporcionó una nueva contraseña, actualizarla\r\n        if (this.userForm.password && this.userForm.password.trim() !== '') {\r\n          await this.supabaseService.updateUserPassword(this.selectedUser.id, this.userForm.password);\r\n          this.notificationService.showSuccess('Usuario y contraseña actualizados exitosamente');\r\n        } else {\r\n          this.notificationService.showSuccess('Usuario actualizado exitosamente');\r\n        }\r\n      } else {\r\n        // Crear nuevo usuario\r\n        await this.supabaseService.createNewUser({\r\n          email: this.userForm.email,\r\n          role: this.userForm.role as 'admin' | 'sucursal',\r\n          sucursal: this.userForm.sucursal,\r\n          active: this.userForm.active\r\n        });\r\n        this.notificationService.showSuccess('Usuario creado exitosamente con contraseña temporal: LoteriaTemporal123!');\r\n      }\r\n\r\n      this.closeUserModal();\r\n      await this.loadUsers();\r\n    } catch (error: any) {\r\n      this.notificationService.showError(error.message || 'Error al guardar usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async deleteUser(user: UserManagement): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Eliminar usuario',\r\n      `¿Está seguro que desea eliminar al usuario ${user.email}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      await this.supabaseService.deleteExistingUser(user.id);\r\n      this.notificationService.showSuccess('Usuario eliminado exitosamente');\r\n      await this.loadUsers();\r\n    } catch (error: any) {\r\n      this.notificationService.showError(error.message || 'Error al eliminar usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async toggleUserStatus(user: UserManagement): Promise<void> {\r\n    const newStatus = !user.active;\r\n    const action = newStatus ? 'activar' : 'desactivar';\r\n    \r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      `${action.charAt(0).toUpperCase() + action.slice(1)} usuario`,\r\n      `¿Está seguro que desea ${action} al usuario ${user.email}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      await this.supabaseService.toggleExistingUserStatus(user.id);\r\n      this.notificationService.showSuccess(`Usuario ${action}ado exitosamente`);\r\n      await this.loadUsers();\r\n    } catch (error: any) {\r\n      this.notificationService.showError(error.message || `Error al ${action} usuario`);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private validateForm(): boolean {\r\n    if (!this.userForm.email) {\r\n      this.notificationService.showError('El email es requerido');\r\n      return false;\r\n    }\r\n\r\n    if (!this.isEditMode && !this.userForm.password) {\r\n      this.notificationService.showError('La contraseña es requerida para usuarios nuevos');\r\n      return false;\r\n    }\r\n\r\n    if (this.userForm.password && this.userForm.password.length < 6) {\r\n      this.notificationService.showError('La contraseña debe tener al menos 6 caracteres');\r\n      return false;\r\n    }\r\n\r\n    if (this.userForm.password && this.userForm.password !== this.userForm.confirmPassword) {\r\n      this.notificationService.showError('Las contraseñas no coinciden');\r\n      return false;\r\n    }\r\n\r\n    if (this.userForm.role === 'sucursal' && !this.userForm.sucursal.trim()) {\r\n      this.notificationService.showError('La sucursal es requerida para usuarios de tipo sucursal');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getRoleLabel(role: string): string {\r\n    return role === 'admin' ? 'Administrador' : 'Vendedor';\r\n  }\r\n\r\n  getStatusLabel(active: boolean): string {\r\n    return active ? 'Activo' : 'Inactivo';\r\n  }\r\n\r\n  getStatusClass(active: boolean): string {\r\n    return active ? 'status-active' : 'status-inactive';\r\n  }\r\n\r\n  // Función de trackBy para optimizar el rendimiento del ngFor\r\n  trackByUserId(index: number, user: UserManagement): string {\r\n    return user.id;\r\n  }\r\n\r\n}\r\n","<div class=\"user-management-container\">\r\n  <div class=\"header\">\r\n    <div class=\"header-left\">\r\n      <button class=\"btn-secondary\" \r\n              (click)=\"goToMainMenu()\" \r\n              [disabled]=\"isLoading\"\r\n              title=\"Regresar al menú principal\">\r\n        <i class=\"fas fa-arrow-left\"></i> Menú Principal\r\n      </button>\r\n      <h2>Gestión de Usuarios</h2>\r\n    </div>\r\n    <button class=\"btn-primary\" \r\n            (click)=\"openCreateUserModal()\" \r\n            [disabled]=\"isLoading\"\r\n            title=\"Crear nuevo usuario\">\r\n      <i class=\"fas fa-plus\"></i> Crear Usuario\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Tabla de usuarios -->\r\n  <div class=\"users-table-container\">\r\n    <table class=\"users-table\" *ngIf=\"!isLoading && users.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <th>Email</th>\r\n          <th>Rol</th>\r\n          <th>Sucursal</th>\r\n          <th>Estado</th>\r\n          <th>Fecha Creación</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of users; trackBy: trackByUserId\">\r\n          <td>{{ user.email }}</td>\r\n          <td>\r\n            <span class=\"role-badge\" [class]=\"'role-' + user.role\">\r\n              {{ getRoleLabel(user.role) }}\r\n            </span>\r\n          </td>\r\n          <td>{{ user.sucursal || '-' }}</td>\r\n          <td>\r\n            <span class=\"status-badge\" [class]=\"getStatusClass(user.active)\">\r\n              {{ getStatusLabel(user.active) }}\r\n            </span>\r\n          </td>\r\n          <td>{{ user.created_at | date:'dd/MM/yyyy' }}</td>\r\n          <td class=\"actions-cell\">\r\n            <button class=\"btn-icon btn-edit\" \r\n                    (click)=\"openEditUserModal(user)\" \r\n                    [disabled]=\"isLoading\"\r\n                    title=\"Editar usuario\">\r\n              <i class=\"fas fa-edit\"></i>\r\n            </button>\r\n            <button class=\"btn-icon btn-toggle\" \r\n                    (click)=\"toggleUserStatus(user)\" \r\n                    [disabled]=\"isLoading\"\r\n                    [title]=\"user.active ? 'Desactivar usuario' : 'Activar usuario'\">\r\n              <i class=\"fas\" [class]=\"user.active ? 'fa-eye-slash' : 'fa-eye'\"></i>\r\n            </button>\r\n            <button class=\"btn-icon btn-delete\" \r\n                    (click)=\"deleteUser(user)\" \r\n                    [disabled]=\"isLoading\"\r\n                    title=\"Eliminar usuario\">\r\n              <i class=\"fas fa-trash\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Estado de carga -->\r\n    <div class=\"loading-state\" *ngIf=\"isLoading\">\r\n      <i class=\"fas fa-spinner fa-spin\"></i>\r\n      <p>Cargando usuarios...</p>\r\n    </div>\r\n\r\n    <!-- Estado vacío -->\r\n    <div class=\"empty-state\" *ngIf=\"!isLoading && users.length === 0\">\r\n      <i class=\"fas fa-users\"></i>\r\n      <h3>No hay usuarios registrados</h3>\r\n      <p>Comience creando el primer usuario del sistema</p>\r\n      <button class=\"btn-primary\" (click)=\"openCreateUserModal()\">\r\n        <i class=\"fas fa-plus\"></i> Crear Primer Usuario\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para crear/editar usuario -->\r\n<div class=\"modal-overlay\" *ngIf=\"showUserModal\" (click)=\"closeUserModal()\">\r\n  <div class=\"modal-container\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>{{ isEditMode ? 'Editar Usuario' : 'Crear Usuario' }}</h3>\r\n      <button class=\"btn-close\" (click)=\"closeUserModal()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n      <form class=\"user-form\">\r\n        <!-- Email -->\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email *</label>\r\n          <input type=\"email\" \r\n                 id=\"email\" \r\n                 [(ngModel)]=\"userForm.email\" \r\n                 name=\"email\"\r\n                 [disabled]=\"isEditMode\"\r\n                 placeholder=\"ejemplo@correo.com\"\r\n                 required>\r\n        </div>\r\n\r\n        <!-- Contraseña -->\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">\r\n            Contraseña {{ isEditMode ? '(dejar vacío para mantener actual)' : '*' }}\r\n          </label>\r\n          <input type=\"password\" \r\n                 id=\"password\" \r\n                 [(ngModel)]=\"userForm.password\" \r\n                 name=\"password\"\r\n                 placeholder=\"Mínimo 6 caracteres\"\r\n                 [required]=\"!isEditMode\">\r\n        </div>\r\n\r\n        <!-- Confirmar Contraseña (siempre mostrar para usuarios nuevos, o si hay contraseña para editar) -->\r\n        <div class=\"form-group\" *ngIf=\"!isEditMode || userForm.password\">\r\n          <label for=\"confirmPassword\">Confirmar Contraseña *</label>\r\n          <input type=\"password\" \r\n                 id=\"confirmPassword\" \r\n                 [(ngModel)]=\"userForm.confirmPassword\" \r\n                 name=\"confirmPassword\"\r\n                 placeholder=\"Repetir la contraseña\"\r\n                 [required]=\"!isEditMode || userForm.password\">\r\n        </div>\r\n\r\n        <!-- Rol -->\r\n        <div class=\"form-group\">\r\n          <label for=\"role\">Rol *</label>\r\n          <select id=\"role\" \r\n                  [(ngModel)]=\"userForm.role\" \r\n                  name=\"role\"\r\n                  required>\r\n            <option value=\"admin\">Administrador</option>\r\n            <option value=\"sucursal\">Vendedor</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Sucursal (solo para rol sucursal) -->\r\n        <div class=\"form-group\" *ngIf=\"userForm.role === 'sucursal'\">\r\n          <label for=\"sucursal\">Sucursal *</label>\r\n          <input type=\"text\" \r\n                 id=\"sucursal\" \r\n                 [(ngModel)]=\"userForm.sucursal\" \r\n                 name=\"sucursal\"\r\n                 placeholder=\"Ingrese el nombre de la sucursal\"\r\n                 list=\"sucursales-list\"\r\n                 required>\r\n          <datalist id=\"sucursales-list\">\r\n            <option *ngFor=\"let sucursal of sucursalesSugeridas\" [value]=\"sucursal\">\r\n          </datalist>\r\n          <small class=\"form-help\">Puedes escribir cualquier nombre o seleccionar una opción</small>\r\n        </div>\r\n\r\n        <!-- Estado activo -->\r\n        <div class=\"form-group checkbox-group\">\r\n          <label class=\"checkbox-label\">\r\n            <input type=\"checkbox\" \r\n                   [(ngModel)]=\"userForm.active\" \r\n                   name=\"active\">\r\n            <span class=\"checkmark\"></span>\r\n            Usuario activo\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-secondary\" (click)=\"closeUserModal()\" [disabled]=\"isLoading\">\r\n        Cancelar\r\n      </button>\r\n      <button class=\"btn-primary\" (click)=\"saveUser()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading\"></i>\r\n        {{ isEditMode ? 'Actualizar' : 'Crear' }} Usuario\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(8000), // Aumentar timeout a 8 segundos\r\n      map(user => {\r\n        const isAdmin = user?.role === 'admin';\r\n        return isAdmin;\r\n      }),\r\n      tap(isAdmin => {\r\n        if (!isAdmin) {\r\n          this.router.navigate(['/sucursal']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(8000), // Aumentar timeout a 8 segundos\r\n      map(user => {\r\n        return !!user;\r\n      }),\r\n      tap(isAuthenticated => {\r\n        if (!isAuthenticated) {\r\n          this.router.navigate(['/login']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        // Dar más tiempo antes de redirigir\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export interface User {\r\n  id: string;\r\n  email: string;\r\n  role: 'admin' | 'sucursal';\r\n  sucursal?: string;\r\n  active: boolean;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface UserManagement {\r\n  id: string;\r\n  email: string;\r\n  role: 'admin' | 'sucursal';\r\n  sucursal?: string;\r\n  active: boolean;\r\n  createdAt: Date;\r\n  password?: string;\r\n  raw_user_meta_data?: any;\r\n  created_at?: string;\r\n}\r\n\r\nexport interface Sale {\r\n  id: string;\r\n  userId: string;\r\n  sucursal: string;\r\n  sorteo: 'manana' | 'tarde' | 'noche';\r\n  fecha: Date;\r\n  total: number;\r\n  numeroRecibo: string; // Número único de recibo\r\n  correlativo: number; // Correlativo secuencial por sucursal\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface SaleDetail {\r\n  id: string;\r\n  saleId: string;\r\n  numero: number;\r\n  monto: number;\r\n}\r\n\r\nexport interface Sorteo {\r\n  id: string;\r\n  fecha: Date;\r\n  sorteo: 'manana' | 'tarde' | 'noche';\r\n  horaCierre: Date;\r\n  numeroGanador?: string;\r\n  factorMultiplicador: number; // Factor para calcular ganancias (ej: 70)\r\n  totalVendido: number;\r\n  totalPagado: number;\r\n  gananciaNeta: number;\r\n  cerrado: boolean;\r\n  sucursal?: string; // Nueva propiedad para sorteos por sucursal\r\n}\r\n\r\nexport interface SucursalFactor {\r\n  sucursal: string;\r\n  factor: number;\r\n  usuario?: string;\r\n  email?: string;\r\n}\r\n\r\nexport interface SorteoSchedule {\r\n  name: 'manana' | 'tarde' | 'noche';\r\n  label: string;\r\n  closeTime: string; // \"10:55\", \"14:55\", \"20:55\"\r\n  openTime: string; // \"06:00\", \"13:00\", \"20:00\"\r\n}\r\n\r\nexport const SORTEO_SCHEDULES: SorteoSchedule[] = [\r\n  { name: 'manana', label: 'Mañana', closeTime: '9:15' , openTime: '00:47' },\r\n  { name: 'tarde', label: 'Tarde', closeTime: '14:55', openTime: '13:00' },\r\n  { name: 'noche', label: 'Noche', closeTime: '22:40', openTime: '20:00' }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport * as XLSX from 'xlsx';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { saveAs } from 'file-saver';\r\nimport { SupabaseService } from './supabase.service';\r\n\r\ndeclare module 'jspdf' {\r\n  interface jsPDF {\r\n    autoTable: typeof autoTable;\r\n  }\r\n}\r\n\r\nexport interface ReportData {\r\n  // Resumen General\r\n  resumenGeneral: {\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    ventasTotales: number;\r\n    fechaReporte: string;\r\n    horaReporte: string;\r\n    filtroAplicado: string;\r\n  };\r\n  \r\n  // Resumen por Sorteo\r\n  resumenPorSorteo: Array<{\r\n    sorteo: string;\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    ventasTotales: number;\r\n    estado: string;\r\n    numeroGanador?: string;\r\n    factor?: number;\r\n  }>;\r\n  \r\n  // Resumen por Sucursal (con factor)\r\n  resumenPorSucursal: Array<{\r\n    sucursal: string;\r\n    factor: number;\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    ventasTotales: number;\r\n  }>;\r\n  \r\n  // Números vendidos por sorteo (formato tablero)\r\n  numerosPorSorteo: Array<{\r\n    sorteo: string;\r\n    sucursal: string;\r\n    numeros: Array<{\r\n      numero: number;\r\n      totalVendido: number;\r\n      cantidadVentas: number;\r\n      porcentaje: number;\r\n    }>;\r\n    totalSorteoSucursal: number;\r\n  }>;\r\n  \r\n  // Detalle general de ventas\r\n  detalleVentas: Array<{\r\n    numeroRecibo: string;\r\n    fecha: string;\r\n    hora: string;\r\n    sorteo: string;\r\n    sucursal: string;\r\n    numeros: string;\r\n    total: number;\r\n    estado: string;\r\n  }>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExportService {\r\n\r\n  constructor(private supabaseService: SupabaseService) { }\r\n\r\n  async exportToExcel(data: any, filename: string = 'reporte-diario'): Promise<void> {\r\n    try {\r\n      // Crear un nuevo workbook\r\n      const workbook = XLSX.utils.book_new();\r\n\r\n      // ===== HOJA 1: RESUMEN GENERAL =====\r\n      const resumenData = [\r\n        ['REPORTE DIARIO - SISTEMA DE LOTERÍA'],\r\n        ['Fecha:', data.resumenGeneral.fechaReporte],\r\n        ['Hora:', data.resumenGeneral.horaReporte],\r\n        ['Filtros Aplicados:', data.resumenGeneral.filtroAplicado],\r\n        [''],\r\n        ['RESUMEN GENERAL'],\r\n        ['Indicador', 'Valor'],\r\n        ['Total Vendido', data.resumenGeneral.totalVendido],\r\n        ['Total Pagado', data.resumenGeneral.totalPagado],\r\n        ['Ganancia Neta', data.resumenGeneral.gananciaNeta],\r\n        ['Ventas Totales', data.resumenGeneral.ventasTotales]\r\n      ];\r\n      const wsResumen = XLSX.utils.aoa_to_sheet(resumenData);\r\n      \r\n      // Aplicar formato\r\n      wsResumen['!cols'] = [{ width: 20 }, { width: 15 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsResumen, 'Resumen General');\r\n\r\n      // ===== HOJA 2: RESUMEN POR SORTEO =====\r\n      const sorteoHeaders = ['Sorteo', 'Total Vendido', 'Total Pagado', 'Ganancia Neta', 'Ventas', 'Estado', 'No. Ganador', 'Factor'];\r\n      const sorteoRows = data.resumenPorSorteo.length > 0 \r\n        ? data.resumenPorSorteo.map((s: any) => [\r\n            s.sorteo,\r\n            s.totalVendido,\r\n            s.totalPagado,\r\n            s.gananciaNeta,\r\n            s.ventasTotales,\r\n            s.estado,\r\n            s.numeroGanador,\r\n            s.factor\r\n          ])\r\n        : [['Sin datos', 0, 0, 0, 0, '', '', 0]];\r\n        \r\n      const sorteoData = [\r\n        ['RESUMEN POR SORTEO'],\r\n        [''],\r\n        sorteoHeaders,\r\n        ...sorteoRows\r\n      ];\r\n      const wsSorteo = XLSX.utils.aoa_to_sheet(sorteoData);\r\n      wsSorteo['!cols'] = [{ width: 15 }, { width: 12 }, { width: 12 }, { width: 12 }, { width: 8 }, { width: 10 }, { width: 12 }, { width: 8 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsSorteo, 'Resumen por Sorteo');\r\n\r\n      // ===== HOJA 3: RESUMEN POR SUCURSAL =====\r\n      const sucursalHeaders = ['Sucursal', 'Factor', 'Total Vendido', 'Total Pagado', 'Ganancia Neta', 'Ventas'];\r\n      const sucursalRows = data.resumenPorSucursal.length > 0 \r\n        ? data.resumenPorSucursal.map((s: any) => [\r\n            s.sucursal,\r\n            s.factor,\r\n            s.totalVendido,\r\n            s.totalPagado,\r\n            s.gananciaNeta,\r\n            s.ventasTotales\r\n          ])\r\n        : [['Sin datos', 0, 0, 0, 0, 0]];\r\n        \r\n      const sucursalData = [\r\n        ['RESUMEN POR SUCURSAL'],\r\n        [''],\r\n        sucursalHeaders,\r\n        ...sucursalRows\r\n      ];\r\n      const wsSucursal = XLSX.utils.aoa_to_sheet(sucursalData);\r\n      wsSucursal['!cols'] = [{ width: 15 }, { width: 8 }, { width: 12 }, { width: 12 }, { width: 12 }, { width: 8 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsSucursal, 'Resumen por Sucursal');\r\n\r\n      // ===== HOJA 4: NÚMEROS VENDIDOS POR SORTEO =====\r\n      const numerosData = [['NÚMEROS VENDIDOS POR SORTEO'], ['']];\r\n      \r\n      if (data.numerosPorSorteo.length > 0) {\r\n        data.numerosPorSorteo.forEach((grupo: any) => {\r\n          // Título del grupo\r\n          numerosData.push([`${grupo.sorteo} - ${grupo.sucursal} (Total: L ${grupo.totalSorteoSucursal.toFixed(2)})`]);\r\n          numerosData.push(['Número', 'Total Vendido', 'Cantidad Ventas', 'Porcentaje']);\r\n          \r\n          // Números del grupo\r\n          grupo.numeros.forEach((num: any) => {\r\n            numerosData.push([\r\n              num.numero.toString().padStart(2, '0'),\r\n              num.totalVendido,\r\n              num.cantidadVentas,\r\n              num.porcentaje\r\n            ]);\r\n          });\r\n          \r\n          numerosData.push(['']); // Línea en blanco entre grupos\r\n        });\r\n      } else {\r\n        numerosData.push(['Sin datos de números vendidos']);\r\n      }\r\n      \r\n      const wsNumeros = XLSX.utils.aoa_to_sheet(numerosData);\r\n      wsNumeros['!cols'] = [{ width: 10 }, { width: 12 }, { width: 12 }, { width: 10 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsNumeros, 'Números por Sorteo');\r\n\r\n      // ===== HOJA 5: DETALLE DE VENTAS =====\r\n      const ventasHeaders = ['No. Recibo', 'Fecha', 'Hora', 'Sorteo', 'Sucursal', 'Números', 'Total', 'Estado'];\r\n      const ventasRows = data.detalleVentas.length > 0\r\n        ? data.detalleVentas.map((v: any) => [\r\n            v.numeroRecibo,\r\n            v.fecha,\r\n            v.hora,\r\n            v.sorteo,\r\n            v.sucursal,\r\n            v.numeros,\r\n            v.total,\r\n            v.estado\r\n          ])\r\n        : [['Sin datos', '', '', '', '', '', 0, '']];\r\n        \r\n      const ventasData = [\r\n        ['DETALLE COMPLETO DE VENTAS'],\r\n        [''],\r\n        ventasHeaders,\r\n        ...ventasRows,\r\n        [''],\r\n        ['TOTALES:'],\r\n        ['Total de Ventas:', data.detalleVentas.length],\r\n        ['Monto Total:', data.resumenGeneral.totalVendido]\r\n      ];\r\n      const wsVentas = XLSX.utils.aoa_to_sheet(ventasData);\r\n      wsVentas['!cols'] = [{ width: 12 }, { width: 12 }, { width: 10 }, { width: 12 }, { width: 15 }, { width: 30 }, { width: 10 }, { width: 10 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsVentas, 'Detalle de Ventas');\r\n\r\n      // Generar el archivo Excel con fecha de Honduras\r\n      const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      \r\n      const hondurasDate = this.supabaseService.formatDateTimeLocalHonduras(this.supabaseService.getHondurasDateTime()).split('T')[0];\r\n      saveAs(blob, `${filename}-${hondurasDate}.xlsx`);\r\n\r\n    } catch (error) {\r\n      console.error('Error exportando a Excel:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para exportar Excel tal como se ve en el admin\r\n  async exportVisualToExcel(data: any, filename: string = 'reporte-admin-visual'): Promise<void> {\r\n    try {\r\n      // Crear un nuevo workbook\r\n      const workbook = XLSX.utils.book_new();\r\n\r\n      // ===== HOJA 1: DASHBOARD PRINCIPAL =====\r\n      const dashboardData = [\r\n        ['REPORTE ADMINISTRADOR - SISTEMA DE LOTERÍA'],\r\n        ['Fecha:', data.fechaReporte],\r\n        ['Hora:', data.horaReporte],\r\n        ['Filtros Aplicados:', data.filtroAplicado],\r\n        [''],\r\n        ['DASHBOARD PRINCIPAL'],\r\n        ['Indicador', 'Valor'],\r\n        ['Total Vendido', `L ${data.dashboard.totalVendido.toFixed(2)}`],\r\n        ['Total Pagado', `L ${data.dashboard.totalPagado.toFixed(2)}`],\r\n        ['Ganancia Neta', `L ${data.dashboard.gananciaNeta.toFixed(2)}`],\r\n        ['Ventas Totales', data.dashboard.ventasTotales]\r\n      ];\r\n      const wsDashboard = XLSX.utils.aoa_to_sheet(dashboardData);\r\n      \r\n      // Aplicar formato\r\n      wsDashboard['!cols'] = [{ width: 20 }, { width: 15 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsDashboard, 'Dashboard');\r\n\r\n      // ===== HOJA 2: DETALLE POR SUCURSALES (LA MÁS IMPORTANTE) =====\r\n      const sucursalData = [\r\n        ['DETALLE POR SUCURSALES'],\r\n        [''],\r\n        data.detallePorSucursales.headers,\r\n        ...data.detallePorSucursales.filas.map((fila: any) => {\r\n          // Si ya es un array, usar directamente\r\n          if (Array.isArray(fila)) {\r\n            return fila;\r\n          }\r\n          // Si es un objeto, convertir a array\r\n          return [\r\n            fila.sucursal,\r\n            fila.factor,\r\n            fila.totalVendido,\r\n            fila.totalPagado,\r\n            fila.gananciaNeta\r\n          ];\r\n        }),\r\n        [''],\r\n        ['TOTAL GENERAL'],\r\n        // Manejar totales como array u objeto\r\n        Array.isArray(data.detallePorSucursales.totales) \r\n          ? data.detallePorSucursales.totales\r\n          : [\r\n              data.detallePorSucursales.totales.sucursal,\r\n              data.detallePorSucursales.totales.factor,\r\n              data.detallePorSucursales.totales.totalVendido,\r\n              data.detallePorSucursales.totales.totalPagado,\r\n              data.detallePorSucursales.totales.gananciaNeta\r\n            ]\r\n      ];\r\n      const wsSucursales = XLSX.utils.aoa_to_sheet(sucursalData);\r\n      wsSucursales['!cols'] = [\r\n        { width: 20 }, \r\n        { width: 10 }, \r\n        { width: 15 }, \r\n        { width: 15 }, \r\n        { width: 15 }\r\n      ];\r\n      XLSX.utils.book_append_sheet(workbook, wsSucursales, 'Detalle Sucursales');\r\n\r\n      // ===== HOJA 3: NÚMEROS POR SORTEO =====\r\n      const numerosData = [['NÚMEROS VENDIDOS POR SORTEO'], ['']];\r\n      \r\n      if (data.numerosPorSorteo.length > 0) {\r\n        data.numerosPorSorteo.forEach((sorteoGroup: any) => {\r\n          sorteoGroup.sucursales.forEach((sucursalGroup: any) => {\r\n            // Título del grupo\r\n            numerosData.push([`${sorteoGroup.sorteo} - ${sucursalGroup.sucursal}`]);\r\n            \r\n            // Top 5 si existe\r\n            if (sucursalGroup.topNumeros && sucursalGroup.topNumeros.length > 0) {\r\n              numerosData.push(['Top 5 Números Más Vendidos:']);\r\n              numerosData.push(['Posición', 'Número', 'Total Vendido']);\r\n              \r\n              for (let i = 0; i < Math.min(5, sucursalGroup.topNumeros.length); i++) {\r\n                const num = sucursalGroup.topNumeros[i];\r\n                numerosData.push([\r\n                  `#${i + 1}`,\r\n                  num.numero.toString().padStart(2, '0'),\r\n                  num.totalVendido\r\n                ]);\r\n              }\r\n            }\r\n            \r\n            // Tablero completo\r\n            if (sucursalGroup.numeros && sucursalGroup.numeros.length > 0) {\r\n              numerosData.push(['']);\r\n              numerosData.push(['Tablero Completo (00-99):']);\r\n              numerosData.push(['Número', 'Total Vendido', 'Cantidad Ventas']);\r\n              \r\n              sucursalGroup.numeros.forEach((num: any) => {\r\n                numerosData.push([\r\n                  num.numero.toString().padStart(2, '0'),\r\n                  num.totalVendido,\r\n                  num.cantidadVentas\r\n                ]);\r\n              });\r\n            }\r\n            \r\n            numerosData.push(['']); // Línea en blanco entre grupos\r\n          });\r\n        });\r\n      } else {\r\n        numerosData.push(['Sin datos de números vendidos']);\r\n      }\r\n      \r\n      const wsNumeros = XLSX.utils.aoa_to_sheet(numerosData);\r\n      wsNumeros['!cols'] = [{ width: 15 }, { width: 12 }, { width: 12 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsNumeros, 'Números por Sorteo');\r\n\r\n      // Generar el archivo Excel con fecha de Honduras\r\n      const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      \r\n      const hondurasDate = this.supabaseService.formatDateTimeLocalHonduras(this.supabaseService.getHondurasDateTime()).split('T')[0];\r\n      saveAs(blob, `${filename}-${hondurasDate}.xlsx`);\r\n\r\n    } catch (error) {\r\n      console.error('Error exportando Excel visual:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async exportToPDF(data: any, filename: string = 'reporte-diario'): Promise<void> {\r\n    try {\r\n      const doc = new jsPDF();\r\n      const pageHeight = doc.internal.pageSize.height;\r\n      let yPosition = 20;\r\n\r\n      // Función auxiliar para agregar nueva página si es necesario\r\n      const checkNewPage = (requiredSpace: number = 30) => {\r\n        if (yPosition + requiredSpace > pageHeight - 20) {\r\n          doc.addPage();\r\n          yPosition = 20;\r\n        }\r\n      };\r\n\r\n      // ===== ENCABEZADO PRINCIPAL =====\r\n      doc.setFontSize(18);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('REPORTE DIARIO - SISTEMA DE LOTERÍA', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      doc.setFontSize(12);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.text(`Fecha: ${data.resumenGeneral.fechaReporte}`, 20, yPosition);\r\n      doc.text(`Hora: ${data.resumenGeneral.horaReporte}`, 120, yPosition);\r\n      yPosition += 8;\r\n      \r\n      doc.setFontSize(10);\r\n      doc.text(`Filtros: ${data.resumenGeneral.filtroAplicado}`, 20, yPosition);\r\n      yPosition += 20;\r\n\r\n      // ===== 1. RESUMEN GENERAL =====\r\n      checkNewPage(80);\r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('1. RESUMEN GENERAL', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      const resumenTable = [\r\n        ['Indicador', 'Valor'],\r\n        ['Total Vendido', `L ${data.resumenGeneral.totalVendido.toFixed(2)}`],\r\n        ['Total Pagado', `L ${data.resumenGeneral.totalPagado.toFixed(2)}`],\r\n        ['Ganancia Neta', `L ${data.resumenGeneral.gananciaNeta.toFixed(2)}`],\r\n        ['Ventas Totales', data.resumenGeneral.ventasTotales.toString()]\r\n      ];\r\n\r\n      autoTable(doc, {\r\n        head: [resumenTable[0]],\r\n        body: resumenTable.slice(1),\r\n        startY: yPosition,\r\n        theme: 'striped',\r\n        headStyles: { fillColor: [41, 128, 185], textColor: 255 },\r\n        styles: { fontSize: 11, cellPadding: 5 },\r\n        columnStyles: {\r\n          0: { cellWidth: 60 },\r\n          1: { cellWidth: 60, halign: 'right' }\r\n        }\r\n      });\r\n\r\n      yPosition = (doc as any).lastAutoTable.finalY + 25;\r\n\r\n      // ===== 2. RESUMEN POR SORTEO =====\r\n      checkNewPage(100);\r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('2. RESUMEN POR SORTEO', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.resumenPorSorteo.length > 0) {\r\n        const sorteoTableData = [\r\n          ['Sorteo', 'Vendido', 'Pagado', 'Ganancia', 'Ventas', 'Estado', 'Ganador', 'Factor'],\r\n          ...data.resumenPorSorteo.map((s: any) => [\r\n            s.sorteo,\r\n            `L ${s.totalVendido.toFixed(0)}`,\r\n            `L ${s.totalPagado.toFixed(0)}`,\r\n            `L ${s.gananciaNeta.toFixed(0)}`,\r\n            s.ventasTotales.toString(),\r\n            s.estado,\r\n            s.numeroGanador,\r\n            s.factor.toString()\r\n          ])\r\n        ];\r\n\r\n        autoTable(doc, {\r\n          head: [sorteoTableData[0]],\r\n          body: sorteoTableData.slice(1),\r\n          startY: yPosition,\r\n          theme: 'striped',\r\n          headStyles: { fillColor: [46, 204, 113], textColor: 255 },\r\n          styles: { fontSize: 9, cellPadding: 3 },\r\n          columnStyles: {\r\n            0: { cellWidth: 25 },\r\n            1: { cellWidth: 20, halign: 'right' },\r\n            2: { cellWidth: 20, halign: 'right' },\r\n            3: { cellWidth: 20, halign: 'right' },\r\n            4: { cellWidth: 15, halign: 'center' },\r\n            5: { cellWidth: 20, halign: 'center' },\r\n            6: { cellWidth: 20, halign: 'center' },\r\n            7: { cellWidth: 15, halign: 'center' }\r\n          }\r\n        });\r\n\r\n        yPosition = (doc as any).lastAutoTable.finalY + 25;\r\n      }\r\n\r\n      // ===== 3. RESUMEN POR SUCURSAL =====\r\n      checkNewPage(100);\r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('3. RESUMEN POR SUCURSAL', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.resumenPorSucursal.length > 0) {\r\n        const sucursalTableData = [\r\n          ['Sucursal', 'Factor', 'Total Vendido', 'Total Pagado', 'Ganancia', 'Ventas'],\r\n          ...data.resumenPorSucursal.map((s: any) => [\r\n            s.sucursal,\r\n            `${s.factor}x`,\r\n            `L ${s.totalVendido.toFixed(2)}`,\r\n            `L ${s.totalPagado.toFixed(2)}`,\r\n            `L ${s.gananciaNeta.toFixed(2)}`,\r\n            s.ventasTotales.toString()\r\n          ])\r\n        ];\r\n\r\n        autoTable(doc, {\r\n          head: [sucursalTableData[0]],\r\n          body: sucursalTableData.slice(1),\r\n          startY: yPosition,\r\n          theme: 'striped',\r\n          headStyles: { fillColor: [230, 126, 34], textColor: 255 },\r\n          styles: { fontSize: 10, cellPadding: 4 },\r\n          columnStyles: {\r\n            0: { cellWidth: 40 },\r\n            1: { cellWidth: 20, halign: 'center' },\r\n            2: { cellWidth: 30, halign: 'right' },\r\n            3: { cellWidth: 30, halign: 'right' },\r\n            4: { cellWidth: 30, halign: 'right' },\r\n            5: { cellWidth: 20, halign: 'center' }\r\n          }\r\n        });\r\n\r\n        yPosition = (doc as any).lastAutoTable.finalY + 25;\r\n      }\r\n\r\n      // ===== 4. NÚMEROS VENDIDOS POR SORTEO (FORMATO CUADRO) =====\r\n      doc.addPage();\r\n      yPosition = 20;\r\n      \r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('4. NÚMEROS VENDIDOS POR SORTEO', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.numerosPorSorteo.length > 0) {\r\n        data.numerosPorSorteo.forEach((grupo: any) => {\r\n          checkNewPage(80);\r\n          \r\n          // Título del grupo\r\n          doc.setFontSize(12);\r\n          doc.setFont('helvetica', 'bold');\r\n          doc.text(`${grupo.sorteo} - ${grupo.sucursal} (Total: L ${grupo.totalSorteoSucursal.toFixed(2)})`, 20, yPosition);\r\n          yPosition += 12;\r\n\r\n          // Crear cuadro de números (formato 10x10)\r\n          if (grupo.numeros.length > 0) {\r\n            // Organizar números en filas de 5\r\n            const rows = [];\r\n            for (let i = 0; i < grupo.numeros.length; i += 5) {\r\n              const row = grupo.numeros.slice(i, i + 5).map((n: any) => \r\n                `${n.numero.toString().padStart(2, '0')}: L${n.totalVendido.toFixed(0)}`\r\n              );\r\n              // Rellenar con espacios vacíos si es necesario\r\n              while (row.length < 5) row.push('');\r\n              rows.push(row);\r\n            }\r\n\r\n            autoTable(doc, {\r\n              body: rows,\r\n              startY: yPosition,\r\n              theme: 'grid',\r\n              styles: { \r\n                fontSize: 8,\r\n                cellPadding: 4,\r\n                halign: 'center',\r\n                valign: 'middle'\r\n              },\r\n              columnStyles: {\r\n                0: { cellWidth: 34 },\r\n                1: { cellWidth: 34 },\r\n                2: { cellWidth: 34 },\r\n                3: { cellWidth: 34 },\r\n                4: { cellWidth: 34 }\r\n              }\r\n            });\r\n\r\n            yPosition = (doc as any).lastAutoTable.finalY + 20;\r\n          }\r\n        });\r\n      } else {\r\n        doc.setFontSize(10);\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.text('No hay datos de números vendidos para mostrar', 20, yPosition);\r\n        yPosition += 20;\r\n      }\r\n\r\n      // ===== 5. DETALLE DE VENTAS =====\r\n      doc.addPage();\r\n      yPosition = 20;\r\n      \r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('5. DETALLE COMPLETO DE VENTAS', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.detalleVentas.length > 0) {\r\n        const ventasTableData = [\r\n          ['Recibo', 'Fecha', 'Hora', 'Sorteo', 'Sucursal', 'Números', 'Total'],\r\n          ...data.detalleVentas.map((v: any) => [\r\n            v.numeroRecibo,\r\n            v.fecha,\r\n            v.hora,\r\n            v.sorteo,\r\n            v.sucursal,\r\n            v.numeros.length > 25 ? v.numeros.substring(0, 25) + '...' : v.numeros,\r\n            `L ${v.total.toFixed(2)}`\r\n          ])\r\n        ];\r\n\r\n        autoTable(doc, {\r\n          head: [ventasTableData[0]],\r\n          body: ventasTableData.slice(1),\r\n          startY: yPosition,\r\n          theme: 'striped',\r\n          headStyles: { fillColor: [52, 152, 219], textColor: 255 },\r\n          styles: { fontSize: 7, cellPadding: 2 },\r\n          columnStyles: {\r\n            0: { cellWidth: 20 },\r\n            1: { cellWidth: 22 },\r\n            2: { cellWidth: 18 },\r\n            3: { cellWidth: 22 },\r\n            4: { cellWidth: 25 },\r\n            5: { cellWidth: 45 },\r\n            6: { cellWidth: 18, halign: 'right' }\r\n          }\r\n        });\r\n\r\n        // Totales finales\r\n        yPosition = (doc as any).lastAutoTable.finalY + 15;\r\n        checkNewPage(30);\r\n        \r\n        doc.setFontSize(12);\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.text('TOTALES FINALES:', 20, yPosition);\r\n        yPosition += 8;\r\n        \r\n        doc.setFontSize(10);\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.text(`Total de Ventas: ${data.detalleVentas.length}`, 20, yPosition);\r\n        yPosition += 6;\r\n        doc.text(`Monto Total Vendido: L ${data.resumenGeneral.totalVendido.toFixed(2)}`, 20, yPosition);\r\n        yPosition += 6;\r\n        doc.text(`Monto Total Pagado: L ${data.resumenGeneral.totalPagado.toFixed(2)}`, 20, yPosition);\r\n        yPosition += 6;\r\n        doc.text(`Ganancia Neta: L ${data.resumenGeneral.gananciaNeta.toFixed(2)}`, 20, yPosition);\r\n      }\r\n\r\n      // Guardar el PDF con fecha de Honduras\r\n      const hondurasDate = this.supabaseService.formatDateTimeLocalHonduras(this.supabaseService.getHondurasDateTime()).split('T')[0];\r\n      doc.save(`${filename}-${hondurasDate}.pdf`);\r\n\r\n    } catch (error) {\r\n      console.error('Error exportando a PDF:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para exportar PDF tal como se ve en el admin\r\n  async exportVisualToPDF(data: any, filename: string = 'reporte-admin-visual'): Promise<void> {\r\n    try {\r\n      const doc = new jsPDF({\r\n        orientation: 'landscape', // Página más grande como solicitaste\r\n        unit: 'mm',\r\n        format: 'a4'\r\n      });\r\n\r\n      // ENCABEZADO PRINCIPAL (como en la imagen)\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(18);\r\n      doc.text('REPORTE ADMINISTRADOR - SISTEMA DE LOTERÍA', 20, 25);\r\n      \r\n      // Información de fecha y hora (como en la imagen)\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(11);\r\n      doc.text(`Fecha: ${data.fecha}`, 20, 35);\r\n      doc.text(`Hora: ${data.hora}`, 150, 35);\r\n      doc.text(`Filtros: ${data.filtros}`, 20, 42);\r\n\r\n      let yPosition = 55;\r\n\r\n      // 1. DASHBOARD CARDS (como las cards azul, naranja y verde de la imagen)\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(14);\r\n      doc.text('1. RESUMEN GENERAL', 20, yPosition);\r\n      yPosition += 10;\r\n\r\n      // Crear cards como en la interfaz\r\n      const dashboardData = [\r\n        ['Métrica', 'Valor'],\r\n        ['Total Vendido', `L ${data.dashboard.totalVendido.toLocaleString('es-HN', {minimumFractionDigits: 2})}`],\r\n        ['Total Pagado', `L ${data.dashboard.totalPagado.toLocaleString('es-HN', {minimumFractionDigits: 2})}`],\r\n        ['Ganancia Total', `L ${data.dashboard.gananciaNeta.toLocaleString('es-HN', {minimumFractionDigits: 2})}`],\r\n        ['Ventas Totales', data.dashboard.ventasTotales.toString()]\r\n      ];\r\n\r\n      autoTable(doc, {\r\n        head: [dashboardData[0]],\r\n        body: dashboardData.slice(1),\r\n        startY: yPosition,\r\n        theme: 'grid',\r\n        headStyles: { \r\n          fillColor: [52, 73, 94],\r\n          textColor: 255,\r\n          fontSize: 12,\r\n          fontStyle: 'bold'\r\n        },\r\n        styles: { \r\n          fontSize: 11,\r\n          cellPadding: 8\r\n        },\r\n        columnStyles: {\r\n          0: { fontStyle: 'bold', fillColor: [245, 245, 245] },\r\n          1: { halign: 'right', fontStyle: 'bold' }\r\n        },\r\n        margin: { left: 20, right: 20 }\r\n      });\r\n\r\n      yPosition = (doc as any).lastAutoTable.finalY + 20;\r\n\r\n      // 2. DETALLE POR SUCURSALES (LA PARTE MÁS IMPORTANTE - igual que en la imagen)\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(16);\r\n      doc.text('🏢 Detalle por Sucursales', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.detallePorSucursales.filas.length > 0) {\r\n        const sucursalTableData = [\r\n          data.detallePorSucursales.headers,\r\n          ...data.detallePorSucursales.filas.map((fila: any) => {\r\n            // Si ya es un array, usar directamente\r\n            if (Array.isArray(fila)) {\r\n              return fila;\r\n            }\r\n            // Si es un objeto, convertir a array\r\n            return [\r\n              fila.sucursal,\r\n              fila.factor,\r\n              `L ${fila.totalVendido.toFixed(2)}`,\r\n              `L ${fila.totalPagado.toFixed(2)}`,\r\n              `L ${fila.gananciaNeta.toFixed(2)}`\r\n            ];\r\n          })\r\n        ];\r\n\r\n        autoTable(doc, {\r\n          head: [sucursalTableData[0]],\r\n          body: sucursalTableData.slice(1),\r\n          startY: yPosition,\r\n          theme: 'striped',\r\n          headStyles: { \r\n            fillColor: [52, 73, 94],\r\n            textColor: 255,\r\n            fontSize: 12,\r\n            fontStyle: 'bold'\r\n          },\r\n          styles: { \r\n            fontSize: 11, \r\n            cellPadding: 8,\r\n            lineColor: [200, 200, 200],\r\n            lineWidth: 0.5\r\n          },\r\n          columnStyles: {\r\n            0: { cellWidth: 50, fontStyle: 'bold' }, // Sucursal\r\n            1: { cellWidth: 25, halign: 'center' }, // Factor\r\n            2: { cellWidth: 40, halign: 'right' },  // Total Vendido\r\n            3: { cellWidth: 40, halign: 'right' },  // Total Pagado\r\n            4: { cellWidth: 40, halign: 'right' }   // Ganancia Neta\r\n          },\r\n          alternateRowStyles: { fillColor: [249, 249, 249] },\r\n          margin: { left: 20, right: 20 }\r\n        });\r\n\r\n        yPosition = (doc as any).lastAutoTable.finalY + 10;\r\n\r\n        // TOTAL GENERAL (destacado igual que en la imagen con fondo verde)\r\n        const totalesRow = Array.isArray(data.detallePorSucursales.totales) \r\n          ? data.detallePorSucursales.totales \r\n          : [\r\n              data.detallePorSucursales.totales.sucursal,\r\n              data.detallePorSucursales.totales.factor,\r\n              `L ${data.detallePorSucursales.totales.totalVendido.toFixed(2)}`,\r\n              `L ${data.detallePorSucursales.totales.totalPagado.toFixed(2)}`,\r\n              `L ${data.detallePorSucursales.totales.gananciaNeta.toFixed(2)}`\r\n            ];\r\n\r\n        const totalesData = [totalesRow];\r\n\r\n        autoTable(doc, {\r\n          body: totalesData,\r\n          startY: yPosition,\r\n          theme: 'grid',\r\n          styles: { \r\n            fontSize: 12,\r\n            fontStyle: 'bold',\r\n            fillColor: [46, 125, 50], // Verde como en la imagen\r\n            textColor: 255,\r\n            cellPadding: 8\r\n          },\r\n          columnStyles: {\r\n            0: { cellWidth: 50 }, // Sucursal\r\n            1: { cellWidth: 25, halign: 'center' }, // Factor\r\n            2: { cellWidth: 40, halign: 'right' },  // Total Vendido\r\n            3: { cellWidth: 40, halign: 'right' },  // Total Pagado\r\n            4: { cellWidth: 40, halign: 'right' }   // Ganancia Neta\r\n          },\r\n          margin: { left: 20, right: 20 }\r\n        });\r\n\r\n        yPosition = (doc as any).lastAutoTable.finalY + 20;\r\n      }\r\n\r\n      // 3. NÚMEROS POR SORTEO (si hay datos)\r\n      if (data.numerosPorSorteo && data.numerosPorSorteo.length > 0) {\r\n        // Verificar si necesitamos nueva página\r\n        if (yPosition > 150) {\r\n          doc.addPage();\r\n          yPosition = 25;\r\n        }\r\n\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.setFontSize(14);\r\n        doc.text('2. NÚMEROS POR SORTEO Y SUCURSAL', 20, yPosition);\r\n        yPosition += 15;\r\n\r\n        data.numerosPorSorteo.forEach((sorteoGroup: any, index: number) => {\r\n          if (yPosition > 180) {\r\n            doc.addPage();\r\n            yPosition = 25;\r\n          }\r\n\r\n          doc.setFont('helvetica', 'bold');\r\n          doc.setFontSize(12);\r\n          doc.text(`Sorteo: ${sorteoGroup.sorteo}`, 20, yPosition);\r\n          yPosition += 10;\r\n\r\n          sorteoGroup.sucursales.forEach((sucursalGroup: any) => {\r\n            if (yPosition > 170) {\r\n              doc.addPage();\r\n              yPosition = 25;\r\n            }\r\n\r\n            doc.setFont('helvetica', 'normal');\r\n            doc.setFontSize(10);\r\n            doc.text(`Sucursal: ${sucursalGroup.sucursal}`, 25, yPosition);\r\n            yPosition += 8;\r\n\r\n            // Mostrar top 10 números más vendidos\r\n            const topNumeros = sucursalGroup.numeros.slice(0, 10);\r\n            const numerosData = [\r\n              ['Número', 'Total Vendido', 'Cantidad', '%'],\r\n              ...topNumeros.map((num: any) => [\r\n                num.numero.toString().padStart(2, '0'),\r\n                `L ${num.totalVendido.toFixed(2)}`,\r\n                num.cantidadVentas.toString(),\r\n                `${num.porcentaje.toFixed(1)}%`\r\n              ])\r\n            ];\r\n\r\n            autoTable(doc, {\r\n              head: [numerosData[0]],\r\n              body: numerosData.slice(1),\r\n              startY: yPosition,\r\n              theme: 'grid',\r\n              styles: { fontSize: 9, cellPadding: 4 },\r\n              headStyles: { fillColor: [52, 73, 94], textColor: 255 },\r\n              columnStyles: {\r\n                0: { cellWidth: 20, halign: 'center' },\r\n                1: { cellWidth: 30, halign: 'right' },\r\n                2: { cellWidth: 20, halign: 'center' },\r\n                3: { cellWidth: 20, halign: 'right' }\r\n              },\r\n              margin: { left: 30, right: 20 }\r\n            });\r\n\r\n            yPosition = (doc as any).lastAutoTable.finalY + 10;\r\n          });\r\n        });\r\n      }\r\n\r\n      // Pie de página\r\n      const pageCount = doc.getNumberOfPages();\r\n      for (let i = 1; i <= pageCount; i++) {\r\n        doc.setPage(i);\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.setFontSize(8);\r\n        doc.text(`Página ${i} de ${pageCount}`, 250, 200);\r\n        doc.text(`Generado: ${new Date().toLocaleString('es-HN')}`, 20, 200);\r\n      }\r\n\r\n      // Descargar el PDF\r\n      doc.save(`${filename}.pdf`);\r\n\r\n    } catch (error) {\r\n      console.error('Error exportando PDF visual:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  private loadingInstance: any = null;\r\n\r\n  constructor() { }\r\n\r\n  // Mostrar mensaje de éxito\r\n  async showSuccess(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'success',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#28a745'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de error\r\n  async showError(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'error',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#dc3545'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de información\r\n  async showInfo(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'info',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#007bff'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de advertencia\r\n  async showWarning(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'warning',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#ffc107'\r\n    });\r\n  }\r\n\r\n  // Mostrar confirmación\r\n  async showConfirmation(\r\n    title: string, \r\n    text?: string, \r\n    confirmButtonText: string = 'Sí, confirmar',\r\n    cancelButtonText: string = 'Cancelar'\r\n  ): Promise<boolean> {\r\n    const result = await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText,\r\n      cancelButtonText,\r\n      confirmButtonColor: '#28a745',\r\n      cancelButtonColor: '#dc3545'\r\n    });\r\n\r\n    return result.isConfirmed;\r\n  }\r\n\r\n  // Mostrar loader\r\n  showLoading(title: string = 'Cargando...'): void {\r\n    this.hideLoading(); // Cerrar cualquier loading anterior\r\n    \r\n    this.loadingInstance = Swal.fire({\r\n      title,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showConfirmButton: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Cerrar loader\r\n  hideLoading(): void {\r\n    if (this.loadingInstance) {\r\n      Swal.close();\r\n      this.loadingInstance = null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { Sale, SaleDetail } from '../models/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrintService {\r\n\r\n  constructor() { }\r\n\r\n  // Generar PDF térmico para venta\r\n  generateThermalReceipt(sale: Sale, details: SaleDetail[]): void {\r\n\r\n    // Si no hay detalles, crear datos de prueba\r\n    if (!details || details.length === 0) {\r\n      details = [\r\n        { id: 'test1', saleId: sale.id, numero: 11, monto: 40 },\r\n        { id: 'test2', saleId: sale.id, numero: 54, monto: 10 }\r\n      ];\r\n    }\r\n\r\n    try {\r\n      // Crear PDF para impresión térmica\r\n      const pdf = new jsPDF({\r\n        orientation: 'portrait',\r\n        unit: 'mm',\r\n        format: [80, 150]\r\n      });\r\n\r\n\r\n      // Configuración básica\r\n      let y = 10;\r\n      const lineHeight = 5;\r\n\r\n      // Título\r\n    \r\n      pdf.setFontSize(10);\r\n      pdf.text('RECIBO DE VENTA', 40, y, { align: 'center' });\r\n      y += lineHeight + 2;\r\n\r\n      // Número de recibo\r\n      pdf.setFontSize(9);\r\n      pdf.text(`Recibo #: ${sale.numeroRecibo || 'N/A'}`, 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Línea\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Sucursal\r\n      pdf.setFontSize(12);\r\n      pdf.text(sale.sucursal || 'Sucursal 1', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Sorteo\r\n      pdf.setFontSize(9);\r\n      pdf.text(`Sorteo: ${sale.sorteo}`, 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Fecha\r\n      const fecha = new Date(sale.fecha).toLocaleString();\r\n      pdf.text(`Fecha: ${fecha}`, 40, y, { align: 'center' });\r\n      y += lineHeight + 2;\r\n\r\n      // Encabezados\r\n      pdf.setFontSize(10);\r\n      pdf.text('Numero', 20, y, { align: 'center' });\r\n      pdf.text('Valor', 60, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Línea\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Detalles\r\n      let total = 0;\r\n      for (const detail of details) {\r\n        pdf.text(detail.numero.toString().padStart(2, '0'), 20, y, { align: 'center' });\r\n        pdf.text(`L ${detail.monto}`, 60, y, { align: 'center' });\r\n        total += detail.monto;\r\n        y += lineHeight;\r\n      }\r\n\r\n      // Línea\r\n      y += 2;\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Total\r\n      pdf.setFontSize(12);\r\n      pdf.text('Total a pagar:', 10, y);\r\n      pdf.text(`L ${total}`, 70, y, { align: 'right' });\r\n      y += lineHeight + 2;\r\n\r\n      // Mensaje\r\n      pdf.setFontSize(8);\r\n      pdf.text('Gracias por su compra!', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n      pdf.text('Mucha suerte!', 40, y, { align: 'center' });\r\n\r\n\r\n      // FUNCIÓN DE IMPRESIÓN DIRECTA\r\n      // Crear blob para impresión\r\n      const pdfData = pdf.output('arraybuffer');\r\n      const blob = new Blob([pdfData], { type: 'application/pdf' });\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      \r\n      // Abrir en nueva ventana para impresión manual controlada por el usuario\r\n      const printWindow = window.open(url, '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\r\n      \r\n      if (printWindow) {\r\n        printWindow.onload = () => {\r\n          // Enfocar la ventana\r\n          printWindow.focus();\r\n          \r\n          // Ejecutar impresión automáticamente\r\n          setTimeout(() => {\r\n            try {\r\n              printWindow.print();\r\n            } catch (printError) {\r\n            }\r\n          }, 1000); // Esperar 1 segundo para que cargue completamente\r\n          \r\n          // Limpiar URL cuando la ventana se cierre (detección manual)\r\n          const checkClosed = setInterval(() => {\r\n            if (printWindow.closed) {\r\n              clearInterval(checkClosed);\r\n              URL.revokeObjectURL(url);\r\n            }\r\n          }, 1000);\r\n        };\r\n      } else {\r\n        \r\n        // Fallback: usar iframe como respaldo\r\n        const printFrame = document.createElement('iframe');\r\n        printFrame.style.display = 'none';\r\n        printFrame.src = url;\r\n        \r\n        document.body.appendChild(printFrame);\r\n        \r\n        printFrame.onload = () => {\r\n          try {\r\n            printFrame.contentWindow?.focus();\r\n            printFrame.contentWindow?.print();\r\n            \r\n            // Limpiar después de 5 segundos en modo iframe\r\n            setTimeout(() => {\r\n              document.body.removeChild(printFrame);\r\n              URL.revokeObjectURL(url);\r\n            }, 5000);\r\n            \r\n          } catch (printError) {\r\n          }\r\n        };\r\n      }\r\n\r\n    } catch (error: any) {\r\n      alert('Error al generar el recibo: ' + (error?.message || error));\r\n    }\r\n  }\r\n\r\n  // Método de prueba para generar un recibo con datos fijos\r\n  generateTestReceipt(): void {\r\n    \r\n    const testSale: Sale = {\r\n      id: 'test-123',\r\n      userId: 'user1',\r\n      sucursal: 'Sucursal 1',\r\n      sorteo: 'manana',\r\n      fecha: new Date(),\r\n      total: 50,\r\n      numeroRecibo: 'SUC-REC-250717-0001',\r\n      correlativo: 1,\r\n      createdAt: new Date()\r\n    };\r\n\r\n    const testDetails: SaleDetail[] = [\r\n      { id: 'detail1', saleId: 'test-123', numero: 11, monto: 40 },\r\n      { id: 'detail2', saleId: 'test-123', numero: 54, monto: 10 }\r\n    ];\r\n\r\n    this.generateThermalReceipt(testSale, testDetails);\r\n  }\r\n\r\n  // Generar PDF de reporte diario\r\n  generateDailyReport(sales: Sale[], fecha: Date): void {\r\n    const pdf = new jsPDF();\r\n    \r\n    pdf.setFontSize(16);\r\n    pdf.text('REPORTE DIARIO DE VENTAS', 105, 20, { align: 'center' });\r\n    \r\n    pdf.setFontSize(12);\r\n    pdf.text(`Fecha: ${fecha.toLocaleDateString()}`, 20, 35);\r\n    \r\n    // Aquí se puede expandir para incluir más detalles del reporte\r\n    let yPos = 50;\r\n    \r\n    // Resumen por sorteo\r\n    const sorteoSummary = this.calculateSorteoSummary(sales);\r\n    \r\n    pdf.setFontSize(14);\r\n    pdf.text('RESUMEN POR SORTEO:', 20, yPos);\r\n    yPos += 10;\r\n    \r\n    pdf.setFontSize(10);\r\n    for (const [sorteo, data] of Object.entries(sorteoSummary)) {\r\n      pdf.text(`${sorteo.toUpperCase()}: L. ${data.total.toFixed(2)} (${data.count} ventas)`, 25, yPos);\r\n      yPos += 7;\r\n    }\r\n    \r\n    // Total general\r\n    const totalGeneral = sales.reduce((sum, sale) => sum + sale.total, 0);\r\n    yPos += 10;\r\n    pdf.setFontSize(12);\r\n    pdf.text(`TOTAL GENERAL: L. ${totalGeneral.toFixed(2)}`, 20, yPos);\r\n    \r\n    pdf.save(`reporte_diario_${fecha.toISOString().split('T')[0]}.pdf`);\r\n  }\r\n\r\n  private calculateSorteoSummary(sales: Sale[]): { [key: string]: { total: number, count: number } } {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n    \r\n    for (const sale of sales) {\r\n      if (!summary[sale.sorteo]) {\r\n        summary[sale.sorteo] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sorteo].total += sale.total;\r\n      summary[sale.sorteo].count += 1;\r\n    }\r\n    \r\n    return summary;\r\n  }\r\n\r\n  // Generar reporte de ventas en PDF\r\n  generateVentasReportPDF(sales: Sale[], saleDetails: { [key: string]: SaleDetail[] }, filters: any): void {\r\n    try {\r\n      const doc = new jsPDF();\r\n      \r\n      // Header profesional con logo y título\r\n      doc.setFillColor(52, 73, 94); // Color azul oscuro\r\n      doc.rect(0, 0, 210, 35, 'F'); // Rectángulo header\r\n      \r\n      doc.setTextColor(255, 255, 255); // Texto blanco\r\n      doc.setFontSize(24);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('SISTEMA DE LOTERÍA', 105, 20, { align: 'center' });\r\n      \r\n      doc.setFontSize(14);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.text('REPORTE DE VENTAS', 105, 28, { align: 'center' });\r\n      \r\n      // Resetear color de texto\r\n      doc.setTextColor(0, 0, 0);\r\n      \r\n      // Información del reporte en formato profesional\r\n      let yPos = 50;\r\n      doc.setFontSize(12);\r\n      doc.setFont('helvetica', 'bold');\r\n      \r\n      // Sección de información general con fondo gris claro\r\n      doc.setFillColor(248, 249, 250);\r\n      doc.rect(15, yPos - 5, 180, 40, 'F');\r\n      doc.setDrawColor(200, 200, 200);\r\n      doc.rect(15, yPos - 5, 180, 40, 'S');\r\n      \r\n      yPos += 5;\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(11);\r\n      doc.text('INFORMACIÓN DEL REPORTE', 20, yPos);\r\n      yPos += 8;\r\n      \r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(10);\r\n      \r\n      if (filters.fechaDesde || filters.fechaHasta) {\r\n        const fechaTexto = filters.fechaDesde && filters.fechaHasta \r\n          ? `Período: ${new Date(filters.fechaDesde).toLocaleDateString()} - ${new Date(filters.fechaHasta).toLocaleDateString()}`\r\n          : filters.fechaDesde \r\n            ? `Desde: ${new Date(filters.fechaDesde).toLocaleDateString()}`\r\n            : `Hasta: ${new Date(filters.fechaHasta).toLocaleDateString()}`;\r\n        doc.text(fechaTexto, 25, yPos);\r\n        yPos += 6;\r\n      }\r\n      \r\n      if (filters.sorteoFilter) {\r\n        doc.text(`Sorteo: ${filters.sorteoFilter}`, 25, yPos);\r\n        yPos += 6;\r\n      }\r\n      \r\n      const now = new Date();\r\n      doc.text(`Fecha de generación: ${now.toLocaleDateString()} - ${now.toLocaleTimeString()}`, 25, yPos);\r\n      yPos += 6;\r\n      \r\n      doc.text(`Total de transacciones: ${sales.length}`, 25, yPos);\r\n      yPos += 20;\r\n      \r\n      // Resumen por sucursal en formato tabla\r\n      const sucursalTotals: { [key: string]: { total: number, count: number } } = {};\r\n      sales.forEach(sale => {\r\n        if (!sucursalTotals[sale.sucursal]) {\r\n          sucursalTotals[sale.sucursal] = { total: 0, count: 0 };\r\n        }\r\n        sucursalTotals[sale.sucursal].total += sale.total;\r\n        sucursalTotals[sale.sucursal].count += 1;\r\n      });\r\n      \r\n      // Header del resumen con estilo\r\n      doc.setFillColor(52, 73, 94);\r\n      doc.setTextColor(255, 255, 255);\r\n      doc.rect(15, yPos - 3, 180, 10, 'F');\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(12);\r\n      doc.text('RESUMEN POR SUCURSAL', 105, yPos + 3, { align: 'center' });\r\n      yPos += 15;\r\n      \r\n      // Resetear color\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(10);\r\n      \r\n      // Crear mini tabla para resumen\r\n      Object.entries(sucursalTotals).forEach(([sucursal, data], index) => {\r\n        const fillColor = index % 2 === 0 ? [245, 245, 245] : [255, 255, 255];\r\n        doc.setFillColor(fillColor[0], fillColor[1], fillColor[2]);\r\n        doc.rect(15, yPos - 2, 180, 8, 'F');\r\n        \r\n        doc.text(`${sucursal}:`, 25, yPos + 2);\r\n        doc.text(`${data.count} ventas`, 105, yPos + 2, { align: 'center' });\r\n        doc.text(`L ${data.total.toFixed(2)}`, 175, yPos + 2, { align: 'right' });\r\n        yPos += 8;\r\n      });\r\n      \r\n      yPos += 5;\r\n      \r\n      // Total general destacado\r\n      const totalGeneral = sales.reduce((sum, sale) => sum + sale.total, 0);\r\n      doc.setFillColor(46, 204, 113); // Verde\r\n      doc.rect(15, yPos - 3, 180, 12, 'F');\r\n      doc.setTextColor(255, 255, 255);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(14);\r\n      doc.text(`TOTAL GENERAL: L ${totalGeneral.toFixed(2)}`, 105, yPos + 4, { align: 'center' });\r\n      yPos += 20;\r\n      \r\n      // Resetear para la tabla\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(12);\r\n      doc.text('DETALLE DE VENTAS:', 20, yPos);\r\n      yPos += 10;\r\n      \r\n      // Preparar datos para la tabla\r\n      const tableData = sales.map(sale => {\r\n        const details = saleDetails[sale.id] || [];\r\n        const numerosText = details.map(d => `${d.numero.toString().padStart(2, '0')}xL${d.monto}`).join(', ');\r\n        \r\n        // Formatear fecha con hora\r\n        const saleDate = new Date(sale.createdAt);\r\n        const fechaHoraStr = `${saleDate.toLocaleDateString()} ${saleDate.toLocaleTimeString('es-ES', { \r\n          hour: '2-digit', \r\n          minute: '2-digit' \r\n        })}`;\r\n        \r\n        return [\r\n          fechaHoraStr,\r\n          sale.numeroRecibo || sale.id.slice(-6),\r\n          sale.sucursal,\r\n          sale.sorteo,\r\n          numerosText,\r\n          `L ${sale.total.toFixed(2)}`\r\n        ];\r\n      });\r\n      \r\n      // Crear tabla con autoTable\r\n      autoTable(doc, {\r\n        startY: yPos,\r\n        head: [['Fecha/Hora', 'Recibo', 'Sucursal', 'Sorteo', 'Números', 'Total']],\r\n        body: tableData,\r\n        theme: 'grid',\r\n        headStyles: {\r\n          fillColor: [66, 139, 202],\r\n          textColor: 255,\r\n          fontSize: 10,\r\n          fontStyle: 'bold',\r\n          halign: 'center'\r\n        },\r\n        bodyStyles: {\r\n          fontSize: 9,\r\n          cellPadding: 3\r\n        },\r\n        columnStyles: {\r\n          0: { cellWidth: 35, halign: 'center' }, // Fecha/Hora (más ancho)\r\n          1: { cellWidth: 30, halign: 'center' }, // Recibo\r\n          2: { cellWidth: 25, halign: 'center' }, // Sucursal\r\n          3: { cellWidth: 20, halign: 'center' }, // Sorteo\r\n          4: { cellWidth: 45, halign: 'left' },   // Números\r\n          5: { cellWidth: 25, halign: 'right' }   // Total\r\n        },\r\n        alternateRowStyles: {\r\n          fillColor: [245, 245, 245]\r\n        },\r\n        margin: { left: 15, right: 15 },\r\n        didDrawPage: function(data: any) {\r\n          // Pie de página\r\n          doc.setFontSize(8);\r\n          doc.text(`Página ${data.pageNumber}`, 160, 290);\r\n          doc.text(`Generado el ${new Date().toLocaleString()}`, 15, 290);\r\n        }\r\n      });\r\n      \r\n      // Guardar el PDF\r\n      const fileName = `reporte_ventas_${new Date().toISOString().split('T')[0]}.pdf`;\r\n      doc.save(fileName);\r\n      \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SORTEO_SCHEDULES, SorteoSchedule } from '../models/interfaces';\nimport { SupabaseService } from './supabase.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SorteoService {\n  private sorteoSchedules: SorteoSchedule[] = [...SORTEO_SCHEDULES];\n\n  constructor(private supabaseService: SupabaseService) {\n    this.loadSorteoSchedules();\n  }\n\n  private async loadSorteoSchedules(): Promise<void> {\n    try {\n      // Usar siempre los horarios definidos en las interfaces\n      this.sorteoSchedules = [...SORTEO_SCHEDULES];\n\n      // Opcionalmente, si quieres usar horarios dinámicos de la BD, descomenta:\n      /*\n      const dynamicSchedules = await this.supabaseService.getSorteoSchedules();\n      \n      if (dynamicSchedules.length > 0) {\n        this.sorteoSchedules = dynamicSchedules.map(schedule => ({\n          name: schedule.name,\n          label: schedule.label,\n          closeTime: schedule.close_time  // Mapear de close_time a closeTime\n        }));\n      }\n      */\n    } catch (error) {\n      // Mantener los horarios por defecto en caso de error\n      this.sorteoSchedules = [...SORTEO_SCHEDULES];\n    }\n  }\n\n  async refreshSorteoSchedules(): Promise<void> {\n    await this.loadSorteoSchedules();\n  }\n\n  getCurrentSorteo(): SorteoSchedule | null {\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\n    const currentHour = hondurasTime.getHours();\n    const currentMinute = hondurasTime.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n\n    for (const sorteo of this.sorteoSchedules) {\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\n\n      if (currentTimeInMinutes < closeTimeInMinutes) {\n        return sorteo;\n      }\n    }\n\n    // Si ya pasaron todos los sorteos del día, retorna null\n    return null;\n  }\n\n  getNextSorteo(): SorteoSchedule | null {\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\n    const currentHour = hondurasTime.getHours();\n    const currentMinute = hondurasTime.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n\n    for (const sorteo of this.sorteoSchedules) {\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\n\n      if (currentTimeInMinutes < closeTimeInMinutes) {\n        return sorteo;\n      }\n    }\n\n    // Si ya pasaron todos los sorteos del día, retorna el primero del siguiente día\n    return this.sorteoSchedules[0] || null;\n  }\n\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\n    // Hora actual en Honduras formateada\n    const hnFormatted = this.supabaseService.formatLocalDateForSupabase(\n      this.supabaseService.getHondurasDateTime()\n    );\n    const [, timePart] = hnFormatted.split(' ');\n    const [hourStr, minuteStr] = timePart.split(':');\n    const currentTotalMinutes = parseInt(hourStr, 10) * 60 + parseInt(minuteStr, 10);\n\n    // Hora de cierre del sorteo\n    const [closeHourStr, closeMinuteStr] = sorteo.closeTime.split(':');\n    const closeTotalMinutes =\n      parseInt(closeHourStr, 10) * 60 + parseInt(closeMinuteStr, 10);\n\n    return currentTotalMinutes < closeTotalMinutes;\n  }\n\n  getTimeUntilClose(sorteo: SorteoSchedule): string {\n    // Hora actual en Honduras formateada\n    const hnFormatted = this.supabaseService.formatLocalDateForSupabase(\n      this.supabaseService.getHondurasDateTime()\n    );\n    const [, timePart] = hnFormatted.split(' ');\n    const [hourStr, minuteStr] = timePart.split(':');\n    const currentTotalMinutes = parseInt(hourStr, 10) * 60 + parseInt(minuteStr, 10);\n\n    // Hora de cierre del sorteo\n    const [closeHourStr, closeMinuteStr] = sorteo.closeTime.split(':');\n    const closeTotalMinutes =\n      parseInt(closeHourStr, 10) * 60 + parseInt(closeMinuteStr, 10);\n\n    let diff = closeTotalMinutes - currentTotalMinutes;\n    if (diff <= 0) {\n      return '00:00';\n    }\n    const hoursLeft = Math.floor(diff / 60);\n    const minutesLeft = diff % 60;\n    return `${hoursLeft.toString().padStart(2, '0')}:${minutesLeft\n      .toString()\n      .padStart(2, '0')}`;\n  }\n\n  getAllSorteos(): SorteoSchedule[] {\n    return this.sorteoSchedules;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { createClient, SupabaseClient, User as SupabaseUser } from '@supabase/supabase-js';\r\nimport { environment } from '../../environments/environment';\r\nimport { User, Sale, SaleDetail, Sorteo, SorteoSchedule, SORTEO_SCHEDULES, SucursalFactor } from '../models/interfaces';\r\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { toZonedTime, fromZonedTime, formatInTimeZone } from 'date-fns-tz';\r\nimport { es } from 'date-fns/locale';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupabaseService {\r\n  private supabase: SupabaseClient;\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n\r\n  // Subject para comunicación entre componentes\r\n  public resumenUpdateSubject = new Subject<void>();\r\n\r\n  // Getter para acceso directo al cliente Supabase\r\n  get client(): SupabaseClient {\r\n    return this.supabase;\r\n  }\r\n\r\n\r\n\r\n  constructor() {\r\n    this.supabase = createClient(environment.supabase.url, environment.supabase.key);\r\n\r\n    // Inicializar sesión existente\r\n    this.initializeSession();\r\n\r\n    // Escuchar cambios en la autenticación\r\n    this.supabase.auth.onAuthStateChange(async (event, session) => {\r\n      if (session?.user && session.user.email) {\r\n        // Obtener sucursal del metadata si existe, sino usar método por email\r\n        const userMetadata = (session.user as any).user_metadata || {};\r\n        const rawMetadata = (session.user as any).raw_user_meta_data || {};\r\n        const metaSucursal = userMetadata.sucursal || rawMetadata.sucursal;\r\n        const metaRole = userMetadata.role || rawMetadata.role;\r\n\r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email,\r\n          role: metaRole || (session.user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal'),\r\n          sucursal: metaSucursal || this.getSucursalFromEmail(session.user.email),\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n\r\n        this.currentUserSubject.next(userData);\r\n      } else {\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Inicializar sesión existente\r\n  private async initializeSession(): Promise<void> {\r\n    try {\r\n      const { data: { session }, error } = await this.supabase.auth.getSession();\r\n\r\n      if (error) {\r\n        this.currentUserSubject.next(null);\r\n        return;\r\n      }\r\n\r\n      if (session?.user && session.user.email) {\r\n        // Obtener sucursal del metadata si existe, sino usar método por email\r\n        const userMetadata = (session.user as any).user_metadata || {};\r\n        const rawMetadata = (session.user as any).raw_user_meta_data || {};\r\n        const metaSucursal = userMetadata.sucursal || rawMetadata.sucursal;\r\n        const metaRole = userMetadata.role || rawMetadata.role;\r\n\r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email,\r\n          role: metaRole || (session.user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal'),\r\n          sucursal: metaSucursal || this.getSucursalFromEmail(session.user.email),\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n\r\n        this.currentUserSubject.next(userData);\r\n      } else {\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    } catch (error) {\r\n      this.currentUserSubject.next(null);\r\n    }\r\n  }\r\n\r\n  // Cargar datos del usuario en segundo plano\r\n  private async loadUserDataInBackground(uid: string): Promise<void> {\r\n    try {\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Background load timeout')), 5000);\r\n      });\r\n\r\n      const queryPromise = this.supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('id', uid)\r\n        .single();\r\n\r\n      const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n\r\n      if (data && !error) {\r\n        const updatedUser: User = {\r\n          id: data.id,\r\n          email: data.email,\r\n          role: data.role,\r\n          sucursal: data.sucursal,\r\n          active: data.active,\r\n          createdAt: new Date(data.created_at)\r\n        };\r\n        this.currentUserSubject.next(updatedUser);\r\n      }\r\n    } catch (error) {\r\n      // No hacer nada, mantener los datos por defecto\r\n    }\r\n  }\r\n\r\n  // Autenticación\r\n  async login(email: string, password: string): Promise<User | null> {\r\n    try {\r\n      const { data, error } = await this.supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      if (data.user && data.user.email) {\r\n        // Obtener sucursal del metadata si existe, sino usar método por email\r\n        const userMetadata = (data.user as any).user_metadata || {};\r\n        const rawMetadata = (data.user as any).raw_user_meta_data || {};\r\n        const metaSucursal = userMetadata.sucursal || rawMetadata.sucursal;\r\n        const metaRole = userMetadata.role || rawMetadata.role;\r\n\r\n        const userData: User = {\r\n          id: data.user.id,\r\n          email: data.user.email,\r\n          role: metaRole || (data.user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal'),\r\n          sucursal: metaSucursal || this.getSucursalFromEmail(data.user.email),\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n\r\n        this.currentUserSubject.next(userData);\r\n        return userData;\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private getSucursalFromEmail(email: string): string {\r\n    if (email === 'gerencia@loteria.com') return '';\r\n    if (email.includes('venta1')) return 'Sucursal 1';\r\n    if (email.includes('venta2')) return 'Sucursal 2';\r\n    if (email.includes('venta3')) return 'Sucursal 3';\r\n    if (email.includes('venta4')) return 'Sucursal 4';\r\n    return 'Principal';\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const { error } = await this.supabase.auth.signOut();\r\n    if (error) throw error;\r\n  }\r\n\r\n  // Verificar conexión a la base de datos\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('usuarios')\r\n        .select('count')\r\n        .limit(1);\r\n\r\n      return !error;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Usuarios\r\n  async getUserData(uid: string): Promise<User | null> {\r\n    try {\r\n      // Primero obtener datos básicos de auth\r\n      const { data: authUser, error: authError } = await this.supabase.auth.getUser();\r\n\r\n      if (authError || !authUser.user) {\r\n        return null;\r\n      }\r\n\r\n      // Datos por defecto usando auth\r\n      const defaultUserData: User = {\r\n        id: authUser.user.id,\r\n        email: authUser.user.email || '',\r\n        role: 'sucursal' as const,\r\n        sucursal: 'Principal',\r\n        active: true,\r\n        createdAt: new Date()\r\n      };\r\n\r\n      // Intentar obtener datos de la tabla users con timeout muy corto\r\n      try {\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => reject(new Error('Database timeout')), 1000); // 1 segundo timeout\r\n        });\r\n\r\n        const queryPromise = this.supabase\r\n          .from('users')\r\n          .select('*')\r\n          .eq('id', uid)\r\n          .single();\r\n\r\n        const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n\r\n        if (data && !error) {\r\n          return {\r\n            id: data.id,\r\n            email: data.email,\r\n            role: data.role,\r\n            sucursal: data.sucursal,\r\n            active: data.active,\r\n            createdAt: new Date(data.created_at)\r\n          } as User;\r\n        }\r\n      } catch (dbError) {\r\n        // Error/timeout consultando tabla users, usar datos por defecto\r\n      }\r\n\r\n      return defaultUserData;\r\n\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Ventas\r\n  async getNextCorrelativo(sucursal: string): Promise<number> {\r\n    try {\r\n      // Obtener el correlativo más alto para esta sucursal en el día actual\r\n      const today = new Date();\r\n      const startOfDay = new Date(today);\r\n      const endOfDay = new Date(today);\r\n\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n\r\n      const startStr = this.formatLocalDateForSupabase(startOfDay);\r\n      const endStr = this.formatLocalDateForSupabase(endOfDay);\r\n\r\n\r\n\r\n      console\r\n      // Obtener solo las del día actual\r\n      const { data, error } = await this.supabase\r\n        .from('sales')\r\n        .select('correlativo, fecha, created_at')\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', startStr)\r\n        .lte('fecha', endStr)\r\n        .order('correlativo', { ascending: false })\r\n        .limit(1);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      const nextCorrelativo = data && data.length > 0 ? (data[0].correlativo || 0) + 1 : 1;\r\n\r\n      return nextCorrelativo;\r\n    } catch (error) {\r\n      // En caso de error, usar 1 como fallback\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  async createSale(sale: Omit<Sale, 'id' | 'createdAt'>): Promise<string> {\r\n    try {\r\n      // Obtener fecha/hora actual en Honduras\r\n\r\n      const formatted = this.formatLocalDateForSupabase(new Date());\r\n\r\n      const saleData = {\r\n        user_id: sale.userId,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: formatted,\r\n        total: sale.total,\r\n        numero_recibo: sale.numeroRecibo,\r\n        correlativo: sale.correlativo,\r\n        created_at: formatted\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sales')\r\n        .insert([saleData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSaleDetail(detail: Omit<SaleDetail, 'id'>): Promise<string> {\r\n    try {\r\n      // Validar que los datos sean válidos\r\n      if (detail.numero === null || detail.numero === undefined) {\r\n        throw new Error('Número no puede ser null o undefined');\r\n      }\r\n\r\n      if (detail.monto === null || detail.monto === undefined || detail.monto <= 0) {\r\n        throw new Error('Monto debe ser mayor a 0');\r\n      }\r\n\r\n      // Convertir el número a string con formato de 2 dígitos (00, 01, 02, etc.)\r\n      const numeroString = detail.numero.toString().padStart(2, '0');\r\n\r\n      const detailData = {\r\n        sale_id: detail.saleId,\r\n        numero: numeroString,  // Enviar como string\r\n        monto: Number(detail.monto)\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .insert([detailData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async getSalesByDateAndSorteo(fecha: Date, sorteo: string): Promise<Sale[]> {\r\n    try {\r\n      // Usar los nuevos métodos para obtener inicio y final del día en Honduras\r\n      const startOfDayStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fecha));\r\n      const endOfDayStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fecha));\r\n\r\n      let query = this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', startOfDayStr)\r\n        .lte('fecha', endOfDayStr)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (sorteo && sorteo.trim() !== '') {\r\n        query = query.eq('sorteo', sorteo);\r\n      }\r\n\r\n      const { data, error } = await query;\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      if (!data || data.length === 0) {\r\n        return [];\r\n      }\r\n\r\n      const mappedSales = data.map(sale => ({\r\n        id: sale.id,\r\n        userId: sale.user_id,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: this.parseDateFromDatabase(sale.fecha), // Convertir a hora Honduras\r\n        total: sale.total,\r\n        numeroRecibo: sale.numero_recibo || sale.id.slice(-6),\r\n        correlativo: sale.correlativo || 0,\r\n        createdAt: this.parseDateFromDatabase(sale.created_at) // Convertir a hora Honduras\r\n      })) as Sale[];\r\n\r\n      return mappedSales;\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getSaleDetails(saleId: string): Promise<SaleDetail[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .select('*')\r\n        .eq('sale_id', saleId);\r\n\r\n      if (error) throw error;\r\n\r\n      return data.map(detail => ({\r\n        id: detail.id,\r\n        saleId: detail.sale_id,\r\n        numero: parseInt(detail.numero), // Convertir string a número para la interfaz\r\n        monto: detail.monto\r\n      })) as SaleDetail[];\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Sorteos\r\n  async createOrUpdateSorteo(sorteo: Omit<Sorteo, 'id'>): Promise<string> {\r\n    try {\r\n      const sorteoId = `${this.formatDateOnlyForSupabase(sorteo.fecha)}-${sorteo.sorteo}`;\r\n\r\n      // Asegurar formato de string para numero_ganador\r\n      const numeroGanadorString = (sorteo.numeroGanador ?? '').toString().padStart(2, '0');\r\n\r\n      const sorteoData = {\r\n        id: sorteoId,\r\n        fecha: this.formatLocalDateForSupabase(sorteo.fecha),\r\n        sorteo: sorteo.sorteo,\r\n        hora_cierre: this.formatLocalDateForSupabase(sorteo.horaCierre),\r\n        numero_ganador: numeroGanadorString,\r\n        factor_multiplicador: sorteo.factorMultiplicador,\r\n        total_vendido: sorteo.totalVendido,\r\n        total_pagado: sorteo.totalPagado,\r\n        ganancia_neta: sorteo.gananciaNeta,\r\n        cerrado: sorteo.cerrado\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .upsert([sorteoData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getSorteo(fecha: Date, sorteo: string): Promise<Sorteo | null> {\r\n    try {\r\n      const sorteoId = `${this.formatDateOnlyForSupabase(fecha)}-${sorteo}`;\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No se encontró el registro\r\n          return null;\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      return {\r\n        id: data.id,\r\n        fecha: new Date(data.fecha),\r\n        sorteo: data.sorteo,\r\n        horaCierre: new Date(data.hora_cierre),\r\n        // Mantener como string ya que numero_ganador es tipo text\r\n        numeroGanador: data.numero_ganador || '',\r\n        factorMultiplicador: data.factor_multiplicador,\r\n        totalVendido: data.total_vendido,\r\n        totalPagado: data.total_pagado,\r\n        gananciaNeta: data.ganancia_neta,\r\n        cerrado: data.cerrado\r\n      } as Sorteo;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Método específico para verificar si un sorteo existe por ID (maneja múltiples sucursales)\r\n  async getSorteoById(sorteoId: string): Promise<Sorteo | null> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        // Si es un error de permisos (406, RLS), lanzar para manejo especial\r\n        if (error.code === '42501' || error.details?.includes('permission denied')) {\r\n          throw { ...error, isRLSError: true };\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      if (!data || data.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      // Si hay múltiples sucursales, usar la primera para mostrar datos básicos\r\n      const firstRecord = data[0];\r\n\r\n      return {\r\n        id: firstRecord.id,\r\n        fecha: new Date(firstRecord.fecha),\r\n        sorteo: firstRecord.sorteo,\r\n        horaCierre: new Date(firstRecord.hora_cierre),\r\n        numeroGanador: firstRecord.numero_ganador || '',\r\n        factorMultiplicador: firstRecord.factor_multiplicador,\r\n        totalVendido: firstRecord.total_vendido,\r\n        totalPagado: firstRecord.total_pagado,\r\n        gananciaNeta: firstRecord.ganancia_neta,\r\n        cerrado: firstRecord.cerrado,\r\n        sucursal: firstRecord.sucursal\r\n      } as Sorteo;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para obtener resumen de todas las sucursales de un sorteo\r\n  async getSorteoResumenPorSucursal(sorteoId: string): Promise<any[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('sucursal, numero_ganador, factor_multiplicador, total_vendido, total_pagado, ganancia_neta')\r\n        .eq('id', sorteoId)\r\n        .order('sucursal');\r\n\r\n      if (error) {\r\n        console.error('Error al obtener resumen por sucursal:', error);\r\n        return [];\r\n      }\r\n\r\n      // Enriquecer datos con cantidad del número ganador\r\n      const enrichedData = await Promise.all((data || []).map(async (sorteo) => {\r\n        const cantidadNumeroGanador = await this.getCantidadNumeroGanadorPorSucursal(\r\n          sorteoId, \r\n          sorteo.sucursal, \r\n          sorteo.numero_ganador\r\n        );\r\n        \r\n        return {\r\n          ...sorteo,\r\n          cantidad_numero_ganador: cantidadNumeroGanador\r\n        };\r\n      }));\r\n\r\n      return enrichedData;\r\n    } catch (error) {\r\n      console.error('Error al obtener resumen por sucursal:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Método auxiliar para obtener la cantidad comprada del número ganador por sucursal\r\n  private async getCantidadNumeroGanadorPorSucursal(\r\n    sorteoId: string, \r\n    sucursal: string, \r\n    numeroGanador: string\r\n  ): Promise<number> {\r\n    try {\r\n      // Usar la función SQL optimizada\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_cantidad_numero_ganador_por_sucursal', {\r\n          p_sorteo_id: sorteoId,\r\n          p_sucursal: sucursal,\r\n          p_numero_ganador: numeroGanador\r\n        });\r\n\r\n      if (error) {\r\n        console.error('Error en función SQL get_cantidad_numero_ganador_por_sucursal:', error);\r\n        return 0;\r\n      }\r\n\r\n      return data || 0;\r\n    } catch (error) {\r\n      console.error('Error al obtener cantidad del número ganador:', error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  // Método alternativo que usa una consulta sin RLS estricto\r\n  async getSorteoByIdSimple(sorteoId: string): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_sorteo_simple', { sorteo_id: sorteoId });\r\n\r\n      if (error) {\r\n        return null;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Método específico para insertar un nuevo sorteo\r\n  async insertNewSorteo(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n      const hondurasDateTime = this.getHondurasDateTime();\r\n\r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .insert({\r\n          id: sorteoId,\r\n          fecha: this.formatLocalDateForSupabase(hondurasDateTime),\r\n          sorteo: sorteoId.split('-').slice(1).join('-'),\r\n          hora_cierre: this.formatLocalDateForSupabase(hondurasDateTime),\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          total_vendido: 0,\r\n          total_pagado: 0,\r\n          ganancia_neta: 0,\r\n          cerrado: true\r\n        });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateSorteoWinner(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n\r\n      // Asegurar formato de 2 dígitos si es número\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n\r\n      // Primero intentar hacer un update simple\r\n      const { data: existingData, error: selectError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('id')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (selectError && selectError.code !== 'PGRST116') {\r\n        throw selectError;\r\n      }\r\n\r\n      let result;\r\n\r\n      if (existingData) {\r\n        // El sorteo existe, hacer update\r\n        result = await this.supabase\r\n          .from('sorteos')\r\n          .update({\r\n            numero_ganador: numeroString,\r\n            factor_multiplicador: factorMultiplicador,\r\n            cerrado: true\r\n          })\r\n          .eq('id', sorteoId);\r\n      } else {\r\n        // El sorteo no existe, hacer insert con las columnas correctas\r\n        const hondurasDateTime = this.getHondurasDateTime();\r\n        result = await this.supabase\r\n          .from('sorteos')\r\n          .insert({\r\n            id: sorteoId,\r\n            fecha: this.formatLocalDateForSupabase(hondurasDateTime),\r\n            sorteo: sorteoId.split('-').slice(1).join('-'), // Extraer nombre del sorteo\r\n            hora_cierre: this.formatLocalDateForSupabase(hondurasDateTime),\r\n            numero_ganador: numeroString,\r\n            factor_multiplicador: factorMultiplicador,\r\n            total_vendido: 0,\r\n            total_pagado: 0,\r\n            ganancia_neta: 0,\r\n            cerrado: true\r\n          });\r\n      }\r\n\r\n      if (result.error) {\r\n        throw result.error;\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSorteo(sorteoId: string, sorteoName: string, fecha: Date): Promise<void> {\r\n    try {\r\n      const hondurasDateTime = this.getHondurasDateTime();\r\n\r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .insert({\r\n          id: sorteoId,\r\n          fecha: this.formatLocalDateForSupabase(hondurasDateTime),\r\n          sorteo: sorteoName,\r\n          hora_cierre: this.formatLocalDateForSupabase(hondurasDateTime),\r\n          numero_ganador: null,\r\n          factor_multiplicador: 70,\r\n          total_vendido: 0,\r\n          total_pagado: 0,\r\n          ganancia_neta: 0,\r\n          cerrado: false\r\n        });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método super optimizado para obtener datos agregados de sorteos con una sola consulta\r\n  async getVentasPorSorteoOptimizado(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      console.log('Obteniendo ventas súper optimizadas para fecha:', fecha, 'sucursal:', sucursal);\r\n\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Intentar primera función RPC optimizada\r\n      const { data, error } = await this.supabase.rpc('get_resumen_sorteos_optimizado', {\r\n        p_fecha: fechaStr,\r\n        p_sucursal: sucursal\r\n      });\r\n\r\n      if (error) {\r\n        console.log('Función RPC completa no disponible, intentando función simple...', error.message);\r\n        // Fallback a función RPC simple\r\n        return await this.getVentasPorSorteoRPCSimple(fecha, sucursal);\r\n      }\r\n\r\n      // Procesar resultado de la función RPC completa\r\n      const sorteoResumen: any = {\r\n        manana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      if (data && data.length > 0) {\r\n        data.forEach((row: any) => {\r\n          const sorteoKey = row.sorteo?.toLowerCase() as 'manana' | 'tarde' | 'noche';\r\n          if (sorteoResumen[sorteoKey]) {\r\n            sorteoResumen[sorteoKey].totalVendido = parseFloat(row.total_vendido) || 0;\r\n            sorteoResumen[sorteoKey].numeroGanador = row.numero_ganador ? parseInt(row.numero_ganador) : null;\r\n            sorteoResumen[sorteoKey].factor = row.factor_multiplicador || 70;\r\n            sorteoResumen[sorteoKey].totalPagar = parseFloat(row.total_pagar) || 0;\r\n\r\n            // Agregar números vendidos si están disponibles\r\n            if (row.numeros_vendidos && typeof row.numeros_vendidos === 'object') {\r\n              sorteoResumen[sorteoKey].numerosVendidos = row.numeros_vendidos;\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Datos de sorteos súper optimizados cargados:', sorteoResumen);\r\n      return sorteoResumen;\r\n\r\n    } catch (error) {\r\n      console.error('Error en getVentasPorSorteoOptimizado:', error);\r\n      // Fallback en caso de error\r\n      return await this.getVentasPorSorteoRPCSimple(fecha, sucursal);\r\n    }\r\n  }\r\n\r\n  // Método fallback con función RPC simple\r\n  private async getVentasPorSorteoRPCSimple(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Usar función RPC simple sin agregación compleja\r\n      const { data, error } = await this.supabase.rpc('get_resumen_sorteos_simple', {\r\n        p_fecha: fechaStr,\r\n        p_sucursal: sucursal\r\n      });\r\n\r\n      if (error) {\r\n        console.log('Función RPC simple no disponible, usando consultas básicas...', error.message);\r\n        return await this.getVentasPorSorteoBasico(fecha, sucursal);\r\n      }\r\n\r\n      const sorteoResumen: any = {\r\n        manana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      if (data && data.length > 0) {\r\n        data.forEach((row: any) => {\r\n          const sorteoKey = row.sorteo?.toLowerCase() as 'manana' | 'tarde' | 'noche';\r\n          if (sorteoResumen[sorteoKey]) {\r\n            sorteoResumen[sorteoKey].totalVendido = parseFloat(row.total_vendido) || 0;\r\n            sorteoResumen[sorteoKey].numeroGanador = row.numero_ganador ? parseInt(row.numero_ganador) : null;\r\n            sorteoResumen[sorteoKey].factor = row.factor_multiplicador || 70;\r\n            sorteoResumen[sorteoKey].totalPagar = parseFloat(row.total_pagar) || 0;\r\n            // Los números vendidos se cargarán lazy cuando se necesiten\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Datos básicos de sorteos cargados:', sorteoResumen);\r\n      return sorteoResumen;\r\n    } catch (error) {\r\n      console.error('Error en función RPC simple:', error);\r\n      return await this.getVentasPorSorteoBasico(fecha, sucursal);\r\n    }\r\n  }\r\n\r\n  // Método fallback con vista materializada o consultas directas\r\n  private async getVentasPorSorteoFallback(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Intentar usar vista materializada si existe\r\n      const { data: resumenData, error: resumenError } = await this.supabase\r\n        .from('vista_resumen_sorteos')\r\n        .select('sorteo, total_vendido, numero_ganador, factor_multiplicador, total_pagar, numeros_vendidos')\r\n        .eq('fecha', fechaStr)\r\n        .eq('sucursal', sucursal);\r\n\r\n      if (resumenError) {\r\n        console.log('Vista materializada no disponible, usando consultas básicas...', resumenError.message);\r\n        return await this.getVentasPorSorteoBasico(fecha, sucursal);\r\n      }\r\n\r\n      // Procesar datos de la vista\r\n      const sorteoResumen: any = {\r\n        manana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      resumenData?.forEach((row: any) => {\r\n        const sorteoKey = row.sorteo?.toLowerCase() as 'manana' | 'tarde' | 'noche';\r\n        if (sorteoResumen[sorteoKey]) {\r\n          sorteoResumen[sorteoKey] = {\r\n            totalVendido: parseFloat(row.total_vendido) || 0,\r\n            numerosVendidos: row.numeros_vendidos && typeof row.numeros_vendidos === 'object' ? row.numeros_vendidos : {},\r\n            numeroGanador: row.numero_ganador ? parseInt(row.numero_ganador) : null,\r\n            totalPagar: parseFloat(row.total_pagar) || 0,\r\n            factor: row.factor_multiplicador || 70\r\n          };\r\n        }\r\n      });\r\n\r\n      console.log('Datos de vista materializada cargados:', sorteoResumen);\r\n      return sorteoResumen;\r\n    } catch (error) {\r\n      console.error('Error en vista materializada:', error);\r\n      return await this.getVentasPorSorteoBasico(fecha, sucursal);\r\n    }\r\n  }\r\n\r\n  // Método básico súper optimizado - solo totales, sin números individuales\r\n  private async getVentasPorSorteoBasico(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Una sola consulta para obtener todos los totales de una vez\r\n      const { data: totalesData, error: totalesError } = await this.supabase\r\n        .from('sales')\r\n        .select('sorteo, total.sum()')\r\n        .eq('fecha', fechaStr)\r\n        .eq('sucursal', sucursal);\r\n\r\n      // Una sola consulta para obtener info de sorteos cerrados\r\n      const { data: sorteosData, error: sorteosError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('sorteo, numero_ganador, factor_multiplicador, cerrado')\r\n        .like('id', `${fechaStr}-%`);\r\n\r\n      const sorteoResumen: any = {\r\n        manana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      // Procesar totales\r\n      if (totalesData && !totalesError) {\r\n        totalesData.forEach((item: any) => {\r\n          const sorteoKey = item.sorteo?.toLowerCase() as 'manana' | 'tarde' | 'noche';\r\n          if (sorteoResumen[sorteoKey]) {\r\n            sorteoResumen[sorteoKey].totalVendido = item.sum || 0;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Procesar info de sorteos\r\n      if (sorteosData && !sorteosError) {\r\n        sorteosData.forEach((sorteo: any) => {\r\n          const sorteoKey = sorteo.sorteo?.toLowerCase() as 'manana' | 'tarde' | 'noche';\r\n          if (sorteoResumen[sorteoKey]) {\r\n            sorteoResumen[sorteoKey].numeroGanador = sorteo.numero_ganador ? parseInt(sorteo.numero_ganador) : null;\r\n            sorteoResumen[sorteoKey].factor = sorteo.factor_multiplicador || 70;\r\n            // No calculamos total a pagar sin los números individuales\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Datos básicos optimizados cargados:', sorteoResumen);\r\n      return sorteoResumen;\r\n    } catch (error) {\r\n      console.error('Error en método básico:', error);\r\n      return {\r\n        manana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n    }\r\n  }\r\n\r\n  // Método para obtener sorteo por tipo y fecha (para tabs de ventas)\r\n  async getSorteoByTypeAndDate(sorteoType: string, fecha: Date): Promise<any | null> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n      const sorteoId = `${fechaStr}-${sorteoType}`;\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No se encontró el registro\r\n          return null;\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      return {\r\n        id: data.id,\r\n        fecha: new Date(data.fecha),\r\n        sorteo: data.sorteo,\r\n        horaCierre: new Date(data.hora_cierre),\r\n        numero_ganador: data.numero_ganador ? parseInt(data.numero_ganador) : null,\r\n        factor_multiplicador: data.factor_multiplicador,\r\n        totalVendido: data.total_vendido,\r\n        totalPagado: data.total_pagado,\r\n        gananciaNeta: data.ganancia_neta,\r\n        cerrado: data.cerrado\r\n      };\r\n    } catch (error) {\r\n      console.error(`Error obteniendo sorteo ${sorteoType} para fecha ${fecha}:`, error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Método alternativo para actualizar sorteo sin políticas RLS complejas\r\n  async updateSorteoWinnerDirect(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n\r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          cerrado: true\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método súper simple que solo hace UPDATE (último recurso)\r\n  async updateSorteoWinnerSimple(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n\r\n      // Solo hacer UPDATE, sin verificaciones\r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          cerrado: true\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async calculateSorteoWinnings(sorteoId: string): Promise<void> {\r\n    try {\r\n      // Obtener el sorteo\r\n      const { data: sorteo, error: sorteoError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (sorteoError) throw sorteoError;\r\n      if (!sorteo.numero_ganador) return;\r\n\r\n      // Obtener todas las ventas del sorteo\r\n      const startOfDay = this.getStartOfDayHonduras(new Date(sorteo.fecha));\r\n      const endOfDay = this.getEndOfDayHonduras(new Date(sorteo.fecha));\r\n      \r\n      const { data: sales, error: salesError } = await this.supabase\r\n        .from('sales')\r\n        .select('*, sale_details(*)')\r\n        .eq('sorteo', sorteo.sorteo)\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay));\r\n\r\n      if (salesError) throw salesError;\r\n\r\n      // Calcular total vendido\r\n      let totalVendido = 0;\r\n      let totalPagado = 0;\r\n\r\n      for (const sale of sales) {\r\n        for (const detail of sale.sale_details) {\r\n          totalVendido += detail.monto;\r\n\r\n          // Comparar números: convertir detail.numero a string para comparar con numero_ganador (text)\r\n          if (detail.numero.toString().padStart(2, '0') === sorteo.numero_ganador) {\r\n            totalPagado += detail.monto * sorteo.factor_multiplicador;\r\n          }\r\n        }\r\n      }\r\n\r\n      const gananciaNeta = totalVendido - totalPagado;\r\n\r\n      // Actualizar el sorteo con los cálculos\r\n      const { error: updateError } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          total_vendido: totalVendido,\r\n          total_pagado: totalPagado,\r\n          ganancia_neta: gananciaNeta\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (updateError) throw updateError;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método de debug para verificar conexión y datos\r\n  async debugSalesData(): Promise<void> {\r\n    try {\r\n\r\n      // Verificar conexión básica\r\n      const { data: tablesData, error: tablesError } = await this.supabase\r\n        .from('sales')\r\n        .select('count(*)', { count: 'exact', head: true });\r\n\r\n      if (tablesError) {\r\n        return;\r\n      }\r\n\r\n\r\n      // Verificar ventas de hoy sin filtros\r\n      const today = new Date();\r\n      const startOfDay = this.getStartOfDayHonduras(today);\r\n      const endOfDay = this.getEndOfDayHonduras(today);\r\n\r\n\r\n      const { data: todayData, error: todayError } = await this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay));\r\n\r\n      if (todayError) {\r\n        return;\r\n      }\r\n\r\n      if (todayData && todayData.length > 0) {\r\n      }\r\n\r\n      // Verificar ventas de los últimos 3 días\r\n      const threeDaysAgo = new Date(today);\r\n      threeDaysAgo.setDate(threeDaysAgo.getDate() - 3);\r\n      const startThreeDaysAgo = this.getStartOfDayHonduras(threeDaysAgo);\r\n\r\n      const { data: recentData, error: recentError } = await this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', this.formatLocalDateForSupabase(startThreeDaysAgo))\r\n        .order('created_at', { ascending: false })\r\n        .limit(10);\r\n\r\n      if (recentError) {\r\n        return;\r\n      }\r\n\r\n      if (recentData && recentData.length > 0) {\r\n        recentData.forEach((sale, index) => {\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para verificar permisos y políticas RLS\r\n  async checkDatabasePermissions(): Promise<void> {\r\n    try {\r\n\r\n      // Verificar sesión actual\r\n      const { data: session, error: sessionError } = await this.supabase.auth.getSession();\r\n      if (sessionError) {\r\n        return;\r\n      }\r\n\r\n\r\n      // Probar consulta simple a la tabla sales\r\n      const { data: simpleQuery, error: simpleError } = await this.supabase\r\n        .from('sales')\r\n        .select('id, sucursal, created_at')\r\n        .limit(1);\r\n\r\n      if (simpleError) {\r\n      } else {\r\n      }\r\n\r\n      // Probar inserción de test (para verificar permisos de escritura)\r\n      const testSale = {\r\n        user_id: session?.session?.user?.id || 'test-user',\r\n        sucursal: 'TEST',\r\n        sorteo: 'test',\r\n        fecha: this.formatLocalDateForSupabase(new Date()),\r\n        total: 0,\r\n        numero_recibo: 'TEST-001',\r\n        correlativo: 999\r\n      };\r\n\r\n      const { data: insertTest, error: insertError } = await this.supabase\r\n        .from('sales')\r\n        .insert(testSale)\r\n        .select();\r\n\r\n      if (insertError) {\r\n      } else {\r\n\r\n        // Eliminar el registro de prueba\r\n        if (insertTest && insertTest.length > 0) {\r\n          await this.supabase\r\n            .from('sales')\r\n            .delete()\r\n            .eq('id', insertTest[0].id);\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // GESTIÓN DE USUARIOS\r\n  // ========================\r\n\r\n  async getUsers(): Promise<User[]> {\r\n    try {\r\n\r\n      // Retornar usuarios por defecto simples para que funcione\r\n      return [\r\n        {\r\n          id: '1',\r\n          email: 'gerencia@loteria.com',\r\n          role: 'admin',\r\n          sucursal: '',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '2',\r\n          email: 'venta1@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 1',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '3',\r\n          email: 'venta2@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 2',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '4',\r\n          email: 'venta3@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 3',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '5',\r\n          email: 'venta4@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 4',\r\n          active: true,\r\n          createdAt: new Date()\r\n        }\r\n      ];\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private getDefaultUsers(): User[] {\r\n    return [\r\n      {\r\n        id: '1',\r\n        email: 'admin@loteria.com',\r\n        role: 'admin',\r\n        sucursal: '',\r\n        active: true,\r\n        createdAt: new Date()\r\n      },\r\n      {\r\n        id: '2',\r\n        email: 'sucursal1@loteria.com',\r\n        role: 'sucursal',\r\n        sucursal: 'Sucursal 1',\r\n        active: true,\r\n        createdAt: new Date()\r\n      }\r\n    ];\r\n  }\r\n\r\n  private async createProfilesFromAuthUsers(authUsers: any[]): Promise<void> {\r\n    try {\r\n      const profilesData = authUsers.map(authUser => ({\r\n        id: authUser.id,\r\n        email: authUser.email,\r\n        role: authUser.email?.includes('admin') || authUser.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal',\r\n        sucursal: this.getSucursalFromEmail(authUser.email || ''),\r\n        active: true,\r\n        created_at: new Date(authUser.created_at).toISOString()\r\n      }));\r\n\r\n      const { error } = await this.supabase\r\n        .from('profiles')\r\n        .upsert(profilesData, { onConflict: 'id' });\r\n\r\n      if (error) {\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // GESTIÓN DE SORTEOS\r\n  // ========================\r\n\r\n  async getSorteoSchedules(): Promise<any[]> {\r\n    try {\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .select('*')\r\n        .order('close_time', { ascending: true });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSorteoSchedule(sorteoData: { name: string, label: string, close_time: string }): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .insert([sorteoData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateSorteoSchedule(sorteoId: string, updates: { name?: string, label?: string, close_time?: string }): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .update(updates)\r\n        .eq('id', sorteoId)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteSorteoSchedule(sorteoId: string): Promise<void> {\r\n    try {\r\n      const { error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .delete()\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // MÉTODOS DE DEBUG Y SETUP\r\n  // ========================\r\n\r\n\r\n  async initializeSorteoSchedules(): Promise<void> {\r\n    try {\r\n      // Crear los sorteos por defecto si no existen\r\n      const defaultSorteos: SorteoSchedule[] = [...SORTEO_SCHEDULES];\r\n\r\n      for (const sorteo of defaultSorteos) {\r\n        const { error } = await this.supabase\r\n          .from('sorteo_schedules')\r\n          .upsert(sorteo, { onConflict: 'name' });\r\n\r\n        if (error) {\r\n        } else {\r\n        }\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para inicializar la tabla de perfiles si no existe\r\n  async initializeProfilesTable(): Promise<void> {\r\n    try {\r\n\r\n      // Simplemente intentar hacer una consulta para ver si la tabla existe\r\n      const { error } = await this.supabase\r\n        .from('profiles')\r\n        .select('count', { count: 'exact', head: true });\r\n\r\n      if (error) {\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para sincronizar usuarios manualmente\r\n  async syncUsersFromAuth(): Promise<void> {\r\n    try {\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // ========== FUNCIONES DE TIMEZONE HONDURAS CON DATE-FNS-TZ ==========\r\n  private readonly HONDURAS_TIMEZONE = 'America/Tegucigalpa';\r\n\r\n  // Función para obtener la fecha/hora actual en Honduras\r\n  getHondurasDateTime(): Date {\r\n    const now = new Date();\r\n    return now;\r\n  }\r\n\r\n  // Función para formatear fecha/hora en formato de Honduras\r\n  formatHondurasDateTime(date?: Date): string {\r\n    const targetDate = date || new Date();\r\n    return this.formatLocalDateForSupabase(targetDate);\r\n  }\r\n\r\n  formatLocalDateForSupabase(date: Date): string {\r\n    const pad = (n: number) => n.toString().padStart(2, '0');\r\n\r\n    const year = date.getFullYear();\r\n    const month = pad(date.getMonth() + 1); // Mes empieza en 0\r\n    const day = pad(date.getDate());\r\n\r\n    const hours = pad(date.getHours());\r\n    const minutes = pad(date.getMinutes());\r\n    const seconds = pad(date.getSeconds());\r\n\r\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  // Función para formatear solo la fecha (YYYY-MM-DD) para consultas RPC\r\n  formatDateOnlyForSupabase(date: Date): string {\r\n    const pad = (n: number) => n.toString().padStart(2, '0');\r\n\r\n    const year = date.getFullYear();\r\n    const month = pad(date.getMonth() + 1); // Mes empieza en 0\r\n    const day = pad(date.getDate());\r\n\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n\r\n  // Función para convertir una fecha de Honduras a UTC para guardar en BD\r\n  private hondurasToUtc(date: Date): Date {\r\n    return fromZonedTime(date, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Función para convertir una fecha UTC de BD a hora de Honduras\r\n  private utcToHonduras(utcDate: Date): Date {\r\n    return toZonedTime(utcDate, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método público para convertir cualquier fecha a hora de Honduras\r\n  convertToHondurasTime(date: Date): Date {\r\n    return toZonedTime(date, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método público para que los componentes obtengan la hora de Honduras\r\n  getHondurasTimeNow(): Date {\r\n    return this.getHondurasDateTime();\r\n  }\r\n\r\n  // Método público para formatear fechas en hora de Honduras con formato legible\r\n  formatDateForHonduras(date?: Date): string {\r\n    const targetDate = date || new Date();\r\n    return formatInTimeZone(targetDate, this.HONDURAS_TIMEZONE, 'dd/MM/yyyy hh:mm:ss a', {\r\n      locale: es\r\n    });\r\n  }\r\n\r\n  // Método público para parsear fechas de la base de datos a hora de Honduras\r\n  parseDateFromDatabase(isoString: string): Date {\r\n    const utcDate = parseISO(isoString);\r\n    return toZonedTime(utcDate, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método para crear fecha específica en zona horaria de Honduras\r\n  createHondurasDate(year: number, month: number, day: number, hour: number = 0, minute: number = 0, second: number = 0): Date {\r\n    // Crear fecha en zona horaria de Honduras\r\n    const dateString = `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}T${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}:${String(second).padStart(2, '0')}`;\r\n    return fromZonedTime(new Date(dateString), this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método para obtener inicio del día en Honduras\r\n  getStartOfDayHonduras(date: Date): Date {\r\n    // Primero convertir la fecha a zona horaria de Honduras\r\n    const hondurasDate = toZonedTime(date, this.HONDURAS_TIMEZONE);\r\n    const year = hondurasDate.getFullYear();\r\n    const month = hondurasDate.getMonth() + 1;\r\n    const day = hondurasDate.getDate();\r\n\r\n    // Crear inicio del día (00:00:00) en zona horaria de Honduras\r\n    return this.createHondurasDate(year, month, day, 0, 0, 0);\r\n  }\r\n\r\n  // Método para obtener final del día en Honduras  \r\n  getEndOfDayHonduras(date: Date): Date {\r\n    // Primero convertir la fecha a zona horaria de Honduras\r\n    const hondurasDate = toZonedTime(date, this.HONDURAS_TIMEZONE);\r\n    const year = hondurasDate.getFullYear();\r\n    const month = hondurasDate.getMonth() + 1;\r\n    const day = hondurasDate.getDate();\r\n\r\n    // Crear final del día (23:59:59.999) en zona horaria de Honduras\r\n    return this.createHondurasDate(year, month, day, 23, 59, 59);\r\n  }\r\n\r\n  // Método para formatear fecha para inputs datetime-local en zona horaria de Honduras\r\n  formatDateTimeLocalHonduras(date: Date): string {\r\n    const hondurasDate = toZonedTime(date, this.HONDURAS_TIMEZONE);\r\n    const year = hondurasDate.getFullYear();\r\n    const month = String(hondurasDate.getMonth() + 1).padStart(2, '0');\r\n    const day = String(hondurasDate.getDate()).padStart(2, '0');\r\n    const hours = String(hondurasDate.getHours()).padStart(2, '0');\r\n    const minutes = String(hondurasDate.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  }\r\n\r\n  // Método para convertir string de datetime-local a fecha UTC para base de datos\r\n  parseLocalDateTimeToUtc(dateTimeLocalString: string): Date {\r\n    // El string viene en formato YYYY-MM-DDTHH:mm\r\n    // Lo interpretamos como si fuera hora de Honduras y lo convertimos a UTC\r\n    const localDate = new Date(dateTimeLocalString);\r\n    return fromZonedTime(localDate, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // ============= MÉTODOS DE GESTIÓN DE USUARIOS =============\r\n\r\n  // Obtener todos los usuarios del sistema desde auth.users\r\n  async getAllUsers(): Promise<User[]> {\r\n    try {\r\n      // Usar la API de administración para obtener usuarios de auth.users\r\n      const { data, error } = await this.supabase.auth.admin.listUsers();\r\n\r\n      console.log('Usuarios obtenidos:', data);\r\n      if (error) {\r\n        console.error('Error obteniendo usuarios:', error);\r\n        // Si falla, usar datos por defecto\r\n        return this.getDefaultUsersForManagement();\r\n      }\r\n\r\n      // Mapear los usuarios de auth a nuestro formato\r\n      return data.users.map((user: any) => ({\r\n        id: user.id,\r\n        email: user.email || '',\r\n        role: (user.user_metadata?.['role'] || (user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal')) as 'admin' | 'sucursal',\r\n        sucursal: user.user_metadata?.['sucursal'] || this.getSucursalFromEmail(user.email || ''),\r\n        active: user.user_metadata?.['active'] ?? !(user['banned_until']),\r\n        createdAt: new Date(user.created_at)\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios:', error);\r\n      // Retornar usuarios por defecto si falla\r\n      return this.getDefaultUsersForManagement();\r\n    }\r\n  }\r\n\r\n  // Usuarios por defecto para gestión\r\n  private getDefaultUsersForManagement(): User[] {\r\n    return [\r\n      {\r\n        id: 'default-admin',\r\n        email: 'gerencia@loteria.com',\r\n        role: 'admin',\r\n        sucursal: '',\r\n        active: true,\r\n        createdAt: new Date()\r\n      },\r\n      {\r\n        id: 'default-venta1',\r\n        email: 'venta1@loteria.com',\r\n        role: 'sucursal',\r\n        sucursal: 'Sucursal 1',\r\n        active: true,\r\n        createdAt: new Date()\r\n      },\r\n      {\r\n        id: 'default-venta2',\r\n        email: 'venta2@loteria.com',\r\n        role: 'sucursal',\r\n        sucursal: 'Sucursal 2',\r\n        active: true,\r\n        createdAt: new Date()\r\n      }\r\n    ];\r\n  }\r\n\r\n  // Crear un nuevo usuario en el sistema usando auth.users\r\n  async createNewUser(userData: { email: string; role: 'admin' | 'sucursal'; sucursal?: string; active?: boolean }): Promise<User> {\r\n    try {\r\n      console.log('Creando usuario:', userData);\r\n\r\n      // Crear usuario directamente en auth.users\r\n      const { data: authData, error: authError } = await this.supabase.auth.admin.createUser({\r\n        email: userData.email,\r\n        password: 'LoteriaTemporal123!', // Contraseña temporal\r\n        email_confirm: true,\r\n        user_metadata: {\r\n          role: userData.role,\r\n          sucursal: userData.sucursal || '',\r\n          active: userData.active !== undefined ? userData.active : true\r\n        }\r\n      });\r\n\r\n      if (authError) {\r\n        throw authError;\r\n      }\r\n\r\n      console.log('Usuario creado exitosamente:', authData.user.email);\r\n\r\n      // Retornar el usuario en nuestro formato\r\n      return {\r\n        id: authData.user.id,\r\n        email: authData.user.email || '',\r\n        role: userData.role,\r\n        sucursal: userData.sucursal || '',\r\n        active: userData.active !== undefined ? userData.active : true,\r\n        createdAt: new Date(authData.user.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al crear usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Actualizar un usuario existente usando auth.users\r\n  async updateExistingUser(userId: string, updates: { email?: string; role?: 'admin' | 'sucursal'; sucursal?: string; active?: boolean }): Promise<User> {\r\n    try {\r\n      console.log('Actualizando usuario:', userId, updates);\r\n\r\n      // Preparar los metadatos del usuario\r\n      const userMetadata: any = {};\r\n      if (updates.role) userMetadata['role'] = updates.role;\r\n      if (updates.sucursal !== undefined) userMetadata['sucursal'] = updates.sucursal;\r\n      if (updates.active !== undefined) userMetadata['active'] = updates.active;\r\n\r\n      // Actualizar en auth.users\r\n      const updateData: any = {};\r\n      if (updates.email) updateData.email = updates.email;\r\n      if (Object.keys(userMetadata).length > 0) updateData.user_metadata = userMetadata;\r\n\r\n      // Si se quiere desactivar el usuario, usar ban\r\n      if (updates.active === false) {\r\n        updateData.ban_duration = '876000h'; // Ban muy largo para simular desactivación\r\n      } else if (updates.active === true) {\r\n        updateData.ban_duration = 'none'; // Remover ban\r\n      }\r\n\r\n      const { data, error } = await this.supabase.auth.admin.updateUserById(userId, updateData);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Usuario actualizado exitosamente:', data.user.email);\r\n\r\n      // Retornar el usuario actualizado en nuestro formato\r\n      return {\r\n        id: data.user.id,\r\n        email: data.user.email || '',\r\n        role: updates.role || (data.user.user_metadata?.['role'] as 'admin' | 'sucursal') || 'sucursal',\r\n        sucursal: updates.sucursal || data.user.user_metadata?.['sucursal'] || '',\r\n        active: updates.active !== undefined ? updates.active : !(data.user as any)['banned_until'],\r\n        createdAt: new Date(data.user.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al actualizar usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Eliminar un usuario usando auth.users\r\n  async deleteExistingUser(userId: string): Promise<void> {\r\n    try {\r\n      console.log('Eliminando usuario:', userId);\r\n\r\n      const { error } = await this.supabase.auth.admin.deleteUser(userId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Usuario eliminado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al eliminar usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Alternar el estado activo/inactivo de un usuario usando auth.users\r\n  async toggleExistingUserStatus(userId: string): Promise<User> {\r\n    try {\r\n      console.log('Alternando estado del usuario:', userId);\r\n\r\n      // Primero obtener el usuario actual de auth.users\r\n      const { data: authUser, error: fetchError } = await this.supabase.auth.admin.getUserById(userId);\r\n\r\n      if (fetchError) {\r\n        throw fetchError;\r\n      }\r\n\r\n      // Determinar el estado actual desde los metadatos o si está baneado\r\n      const currentActive = authUser.user.user_metadata?.['active'] ?? !(authUser.user as any)['banned_until'];\r\n      const newStatus = !currentActive;\r\n\r\n      // Actualizar el estado del usuario\r\n      const updateData: any = {\r\n        user_metadata: {\r\n          ...authUser.user.user_metadata,\r\n          ['active']: newStatus\r\n        }\r\n      };\r\n\r\n      // Si se está desactivando, ban el usuario\r\n      if (!newStatus) {\r\n        updateData.ban_duration = '876000h'; // Ban muy largo para simular desactivación\r\n      } else {\r\n        updateData.ban_duration = 'none'; // Remover ban\r\n      }\r\n\r\n      const { data, error } = await this.supabase.auth.admin.updateUserById(userId, updateData);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Estado del usuario alternado exitosamente:', newStatus ? 'Activo' : 'Inactivo');\r\n\r\n      return {\r\n        id: data.user.id,\r\n        email: data.user.email || '',\r\n        role: (data.user.user_metadata?.['role'] as 'admin' | 'sucursal') || 'sucursal',\r\n        sucursal: data.user.user_metadata?.['sucursal'] || '',\r\n        active: newStatus,\r\n        createdAt: new Date(data.user.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al alternar estado del usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Actualizar contraseña de un usuario usando auth.users\r\n  async updateUserPassword(userId: string, newPassword: string): Promise<void> {\r\n    try {\r\n      console.log('Actualizando contraseña del usuario:', userId);\r\n\r\n      const { error } = await this.supabase.auth.admin.updateUserById(userId, {\r\n        password: newPassword\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Contraseña actualizada exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al actualizar contraseña:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Enviar email de restablecimiento de contraseña\r\n  async sendPasswordReset(email: string): Promise<void> {\r\n    try {\r\n      const { error } = await this.supabase.auth.resetPasswordForEmail(email, {\r\n        redirectTo: `${window.location.origin}/reset-password`\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // GESTIÓN DE SORTEOS POR SUCURSAL\r\n  // ========================\r\n\r\n  // Obtener usuarios activos agrupados por sucursal\r\n  async getActiveUsersBySucursal(): Promise<SucursalFactor[]> {\r\n    try {\r\n      // Intentar usar la función SQL primero\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_active_users_by_sucursal');\r\n\r\n      if (error) {\r\n        console.warn('Función get_active_users_by_sucursal falló, intentando consulta directa:', error);\r\n\r\n        // Fallback: consulta directa a auth.users\r\n        const { data: usersData, error: usersError } = await this.supabase.auth.admin.listUsers();\r\n\r\n        if (usersError) {\r\n          throw usersError;\r\n        }\r\n\r\n        // Procesar usuarios y agrupar por sucursal\r\n        const sucursalesMap = new Map<string, SucursalFactor>();\r\n\r\n        for (const user of usersData.users) {\r\n          if (user.email === 'gerencia@loteria.com' || !user.email_confirmed_at || !user.email) {\r\n            continue;\r\n          }\r\n\r\n          let sucursal = 'Principal';\r\n          if (user.user_metadata && user.user_metadata['sucursal']) {\r\n            sucursal = user.user_metadata['sucursal'];\r\n          } else if (user.email.includes('venta1')) {\r\n            sucursal = 'Sucursal 1';\r\n          } else if (user.email.includes('venta2')) {\r\n            sucursal = 'Sucursal 2';\r\n          } else if (user.email.includes('venta3')) {\r\n            sucursal = 'Sucursal 3';\r\n          } else if (user.email.includes('venta4')) {\r\n            sucursal = 'Sucursal 4';\r\n          }\r\n\r\n          if (!sucursalesMap.has(sucursal)) {\r\n            sucursalesMap.set(sucursal, {\r\n              sucursal,\r\n              factor: 75,\r\n              usuario: user.id,\r\n              email: user.email || ''\r\n            });\r\n          }\r\n        }\r\n\r\n        return Array.from(sucursalesMap.values());\r\n      }\r\n\r\n      return (data || []).map((user: any) => ({\r\n        sucursal: user.sucursal,\r\n        factor: user.factor_default,\r\n        usuario: user.user_id,\r\n        email: user.email\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios por sucursal:', error);\r\n      // Fallback final con datos por defecto\r\n      return [\r\n        { sucursal: 'Sucursal 1', factor: 75, usuario: '', email: 'venta1@loteria.com' },\r\n        { sucursal: 'Sucursal 2', factor: 75, usuario: '', email: 'venta2@loteria.com' },\r\n        { sucursal: 'Sucursal 3', factor: 75, usuario: '', email: 'venta3@loteria.com' },\r\n        { sucursal: 'Sucursal 4', factor: 75, usuario: '', email: 'venta4@loteria.com' },\r\n        { sucursal: 'Principal', factor: 75, usuario: '', email: 'principal@loteria.com' }\r\n      ];\r\n    }\r\n  }\r\n\r\n  // Crear sorteos por sucursal con factores específicos\r\n  async crearSorteosPorSucursal(\r\n    sorteoId: string,\r\n    numeroGanador: string,\r\n    factoresPorSucursal: { [sucursal: string]: number }\r\n  ): Promise<void> {\r\n    try {\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n\r\n      const { data, error } = await this.supabase\r\n        .rpc('crear_sorteos_por_sucursal', {\r\n          p_sorteo_id: sorteoId,\r\n          p_numero_ganador: numeroString,\r\n          p_factores_json: factoresPorSucursal\r\n        });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Sorteos creados por sucursal exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al crear sorteos por sucursal:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Calcular totales de sorteo por sucursal\r\n  async calcularTotalesSorteoPorSucursal(sorteoId: string): Promise<void> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .rpc('calcular_totales_sorteo_por_sucursal', {\r\n          p_sorteo_id: sorteoId\r\n        });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Totales calculados por sucursal exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al calcular totales por sucursal:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Obtener sorteos por sucursal para una fecha y tipo específicos\r\n  async getSorteosPorSucursal(fecha: Date, sorteo: string): Promise<Sorteo[]> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n      const sorteoId = `${fechaStr}-${sorteo}`;\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .order('sucursal');\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return (data || []).map(item => ({\r\n        id: item.id,\r\n        fecha: new Date(item.fecha),\r\n        sorteo: item.sorteo,\r\n        horaCierre: new Date(item.hora_cierre),\r\n        numeroGanador: item.numero_ganador || '',\r\n        factorMultiplicador: item.factor_multiplicador,\r\n        totalVendido: item.total_vendido,\r\n        totalPagado: item.total_pagado,\r\n        gananciaNeta: item.ganancia_neta,\r\n        cerrado: item.cerrado,\r\n        sucursal: item.sucursal\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener sorteos por sucursal:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Obtener resumen consolidado de un sorteo (todas las sucursales)\r\n  async getResumenConsolidadoSorteo(fecha: Date, sorteo: string): Promise<{\r\n    numeroGanador: string;\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    cerrado: boolean;\r\n    detallesPorSucursal: any[];\r\n  }> {\r\n    try {\r\n      const sorteosPorSucursal = await this.getSorteosPorSucursal(fecha, sorteo);\r\n\r\n      if (sorteosPorSucursal.length === 0) {\r\n        return {\r\n          numeroGanador: '',\r\n          totalVendido: 0,\r\n          totalPagado: 0,\r\n          gananciaNeta: 0,\r\n          cerrado: false,\r\n          detallesPorSucursal: []\r\n        };\r\n      }\r\n\r\n      const resumen = {\r\n        numeroGanador: sorteosPorSucursal[0].numeroGanador || '',\r\n        totalVendido: sorteosPorSucursal.reduce((sum, s) => sum + s.totalVendido, 0),\r\n        totalPagado: sorteosPorSucursal.reduce((sum, s) => sum + s.totalPagado, 0),\r\n        gananciaNeta: sorteosPorSucursal.reduce((sum, s) => sum + s.gananciaNeta, 0),\r\n        cerrado: sorteosPorSucursal.every(s => s.cerrado),\r\n        detallesPorSucursal: sorteosPorSucursal.map(s => ({\r\n          sucursal: s.sucursal,\r\n          factor: s.factorMultiplicador,\r\n          vendido: s.totalVendido,\r\n          pagado: s.totalPagado,\r\n          ganancia: s.gananciaNeta\r\n        }))\r\n      };\r\n\r\n      return resumen;\r\n    } catch (error) {\r\n      console.error('Error al obtener resumen consolidado:', error);\r\n      return {\r\n        numeroGanador: '',\r\n        totalVendido: 0,\r\n        totalPagado: 0,\r\n        gananciaNeta: 0,\r\n        cerrado: false,\r\n        detallesPorSucursal: []\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener ventas agrupadas por número para un sorteo específico en una fecha\r\n   */\r\n  async getVentasPorNumero(sorteoName: string, fecha: string): Promise<{ [numero: string]: number }> {\r\n    try {\r\n      const { data: ventas, error } = await this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          details:sale_details(numero, monto)\r\n        `)\r\n        .eq('sorteo', sorteoName)\r\n        .gte('created_at', `${fecha}T00:00:00`)\r\n        .lt('created_at', `${fecha}T23:59:59`);\r\n\r\n      if (error) {\r\n        console.error('Error al obtener ventas por número:', error);\r\n        return {};\r\n      }\r\n\r\n      const ventasPorNumero: { [numero: string]: number } = {};\r\n\r\n      // Procesar todas las ventas y detalles\r\n      ventas?.forEach(venta => {\r\n        venta.details?.forEach((detalle: any) => {\r\n          const numero = detalle.numero.toString().padStart(2, '0');\r\n          const monto = detalle.monto || 0;\r\n\r\n          if (!ventasPorNumero[numero]) {\r\n            ventasPorNumero[numero] = 0;\r\n          }\r\n          ventasPorNumero[numero] += monto;\r\n        });\r\n      });\r\n\r\n      return ventasPorNumero;\r\n    } catch (error) {\r\n      console.error('Error en getVentasPorNumero:', error);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Notificar actualización de resúmenes\r\n   */\r\n  notifyResumenUpdate(): void {\r\n    this.resumenUpdateSubject.next();\r\n  }\r\n\r\n  // ========================\r\n  // MÉTODOS OPTIMIZADOS PARA ADMIN\r\n  // ========================\r\n\r\n  /**\r\n   * Obtener resumen completo optimizado para el admin en una sola consulta\r\n   */\r\n  async getAdminDashboardData(fechaDesde?: Date, fechaHasta?: Date, sorteoFilter?: string, sucursalFilter?: string): Promise<{\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    totalVentas: number;\r\n    ventasPorSucursal: Array<{\r\n      sucursal: string;\r\n      totalVendido: number;\r\n      totalPagado: number;\r\n      gananciaNeta: number;\r\n      ventasCount: number;\r\n    }>;\r\n    numerosPorSorteo: Array<{\r\n      sorteo: string;\r\n      sucursales: Array<{\r\n        sucursal: string;\r\n        numeros: Array<{\r\n          numero: number;\r\n          totalVendido: number;\r\n          cantidadVentas: number;\r\n          porcentaje: number;\r\n        }>;\r\n      }>;\r\n    }>;\r\n  }> {\r\n    try {\r\n      let startDateStr, endDateStr;\r\n      \r\n      if (fechaDesde && fechaHasta) {\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fechaDesde));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fechaHasta));\r\n      } else if (fechaDesde) {\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fechaDesde));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fechaDesde));\r\n      } else {\r\n        const today = this.getHondurasDateTime();\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(today));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(today));\r\n      }\r\n\r\n      // Construir query base\r\n      let salesQuery = this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          id,\r\n          sucursal,\r\n          sorteo,\r\n          total,\r\n          fecha,\r\n          created_at,\r\n          sale_details (\r\n            numero,\r\n            monto\r\n          )\r\n        `)\r\n        .gte('fecha', startDateStr)\r\n        .lte('fecha', endDateStr);\r\n\r\n      // Aplicar filtros opcionales\r\n      if (sorteoFilter) {\r\n        salesQuery = salesQuery.eq('sorteo', sorteoFilter);\r\n      }\r\n      if (sucursalFilter) {\r\n        salesQuery = salesQuery.eq('sucursal', sucursalFilter);\r\n      }\r\n\r\n      const { data: salesData, error } = await salesQuery;\r\n\r\n      if (error) {\r\n        console.error('Error en consulta optimizada:', error);\r\n        throw error;\r\n      }\r\n\r\n      // Obtener sorteos cerrados para calcular totales pagados\r\n      const { data: sorteosData, error: sorteosError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('id, sorteo, numero_ganador, factor_multiplicador, cerrado')\r\n        .eq('cerrado', true);\r\n\r\n      if (sorteosError) {\r\n        console.warn('Error obteniendo sorteos cerrados:', sorteosError);\r\n      }\r\n\r\n      // Procesar datos en memoria\r\n      const sorteosCerrados = new Map();\r\n      (sorteosData || []).forEach(sorteo => {\r\n        if (sorteo.numero_ganador) {\r\n          sorteosCerrados.set(sorteo.sorteo, {\r\n            numeroGanador: parseInt(sorteo.numero_ganador),\r\n            factor: sorteo.factor_multiplicador || 70\r\n          });\r\n        }\r\n      });\r\n\r\n      let totalVendido = 0;\r\n      let totalPagado = 0;\r\n      let totalVentas = 0;\r\n      const ventasPorSucursal = new Map();\r\n      const numerosPorSorteo = new Map();\r\n\r\n      // Procesar todas las ventas en una sola iteración\r\n      (salesData || []).forEach(sale => {\r\n        totalVentas++;\r\n        totalVendido += sale.total;\r\n\r\n        // Procesar por sucursal\r\n        if (!ventasPorSucursal.has(sale.sucursal)) {\r\n          ventasPorSucursal.set(sale.sucursal, {\r\n            sucursal: sale.sucursal,\r\n            totalVendido: 0,\r\n            totalPagado: 0,\r\n            gananciaNeta: 0,\r\n            ventasCount: 0\r\n          });\r\n        }\r\n        const sucursalData = ventasPorSucursal.get(sale.sucursal);\r\n        sucursalData.totalVendido += sale.total;\r\n        sucursalData.ventasCount++;\r\n\r\n        // Procesar números por sorteo\r\n        if (!numerosPorSorteo.has(sale.sorteo)) {\r\n          numerosPorSorteo.set(sale.sorteo, new Map());\r\n        }\r\n        const sorteoMap = numerosPorSorteo.get(sale.sorteo);\r\n        \r\n        if (!sorteoMap.has(sale.sucursal)) {\r\n          sorteoMap.set(sale.sucursal, new Map());\r\n        }\r\n        const sucursalMap = sorteoMap.get(sale.sucursal);\r\n\r\n        // Procesar detalles de la venta\r\n        (sale.sale_details || []).forEach(detail => {\r\n          const numero = parseInt(detail.numero.toString());\r\n          \r\n          // Agregar a números por sorteo/sucursal\r\n          if (!sucursalMap.has(numero)) {\r\n            sucursalMap.set(numero, { totalVendido: 0, cantidadVentas: 0 });\r\n          }\r\n          const numeroData = sucursalMap.get(numero);\r\n          numeroData.totalVendido += detail.monto;\r\n          numeroData.cantidadVentas++;\r\n\r\n          // Calcular total pagado si el sorteo está cerrado\r\n          const sorteoInfo = sorteosCerrados.get(sale.sorteo);\r\n          if (sorteoInfo && numero === sorteoInfo.numeroGanador) {\r\n            const montoPagado = detail.monto * sorteoInfo.factor;\r\n            totalPagado += montoPagado;\r\n            sucursalData.totalPagado += montoPagado;\r\n          }\r\n        });\r\n\r\n        sucursalData.gananciaNeta = sucursalData.totalVendido - sucursalData.totalPagado;\r\n      });\r\n\r\n      // Convertir Maps a arrays con porcentajes\r\n      const numerosPorSorteoArray: Array<{\r\n        sorteo: string;\r\n        sucursales: Array<{\r\n          sucursal: string;\r\n          numeros: Array<{\r\n            numero: number;\r\n            totalVendido: number;\r\n            cantidadVentas: number;\r\n            porcentaje: number;\r\n          }>;\r\n        }>;\r\n      }> = [];\r\n\r\n      numerosPorSorteo.forEach((sucursalesMap: any, sorteo: string) => {\r\n        const sucursales: Array<{\r\n          sucursal: string;\r\n          numeros: Array<{\r\n            numero: number;\r\n            totalVendido: number;\r\n            cantidadVentas: number;\r\n            porcentaje: number;\r\n          }>;\r\n        }> = [];\r\n\r\n        sucursalesMap.forEach((numerosMap: any, sucursal: string) => {\r\n          let totalSucursal = 0;\r\n          numerosMap.forEach((data: any) => {\r\n            totalSucursal += data.totalVendido;\r\n          });\r\n          \r\n          const numeros: Array<{\r\n            numero: number;\r\n            totalVendido: number;\r\n            cantidadVentas: number;\r\n            porcentaje: number;\r\n          }> = [];\r\n\r\n          numerosMap.forEach((data: any, numero: number) => {\r\n            numeros.push({\r\n              numero,\r\n              totalVendido: data.totalVendido,\r\n              cantidadVentas: data.cantidadVentas,\r\n              porcentaje: totalSucursal > 0 ? (data.totalVendido / totalSucursal) * 100 : 0\r\n            });\r\n          });\r\n\r\n          numeros.sort((a, b) => b.totalVendido - a.totalVendido);\r\n          sucursales.push({ sucursal, numeros });\r\n        });\r\n\r\n        numerosPorSorteoArray.push({ sorteo, sucursales });\r\n      });\r\n\r\n      return {\r\n        totalVendido,\r\n        totalPagado,\r\n        gananciaNeta: totalVendido - totalPagado,\r\n        totalVentas,\r\n        ventasPorSucursal: Array.from(ventasPorSucursal.values()),\r\n        numerosPorSorteo: numerosPorSorteoArray\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Error en getAdminDashboardData:', error);\r\n      return {\r\n        totalVendido: 0,\r\n        totalPagado: 0,\r\n        gananciaNeta: 0,\r\n        totalVentas: 0,\r\n        ventasPorSucursal: [],\r\n        numerosPorSorteo: []\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener ventas optimizadas con detalles en una sola consulta\r\n   */\r\n  async getSalesWithDetailsOptimized(fechaDesde?: Date, fechaHasta?: Date, sorteoFilter?: string): Promise<{\r\n    sales: Sale[];\r\n    saleDetails: { [saleId: string]: SaleDetail[] };\r\n  }> {\r\n    try {\r\n      let startDateStr, endDateStr;\r\n      \r\n      if (fechaDesde && fechaHasta) {\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fechaDesde));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fechaHasta));\r\n      } else if (fechaDesde) {\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fechaDesde));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fechaDesde));\r\n      } else {\r\n        const today = this.getHondurasDateTime();\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(today));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(today));\r\n      }\r\n\r\n      let query = this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          id,\r\n          user_id,\r\n          sucursal,\r\n          sorteo,\r\n          fecha,\r\n          total,\r\n          numero_recibo,\r\n          correlativo,\r\n          created_at,\r\n          sale_details (\r\n            id,\r\n            numero,\r\n            monto\r\n          )\r\n        `)\r\n        .gte('fecha', startDateStr)\r\n        .lte('fecha', endDateStr)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (sorteoFilter && sorteoFilter.trim() !== '') {\r\n        query = query.eq('sorteo', sorteoFilter);\r\n      }\r\n\r\n      const { data, error } = await query;\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      const sales: Sale[] = [];\r\n      const saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n\r\n      (data || []).forEach(saleData => {\r\n        // Mapear venta\r\n        const sale: Sale = {\r\n          id: saleData.id,\r\n          userId: saleData.user_id,\r\n          sucursal: saleData.sucursal,\r\n          sorteo: saleData.sorteo,\r\n          fecha: this.parseDateFromDatabase(saleData.fecha),\r\n          total: saleData.total,\r\n          numeroRecibo: saleData.numero_recibo || saleData.id.slice(-6),\r\n          correlativo: saleData.correlativo || 0,\r\n          createdAt: this.parseDateFromDatabase(saleData.created_at)\r\n        };\r\n        sales.push(sale);\r\n\r\n        // Mapear detalles\r\n        saleDetails[sale.id] = (saleData.sale_details || []).map(detailData => ({\r\n          id: detailData.id,\r\n          saleId: sale.id,\r\n          numero: parseInt(detailData.numero),\r\n          monto: detailData.monto\r\n        }));\r\n      });\r\n\r\n      return { sales, saleDetails };\r\n\r\n    } catch (error) {\r\n      console.error('Error en getSalesWithDetailsOptimized:', error);\r\n      return { sales: [], saleDetails: {} };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener datos optimizados para una sola fecha (método más rápido para uso diario)\r\n   */\r\n  async getDailyOptimizedData(fecha: Date, sorteoFilter?: string): Promise<{\r\n    sales: Sale[];\r\n    saleDetails: { [saleId: string]: SaleDetail[] };\r\n    dashboardData: {\r\n      totalVendido: number;\r\n      totalPagado: number;\r\n      gananciaNeta: number;\r\n      totalVentas: number;\r\n      ventasPorSucursal: Array<{\r\n        sucursal: string;\r\n        totalVendido: number;\r\n        totalPagado: number;\r\n        gananciaNeta: number;\r\n        ventasCount: number;\r\n      }>;\r\n    };\r\n  }> {\r\n    try {\r\n      const startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fecha));\r\n      const endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fecha));\r\n\r\n      // Una sola consulta para obtener todo\r\n      let query = this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          id,\r\n          user_id,\r\n          sucursal,\r\n          sorteo,\r\n          fecha,\r\n          total,\r\n          numero_recibo,\r\n          correlativo,\r\n          created_at,\r\n          sale_details (\r\n            id,\r\n            numero,\r\n            monto\r\n          )\r\n        `)\r\n        .gte('fecha', startDateStr)\r\n        .lte('fecha', endDateStr)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (sorteoFilter && sorteoFilter.trim() !== '') {\r\n        query = query.eq('sorteo', sorteoFilter);\r\n      }\r\n\r\n      const { data: salesData, error } = await query;\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      // Obtener sorteos cerrados del día\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n      const { data: sorteosData, error: sorteosError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('sorteo, numero_ganador, factor_multiplicador, cerrado')\r\n        .like('id', `${fechaStr}-%`)\r\n        .eq('cerrado', true);\r\n\r\n      if (sorteosError) {\r\n        console.warn('Error obteniendo sorteos del día:', sorteosError);\r\n      }\r\n\r\n      // Crear mapa de sorteos cerrados\r\n      const sorteosCerrados = new Map();\r\n      (sorteosData || []).forEach(sorteo => {\r\n        if (sorteo.numero_ganador) {\r\n          sorteosCerrados.set(sorteo.sorteo, {\r\n            numeroGanador: parseInt(sorteo.numero_ganador),\r\n            factor: sorteo.factor_multiplicador || 70\r\n          });\r\n        }\r\n      });\r\n\r\n      // Procesar datos\r\n      const sales: Sale[] = [];\r\n      const saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n      let totalVendido = 0;\r\n      let totalPagado = 0;\r\n      const ventasPorSucursal = new Map();\r\n\r\n      (salesData || []).forEach(saleData => {\r\n        // Mapear venta\r\n        const sale: Sale = {\r\n          id: saleData.id,\r\n          userId: saleData.user_id,\r\n          sucursal: saleData.sucursal,\r\n          sorteo: saleData.sorteo,\r\n          fecha: this.parseDateFromDatabase(saleData.fecha),\r\n          total: saleData.total,\r\n          numeroRecibo: saleData.numero_recibo || saleData.id.slice(-6),\r\n          correlativo: saleData.correlativo || 0,\r\n          createdAt: this.parseDateFromDatabase(saleData.created_at)\r\n        };\r\n        sales.push(sale);\r\n        totalVendido += sale.total;\r\n\r\n        // Mapear detalles y calcular datos por sucursal\r\n        if (!ventasPorSucursal.has(sale.sucursal)) {\r\n          ventasPorSucursal.set(sale.sucursal, {\r\n            sucursal: sale.sucursal,\r\n            totalVendido: 0,\r\n            totalPagado: 0,\r\n            gananciaNeta: 0,\r\n            ventasCount: 0\r\n          });\r\n        }\r\n        const sucursalData = ventasPorSucursal.get(sale.sucursal);\r\n        sucursalData.totalVendido += sale.total;\r\n        sucursalData.ventasCount++;\r\n\r\n        const details: SaleDetail[] = [];\r\n        (saleData.sale_details || []).forEach(detailData => {\r\n          const detail: SaleDetail = {\r\n            id: detailData.id,\r\n            saleId: sale.id,\r\n            numero: parseInt(detailData.numero),\r\n            monto: detailData.monto\r\n          };\r\n          details.push(detail);\r\n\r\n          // Calcular total pagado si el sorteo está cerrado\r\n          const sorteoInfo = sorteosCerrados.get(sale.sorteo);\r\n          if (sorteoInfo && detail.numero === sorteoInfo.numeroGanador) {\r\n            const montoPagado = detail.monto * sorteoInfo.factor;\r\n            totalPagado += montoPagado;\r\n            sucursalData.totalPagado += montoPagado;\r\n          }\r\n        });\r\n\r\n        saleDetails[sale.id] = details;\r\n        sucursalData.gananciaNeta = sucursalData.totalVendido - sucursalData.totalPagado;\r\n      });\r\n\r\n      return {\r\n        sales,\r\n        saleDetails,\r\n        dashboardData: {\r\n          totalVendido,\r\n          totalPagado,\r\n          gananciaNeta: totalVendido - totalPagado,\r\n          totalVentas: sales.length,\r\n          ventasPorSucursal: Array.from(ventasPorSucursal.values())\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Error en getDailyOptimizedData:', error);\r\n      return {\r\n        sales: [],\r\n        saleDetails: {},\r\n        dashboardData: {\r\n          totalVendido: 0,\r\n          totalPagado: 0,\r\n          gananciaNeta: 0,\r\n          totalVentas: 0,\r\n          ventasPorSucursal: []\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n}\r\n","export const environment = {\r\n  production: false,\r\n   supabase: {\r\n    url: 'https://oxuhcoubrpupjmjvyzbv.supabase.co',\r\n    // ⚠️ CAMBIAR ESTA KEY POR TU SERVICE_ROLE KEY\r\n    // Ve a Supabase Dashboard → Settings → API → service_role key\r\n    key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im94dWhjb3VicnB1cGptanZ5emJ2Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MjcxNzU0MiwiZXhwIjoyMDY4MjkzNTQyfQ.xAawEVJAtjAvxAo1iUeWw2w33IvismG_k92spFgEyYI' // Reemplaza con tu service_role key real\r\n  }\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n"],"names":["AppComponent","constructor","supabaseService","router","ngOnInit","currentUser$","subscribe","user","url","includes","navigate","i0","ɵɵdirectiveInject","i1","SupabaseService","i2","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","FormsModule","RouterModule","CommonModule","LoginComponent","SucursalComponent","AdminComponent","UserManagementComponent","ResumenSorteosComponent","AuthGuard","AdminGuard","routes","path","redirectTo","pathMatch","component","canActivate","AppModule","bootstrap","imports","forRoot","declarations","SORTEO_SCHEDULES","ɵɵtext","ɵɵproperty","sorteo_r2","name","ɵɵadvance","ɵɵtextInterpolate","label","sucursal_r3","sucursal","ɵɵtextInterpolate1","factor_multiplicador","cantidad_numero_ganador","toFixed","ɵɵtemplate","AdminComponent_div_94_div_35_Template","ctx_r3","resumenSucursales","numero_ganador","getTotalCantidadNumeroGanador","getTotalPagadoGeneral","numero_r5","numero","toString","padStart","totalVendido","i_r6","ɵɵclassMap","getNumeroIntensity","sucursalGroup_r8","num_r7","getNumeroVenta","AdminComponent_div_102_div_1_div_7_div_11_Template","AdminComponent_div_102_div_1_div_7_div_17_Template","getSucursalTotal","numeros","slice","getAllNumbers","AdminComponent_div_102_div_1_div_7_Template","sorteoGroup_r9","sorteo","getSorteoTotal","sucursales","AdminComponent_div_102_div_1_Template","getNumbersSummaryBySorteoAndSucursal","tmp_11_0","getSorteoData","sorteo_r10","numeroGanador","tmp_12_0","factorMultiplicador","ɵɵtwoWayListener","AdminComponent_div_111_ng_template_11_div_0_Template_input_ngModelChange_4_listener","$event","ɵɵrestoreView","_r11","ɵɵnextContext","$implicit","ɵɵtwoWayBindingSet","winningNumbers","ɵɵresetView","ɵɵlistener","AdminComponent_div_111_ng_template_11_div_0_Template_button_click_5_listener","openFactorsModal","AdminComponent_div_111_ng_template_11_div_0_span_7_Template","AdminComponent_div_111_ng_template_11_div_0_span_8_Template","ɵɵtwoWayProperty","isLoading","AdminComponent_div_111_ng_template_11_div_0_Template","AdminComponent_div_111_ng_template_11_div_1_Template","isSorteoOpen","AdminComponent_div_111_div_10_Template","AdminComponent_div_111_ng_template_11_Template","ɵɵtemplateRefExtractor","ɵɵclassProp","closeTime","hasSavedWinner","setWinner_r12","AdminComponent_div_134_Template_input_ngModelChange_3_listener","_r13","userFormData","password","AdminComponent_div_143_Template_input_ngModelChange_3_listener","_r14","detail_r15","monto","AdminComponent_div_193_div_32_div_5_Template","selectedSaleDetails","trackBySaleDetail","length","getTotalNumeros","AdminComponent_div_193_div_32_Template","AdminComponent_div_193_div_33_Template","selectedSaleForDetail","numeroRecibo","correlativo","formatDateTime","createdAt","total","currentSorteoForFactors","winningNumber","ɵɵtextInterpolate2","user_r18","email","last_r19","AdminComponent_div_201_div_14_div_1_div_5_span_3_Template","getUsersBySucursal","sucursal_r20","AdminComponent_div_201_div_14_div_1_div_5_Template","AdminComponent_div_201_div_14_div_1_Template_input_input_10_listener","_r17","updateFactorForSucursal","target","value","hasSucursalUsers","factoresPorSucursal","AdminComponent_div_201_div_14_div_1_Template","getUniqueSucursales","AdminComponent_div_201_Template_div_click_0_listener","_r16","closeFactorsModal","AdminComponent_div_201_Template_div_click_1_listener","stopPropagation","AdminComponent_div_201_div_6_Template","AdminComponent_div_201_Template_button_click_7_listener","AdminComponent_div_201_div_14_Template","AdminComponent_div_201_div_15_Template","AdminComponent_div_201_div_16_Template","AdminComponent_div_201_Template_button_click_18_listener","AdminComponent_div_201_Template_button_click_21_listener","confirmWinningNumberWithFactors","AdminComponent_div_201_i_22_Template","AdminComponent_div_201_i_23_Template","sucursalesFactores","sucursal_r22","total_vendido","total_pagado","ganancia_neta","AdminComponent_div_202_Template_div_click_0_listener","_r21","closeResumenModal","AdminComponent_div_202_Template_div_click_1_listener","AdminComponent_div_202_Template_button_click_6_listener","AdminComponent_div_202_div_26_Template","AdminComponent_div_202_Template_button_click_46_listener","currentSorteoForResumen","getTotalVendidoGeneral","getGananciaTotalGeneral","notificationService","printService","exportService","cdr","currentUser","sorteos","sales","saleDetails","sorteosData","selectedSorteoFilter","isLoadingFilters","selectedDate","fechaDesde","fechaHasta","users","showUserModal","editingUser","role","active","showSaleDetailModal","showSorteoModal","editingSorteo","sorteoSchedules","showPasswordModal","selectedUserForPassword","newPassword","confirmPassword","showSorteosSection","showUsersSection","showFactorsModal","cachedDashboardData","cachedNumbersData","lastDataFetch","cacheValidTime","showResumenModal","hondurasToday","getHondurasDateTime","formatDateTimeLocalHonduras","split","loadFilterState","fechaInicio","getStartOfDayHonduras","fechaFin","getEndOfDayHonduras","savedFilters","localStorage","getItem","filters","JSON","parse","error","saveFilterState","setItem","stringify","loadSales","loadSorteosData","initializeUsers","loadSorteoSchedules","_this","_asyncToGenerator","initializeProfilesTable","loadUsers","id","Date","showError","now","hours","minutes","setHours","parseInt","todayString","formatDateOnlyForSupabase","sorteoId","isSorteoCerrado","sorteoData","cerrado","hasTemporaryWinnerData","loadSorteoById","_this2","getSorteoById","sorteoName","detectChanges","isRLSError","code","simpleData","getSorteoByIdSimple","data","fecha","horaCierre","hora_cierre","totalPagado","gananciaNeta","fallbackError","refreshTodaysSorteos","_this3","_this4","clearCache","loadSalesByDateRangeOptimized","fechaParaConsulta","console","log","optimizedData","getDailyOptimizedData","dashboardData","ventas","_this5","loadSingleDateSales","fechaDesdeUtc","parseLocalDateTimeToUtc","fechaHastaUtc","getSalesWithDetailsOptimized","getAdminDashboardData","numerosPorSorteo","isCacheValid","getTime","getSaleDetails","saleId","setWinningNumber","_this6","calculateSorteoResults","_x","_x2","_this7","multiplicador","sorteoSales","getSalesByDateAndSorteo","sale","details","detail","createOrUpdateSorteo","apply","arguments","_this8","status","updateSorteoUI","_this9","setTimeout","getTotalSales","reduce","getSucursalSummary","summary","count","Object","entries","map","getTotalVendido","getTotalPagado","sorteoSchedule","find","s","factor","getGananciaNeta","getTotalVentas","aplicarFiltros","_this0","limpiarFiltros","_this1","onFiltroFechaChange","_this10","onDateChange","_this11","onSorteoFilterChange","_this12","onFechaDesdeChange","_this13","onFechaHastaChange","_this14","loadSalesByDateRange","_this15","allSales","currentDate","daysProcessed","maxDays","daySales","setUTCDate","getUTCDate","showInfo","_this16","_this17","getUsers","message","closeUserModal","editUser","saveUser","_this18","updateExistingUser","showSuccess","createNewUser","toggleUserStatus","_this19","toggleExistingUserStatus","deleteUser","userId","_this20","confirmed","showConfirmation","generateDailyReport","reportDate","reprintReceipt","_this21","generateThermalReceipt","logout","_this22","dateInput","date","toLocaleString","year","month","day","hour","minute","formatDateTimeLocal","formatDateForDisplay","dateObj","formatHondurasDateTime","exportarVentas","exportarVentasExcel","generateVentasReportExcel","exportarVentasPDF","generateVentasReportPDF","trackBySale","index","trackByUser","trackBySorteo","verDetalles","closeSaleDetailModal","forceCloseSaleDetailModal","resetModal","backdrops","document","querySelectorAll","forEach","el","parentNode","removeChild","body","classList","remove","createUser","changePassword","closePasswordModal","changeUserPassword","_this23","updateUserPassword","csvContent","d","join","blob","Blob","type","link","createElement","URL","createObjectURL","setAttribute","style","visibility","appendChild","click","sorteoFilter","generateVentasReport","onFactorChange","event","debugSorteoSchedules","_this24","toggleSorteosSection","toggleUsersSection","openCreateUserModal","syncUsersFromAuth","_this25","navigateToUsers","sorteoOrName","_this26","getActiveUsersBySucursal","_this27","fechaStr","crearSorteosPorSucursal","calcularTotalesSorteoPorSucursal","getSorteoResumenPorSucursal","notifyResumenUpdate","Set","parseFloat","filter","getNumbersSummary","totalGeneral","get","result","key","undefined","push","cantidadVentas","porcentaje","sort","a","b","numeroStats","stats","groups","keys","sucursalData","totalSucursal","values","sum","numeroStr","sorteoGroup","subtotal","sucursalGroup","numbers","i","numeroData","n","venta","maxVenta","Math","max","intensidad","prepareReportData","fechaReporte","hondurasTime","fechaHora","hora","periodo","filtroAplicado","ventasTotales","detallePorSucursales","headers","filas","cantidadNumeroGanador","totales","horaReporte","dashboard","prepareVisualReportData","totalVendidoGeneral","totalPagadoGeneral","fechaFormateada","horaCompleta","filtrosAplicados","fechaDesdeOnly","fechaHastaOnly","resumen","minimumFractionDigits","sucursalesMap","Map","has","set","sucursalesArray","Array","from","toLocaleDateString","toLocaleTimeString","filtros","downloadDailyReportExcel","_this28","reportData","exportVisualToExcel","downloadDailyReportPDF","_this29","exportVisualToPDF","NotificationService","i3","PrintService","i4","ExportService","i5","ChangeDetectorRef","AdminComponent_Template","AdminComponent_Template_button_click_7_listener","_r1","AdminComponent_Template_button_click_10_listener","AdminComponent_span_18_Template","AdminComponent_Template_input_ngModelChange_19_listener","AdminComponent_Template_input_change_19_listener","AdminComponent_span_24_Template","AdminComponent_Template_input_ngModelChange_25_listener","AdminComponent_Template_input_change_25_listener","AdminComponent_span_30_Template","AdminComponent_Template_select_ngModelChange_31_listener","AdminComponent_Template_select_change_31_listener","AdminComponent_option_34_Template","AdminComponent_Template_button_click_36_listener","AdminComponent_i_37_Template","AdminComponent_ng_template_38_Template","AdminComponent_Template_button_click_41_listener","AdminComponent_i_42_Template","AdminComponent_ng_template_43_Template","AdminComponent_Template_button_click_50_listener","AdminComponent_i_51_Template","AdminComponent_ng_template_52_Template","AdminComponent_Template_button_click_55_listener","AdminComponent_i_56_Template","AdminComponent_ng_template_57_Template","AdminComponent_div_94_Template","AdminComponent_div_102_Template","AdminComponent_ng_template_103_Template","AdminComponent_div_111_Template","AdminComponent_Template_div_click_113_listener","currentTarget","AdminComponent_Template_button_click_120_listener","AdminComponent_Template_input_ngModelChange_129_listener","AdminComponent_Template_input_ngModelChange_133_listener","nombre","AdminComponent_div_134_Template","AdminComponent_Template_select_ngModelChange_138_listener","AdminComponent_div_143_Template","AdminComponent_Template_input_ngModelChange_146_listener","AdminComponent_Template_button_click_150_listener","AdminComponent_Template_button_click_153_listener","AdminComponent_Template_div_click_156_listener","AdminComponent_Template_button_click_163_listener","AdminComponent_Template_input_ngModelChange_172_listener","AdminComponent_Template_input_ngModelChange_176_listener","AdminComponent_Template_button_click_178_listener","AdminComponent_Template_button_click_181_listener","AdminComponent_Template_div_keydown_escape_184_listener","AdminComponent_Template_div_click_185_listener","AdminComponent_Template_button_click_191_listener","AdminComponent_div_193_Template","AdminComponent_Template_button_click_195_listener","AdminComponent_Template_button_click_198_listener","AdminComponent_div_201_Template","AdminComponent_div_202_Template","searchIcon_r23","eraserIcon_r24","excelIcon_r25","pdfIcon_r26","noVentasNumeros_r27","ɵɵstyleProp","userForm_r28","valid","passwordForm_r29","ctx_r1","errorMessage","redirectUser","onLogin","showLoading","timeoutPromise","Promise","_","reject","Error","loginPromise","login","race","getErrorMessage","hideLoading","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_9_listener","LoginComponent_Template_input_ngModelChange_13_listener","LoginComponent_div_14_Template","loginForm_r3","sucursal_r1","item_r2","i_r3","ctx_r5","getIntensidadColor","sorteo_r5","numero_r4","getVentaTotalPorNumero","ResumenSorteosComponent_div_10_div_2_div_72_div_9_Template","ResumenSorteosComponent_div_10_div_2_div_72_div_15_Template","getNumerosMasVendidos","getNumeros","getCantidadNumerosVendidos","getPromedioVentaPorNumero","getMaxVentaPorNumero","ResumenSorteosComponent_div_10_div_2_div_56_Template","ResumenSorteosComponent_div_10_div_2_div_72_Template","getNumeroGanador","getFactorPrincipal","getTotalVendidoSorteo","getTotalPagadoSorteo","getGananciaTotalSorteo","getResumenSorteo","hasVentasPorNumero","ResumenSorteosComponent_div_10_div_1_Template","ResumenSorteosComponent_div_10_div_2_Template","getSorteosConResumen","resumenPorSorteo","ventasPorNumero","loadResumenesSorteos","subscription","resumenUpdateSubject","ngOnDestroy","unsubscribe","toISOString","loadVentasPorNumero","getVentasPorNumero","hasResumenSorteo","refreshData","top","valores","suma","acc","val","standalone","features","ɵɵStandaloneFeature","ResumenSorteosComponent_Template","ResumenSorteosComponent_Template_button_click_6_listener","ResumenSorteosComponent_div_9_Template","ResumenSorteosComponent_div_10_Template","NgForOf","NgIf","styles","timeUntilClose","SucursalComponent_div_13_div_4_span_5_Template","SucursalComponent_div_13_div_4_span_6_Template","currentSorteo","blockDetail","timeUntilNextOpening","SucursalComponent_div_13_div_5_div_6_div_11_Template","nextSorteoName","nextSorteoOpenTime","SucursalComponent_div_13_div_5_div_5_Template","SucursalComponent_div_13_div_5_div_6_Template","SucursalComponent_div_13_div_5_div_7_Template","blockMessage","SucursalComponent_div_13_Template_button_click_2_listener","openNumberModal","SucursalComponent_div_13_div_4_Template","SucursalComponent_div_13_div_5_Template","isBlocked","SucursalComponent_div_14_div_9_Template_button_click_6_listener","i_r5","_r4","removeNumber","item_r6","SucursalComponent_div_14_div_9_Template","SucursalComponent_div_14_Template_button_click_17_listener","_r3","SucursalComponent_div_14_Template_button_click_20_listener","processSale","selectedNumbers","trackByIndex","getTotal","getSorteoNumeroGanador","getSorteoTotalPagar","numero_r7","SucursalComponent_div_27_div_12_div_1_Template","getSorteoNumerosVendidos","SucursalComponent_div_27_div_7_Template","SucursalComponent_div_27_div_8_Template","SucursalComponent_div_27_div_12_Template","SucursalComponent_div_27_div_13_Template","getSorteoTotalVendido","numero_r8","SucursalComponent_div_28_div_12_div_1_Template","SucursalComponent_div_28_div_7_Template","SucursalComponent_div_28_div_8_Template","SucursalComponent_div_28_div_12_Template","SucursalComponent_div_28_div_13_Template","numero_r9","SucursalComponent_div_29_div_12_div_1_Template","SucursalComponent_div_29_div_7_Template","SucursalComponent_div_29_div_8_Template","SucursalComponent_div_29_div_12_Template","SucursalComponent_div_29_div_13_Template","sorteoService","selectedNumber","selectedAmount","todaySales","recentSales","filteredSales","filterDate","numberInput","showKeypad","currentInput","showNumberModal","showAmountModal","showConfirmModal","tempNumber","tempAmount","modalNumberInput","modalAmountInput","stepperAmount","maxAmount","stepIncrement","activeTab","currentHondurasTime","isProcessingModal","userSubscription","initializeComponent","checkTimeRestrictions","updateHondurasTime","timeCheckInterval","setInterval","hondurasTimeInterval","sorteoUpdateInterval","clearInterval","getHondurasTimeNow","fullFormatted","formatDateForHonduras","parts","refreshSorteoSchedules","updateSorteoInfo","setFilterDate","loadAllSorteoData","hondurasNow","formatted","formatLocalDateForSupabase","onFilterDateChange","filterSales","filterDateObj","saleDate","toDateString","getCurrentSorteo","getTimeUntilClose","addNumber","existingIndex","findIndex","splice","generateReceiptNumber","datePart","yearFull","sucursalCode","replace","toUpperCase","substring","correlativoFormatted","item","getNextCorrelativo","createSale","detailId","createSaleDetail","saleWithId","pressNumber","num","clearNumber","acceptNumber","closeAllModals","pressModalNumber","clearModalNumber","acceptModalNumber","formattedNumber","increaseAmount","decreaseAmount","resetAmount","acceptStepperAmount","confirmAddNumber","cancelAddNumber","hnFormatted","timePart","hourStr","minuteStr","currentTotalMinutes","getAllSorteos","isInActivePeriod","activeSorteo","openHour","openMinute","openTime","Number","closeHour","closeMinute","openTimeInMinutes","closeTimeInMinutes","nextSorteo","getNextOpeningSorteo","calculateTimeUntilOpening","showWarning","closeHourStr","closeMinuteStr","closeTotalMinutes","minutesLeft","minutesUntilOpening","floor","getTodayDate","weekday","trackBySaleId","trackByDetailId","debugModalState","alert","toggleBloqueo","estado","manana","numerosVendidos","totalPagar","tarde","noche","loadSorteoDataOptimized","getCurrentSorteoTab","startOfDay","endOfDay","startStr","endStr","client","select","eq","gte","lte","clave","toLowerCase","mapped","sale_details","numStr","timeStr","currentHour","currentMinute","currentTimeInMinutes","recentlyClosedSorteo","getRecentlyClosedSorteo","minTimeSinceClosure","Infinity","timeSinceClosure","setActiveTab","tab","loadSorteoData","calculateTotalPayout","SorteoService","SucursalComponent_Template","SucursalComponent_Template_button_click_10_listener","SucursalComponent_div_13_Template","SucursalComponent_div_14_Template","SucursalComponent_Template_button_click_17_listener","SucursalComponent_Template_button_click_20_listener","SucursalComponent_Template_button_click_23_listener","SucursalComponent_div_27_Template","SucursalComponent_div_28_Template","SucursalComponent_div_29_Template","SucursalComponent_Template_div_click_30_listener","SucursalComponent_Template_div_click_31_listener","SucursalComponent_Template_button_click_37_listener","SucursalComponent_Template_button_click_49_listener","SucursalComponent_Template_button_click_51_listener","SucursalComponent_Template_button_click_53_listener","SucursalComponent_Template_button_click_56_listener","SucursalComponent_Template_button_click_58_listener","SucursalComponent_Template_button_click_60_listener","SucursalComponent_Template_button_click_63_listener","SucursalComponent_Template_button_click_65_listener","SucursalComponent_Template_button_click_67_listener","SucursalComponent_Template_button_click_70_listener","SucursalComponent_Template_button_click_72_listener","SucursalComponent_Template_button_click_74_listener","SucursalComponent_Template_div_click_76_listener","SucursalComponent_Template_div_click_77_listener","SucursalComponent_Template_button_click_83_listener","SucursalComponent_Template_button_click_89_listener","SucursalComponent_Template_button_click_96_listener","SucursalComponent_Template_button_click_99_listener","SucursalComponent_Template_button_click_102_listener","SucursalComponent_Template_div_click_109_listener","SucursalComponent_Template_div_click_110_listener","SucursalComponent_Template_button_click_116_listener","SucursalComponent_Template_button_click_127_listener","SucursalComponent_Template_button_click_130_listener","UserManagementComponent_table_12_tr_16_Template_button_click_15_listener","user_r2","ctx_r2","openEditUserModal","UserManagementComponent_table_12_tr_16_Template_button_click_17_listener","UserManagementComponent_table_12_tr_16_Template_button_click_19_listener","getRoleLabel","getStatusClass","getStatusLabel","ɵɵpipeBind2","created_at","UserManagementComponent_table_12_tr_16_Template","trackByUserId","UserManagementComponent_div_14_Template_button_click_6_listener","UserManagementComponent_div_15_div_17_Template_input_ngModelChange_3_listener","_r6","userForm","isEditMode","sucursal_r8","UserManagementComponent_div_15_div_26_Template_input_ngModelChange_3_listener","_r7","UserManagementComponent_div_15_div_26_option_5_Template","sucursalesSugeridas","UserManagementComponent_div_15_Template_div_click_0_listener","_r5","UserManagementComponent_div_15_Template_div_click_1_listener","UserManagementComponent_div_15_Template_button_click_5_listener","UserManagementComponent_div_15_Template_input_ngModelChange_12_listener","UserManagementComponent_div_15_Template_input_ngModelChange_16_listener","UserManagementComponent_div_15_div_17_Template","UserManagementComponent_div_15_Template_select_ngModelChange_21_listener","UserManagementComponent_div_15_div_26_Template","UserManagementComponent_div_15_Template_input_ngModelChange_29_listener","UserManagementComponent_div_15_Template_button_click_33_listener","UserManagementComponent_div_15_Template_button_click_35_listener","UserManagementComponent_div_15_i_36_Template","selectedUser","getAllUsers","resetForm","goToMainMenu","validateForm","trim","deleteExistingUser","newStatus","action","charAt","UserManagementComponent_Template","UserManagementComponent_Template_button_click_3_listener","UserManagementComponent_Template_button_click_8_listener","UserManagementComponent_table_12_Template","UserManagementComponent_div_13_Template","UserManagementComponent_div_14_Template","UserManagementComponent_div_15_Template","tap","timeout","catchError","of","pipe","isAdmin","ɵɵinject","factory","ɵfac","providedIn","isAuthenticated","XLSX","jsPDF","autoTable","saveAs","exportToExcel","filename","workbook","utils","book_new","resumenData","resumenGeneral","wsResumen","aoa_to_sheet","width","book_append_sheet","sorteoHeaders","sorteoRows","wsSorteo","sucursalHeaders","sucursalRows","resumenPorSucursal","wsSucursal","numerosData","grupo","totalSorteoSucursal","wsNumeros","ventasHeaders","ventasRows","detalleVentas","v","ventasData","wsVentas","excelBuffer","write","bookType","hondurasDate","wsDashboard","fila","isArray","wsSucursales","topNumeros","min","exportToPDF","_x3","doc","pageHeight","internal","pageSize","height","yPosition","checkNewPage","requiredSpace","addPage","setFontSize","setFont","text","resumenTable","head","startY","theme","headStyles","fillColor","textColor","fontSize","cellPadding","columnStyles","cellWidth","halign","lastAutoTable","finalY","sorteoTableData","sucursalTableData","rows","row","valign","ventasTableData","save","_x4","orientation","unit","format","fontStyle","margin","left","right","lineColor","lineWidth","alternateRowStyles","totalesRow","totalesData","pageCount","getNumberOfPages","setPage","Swal","loadingInstance","title","fire","icon","confirmButtonText","confirmButtonColor","cancelButtonText","showCancelButton","cancelButtonColor","isConfirmed","allowOutsideClick","allowEscapeKey","showConfirmButton","didOpen","close","pdf","y","lineHeight","align","line","pdfData","output","printWindow","window","open","onload","focus","print","printError","checkClosed","closed","revokeObjectURL","printFrame","display","src","contentWindow","generateTestReceipt","testSale","testDetails","yPos","sorteoSummary","calculateSorteoSummary","setFillColor","rect","setTextColor","setDrawColor","fechaTexto","sucursalTotals","tableData","numerosText","fechaHoraStr","bodyStyles","didDrawPage","pageNumber","fileName","getHours","getMinutes","getNextSorteo","diff","hoursLeft","createClient","environment","BehaviorSubject","Subject","parseISO","toZonedTime","fromZonedTime","formatInTimeZone","es","supabase","currentUserSubject","asObservable","HONDURAS_TIMEZONE","initializeSession","auth","onAuthStateChange","_ref","session","userMetadata","user_metadata","rawMetadata","raw_user_meta_data","metaSucursal","metaRole","userData","getSucursalFromEmail","next","getSession","loadUserDataInBackground","uid","queryPromise","single","updatedUser","signInWithPassword","signOut","testConnection","limit","getUserData","authUser","authError","getUser","defaultUserData","dbError","today","order","ascending","nextCorrelativo","saleData","user_id","numero_recibo","insert","numeroString","detailData","sale_id","startOfDayStr","endOfDayStr","query","mappedSales","parseDateFromDatabase","numeroGanadorString","upsert","getSorteo","firstRecord","enrichedData","all","_ref2","getCantidadNumeroGanadorPorSucursal","rpc","p_sorteo_id","p_sucursal","p_numero_ganador","sorteo_id","insertNewSorteo","hondurasDateTime","updateSorteoWinner","existingData","selectError","update","createSorteo","getVentasPorSorteoOptimizado","p_fecha","getVentasPorSorteoRPCSimple","sorteoResumen","sorteoKey","total_pagar","numeros_vendidos","getVentasPorSorteoBasico","getVentasPorSorteoFallback","resumenError","totalesError","sorteosError","like","getSorteoByTypeAndDate","sorteoType","updateSorteoWinnerDirect","updateSorteoWinnerSimple","calculateSorteoWinnings","sorteoError","salesError","updateError","debugSalesData","tablesData","tablesError","todayData","todayError","threeDaysAgo","setDate","getDate","startThreeDaysAgo","recentData","recentError","checkDatabasePermissions","sessionError","simpleQuery","simpleError","insertTest","insertError","delete","getDefaultUsers","createProfilesFromAuthUsers","authUsers","_this30","profilesData","onConflict","getSorteoSchedules","_this31","createSorteoSchedule","_this32","updateSorteoSchedule","updates","_this33","deleteSorteoSchedule","_this34","initializeSorteoSchedules","_this35","defaultSorteos","_this36","targetDate","pad","getFullYear","getMonth","seconds","getSeconds","hondurasToUtc","utcToHonduras","utcDate","convertToHondurasTime","locale","isoString","createHondurasDate","second","dateString","String","dateTimeLocalString","localDate","_this37","admin","listUsers","getDefaultUsersForManagement","_this38","authData","email_confirm","_this39","updateData","ban_duration","updateUserById","_this40","_this41","fetchError","getUserById","currentActive","_this42","sendPasswordReset","_this43","resetPasswordForEmail","location","origin","_this44","warn","usersData","usersError","email_confirmed_at","usuario","factor_default","_this45","p_factores_json","_this46","getSorteosPorSucursal","_this47","getResumenConsolidadoSorteo","_this48","sorteosPorSucursal","detallesPorSucursal","every","vendido","pagado","ganancia","_this49","lt","detalle","sucursalFilter","_this50","startDateStr","endDateStr","salesQuery","salesData","sorteosCerrados","totalVentas","ventasPorSucursal","ventasCount","sorteoMap","sucursalMap","sorteoInfo","montoPagado","numerosPorSorteoArray","numerosMap","_this51","_this52","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}