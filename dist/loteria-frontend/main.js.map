{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/login/login.component.ts","./src/app/components/sucursal/sucursal.component.ts","./src/app/components/sucursal/sucursal.component.html","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/models/interfaces.ts","./src/app/services/notification.service.ts","./src/app/services/print.service.ts","./src/app/services/sorteo.service.ts","./src/app/services/supabase.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SupabaseService } from './services/supabase.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"app-container\">\n      <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: [`\n    .app-container {\n      min-height: 100vh;\n      background-color: #f5f5f5;\n    }\n  `]\n})\nexport class AppComponent implements OnInit {\n  \n  constructor(\n    private supabaseService: SupabaseService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // Verificar estado de autenticación al iniciar\n    this.supabaseService.currentUser$.subscribe(user => {\n      if (!user && !this.router.url.includes('login')) {\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SucursalComponent } from './components/sucursal/sucursal.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminGuard } from './guards/admin.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'sucursal', component: SucursalComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard, AdminGuard] },\n  { path: '**', redirectTo: '/login' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SucursalComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [ AuthGuard, AdminGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoService } from '../../services/sorteo.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail, Sorteo } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  currentUser: any = null;\r\n  sorteos = this.sorteoService.getAllSorteos();\r\n  sales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  sorteosData: { [key: string]: Sorteo } = {};\r\n  winningNumbers: { [key: string]: number } = {};\r\n  factorMultiplicador: { [key: string]: number } = {};\r\n  selectedSorteoFilter: string = '';\r\n  isLoading: boolean = false;\r\n  selectedDate: string = '';\r\n\r\n  // Nuevas propiedades para las mejoras\r\n  fechaDesde: string = '';\r\n  fechaHasta: string = '';\r\n  users: any[] = [];\r\n  showUserModal: boolean = false;\r\n  editingUser: any = null;\r\n  userFormData: any = {\r\n    email: '',\r\n    password: '',\r\n    role: 'sucursal',\r\n    sucursal: '',\r\n    active: true\r\n  };\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private sorteoService: SorteoService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private router: Router\r\n  ) {\r\n    const today = new Date();\r\n    this.selectedDate = today.toISOString().split('T')[0];\r\n    \r\n    // Inicializar fechas para filtros\r\n    const startOfDay = new Date(today);\r\n    startOfDay.setHours(0, 0, 0, 0);\r\n    this.fechaDesde = startOfDay.toISOString().slice(0, 16);\r\n    \r\n    const endOfDay = new Date(today);\r\n    endOfDay.setHours(23, 59, 59, 999);\r\n    this.fechaHasta = endOfDay.toISOString().slice(0, 16);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'admin') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    this.loadSales();\r\n    this.loadSorteosData();\r\n    this.loadUsers();\r\n  }\r\n\r\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\r\n    return this.sorteoService.isSorteoOpen(sorteo);\r\n  }\r\n\r\n  getSorteoData(sorteo: SorteoSchedule): Sorteo | undefined {\r\n    const today = new Date().toDateString();\r\n    return this.sorteosData[`${today}-${sorteo.name}`];\r\n  }\r\n\r\n  async loadSales(): Promise<void> {\r\n    try {\r\n      const selectedDateObj = this.selectedDate ? new Date(this.selectedDate) : new Date();\r\n      this.sales = await this.supabaseService.getSalesByDateAndSorteo(selectedDateObj, this.selectedSorteoFilter);\r\n      \r\n      // Cargar detalles de cada venta\r\n      for (const sale of this.sales) {\r\n        this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando ventas:', error);\r\n    }\r\n  }\r\n\r\n  async loadSorteosData(): Promise<void> {\r\n    try {\r\n      const today = new Date();\r\n      for (const sorteo of this.sorteos) {\r\n        const sorteoData = await this.supabaseService.getSorteo(today, sorteo.name);\r\n        if (sorteoData) {\r\n          this.sorteosData[sorteoData.id] = sorteoData;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando datos de sorteos:', error);\r\n    }\r\n  }\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async setWinningNumber(sorteo: SorteoSchedule): Promise<void> {\r\n    const winningNumber = this.winningNumbers[sorteo.name];\r\n    const multiplicador = this.factorMultiplicador[sorteo.name] || 70;\r\n    \r\n    if (!winningNumber) {\r\n      alert('Por favor ingrese un número ganador');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const today = new Date();\r\n      const sorteoId = `${today.toDateString()}-${sorteo.name}`;\r\n      \r\n      await this.supabaseService.updateSorteoWinner(sorteoId, winningNumber, multiplicador);\r\n      \r\n      // Recalcular totales\r\n      await this.calculateSorteoResults(sorteo, winningNumber, multiplicador);\r\n      \r\n      // Recargar datos\r\n      await this.loadSorteosData();\r\n      \r\n      alert('Número ganador establecido correctamente');\r\n    } catch (error) {\r\n      console.error('Error estableciendo número ganador:', error);\r\n      alert('Error al establecer el número ganador');\r\n    }\r\n  }\r\n\r\n  private async calculateSorteoResults(sorteo: SorteoSchedule, winningNumber: number, multiplicador: number = 70): Promise<void> {\r\n    const today = new Date();\r\n    const sorteoSales = await this.supabaseService.getSalesByDateAndSorteo(today, sorteo.name);\r\n    \r\n    let totalVendido = 0;\r\n    let totalPagado = 0;\r\n    \r\n    for (const sale of sorteoSales) {\r\n      totalVendido += sale.total;\r\n      \r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n      for (const detail of details) {\r\n        if (detail.numero === winningNumber) {\r\n          totalPagado += detail.monto * multiplicador;\r\n        }\r\n      }\r\n    }\r\n    \r\n    const gananciaNeta = totalVendido - totalPagado;\r\n    \r\n    // Actualizar o crear sorteo\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const horaCierre = new Date();\r\n    horaCierre.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    await this.supabaseService.createOrUpdateSorteo({\r\n      fecha: today,\r\n      sorteo: sorteo.name,\r\n      horaCierre,\r\n      numeroGanador: winningNumber,\r\n      factorMultiplicador: multiplicador,\r\n      totalVendido,\r\n      totalPagado,\r\n      gananciaNeta,\r\n      cerrado: true\r\n    });\r\n  }\r\n\r\n  getTotalSales(): number {\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getSucursalSummary(): { name: string, total: number, count: number }[] {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n    \r\n    for (const sale of this.sales) {\r\n      if (!summary[sale.sucursal]) {\r\n        summary[sale.sucursal] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sucursal].total += sale.total;\r\n      summary[sale.sucursal].count += 1;\r\n    }\r\n    \r\n    return Object.entries(summary).map(([name, data]) => ({ \r\n      name, \r\n      total: data.total, \r\n      count: data.count \r\n    }));\r\n  }\r\n\r\n  // Métodos para cards de resumen\r\n  getTotalVendido(): number {\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getTotalPagado(): number {\r\n    return Object.values(this.sorteosData).reduce((total, sorteo) => total + (sorteo.totalPagado || 0), 0);\r\n  }\r\n\r\n  getGananciaNeta(): number {\r\n    return this.getTotalVendido() - this.getTotalPagado();\r\n  }\r\n\r\n  getTotalVentas(): number {\r\n    return this.sales.length;\r\n  }\r\n\r\n  // Métodos para filtros de fecha\r\n  aplicarFiltros(): void {\r\n    if (this.fechaDesde && this.fechaHasta) {\r\n      this.loadSalesByDateRange();\r\n    } else if (this.fechaDesde) {\r\n      this.selectedDate = this.fechaDesde;\r\n      this.loadSales();\r\n    } else {\r\n      this.loadSales();\r\n    }\r\n  }\r\n\r\n  limpiarFiltros(): void {\r\n    const today = new Date();\r\n    this.fechaDesde = '';\r\n    this.fechaHasta = '';\r\n    this.selectedDate = today.toISOString().split('T')[0];\r\n    this.selectedSorteoFilter = '';\r\n    this.loadSales();\r\n  }\r\n\r\n  onFiltroFechaChange(): void {\r\n    // Auto-aplicar filtros cuando cambian las fechas\r\n    this.aplicarFiltros();\r\n  }\r\n\r\n  async loadSalesByDateRange(): Promise<void> {\r\n    if (!this.fechaDesde || !this.fechaHasta) return;\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      const fechaDesdeDate = new Date(this.fechaDesde);\r\n      const fechaHastaDate = new Date(this.fechaHasta);\r\n      \r\n      // Cargar ventas para cada día en el rango\r\n      let allSales: Sale[] = [];\r\n      let currentDate = new Date(fechaDesdeDate);\r\n      \r\n      while (currentDate <= fechaHastaDate) {\r\n        const daySales = await this.supabaseService.getSalesByDateAndSorteo(currentDate, this.selectedSorteoFilter);\r\n        allSales = [...allSales, ...daySales];\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      }\r\n\r\n      this.sales = allSales;\r\n      \r\n      // Cargar detalles de todas las ventas\r\n      for (const sale of this.sales) {\r\n        this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando ventas por rango:', error);\r\n      this.notificationService.showError('Error al cargar las ventas');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Gestión de usuarios\r\n  async loadUsers(): Promise<void> {\r\n    try {\r\n      // Implementar método en SupabaseService para cargar usuarios\r\n      // this.users = await this.supabaseService.getUsers();\r\n      console.log('Cargando usuarios...');\r\n    } catch (error) {\r\n      console.error('Error cargando usuarios:', error);\r\n    }\r\n  }\r\n\r\n  closeUserModal(): void {\r\n    this.showUserModal = false;\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n  }\r\n\r\n  editUser(user: any): void {\r\n    this.editingUser = user;\r\n    this.userFormData = { ...user };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  async saveUser(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      \r\n      if (this.editingUser) {\r\n        // Actualizar usuario existente\r\n        console.log('Actualizando usuario:', this.userFormData);\r\n        this.notificationService.showSuccess('Usuario actualizado exitosamente');\r\n      } else {\r\n        // Crear nuevo usuario\r\n        console.log('Creando usuario:', this.userFormData);\r\n        this.notificationService.showSuccess('Usuario creado exitosamente');\r\n      }\r\n      \r\n      this.closeUserModal();\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      console.error('Error guardando usuario:', error);\r\n      this.notificationService.showError('Error al guardar el usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async deleteUser(userId: string): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Eliminar Usuario',\r\n      '¿Está seguro que desea eliminar este usuario?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      try {\r\n        this.isLoading = true;\r\n        // Implementar eliminación en SupabaseService\r\n        console.log('Eliminando usuario:', userId);\r\n        this.notificationService.showSuccess('Usuario eliminado exitosamente');\r\n        await this.loadUsers();\r\n      } catch (error) {\r\n        console.error('Error eliminando usuario:', error);\r\n        this.notificationService.showError('Error al eliminar el usuario');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  onDateChange(): void {\r\n    this.loadSales();\r\n  }\r\n\r\n  onSorteoFilterChange(): void {\r\n    this.loadSales();\r\n  }\r\n\r\n  generateDailyReport(): void {\r\n    const reportDate = this.selectedDate ? new Date(this.selectedDate) : new Date();\r\n    this.printService.generateDailyReport(this.sales, reportDate);\r\n  }\r\n\r\n  // Método mejorado para reimprimir recibo desde admin\r\n  async reprintReceipt(sale: Sale): Promise<void> {\r\n    try {\r\n      console.log('Reimprimiendo recibo desde admin para venta:', sale);\r\n      \r\n      // Obtener detalles de la venta desde la base de datos\r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n      console.log('Detalles obtenidos de la BD:', details);\r\n      \r\n      if (details.length === 0) {\r\n        console.warn('No se encontraron detalles para la venta:', sale.id);\r\n        this.notificationService.showError('No se encontraron detalles para esta venta. No se puede reimprimir el recibo.');\r\n        return;\r\n      }\r\n      \r\n      // Generar recibo con los detalles obtenidos\r\n      this.printService.generateThermalReceipt(sale, details);\r\n      this.notificationService.showSuccess('Recibo enviado a impresión');\r\n      \r\n    } catch (error) {\r\n      console.error('Error reimprimiendo recibo:', error);\r\n      this.notificationService.showError('Error al reimprimir el recibo. Por favor intente nuevamente.');\r\n    }\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    await this.supabaseService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  // Métodos para el nuevo diseño minimalista\r\n  formatDateTime(dateInput: string | Date): string {\r\n    const date = typeof dateInput === 'string' ? new Date(dateInput) : dateInput;\r\n    return date.toLocaleString('es-HN', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  }\r\n\r\n  // Métodos faltantes para el template del admin\r\n  exportarVentas(): void {\r\n    // Método legacy - ahora llama a Excel por defecto\r\n    this.exportarVentasExcel();\r\n  }\r\n\r\n  exportarVentasExcel(): void {\r\n    this.generateVentasReportExcel();\r\n  }\r\n\r\n  exportarVentasPDF(): void {\r\n    this.generateVentasReportPDF();\r\n  }\r\n\r\n  trackBySale(index: number, sale: Sale): string {\r\n    return sale.id;\r\n  }\r\n\r\n  trackByUser(index: number, user: any): string {\r\n    return user.id || index.toString();\r\n  }\r\n\r\n  verDetalles(sale: Sale): void {\r\n    const details = this.getSaleDetails(sale.id);\r\n    const numeros = details.map(d => `#${d.numero.toString().padStart(2, '0')} x L${d.monto}`).join(', ');\r\n    \r\n    const mensaje = `Detalles de Venta\\n\\n` +\r\n                   `Recibo: ${sale.numeroRecibo}\\n` +\r\n                   `Correlativo: ${sale.correlativo}\\n` +\r\n                   `Fecha: ${this.formatDateTime(sale.createdAt)}\\n` +\r\n                   `Sucursal: ${sale.sucursal}\\n` +\r\n                   `Sorteo: ${sale.sorteo}\\n` +\r\n                   `Total: L ${sale.total.toFixed(2)}\\n\\n` +\r\n                   `Números: ${numeros}`;\r\n    \r\n    alert(mensaje);\r\n  }\r\n\r\n  createUser(): void {\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  toggleUserStatus(user: any): void {\r\n    // Implementar cambio de estado del usuario\r\n    user.active = !user.active;\r\n    console.log('Cambiando estado del usuario:', user);\r\n    // Aquí se debería llamar al servicio para actualizar en la BD\r\n  }\r\n\r\n  // Método para generar reporte de ventas en Excel\r\n  generateVentasReportExcel(): void {\r\n    if (this.sales.length === 0) {\r\n      this.notificationService.showError('No hay ventas para exportar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Generar CSV\r\n      let csvContent = 'Fecha,Sucursal,Sorteo,Total,Recibo,Correlativo,Números\\n';\r\n      \r\n      for (const sale of this.sales) {\r\n        const details = this.getSaleDetails(sale.id);\r\n        const numeros = details.map(d => `${d.numero}x${d.monto}`).join(';');\r\n        csvContent += `\"${this.formatDateTime(sale.createdAt)}\",\"${sale.sucursal}\",\"${sale.sorteo}\",\"${sale.total}\",\"${sale.numeroRecibo || sale.id.slice(-6)}\",\"${sale.correlativo}\",\"${numeros}\"\\n`;\r\n      }\r\n\r\n      // Descargar archivo\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const link = document.createElement('a');\r\n      const url = URL.createObjectURL(blob);\r\n      link.setAttribute('href', url);\r\n      link.setAttribute('download', `ventas_excel_${new Date().toISOString().split('T')[0]}.csv`);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      \r\n      this.notificationService.showSuccess('Reporte Excel exportado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error exportando ventas a Excel:', error);\r\n      this.notificationService.showError('Error al exportar el reporte Excel');\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas en PDF\r\n  generateVentasReportPDF(): void {\r\n    if (this.sales.length === 0) {\r\n      this.notificationService.showError('No hay ventas para exportar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Usar el servicio de impresión para generar PDF\r\n      this.printService.generateVentasReportPDF(this.sales, this.saleDetails, {\r\n        fechaDesde: this.fechaDesde,\r\n        fechaHasta: this.fechaHasta,\r\n        sorteoFilter: this.selectedSorteoFilter\r\n      });\r\n      \r\n      this.notificationService.showSuccess('Reporte PDF generado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error exportando ventas a PDF:', error);\r\n      this.notificationService.showError('Error al exportar el reporte PDF');\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas (legacy)\r\n  generateVentasReport(): void {\r\n    // Mantener método legacy, ahora llama a Excel\r\n    this.generateVentasReportExcel();\r\n  }\r\n\r\n  onFactorChange(sorteoName: string, event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    if (target && target.value) {\r\n      this.factorMultiplicador[sorteoName] = +target.value;\r\n    }\r\n  }\r\n}\r\n","<!-- PANEL DE ADMINISTRACIÓN CON ESTILO MINIMALISTA -->\r\n<div class=\"admin-interface\">\r\n  <!-- Header -->\r\n  <div class=\"header-bar\">\r\n    <div class=\"admin-title\">\r\n      <h2><i class=\"fas fa-cog\"></i> Panel de Administración</h2>\r\n    </div>\r\n    \r\n    <button class=\"btn-header btn-cerrar\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n      <i class=\"fas fa-sign-out-alt\"></i> Cerrar Sesión\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Filtros de Fecha (similar al header de sucursal) -->\r\n  <div class=\"filters-bar\">\r\n    <div class=\"filter-group\">\r\n      <label for=\"fechaDesde\">Desde:</label>\r\n      <input type=\"datetime-local\" id=\"fechaDesde\" class=\"form-control\" \r\n             [(ngModel)]=\"fechaDesde\" (change)=\"onFiltroFechaChange()\">\r\n    </div>\r\n    \r\n    <div class=\"filter-group\">\r\n      <label for=\"fechaHasta\">Hasta:</label>\r\n      <input type=\"datetime-local\" id=\"fechaHasta\" class=\"form-control\" \r\n             [(ngModel)]=\"fechaHasta\" (change)=\"onFiltroFechaChange()\">\r\n    </div>\r\n    \r\n    <div class=\"filter-group\">\r\n      <label for=\"sorteoFilter\">Sorteo:</label>\r\n      <select id=\"sorteoFilter\" class=\"form-control\" \r\n              [(ngModel)]=\"selectedSorteoFilter\" (change)=\"aplicarFiltros()\">\r\n        <option value=\"\">Todos los sorteos</option>\r\n        <option *ngFor=\"let sorteo of sorteos\" [value]=\"sorteo.name\">{{ sorteo.label }}</option>\r\n      </select>\r\n    </div>\r\n    \r\n    <div class=\"filter-actions\">\r\n      <button class=\"btn-filter btn-primary\" (click)=\"aplicarFiltros()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-search\"></i> Filtrar\r\n      </button>\r\n      <button class=\"btn-filter btn-secondary\" (click)=\"limpiarFiltros()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-eraser\"></i> Limpiar\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Contenido Principal -->\r\n  <div class=\"main-content\">\r\n    \r\n    <!-- Cards de Resumen con estilo minimalista -->\r\n    <div class=\"summary-cards\">\r\n      <div class=\"summary-card vendido\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-chart-line\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getTotalVendido().toFixed(2) }}</h3>\r\n          <p>Total Vendido</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card pagado\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-coins\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getTotalPagado().toFixed(2) }}</h3>\r\n          <p>Total Pagado</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card ganancia\" [class.positive]=\"getGananciaNeta() > 0\" [class.negative]=\"getGananciaNeta() < 0\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-piggy-bank\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getGananciaNeta().toFixed(2) }}</h3>\r\n          <p>Ganancia Neta</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card ventas\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-shopping-cart\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>{{ getTotalVentas() }}</h3>\r\n          <p>Ventas Totales</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sección de Sorteos con estilo minimalista -->\r\n    <div class=\"sorteos-section\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-dice\"></i> Gestión de Sorteos</h3>\r\n      </div>\r\n      \r\n      <div class=\"sorteos-grid\">\r\n        <div *ngFor=\"let sorteo of sorteos\" class=\"sorteo-card\">\r\n          <div class=\"sorteo-header\">\r\n            <h4>{{ sorteo.label }}</h4>\r\n            <div class=\"sorteo-status\">\r\n              <span class=\"status-badge\" [class.open]=\"isSorteoOpen(sorteo)\" [class.closed]=\"!isSorteoOpen(sorteo)\">\r\n                {{ isSorteoOpen(sorteo) ? 'Abierto' : 'Cerrado' }}\r\n              </span>\r\n              <span class=\"close-time\">{{ sorteo.closeTime }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"sorteo-content\">\r\n            <div *ngIf=\"getSorteoData(sorteo)?.numeroGanador; else setWinner\">\r\n              <!-- Resultados del sorteo -->\r\n              <div class=\"winner-section\">\r\n                <div class=\"winner-number\">\r\n                  <i class=\"fas fa-trophy\"></i>\r\n                  <span>{{ getSorteoData(sorteo)?.numeroGanador }}</span>\r\n                </div>\r\n                <div class=\"factor\">Factor: {{ getSorteoData(sorteo)?.factorMultiplicador || 70 }}</div>\r\n              </div>\r\n              \r\n              <div class=\"sorteo-stats\">\r\n                <div class=\"stat-item vendido\">\r\n                  <span class=\"label\">Vendido</span>\r\n                  <span class=\"value\">L {{ getSorteoData(sorteo)?.totalVendido?.toFixed(2) || '0.00' }}</span>\r\n                </div>\r\n                <div class=\"stat-item pagado\">\r\n                  <span class=\"label\">Pagado</span>\r\n                  <span class=\"value\">L {{ getSorteoData(sorteo)?.totalPagado?.toFixed(2) || '0.00' }}</span>\r\n                </div>\r\n                <div class=\"stat-item ganancia\" [class.positive]=\"(getSorteoData(sorteo)?.gananciaNeta || 0) > 0\" \r\n                     [class.negative]=\"(getSorteoData(sorteo)?.gananciaNeta || 0) < 0\">\r\n                  <span class=\"label\">Ganancia</span>\r\n                  <span class=\"value\">L {{ getSorteoData(sorteo)?.gananciaNeta?.toFixed(2) || '0.00' }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <ng-template #setWinner>\r\n              <!-- Formulario para establecer ganador -->\r\n              <div *ngIf=\"!isSorteoOpen(sorteo)\" class=\"winner-form\">\r\n                <div class=\"form-group\">\r\n                  <label>Número Ganador:</label>\r\n                  <input type=\"number\" class=\"form-input\" min=\"1\" max=\"99\" \r\n                         [(ngModel)]=\"winningNumbers[sorteo.name]\" [disabled]=\"isLoading\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>Factor Multiplicador:</label>\r\n                  <input type=\"number\" class=\"form-input\" min=\"1\" max=\"100\" step=\"0.1\" \r\n                         [(ngModel)]=\"factorMultiplicador[sorteo.name]\" \r\n                         [value]=\"factorMultiplicador[sorteo.name] || 70\" [disabled]=\"isLoading\">\r\n                </div>\r\n                <button class=\"btn-set-winner\" (click)=\"setWinningNumber(sorteo)\" \r\n                        [disabled]=\"!winningNumbers[sorteo.name] || isLoading\">\r\n                  <i class=\"fas fa-trophy\"></i> Establecer Ganador\r\n                </button>\r\n              </div>\r\n              \r\n              <div *ngIf=\"isSorteoOpen(sorteo)\" class=\"sorteo-open-message\">\r\n                <i class=\"fas fa-clock\"></i>\r\n                <span>Sorteo abierto - Esperando cierre</span>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sección de Ventas -->\r\n    <div class=\"ventas-section\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-list\"></i> Historial de Ventas</h3>\r\n        <div class=\"section-actions\">\r\n          <button class=\"btn-action\" (click)=\"exportarVentasExcel()\" [disabled]=\"isLoading\" title=\"Exportar a Excel\">\r\n            <i class=\"fas fa-file-excel\"></i> Excel\r\n          </button>\r\n          <button class=\"btn-action\" (click)=\"exportarVentasPDF()\" [disabled]=\"isLoading\" title=\"Exportar a PDF\">\r\n            <i class=\"fas fa-file-pdf\"></i> PDF\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"ventas-table-container\" *ngIf=\"sales.length > 0; else noSales\">\r\n        <div class=\"ventas-table\">\r\n          <div class=\"table-header\">\r\n            <div class=\"col-fecha\">Fecha</div>\r\n            <div class=\"col-sucursal\">Sucursal</div>\r\n            <div class=\"col-sorteo\">Sorteo</div>\r\n            <div class=\"col-total\">Total</div>\r\n            <div class=\"col-recibo\">Recibo</div>\r\n            <div class=\"col-acciones\">Acciones</div>\r\n          </div>\r\n          \r\n          <div class=\"table-body\">\r\n            <div *ngFor=\"let sale of sales; trackBy: trackBySale\" class=\"table-row\">\r\n              <div class=\"col-fecha\">{{ formatDateTime(sale.createdAt) }}</div>\r\n              <div class=\"col-sucursal\">{{ sale.sucursal }}</div>\r\n              <div class=\"col-sorteo\">{{ sale.sorteo }}</div>\r\n              <div class=\"col-total\">L {{ sale.total.toFixed(2) }}</div>\r\n              <div class=\"col-recibo\">{{ sale.numeroRecibo || sale.id.slice(-6) }}</div>\r\n              <div class=\"col-acciones\">\r\n                <button class=\"btn-table-action\" (click)=\"verDetalles(sale)\" title=\"Ver detalles\">\r\n                  <i class=\"fas fa-eye\"></i>\r\n                </button>\r\n                <button class=\"btn-table-action\" (click)=\"reprintReceipt(sale)\" title=\"Reimprimir\">\r\n                  <i class=\"fas fa-print\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <ng-template #noSales>\r\n        <div class=\"no-data-message\">\r\n          <i class=\"fas fa-inbox\"></i>\r\n          <h4>No hay ventas para mostrar</h4>\r\n          <p>Ajusta los filtros para ver diferentes resultados</p>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n\r\n    <!-- Sección de Gestión de Usuarios -->\r\n    <div class=\"users-section\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-users\"></i> Gestión de Usuarios</h3>\r\n        <div class=\"section-actions\">\r\n          <button class=\"btn-action btn-primary\" (click)=\"createUser()\" [disabled]=\"isLoading\">\r\n            <i class=\"fas fa-plus\"></i> Nuevo Usuario\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"users-table-container\" *ngIf=\"users.length > 0; else noUsers\">\r\n        <div class=\"users-table\">\r\n          <div class=\"table-header\">\r\n            <div class=\"col-email\">Email</div>\r\n            <div class=\"col-role\">Rol</div>\r\n            <div class=\"col-sucursal\">Sucursal</div>\r\n            <div class=\"col-status\">Estado</div>\r\n            <div class=\"col-acciones\">Acciones</div>\r\n          </div>\r\n          \r\n          <div class=\"table-body\">\r\n            <div *ngFor=\"let user of users; trackBy: trackByUser\" class=\"table-row\">\r\n              <div class=\"col-email\">{{ user.email }}</div>\r\n              <div class=\"col-role\">{{ user.role === 'admin' ? 'Administrador' : 'Sucursal' }}</div>\r\n              <div class=\"col-sucursal\">{{ user.sucursal || '-' }}</div>\r\n              <div class=\"col-status\">\r\n                <span class=\"status-badge\" [class.active]=\"user.active\" [class.inactive]=\"!user.active\">\r\n                  {{ user.active ? 'Activo' : 'Inactivo' }}\r\n                </span>\r\n              </div>\r\n              <div class=\"col-acciones\">\r\n                <button class=\"btn-table-action\" (click)=\"editUser(user)\" title=\"Editar\">\r\n                  <i class=\"fas fa-edit\"></i>\r\n                </button>\r\n                <button class=\"btn-table-action danger\" (click)=\"toggleUserStatus(user)\" title=\"Cambiar estado\">\r\n                  <i class=\"fas\" [class.fa-toggle-on]=\"user.active\" [class.fa-toggle-off]=\"!user.active\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <ng-template #noUsers>\r\n        <div class=\"no-data-message\">\r\n          <i class=\"fas fa-users-slash\"></i>\r\n          <h4>No hay usuarios registrados</h4>\r\n          <p>Crea el primer usuario para comenzar</p>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para crear/editar usuario -->\r\n<div class=\"modal\" [style.display]=\"showUserModal ? 'flex' : 'none'\" [class.show]=\"showUserModal\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-user\"></i> {{ editingUser ? 'Editar Usuario' : 'Crear Usuario' }}\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeUserModal()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #userForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"userEmail\">Email:</label>\r\n            <input type=\"email\" id=\"userEmail\" class=\"form-input\" required\r\n                   [(ngModel)]=\"userFormData.email\" name=\"email\" \r\n                   placeholder=\"usuario@ejemplo.com\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\" *ngIf=\"!editingUser\">\r\n            <label for=\"userPassword\">Contraseña:</label>\r\n            <input type=\"password\" id=\"userPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"userFormData.password\" name=\"password\" \r\n                   placeholder=\"Contraseña segura\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"userRole\">Rol:</label>\r\n            <select id=\"userRole\" class=\"form-input\" \r\n                    [(ngModel)]=\"userFormData.role\" name=\"role\" required>\r\n              <option value=\"admin\">Administrador</option>\r\n              <option value=\"sucursal\">Sucursal</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"form-group\" *ngIf=\"userFormData.role === 'sucursal'\">\r\n            <label for=\"userSucursal\">Sucursal:</label>\r\n            <input type=\"text\" id=\"userSucursal\" class=\"form-input\" \r\n                   [(ngModel)]=\"userFormData.sucursal\" name=\"sucursal\" \r\n                   placeholder=\"Nombre de la sucursal\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"checkbox-label\">\r\n              <input type=\"checkbox\" [(ngModel)]=\"userFormData.active\" name=\"active\">\r\n              <span class=\"checkmark\"></span>\r\n              Usuario Activo\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closeUserModal()\">\r\n          <i class=\"fas fa-times\"></i> Cancelar\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"saveUser()\" \r\n                [disabled]=\"!userForm.valid || isLoading\">\r\n          <i class=\"fas fa-save\"></i> {{ editingUser ? 'Actualizar' : 'Crear' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"card\" style=\"max-width: 400px; margin: 100px auto;\">\r\n        <h2 class=\"text-center mb-3\">Sistema de Lotería</h2>\r\n        <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email:</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"email\" \r\n              name=\"email\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"email\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Contraseña:</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"password\" \r\n              name=\"password\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"password\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\r\n            {{ errorMessage }}\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            class=\"btn btn-primary w-100\" \r\n            [disabled]=\"!loginForm.valid || isLoading\">\r\n            {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .w-100 {\r\n      width: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: string = '';\r\n  password: string = '';\r\n  errorMessage: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Verificar si ya hay un usuario logueado con timeout\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      if (user) {\r\n        console.log('Usuario ya logueado, redirigiendo...');\r\n        this.redirectUser(user);\r\n      }\r\n    });\r\n  }\r\n\r\n  async onLogin(): Promise<void> {\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n    this.notificationService.showLoading('Iniciando sesión...');\r\n\r\n    try {\r\n      console.log('Iniciando login desde componente...');\r\n      \r\n      // Usar timeout para evitar que se cuelgue el login\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Login timeout')), 10000); // 10 segundos\r\n      });\r\n      \r\n      const loginPromise = this.supabaseService.login(this.email, this.password);\r\n      \r\n      const user = await Promise.race([loginPromise, timeoutPromise]) as any;\r\n      \r\n      console.log('Resultado del login:', user);\r\n      \r\n      if (user) {\r\n        console.log('Usuario logueado exitosamente, redirigiendo...');\r\n        this.redirectUser(user);\r\n      } else {\r\n        console.log('Login falló - usuario es null');\r\n        this.errorMessage = 'Credenciales inválidas';\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error en login:', error);\r\n      this.errorMessage = this.getErrorMessage(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  private redirectUser(user: any): void {\r\n    if (user.role === 'admin') {\r\n      this.router.navigate(['/admin']);\r\n    } else {\r\n      this.router.navigate(['/sucursal']);\r\n    }\r\n  }\r\n\r\n  private getErrorMessage(error: any): string {\r\n    switch (error.message) {\r\n      case 'Invalid login credentials':\r\n        return 'Credenciales inválidas';\r\n      case 'Email not confirmed':\r\n        return 'Email no confirmado';\r\n      case 'Too many requests':\r\n        return 'Demasiados intentos, intenta más tarde';\r\n      case 'Login timeout':\r\n        return 'Tiempo de espera agotado, intenta de nuevo';\r\n      default:\r\n        return 'Error en el inicio de sesión';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoService } from '../../services/sorteo.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail } from '../../models/interfaces';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-sucursal',\r\n  templateUrl: './sucursal.component.html',\r\n  styleUrls: ['./sucursal.component.scss']\r\n})\r\nexport class SucursalComponent implements OnInit, OnDestroy {\r\n  currentUser: any = null;\r\n  currentSorteo: SorteoSchedule | null = null;\r\n  timeUntilClose: string = '';\r\n  isSorteoOpen: boolean = false;\r\n  \r\n  selectedNumber: number | null = null;\r\n  selectedAmount: number | null = null;\r\n  selectedNumbers: { numero: number, monto: number }[] = [];\r\n  \r\n  // Propiedades para entrada individual\r\n  numero: number | null = null;\r\n  monto: number | null = null;\r\n  \r\n  todaySales: Sale[] = [];\r\n  recentSales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  filteredSales: Sale[] = [];\r\n  filterDate: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  // Propiedades para el teclado numérico\r\n  numberInput: string = '';\r\n  showKeypad: boolean = false;\r\n  isBlocked: boolean = false;\r\n  currentInput: 'numero' | 'monto' = 'numero';\r\n\r\n  // Propiedades para el flujo de modales\r\n  showNumberModal: boolean = false;\r\n  showAmountModal: boolean = false;\r\n  showConfirmModal: boolean = false;\r\n  tempNumber: number | null = null;\r\n  tempAmount: number | null = null;\r\n  modalNumberInput: string = '';\r\n  modalAmountInput: string = '';\r\n\r\n  // Manejo de suscripciones y timers\r\n  private userSubscription?: Subscription;\r\n  private sorteoUpdateInterval?: any;\r\n  private timeCheckInterval?: any;\r\n  private isProcessingModal: boolean = false;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private sorteoService: SorteoService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('[SUCURSAL] ngOnInit iniciado');\r\n    \r\n    this.userSubscription = this.supabaseService.currentUser$.subscribe(user => {\r\n      console.log('[SUCURSAL] Usuario actualizado:', user);\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'sucursal') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    this.initializeComponent();\r\n    this.checkTimeRestrictions();\r\n    \r\n    // Verificar bloqueo cada minuto - usar método que se puede limpiar\r\n    this.timeCheckInterval = setInterval(() => {\r\n      this.checkTimeRestrictions();\r\n    }, 60000);\r\n    \r\n    console.log('[SUCURSAL] ngOnInit completado');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('[SUCURSAL] ngOnDestroy iniciado - limpiando recursos');\r\n    \r\n    // Limpiar suscripciones y timers\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n      console.log('[SUCURSAL] Suscripción de usuario limpiada');\r\n    }\r\n    if (this.sorteoUpdateInterval) {\r\n      clearInterval(this.sorteoUpdateInterval);\r\n      console.log('[SUCURSAL] Interval de sorteo limpiado');\r\n    }\r\n    if (this.timeCheckInterval) {\r\n      clearInterval(this.timeCheckInterval);\r\n      console.log('[SUCURSAL] Interval de tiempo limpiado');\r\n    }\r\n    \r\n    console.log('[SUCURSAL] ngOnDestroy completado');\r\n  }\r\n\r\n  private async initializeComponent(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      this.notificationService.showLoading('Cargando datos...');\r\n\r\n      await this.updateSorteoInfo();\r\n      await this.loadTodaySales();\r\n      await this.loadRecentSales();\r\n      this.setFilterDate();\r\n      \r\n      // Limpiar timer anterior si existe\r\n      if (this.sorteoUpdateInterval) {\r\n        clearInterval(this.sorteoUpdateInterval);\r\n      }\r\n      \r\n      // Actualizar cada minuto - usar método que se puede limpiar\r\n      this.sorteoUpdateInterval = setInterval(() => {\r\n        this.updateSorteoInfo();\r\n      }, 60000);\r\n    } catch (error) {\r\n      console.error('Error inicializando componente:', error);\r\n      this.notificationService.showError('Error al cargar los datos');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  setFilterDate(): void {\r\n    const today = new Date();\r\n    this.filterDate = today.toISOString().split('T')[0];\r\n  }\r\n\r\n  onFilterDateChange(): void {\r\n    this.filterSales();\r\n  }\r\n\r\n  filterSales(): void {\r\n    if (!this.filterDate) {\r\n      this.filteredSales = this.todaySales;\r\n      return;\r\n    }\r\n\r\n    const filterDateObj = new Date(this.filterDate);\r\n    this.filteredSales = this.todaySales.filter(sale => {\r\n      const saleDate = new Date(sale.fecha);\r\n      return saleDate.toDateString() === filterDateObj.toDateString();\r\n    });\r\n  }\r\n\r\n  updateSorteoInfo(): void {\r\n    try {\r\n      this.currentSorteo = this.sorteoService.getCurrentSorteo();\r\n      \r\n      if (this.currentSorteo) {\r\n        this.isSorteoOpen = this.sorteoService.isSorteoOpen(this.currentSorteo);\r\n        this.timeUntilClose = this.sorteoService.getTimeUntilClose(this.currentSorteo);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error actualizando info del sorteo:', error);\r\n    }\r\n  }\r\n\r\n  addNumber(): void {\r\n    if (this.numero && this.monto && \r\n        this.numero >= 0 && this.numero <= 99) {\r\n      \r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.numero);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.monto!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.numero,\r\n          monto: this.monto\r\n        });\r\n      }\r\n      \r\n      this.numero = null;\r\n      this.monto = null;\r\n      this.numberInput = '';\r\n      this.currentInput = 'numero';\r\n      this.notificationService.showSuccess('Número agregado', 'Número agregado exitosamente a la venta');\r\n    }\r\n  }\r\n\r\n  removeNumber(index: number): void {\r\n    console.log('Eliminando número en índice:', index);\r\n    console.log('Array antes:', [...this.selectedNumbers]);\r\n    \r\n    this.selectedNumbers.splice(index, 1);\r\n    \r\n    console.log('Array después:', [...this.selectedNumbers]);\r\n    this.cdr.detectChanges(); // Forzar actualización visual inmediata\r\n  }\r\n\r\n  // Generar número de recibo único con correlativo\r\n  generateReceiptNumber(correlativo: number, sucursal: string): string {\r\n    const now = new Date();\r\n    const year = now.getFullYear().toString().slice(-2); // Últimos 2 dígitos del año\r\n    const month = (now.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = now.getDate().toString().padStart(2, '0');\r\n    \r\n    // Formato: SUC001-REC-250717-0001\r\n    const sucursalCode = sucursal.replace(/\\s+/g, '').toUpperCase().substring(0, 3);\r\n    const correlativoFormatted = correlativo.toString().padStart(4, '0');\r\n    const numeroRecibo = `${sucursalCode}-REC-${year}${month}${day}-${correlativoFormatted}`;\r\n    \r\n    console.log('Número de recibo generado:', numeroRecibo);\r\n    return numeroRecibo;\r\n  }\r\n\r\n  getTotal(): number {\r\n    return this.selectedNumbers.reduce((total, item) => total + item.monto, 0);\r\n  }\r\n\r\n  async processSale(): Promise<void> {\r\n    if (!this.currentSorteo || !this.currentUser || this.selectedNumbers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Validar que el usuario tenga sucursal configurada\r\n    if (!this.currentUser.sucursal) {\r\n      await this.notificationService.showError(\r\n        'Error: El usuario no tiene una sucursal asignada. Contacte al administrador.'\r\n      );\r\n      console.error('Usuario sin sucursal:', this.currentUser);\r\n      return;\r\n    }\r\n\r\n    // Confirmar venta\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Confirmar venta',\r\n      `¿Procesar venta por L. ${this.getTotal().toFixed(2)}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    this.notificationService.showLoading('Procesando venta...');\r\n\r\n    try {\r\n      // Obtener el siguiente correlativo para esta sucursal\r\n      console.log('=== INICIANDO CÁLCULO DE CORRELATIVO ===');\r\n      console.log('Sucursal:', this.currentUser.sucursal);\r\n      \r\n      const correlativo = await this.supabaseService.getNextCorrelativo(this.currentUser.sucursal);\r\n      console.log('Correlativo obtenido del servicio:', correlativo);\r\n      \r\n      // Generar número de recibo con correlativo\r\n      const numeroRecibo = this.generateReceiptNumber(correlativo, this.currentUser.sucursal);\r\n      console.log('Número de recibo generado:', numeroRecibo);\r\n      \r\n      const sale: any = {\r\n        userId: this.currentUser.id,\r\n        sucursal: this.currentUser.sucursal,\r\n        sorteo: this.currentSorteo.name,\r\n        fecha: new Date(),\r\n        total: this.getTotal(),\r\n        numeroRecibo: numeroRecibo,\r\n        correlativo: correlativo\r\n      };\r\n\r\n      console.log('=== OBJETO SALE COMPLETO ===');\r\n      console.log('Sale object:', JSON.stringify(sale, null, 2));\r\n      console.log('Correlativo en sale:', sale.correlativo);\r\n\r\n      const saleId = await this.supabaseService.createSale(sale);\r\n\r\n      // Crear detalles de venta\r\n      const saleDetails: SaleDetail[] = [];\r\n      for (const item of this.selectedNumbers) {\r\n        const detailId = await this.supabaseService.createSaleDetail({\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n        saleDetails.push({\r\n          id: detailId,\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n      }\r\n\r\n      // Generar e imprimir recibo\r\n      const saleWithId = { ...sale, id: saleId };\r\n      console.log('Imprimiendo recibo para venta:', saleWithId);\r\n      console.log('Detalles para imprimir:', saleDetails);\r\n      \r\n      // Asegurar que los detalles tengan datos\r\n      if (saleDetails.length === 0) {\r\n        console.warn('No hay detalles de venta, usando selectedNumbers como fallback');\r\n        // Usar selectedNumbers como fallback\r\n        for (const item of this.selectedNumbers) {\r\n          saleDetails.push({\r\n            id: `temp-${Date.now()}-${item.numero}`,\r\n            saleId,\r\n            numero: item.numero,\r\n            monto: item.monto\r\n          });\r\n        }\r\n      }\r\n      \r\n      this.printService.generateThermalReceipt(saleWithId, saleDetails);\r\n\r\n      // Limpiar selección inmediatamente después de enviar a imprimir\r\n      setTimeout(async () => {\r\n        // Limpiar selección inmediatamente\r\n        this.selectedNumbers = [];\r\n        \r\n        // Resetear estado de modales\r\n        this.showNumberModal = false;\r\n        this.showAmountModal = false;\r\n        this.showConfirmModal = false;\r\n        this.modalNumberInput = '';\r\n        this.modalAmountInput = '';\r\n        this.tempNumber = null;\r\n        this.tempAmount = null;\r\n        \r\n        this.cdr.detectChanges(); // Forzar actualización visual inmediata\r\n        \r\n        console.log('Selección limpiada, selectedNumbers:', this.selectedNumbers);\r\n        console.log('Estado de modales reseteado');\r\n        \r\n        // Recargar ventas actuales para mostrar la venta recién realizada\r\n        console.log('Recargando ventas después de la venta...');\r\n        await this.loadTodaySales();\r\n        await this.loadRecentSales();\r\n        \r\n        console.log('Ventas recargadas después de la venta');\r\n        console.log('recentSales:', this.recentSales.length);\r\n        console.log('todaySales:', this.todaySales.length);\r\n        \r\n        this.cdr.detectChanges(); // Forzar actualización después de cargar ventas\r\n      }, 100); // Pequeño retraso para evitar conflictos con la ventana de impresión\r\n      \r\n      this.notificationService.showSuccess('Venta procesada e impresa exitosamente');\r\n    } catch (error) {\r\n      console.error('Error procesando venta:', error);\r\n      this.notificationService.showError('Error al procesar la venta');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  async loadTodaySales(): Promise<void> {\r\n    if (!this.currentUser) return;\r\n\r\n    try {\r\n      const today = new Date();\r\n      const allSales = await this.supabaseService.getSalesByDateAndSorteo(today, '');\r\n      \r\n      this.todaySales = allSales.filter(sale => sale.sucursal === this.currentUser.sucursal);\r\n      \r\n      // Cargar detalles de cada venta con timeout individual\r\n      for (const sale of this.todaySales) {\r\n        try {\r\n          const timeoutPromise = new Promise((_, reject) => {\r\n            setTimeout(() => reject(new Error('Timeout cargando detalles')), 3000);\r\n          });\r\n          \r\n          const detailsPromise = this.supabaseService.getSaleDetails(sale.id);\r\n          \r\n          this.saleDetails[sale.id] = await Promise.race([detailsPromise, timeoutPromise]) as SaleDetail[];\r\n        } catch (error) {\r\n          console.warn(`Error cargando detalles de venta ${sale.id}:`, error);\r\n          this.saleDetails[sale.id] = [];\r\n        }\r\n      }\r\n\r\n      this.filterSales();\r\n    } catch (error) {\r\n      console.error('Error cargando ventas:', error);\r\n      this.notificationService.showError('Error al cargar las ventas');\r\n    }\r\n  }\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Cerrar sesión',\r\n      '¿Está seguro que desea cerrar sesión?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      this.notificationService.showLoading('Cerrando sesión...');\r\n      try {\r\n        await this.supabaseService.logout();\r\n        this.router.navigate(['/login']);\r\n      } catch (error) {\r\n        console.error('Error cerrando sesión:', error);\r\n        this.notificationService.showError('Error al cerrar sesión');\r\n      } finally {\r\n        this.notificationService.hideLoading();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Métodos del teclado numérico\r\n  pressNumber(num: number) {\r\n    if (this.isBlocked) {\r\n      this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      return;\r\n    }\r\n\r\n    if (this.numberInput.length < 5) { // Máximo 5 dígitos\r\n      this.numberInput += num.toString();\r\n    }\r\n  }\r\n\r\n  clearNumber() {\r\n    this.numberInput = '';\r\n  }\r\n\r\n  acceptNumber() {\r\n    if (!this.numberInput) return;\r\n\r\n    if (this.currentInput === 'numero') {\r\n      const numero = parseInt(this.numberInput);\r\n      if (numero >= 0 && numero <= 99) {\r\n        this.numero = numero;\r\n        this.numberInput = '';\r\n        this.currentInput = 'monto';\r\n        this.notificationService.showInfo('Número seleccionado', 'Ahora ingresa el monto a apostar');\r\n      } else {\r\n        this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n      }\r\n    } else {\r\n      const monto = parseFloat(this.numberInput);\r\n      if (monto > 0 && monto <= 500) {\r\n        this.monto = monto;\r\n        this.addNumber();\r\n        this.numberInput = '';\r\n        this.currentInput = 'numero';\r\n      } else {\r\n        this.notificationService.showError('Monto inválido', 'El monto debe ser mayor a 0 y menor o igual a L. 500');\r\n      }\r\n    }\r\n  }\r\n\r\n  // Flujo de modales para selección de números\r\n  openNumberModal(): void {\r\n    console.log('[MODAL] Intentando abrir modal de número');\r\n    console.log('[MODAL] Estado actual - isProcessingModal:', this.isProcessingModal, 'isBlocked:', this.isBlocked);\r\n    \r\n    if (this.isProcessingModal || this.isBlocked) {\r\n      console.log('[MODAL] Cancelando apertura - procesando o bloqueado');\r\n      if (this.isBlocked) {\r\n        this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      }\r\n      return;\r\n    }\r\n    \r\n    this.isProcessingModal = true;\r\n    console.log('[MODAL] Marcando como procesando');\r\n    \r\n    // Reiniciar estado de modales\r\n    this.closeAllModals();\r\n    \r\n    // Eliminamos el setTimeout para evitar parpadeo\r\n    this.showNumberModal = true;\r\n    this.modalNumberInput = '';\r\n    this.cdr.detectChanges();\r\n    this.isProcessingModal = false;\r\n    console.log('[MODAL] Modal abierto, estado final:', this.showNumberModal);\r\n  }\r\n\r\n  closeAllModals(): void {\r\n    console.log('[MODAL] Cerrando todos los modales');\r\n    this.showNumberModal = false;\r\n    this.showAmountModal = false;\r\n    this.showConfirmModal = false;\r\n    this.modalNumberInput = '';\r\n    this.modalAmountInput = '';\r\n    this.tempNumber = null;\r\n    this.tempAmount = null;\r\n    this.isProcessingModal = false;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n    console.log('[MODAL] Todos los modales cerrados');\r\n  }\r\n\r\n  // Modal 1: Selección de número\r\n  pressModalNumber(num: number): void {\r\n    console.log('Presionando número:', num);\r\n    if (this.modalNumberInput.length < 2) {\r\n      this.modalNumberInput += num.toString();\r\n      this.cdr.detectChanges(); // Forzar actualización de la UI\r\n      console.log('Input actual:', this.modalNumberInput);\r\n    }\r\n  }\r\n\r\n  clearModalNumber(): void {\r\n    console.log('Limpiando número');\r\n    this.modalNumberInput = '';\r\n    this.cdr.detectChanges(); // Forzar actualización inmediata\r\n    console.log('Número limpiado, input actual:', this.modalNumberInput);\r\n  }\r\n\r\n  acceptModalNumber(): void {\r\n    console.log('Aceptando número:', this.modalNumberInput);\r\n    \r\n    // Evitar múltiples ejecuciones\r\n    if (!this.modalNumberInput || this.isProcessingModal) {\r\n      if (!this.modalNumberInput) {\r\n        this.notificationService.showError('Número requerido', 'Debe ingresar un número');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    // Formatear el número con ceros a la izquierda si es necesario\r\n    let formattedNumber = this.modalNumberInput.padStart(2, '0');\r\n    const numero = parseInt(formattedNumber);\r\n    \r\n    if (numero >= 0 && numero <= 99) {\r\n      this.tempNumber = numero;\r\n      \r\n      // Transición suave sin setTimeout\r\n      this.showNumberModal = false;\r\n      this.showAmountModal = true;\r\n      this.modalAmountInput = '';\r\n      this.isProcessingModal = false;\r\n      this.cdr.detectChanges();\r\n      console.log('Modal de apuesta abierto, número seleccionado:', numero);\r\n      \r\n    } else {\r\n      this.isProcessingModal = false;\r\n      this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n    }\r\n  }\r\n\r\n  // Modal 2: Selección de apuesta\r\n  pressModalAmount(num: number): void {\r\n    console.log('Presionando cantidad:', num);\r\n    if (this.modalAmountInput.length < 4) { // Máximo 4 dígitos para el monto\r\n      this.modalAmountInput += num.toString();\r\n      this.cdr.detectChanges(); // Forzar actualización de la UI\r\n      console.log('Monto actual:', this.modalAmountInput);\r\n    }\r\n  }\r\n\r\n  clearModalAmount(): void {\r\n    console.log('Limpiando monto');\r\n    this.modalAmountInput = '';\r\n    this.cdr.detectChanges(); // Forzar actualización inmediata\r\n    console.log('Monto limpiado, input actual:', this.modalAmountInput);\r\n  }\r\n\r\n  acceptModalAmount(): void {\r\n    console.log('Aceptando monto:', this.modalAmountInput);\r\n    \r\n    if (!this.modalAmountInput || this.isProcessingModal) {\r\n      if (!this.modalAmountInput) {\r\n        this.notificationService.showError('Monto requerido', 'Debe ingresar un monto');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    const monto = parseFloat(this.modalAmountInput);\r\n    if (monto > 0 && monto <= 1000) { // Límite de apuesta\r\n      this.tempAmount = monto;\r\n      \r\n      // Transición suave sin setTimeout\r\n      this.showAmountModal = false;\r\n      this.showConfirmModal = true;\r\n      this.isProcessingModal = false;\r\n      this.cdr.detectChanges();\r\n      console.log('Pasando a confirmación, monto:', monto);\r\n    } else {\r\n      this.isProcessingModal = false;\r\n      this.notificationService.showError('Monto inválido', 'El monto debe estar entre 1 y 1000');\r\n    }\r\n  }\r\n\r\n  // Modal 3: Confirmación\r\n  confirmAddNumber(): void {\r\n    if (this.tempNumber !== null && this.tempAmount !== null) {\r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.tempNumber);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.tempAmount!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.tempNumber,\r\n          monto: this.tempAmount\r\n        });\r\n      }\r\n      \r\n      // Quitar el modal de confirmación, solo cerrar modales\r\n      this.closeAllModals();\r\n      this.cdr.detectChanges(); // Forzar actualización final\r\n    }\r\n  }\r\n\r\n  cancelAddNumber(): void {\r\n    this.closeAllModals();\r\n  }\r\n\r\n  // Verificación de restricciones de tiempo\r\n  checkTimeRestrictions() {\r\n    if (!this.currentSorteo) return;\r\n\r\n    const now = new Date();\r\n    const [hours, minutes] = this.currentSorteo.closeTime.split(':');\r\n    const closeTime = new Date();\r\n    closeTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    const timeDiff = closeTime.getTime() - now.getTime();\r\n    const minutesLeft = Math.floor(timeDiff / (1000 * 60));\r\n\r\n    if (minutesLeft <= 5 && minutesLeft >= 0) {\r\n      this.isBlocked = true;\r\n      if (minutesLeft <= 0) {\r\n        this.notificationService.showWarning('Sorteo cerrado', 'El sorteo ya ha comenzado. No se pueden realizar más ventas.');\r\n      } else {\r\n        this.notificationService.showWarning('Ventas bloqueadas', `Faltan ${minutesLeft} minutos para el sorteo. Ventas bloqueadas.`);\r\n      }\r\n    } else {\r\n      this.isBlocked = false;\r\n    }\r\n  }\r\n\r\n  // Filtrar ventas solo del sorteo actual\r\n  getFilteredSales(): Sale[] {\r\n    if (!this.recentSales || !this.currentSorteo) return [];\r\n    \r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    return this.recentSales.filter((sale: Sale) => {\r\n      const saleDate = new Date(sale.createdAt);\r\n      saleDate.setHours(0, 0, 0, 0);\r\n      // Filtrar por día actual Y sorteo actual\r\n      return saleDate.getTime() === today.getTime() && sale.sorteo === this.currentSorteo?.name;\r\n    });\r\n  }\r\n\r\n  // Obtener fecha de hoy formateada\r\n  getTodayDate(): string {\r\n    return new Date().toLocaleDateString('es-HN', { \r\n      weekday: 'long', \r\n      year: 'numeric', \r\n      month: 'long', \r\n      day: 'numeric' \r\n    });\r\n  }\r\n\r\n  // Formatear hora\r\n  formatTime(date: string | Date): string {\r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    return dateObj.toLocaleTimeString('es-HN', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: true\r\n    });\r\n  }\r\n\r\n  // Método para cargar ventas recientes (inicializar recentSales)\r\n  async loadRecentSales(): Promise<void> {\r\n    try {\r\n      // Asegurar que las ventas del día estén cargadas\r\n      if (!this.todaySales || this.todaySales.length === 0) {\r\n        await this.loadTodaySales();\r\n      }\r\n      \r\n      // Asignar las ventas del día como ventas recientes\r\n      this.recentSales = [...this.todaySales];\r\n      \r\n      console.log('Ventas recientes actualizadas:', this.recentSales.length);\r\n    } catch (error) {\r\n      console.error('Error cargando ventas recientes:', error);\r\n      this.recentSales = [];\r\n    }\r\n  }\r\n\r\n  // Método mejorado para reimprimir recibo\r\n  async reprintReceipt(sale: Sale): Promise<void> {\r\n    try {\r\n      console.log('Reimprimiendo recibo para venta:', sale);\r\n      \r\n      this.notificationService.showLoading('Reimprimiendo recibo...');\r\n      \r\n      // Obtener detalles de la venta desde la base de datos\r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n      console.log('Detalles obtenidos de la BD:', details);\r\n      \r\n      if (details.length === 0) {\r\n        console.warn('No se encontraron detalles para la venta:', sale.id);\r\n        this.notificationService.showError('Sin detalles', 'No se encontraron detalles para esta venta. No se puede reimprimir el recibo.');\r\n        return;\r\n      }\r\n      \r\n      // Generar recibo con los detalles obtenidos\r\n      this.printService.generateThermalReceipt(sale, details);\r\n      \r\n      this.notificationService.showSuccess('Recibo reimpreso', `Recibo #${sale.numeroRecibo || sale.id} enviado a impresora`);\r\n      \r\n    } catch (error) {\r\n      console.error('Error reimprimiendo recibo:', error);\r\n      this.notificationService.showError('Error de reimpresión', 'Error al reimprimir el recibo. Por favor intente nuevamente.');\r\n    } finally {\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  // Funciones de optimización para trackBy\r\n  trackByIndex(index: number, item: any): number {\r\n    return index;\r\n  }\r\n\r\n  trackBySaleId(index: number, sale: Sale): string {\r\n    return sale.id;\r\n  }\r\n\r\n  trackByDetailId(index: number, detail: SaleDetail): string {\r\n    return detail.id;\r\n  }\r\n\r\n  // Función de debug temporal\r\n  debugModalState(): void {\r\n    console.log('=== DEBUG MODAL STATE ===');\r\n    console.log('showNumberModal:', this.showNumberModal);\r\n    console.log('showAmountModal:', this.showAmountModal);\r\n    console.log('showConfirmModal:', this.showConfirmModal);\r\n    console.log('isProcessingModal:', this.isProcessingModal);\r\n    console.log('isBlocked:', this.isBlocked);\r\n    console.log('isLoading:', this.isLoading);\r\n    console.log('modalNumberInput:', this.modalNumberInput);\r\n    console.log('modalAmountInput:', this.modalAmountInput);\r\n    console.log('tempNumber:', this.tempNumber);\r\n    console.log('tempAmount:', this.tempAmount);\r\n    console.log('currentUser:', this.currentUser);\r\n    console.log('========================');\r\n    \r\n    // Forzar reinicio completo de los modales\r\n    this.closeAllModals();\r\n    \r\n    alert(`Estado de modales:\r\n- showNumberModal: ${this.showNumberModal}\r\n- showAmountModal: ${this.showAmountModal}  \r\n- showConfirmModal: ${this.showConfirmModal}\r\n- isProcessingModal: ${this.isProcessingModal}\r\n- isBlocked: ${this.isBlocked}\r\nRevisa la consola para más detalles.`);\r\n  }\r\n\r\n  // Función para toggle manual de bloqueo\r\n  toggleBloqueo(): void {\r\n    this.isBlocked = !this.isBlocked;\r\n    const estado = this.isBlocked ? 'bloqueadas' : 'habilitadas';\r\n    this.notificationService.showInfo('Estado actualizado', `Ventas ${estado} manualmente`);\r\n    console.log('[SUCURSAL] Bloqueo manual:', this.isBlocked);\r\n  }\r\n\r\n  // Método de debug temporal para verificar conexión con BD\r\n  async debugSalesData(): Promise<void> {\r\n    console.log('=== INICIANDO DEBUG DESDE SUCURSAL ===');\r\n    console.log('Usuario actual:', this.currentUser);\r\n    \r\n    try {\r\n      // Verificar permisos primero\r\n      console.log('=== VERIFICANDO PERMISOS ===');\r\n      await this.supabaseService.checkDatabasePermissions();\r\n      \r\n      // Llamar al método de debug del servicio\r\n      console.log('=== DEBUG GENERAL DE DATOS ===');\r\n      await this.supabaseService.debugSalesData();\r\n      \r\n      // Intentar cargar ventas de hoy directamente\r\n      console.log('=== PROBANDO loadTodaySales ===');\r\n      await this.loadTodaySales();\r\n      console.log('Ventas del día cargadas:', this.todaySales.length);\r\n      console.log('Detalles de ventas cargados:', Object.keys(this.saleDetails).length);\r\n      \r\n      // Probar con fechas diferentes\r\n      console.log('=== PROBANDO FECHAS ESPECÍFICAS ===');\r\n      const yesterday = new Date();\r\n      yesterday.setDate(yesterday.getDate() - 1);\r\n      \r\n      const yesterdaySales = await this.supabaseService.getSalesByDateAndSorteo(yesterday, '');\r\n      console.log('Ventas de ayer:', yesterdaySales.length);\r\n      \r\n      const tomorrow = new Date();\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      \r\n      const tomorrowSales = await this.supabaseService.getSalesByDateAndSorteo(tomorrow, '');\r\n      console.log('Ventas de mañana:', tomorrowSales.length);\r\n      \r\n      // Verificar estado de ventas recientes\r\n      console.log('=== ESTADO DE VENTAS RECIENTES ===');\r\n      console.log('recentSales length:', this.recentSales.length);\r\n      console.log('todaySales length:', this.todaySales.length);\r\n      \r\n      // Probar refresh forzado\r\n      console.log('=== PROBANDO REFRESH FORZADO ===');\r\n      await this.loadRecentSales();\r\n      console.log('Después del refresh - recentSales:', this.recentSales.length);\r\n      \r\n    } catch (error) {\r\n      console.error('Error en debug de sucursal:', error);\r\n    }\r\n  }\r\n}\r\n","<!-- NUEVA INTERFAZ BASADA EN MOCKUPS -->\r\n<div class=\"lottery-interface\">\r\n  <!-- Header -->\r\n  <div class=\"header-bar\">\r\n    <button class=\"btn-header btn-bloquear\" (click)=\"toggleBloqueo()\" \r\n            [disabled]=\"isLoading\">\r\n      {{ isBlocked ? 'Desbloquear' : 'Bloquear' }}\r\n    </button>\r\n    \r\n    <!-- Botón de Debug Temporal -->\r\n    <button class=\"btn-header\" (click)=\"debugSalesData()\" \r\n            style=\"background: rgba(255, 193, 7, 0.2); border-color: rgba(255, 193, 7, 0.3)\">\r\n      Debug DB\r\n    </button>\r\n \r\n    <div class=\"sucursal-title\">\r\n      <h2>{{ currentUser?.sucursal || 'Sucursal 1' }}</h2>\r\n    </div>\r\n    \r\n    <button class=\"btn-header btn-cerrar\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n      Cerrar Sesión\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Contenido Principal -->\r\n  <div class=\"main-content\">\r\n    \r\n    <!-- Vista 1: Pantalla Principal con Botón VENTA -->\r\n    <div *ngIf=\"selectedNumbers.length === 0\" class=\"venta-screen\">\r\n      <div class=\"venta-button-container\">\r\n        <button class=\"btn-venta\" \r\n                (click)=\"openNumberModal()\" \r\n                [disabled]=\"isLoading || isBlocked || !isSorteoOpen\">\r\n          VENTA\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Info del sorteo -->\r\n      <div class=\"sorteo-info\" *ngIf=\"currentSorteo\">\r\n        <div class=\"alert alert-info\">\r\n          <strong>{{ currentSorteo.label }}</strong> - \r\n          <span *ngIf=\"isSorteoOpen\" class=\"text-success\">\r\n            Abierto (cierra {{ timeUntilClose }})\r\n          </span>\r\n          <span *ngIf=\"!isSorteoOpen\" class=\"text-danger\">\r\n            Cerrado\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Mensaje de bloqueo -->\r\n      <div *ngIf=\"isBlocked\" class=\"alert alert-danger\">\r\n        <i class=\"fas fa-lock\"></i> \r\n        <strong>Venta bloqueada:</strong> Faltan menos de 5 minutos para el cierre del sorteo.\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Vista 2: Tabla de Jugadas -->\r\n    <div *ngIf=\"selectedNumbers.length > 0\" class=\"jugadas-screen\">\r\n      \r\n      <!-- Tabla de jugadas -->\r\n      <div class=\"jugadas-table\">\r\n        <div class=\"table-header\">\r\n          <div class=\"col-numero\">#</div>\r\n          <div class=\"col-monto\">Monto</div>\r\n          <div class=\"col-accion\"></div>\r\n        </div>\r\n        \r\n        <div class=\"table-body\">\r\n          <div *ngFor=\"let item of selectedNumbers; let i = index; trackBy: trackByIndex\" \r\n               class=\"table-row\">\r\n            <div class=\"col-numero\">{{ item.numero.toString().padStart(2, '0') }}</div>\r\n            <div class=\"col-monto\">L {{ item.monto.toFixed(0) }}</div>\r\n            <div class=\"col-accion\">\r\n              <button class=\"btn-remove\" (click)=\"removeNumber(i)\" [disabled]=\"isLoading\">\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Botón Agregar más números -->\r\n      <div class=\"add-more-container\">\r\n        <button class=\"btn-add-more\" \r\n                (click)=\"openNumberModal()\" \r\n                [disabled]=\"isLoading || isBlocked\">\r\n          + Agregar Número\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Botón PAGAR -->\r\n      <div class=\"pagar-container\">\r\n        <button class=\"btn-pagar\" \r\n                (click)=\"processSale()\" \r\n                [disabled]=\"selectedNumbers.length === 0 || isLoading || isBlocked\">\r\n          PAGAR\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- Ventas Actuales (siempre visible en la parte inferior) -->\r\n  <div class=\"ventas-actuales\" *ngIf=\"recentSales.length > 0\">\r\n    <div class=\"ventas-header\">\r\n      <h4>Ventas actuales</h4>\r\n    </div>\r\n    \r\n    <div class=\"ventas-body\">\r\n      <div class=\"transacciones-header\">\r\n        Transacciones\r\n      </div>\r\n      \r\n      <div *ngFor=\"let sale of getFilteredSales(); trackBy: trackBySaleId\" class=\"transaccion-item\">\r\n        <div class=\"transaccion-left\">\r\n          <div class=\"fecha-hora\">{{ formatTime(sale.createdAt) }}</div>\r\n          <div class=\"numero-recibo\">Recibo: {{ sale.numeroRecibo || sale.id.slice(-6) }}</div>\r\n          <div class=\"correlativo\">Correlativo: {{ sale.correlativo || 'N/A' }}</div>\r\n          <div class=\"numeros-jugados\">\r\n            <span *ngFor=\"let detail of getSaleDetails(sale.id); trackBy: trackByDetailId\" class=\"numero-small\">\r\n              {{ detail.numero.toString().padStart(2, '0') }} x L{{ detail.monto.toFixed(0) }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"transaccion-right\">\r\n          <div class=\"total\">Total: L{{ sale.total.toFixed(0) }}</div>\r\n          <button class=\"btn-reimprimir\" (click)=\"reprintReceipt(sale)\">\r\n            🖨️ Reimprimir\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- Modal 1: Selección de Número -->\r\n<div class=\"modal\" [style.display]=\"showNumberModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showNumberModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-hashtag\"></i> Seleccionar Número\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"calculator-container\">\r\n          <!-- Display del número -->\r\n          <div class=\"calculator-display\">\r\n            <span class=\"display-label\">NUMERO</span>\r\n            <div class=\"display-value\">{{ (modalNumberInput || '00').padStart(2, '0') }}</div>\r\n          </div>\r\n          \r\n          <!-- Teclado numérico -->\r\n          <div class=\"calculator-keypad\">\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(1); $event.stopPropagation()\">1</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(2); $event.stopPropagation()\">2</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(3); $event.stopPropagation()\">3</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(4); $event.stopPropagation()\">4</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(5); $event.stopPropagation()\">5</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(6); $event.stopPropagation()\">6</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(7); $event.stopPropagation()\">7</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(8); $event.stopPropagation()\">8</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(9); $event.stopPropagation()\">9</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(0); $event.stopPropagation()\">0</button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-clear\" (click)=\"clearModalNumber(); $event.stopPropagation()\">\r\n                C\r\n              </button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-accept\" (click)=\"acceptModalNumber(); $event.stopPropagation()\" \r\n                      [disabled]=\"!modalNumberInput\">\r\n                Aceptar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 2: Selección de Apuesta -->\r\n<div class=\"modal\" [style.display]=\"showAmountModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showAmountModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-dollar-sign\"></i> Ingresar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"calculator-container\">\r\n          <!-- Display de la apuesta -->\r\n          <div class=\"calculator-display\">\r\n            <span class=\"display-label\">APUESTA</span>\r\n            <div class=\"display-value\">{{ modalAmountInput || '00' }}</div>\r\n          </div>\r\n          \r\n          <!-- Teclado numérico -->\r\n          <div class=\"calculator-keypad\">\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(1); $event.stopPropagation()\">1</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(2); $event.stopPropagation()\">2</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(3); $event.stopPropagation()\">3</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(4); $event.stopPropagation()\">4</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(5); $event.stopPropagation()\">5</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(6); $event.stopPropagation()\">6</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(7); $event.stopPropagation()\">7</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(8); $event.stopPropagation()\">8</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(9); $event.stopPropagation()\">9</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(0); $event.stopPropagation()\">0</button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-clear\" (click)=\"clearModalAmount(); $event.stopPropagation()\">\r\n                C\r\n              </button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-accept\" (click)=\"acceptModalAmount(); $event.stopPropagation()\" \r\n                      [disabled]=\"!modalAmountInput\">\r\n                Aceptar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 3: Confirmación -->\r\n<div class=\"modal\" [style.display]=\"showConfirmModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showConfirmModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-check-circle\"></i> Confirmar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"confirmation-container\">\r\n          <div class=\"confirmation-card\">\r\n            <div class=\"number-display-large\">\r\n              # {{ tempNumber !== null ? tempNumber.toString().padStart(2, '0') : '00' }}\r\n            </div>\r\n            <div class=\"amount-display\">\r\n              APUESTA: L {{ tempAmount || 0 }}\r\n            </div>\r\n            <div class=\"confirmation-buttons\">\r\n              <button type=\"button\" class=\"btn btn-success btn-lg\" (click)=\"confirmAddNumber()\">\r\n                <i class=\"fas fa-check\"></i> CONFIRMAR\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-secondary btn-lg\" (click)=\"cancelAddNumber()\">\r\n                <i class=\"fas fa-times\"></i> Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Eliminar el backdrop separado ya que usamos el modal completo -->\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(5000), // 5 segundos timeout\r\n      map(user => {\r\n        console.log('AdminGuard - Usuario actual:', user);\r\n        return user?.role === 'admin';\r\n      }),\r\n      tap(isAdmin => {\r\n        console.log('AdminGuard - Es admin:', isAdmin);\r\n        if (!isAdmin) {\r\n          console.log('AdminGuard - Redirigiendo a login');\r\n          this.router.navigate(['/login']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        console.error('AdminGuard - Error o timeout:', error);\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(5000), // 5 segundos timeout\r\n      map(user => {\r\n        console.log('AuthGuard - Usuario actual:', user);\r\n        return !!user;\r\n      }),\r\n      tap(isAuthenticated => {\r\n        console.log('AuthGuard - Autenticado:', isAuthenticated);\r\n        if (!isAuthenticated) {\r\n          console.log('AuthGuard - Redirigiendo a login');\r\n          this.router.navigate(['/login']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        console.error('AuthGuard - Error o timeout:', error);\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export interface User {\r\n  id: string;\r\n  email: string;\r\n  role: 'admin' | 'sucursal';\r\n  sucursal?: string;\r\n  active: boolean;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface Sale {\r\n  id: string;\r\n  userId: string;\r\n  sucursal: string;\r\n  sorteo: 'mañana' | 'tarde' | 'noche';\r\n  fecha: Date;\r\n  total: number;\r\n  numeroRecibo: string; // Número único de recibo\r\n  correlativo: number; // Correlativo secuencial por sucursal\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface SaleDetail {\r\n  id: string;\r\n  saleId: string;\r\n  numero: number;\r\n  monto: number;\r\n}\r\n\r\nexport interface Sorteo {\r\n  id: string;\r\n  fecha: Date;\r\n  sorteo: 'mañana' | 'tarde' | 'noche';\r\n  horaCierre: Date;\r\n  numeroGanador?: number;\r\n  factorMultiplicador: number; // Factor para calcular ganancias (ej: 70)\r\n  totalVendido: number;\r\n  totalPagado: number;\r\n  gananciaNeta: number;\r\n  cerrado: boolean;\r\n}\r\n\r\nexport interface SorteoSchedule {\r\n  name: 'mañana' | 'tarde' | 'noche';\r\n  label: string;\r\n  closeTime: string; // \"10:55\", \"14:55\", \"20:55\"\r\n}\r\n\r\nexport const SORTEO_SCHEDULES: SorteoSchedule[] = [\r\n  { name: 'mañana', label: 'Mañana', closeTime: '10:55' },\r\n  { name: 'tarde', label: 'Tarde', closeTime: '14:55' },\r\n  { name: 'noche', label: 'Noche', closeTime: '22:00' }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  private loadingInstance: any = null;\r\n\r\n  constructor() { }\r\n\r\n  // Mostrar mensaje de éxito\r\n  async showSuccess(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'success',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#28a745'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de error\r\n  async showError(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'error',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#dc3545'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de información\r\n  async showInfo(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'info',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#007bff'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de advertencia\r\n  async showWarning(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'warning',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#ffc107'\r\n    });\r\n  }\r\n\r\n  // Mostrar confirmación\r\n  async showConfirmation(\r\n    title: string, \r\n    text?: string, \r\n    confirmButtonText: string = 'Sí, confirmar',\r\n    cancelButtonText: string = 'Cancelar'\r\n  ): Promise<boolean> {\r\n    const result = await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText,\r\n      cancelButtonText,\r\n      confirmButtonColor: '#28a745',\r\n      cancelButtonColor: '#dc3545'\r\n    });\r\n\r\n    return result.isConfirmed;\r\n  }\r\n\r\n  // Mostrar loader\r\n  showLoading(title: string = 'Cargando...'): void {\r\n    this.hideLoading(); // Cerrar cualquier loading anterior\r\n    \r\n    this.loadingInstance = Swal.fire({\r\n      title,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showConfirmButton: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Cerrar loader\r\n  hideLoading(): void {\r\n    if (this.loadingInstance) {\r\n      Swal.close();\r\n      this.loadingInstance = null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { Sale, SaleDetail } from '../models/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrintService {\r\n\r\n  constructor() { }\r\n\r\n  // Generar PDF térmico para venta\r\n  generateThermalReceipt(sale: Sale, details: SaleDetail[]): void {\r\n    console.log('=== GENERANDO RECIBO PARA IMPRESIÓN ===');\r\n    console.log('Sale completo:', JSON.stringify(sale, null, 2));\r\n    console.log('Details completo:', JSON.stringify(details, null, 2));\r\n    console.log('Cantidad de detalles:', details ? details.length : 'details es null/undefined');\r\n\r\n    // Si no hay detalles, crear datos de prueba\r\n    if (!details || details.length === 0) {\r\n      console.log('⚠️ No hay detalles, creando datos de prueba');\r\n      details = [\r\n        { id: 'test1', saleId: sale.id, numero: 11, monto: 40 },\r\n        { id: 'test2', saleId: sale.id, numero: 54, monto: 10 }\r\n      ];\r\n    }\r\n\r\n    try {\r\n      // Crear PDF para impresión térmica\r\n      const pdf = new jsPDF({\r\n        orientation: 'portrait',\r\n        unit: 'mm',\r\n        format: [80, 150]\r\n      });\r\n\r\n      console.log('PDF creado, agregando contenido...');\r\n\r\n      // Configuración básica\r\n      let y = 10;\r\n      const lineHeight = 5;\r\n\r\n      // Título\r\n      pdf.setFontSize(14);\r\n      pdf.text('LOTERIA', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      pdf.setFontSize(10);\r\n      pdf.text('RECIBO DE VENTA', 40, y, { align: 'center' });\r\n      y += lineHeight + 2;\r\n\r\n      // Número de recibo\r\n      pdf.setFontSize(9);\r\n      pdf.text(`Recibo #: ${sale.numeroRecibo || 'N/A'}`, 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Línea\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Sucursal\r\n      pdf.setFontSize(12);\r\n      pdf.text(sale.sucursal || 'Sucursal 1', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Sorteo\r\n      pdf.setFontSize(9);\r\n      pdf.text(`Sorteo: ${sale.sorteo}`, 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Fecha\r\n      const fecha = new Date(sale.fecha).toLocaleString();\r\n      pdf.text(`Fecha: ${fecha}`, 40, y, { align: 'center' });\r\n      y += lineHeight + 2;\r\n\r\n      // Encabezados\r\n      pdf.setFontSize(10);\r\n      pdf.text('Numero', 20, y, { align: 'center' });\r\n      pdf.text('Valor', 60, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Línea\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Detalles\r\n      let total = 0;\r\n      for (const detail of details) {\r\n        pdf.text(detail.numero.toString().padStart(2, '0'), 20, y, { align: 'center' });\r\n        pdf.text(`L ${detail.monto}`, 60, y, { align: 'center' });\r\n        total += detail.monto;\r\n        y += lineHeight;\r\n      }\r\n\r\n      // Línea\r\n      y += 2;\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Total\r\n      pdf.setFontSize(12);\r\n      pdf.text('Total a pagar:', 10, y);\r\n      pdf.text(`L ${total}`, 70, y, { align: 'right' });\r\n      y += lineHeight + 2;\r\n\r\n      // Mensaje\r\n      pdf.setFontSize(8);\r\n      pdf.text('Gracias por su compra!', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n      pdf.text('Mucha suerte!', 40, y, { align: 'center' });\r\n\r\n      console.log('Contenido agregado al PDF');\r\n\r\n      // FUNCIÓN DE IMPRESIÓN DIRECTA\r\n      // Crear blob para impresión\r\n      const pdfData = pdf.output('arraybuffer');\r\n      const blob = new Blob([pdfData], { type: 'application/pdf' });\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      console.log('Iniciando impresión directa...');\r\n      \r\n      // Abrir en nueva ventana para impresión manual controlada por el usuario\r\n      const printWindow = window.open(url, '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\r\n      \r\n      if (printWindow) {\r\n        printWindow.onload = () => {\r\n          // Enfocar la ventana\r\n          printWindow.focus();\r\n          \r\n          // Ejecutar impresión automáticamente\r\n          setTimeout(() => {\r\n            try {\r\n              printWindow.print();\r\n              console.log('✅ Recibo enviado a impresora');\r\n            } catch (printError) {\r\n              console.error('Error al imprimir:', printError);\r\n            }\r\n          }, 1000); // Esperar 1 segundo para que cargue completamente\r\n          \r\n          // Limpiar URL cuando la ventana se cierre (detección manual)\r\n          const checkClosed = setInterval(() => {\r\n            if (printWindow.closed) {\r\n              clearInterval(checkClosed);\r\n              URL.revokeObjectURL(url);\r\n              console.log('Ventana de impresión cerrada por el usuario, URL limpiada');\r\n            }\r\n          }, 1000);\r\n        };\r\n      } else {\r\n        console.warn('No se pudo abrir la ventana de impresión, intentando método iframe');\r\n        \r\n        // Fallback: usar iframe como respaldo\r\n        const printFrame = document.createElement('iframe');\r\n        printFrame.style.display = 'none';\r\n        printFrame.src = url;\r\n        \r\n        document.body.appendChild(printFrame);\r\n        \r\n        printFrame.onload = () => {\r\n          try {\r\n            printFrame.contentWindow?.focus();\r\n            printFrame.contentWindow?.print();\r\n            \r\n            // Limpiar después de 5 segundos en modo iframe\r\n            setTimeout(() => {\r\n              document.body.removeChild(printFrame);\r\n              URL.revokeObjectURL(url);\r\n              console.log('iframe de impresión limpiado');\r\n            }, 5000);\r\n            \r\n          } catch (printError) {\r\n            console.error('Error al imprimir con iframe:', printError);\r\n          }\r\n        };\r\n      }\r\n\r\n    } catch (error: any) {\r\n      console.error('Error creando PDF:', error);\r\n      alert('Error al generar el recibo: ' + (error?.message || error));\r\n    }\r\n  }\r\n\r\n  // Método de prueba para generar un recibo con datos fijos\r\n  generateTestReceipt(): void {\r\n    console.log('=== GENERANDO RECIBO DE PRUEBA ===');\r\n    \r\n    const testSale: Sale = {\r\n      id: 'test-123',\r\n      userId: 'user1',\r\n      sucursal: 'Sucursal 1',\r\n      sorteo: 'mañana',\r\n      fecha: new Date(),\r\n      total: 50,\r\n      numeroRecibo: 'SUC-REC-250717-0001',\r\n      correlativo: 1,\r\n      createdAt: new Date()\r\n    };\r\n\r\n    const testDetails: SaleDetail[] = [\r\n      { id: 'detail1', saleId: 'test-123', numero: 11, monto: 40 },\r\n      { id: 'detail2', saleId: 'test-123', numero: 54, monto: 10 }\r\n    ];\r\n\r\n    this.generateThermalReceipt(testSale, testDetails);\r\n  }\r\n\r\n  // Generar PDF de reporte diario\r\n  generateDailyReport(sales: Sale[], fecha: Date): void {\r\n    const pdf = new jsPDF();\r\n    \r\n    pdf.setFontSize(16);\r\n    pdf.text('REPORTE DIARIO DE VENTAS', 105, 20, { align: 'center' });\r\n    \r\n    pdf.setFontSize(12);\r\n    pdf.text(`Fecha: ${fecha.toLocaleDateString()}`, 20, 35);\r\n    \r\n    // Aquí se puede expandir para incluir más detalles del reporte\r\n    let yPos = 50;\r\n    \r\n    // Resumen por sorteo\r\n    const sorteoSummary = this.calculateSorteoSummary(sales);\r\n    \r\n    pdf.setFontSize(14);\r\n    pdf.text('RESUMEN POR SORTEO:', 20, yPos);\r\n    yPos += 10;\r\n    \r\n    pdf.setFontSize(10);\r\n    for (const [sorteo, data] of Object.entries(sorteoSummary)) {\r\n      pdf.text(`${sorteo.toUpperCase()}: L. ${data.total.toFixed(2)} (${data.count} ventas)`, 25, yPos);\r\n      yPos += 7;\r\n    }\r\n    \r\n    // Total general\r\n    const totalGeneral = sales.reduce((sum, sale) => sum + sale.total, 0);\r\n    yPos += 10;\r\n    pdf.setFontSize(12);\r\n    pdf.text(`TOTAL GENERAL: L. ${totalGeneral.toFixed(2)}`, 20, yPos);\r\n    \r\n    pdf.save(`reporte_diario_${fecha.toISOString().split('T')[0]}.pdf`);\r\n  }\r\n\r\n  private calculateSorteoSummary(sales: Sale[]): { [key: string]: { total: number, count: number } } {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n    \r\n    for (const sale of sales) {\r\n      if (!summary[sale.sorteo]) {\r\n        summary[sale.sorteo] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sorteo].total += sale.total;\r\n      summary[sale.sorteo].count += 1;\r\n    }\r\n    \r\n    return summary;\r\n  }\r\n\r\n  // Generar reporte de ventas en PDF\r\n  generateVentasReportPDF(sales: Sale[], saleDetails: { [key: string]: SaleDetail[] }, filters: any): void {\r\n    try {\r\n      const doc = new jsPDF();\r\n      \r\n      // Header profesional con logo y título\r\n      doc.setFillColor(52, 73, 94); // Color azul oscuro\r\n      doc.rect(0, 0, 210, 35, 'F'); // Rectángulo header\r\n      \r\n      doc.setTextColor(255, 255, 255); // Texto blanco\r\n      doc.setFontSize(24);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('SISTEMA DE LOTERÍA', 105, 20, { align: 'center' });\r\n      \r\n      doc.setFontSize(14);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.text('REPORTE DE VENTAS', 105, 28, { align: 'center' });\r\n      \r\n      // Resetear color de texto\r\n      doc.setTextColor(0, 0, 0);\r\n      \r\n      // Información del reporte en formato profesional\r\n      let yPos = 50;\r\n      doc.setFontSize(12);\r\n      doc.setFont('helvetica', 'bold');\r\n      \r\n      // Sección de información general con fondo gris claro\r\n      doc.setFillColor(248, 249, 250);\r\n      doc.rect(15, yPos - 5, 180, 40, 'F');\r\n      doc.setDrawColor(200, 200, 200);\r\n      doc.rect(15, yPos - 5, 180, 40, 'S');\r\n      \r\n      yPos += 5;\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(11);\r\n      doc.text('INFORMACIÓN DEL REPORTE', 20, yPos);\r\n      yPos += 8;\r\n      \r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(10);\r\n      \r\n      if (filters.fechaDesde || filters.fechaHasta) {\r\n        const fechaTexto = filters.fechaDesde && filters.fechaHasta \r\n          ? `Período: ${new Date(filters.fechaDesde).toLocaleDateString()} - ${new Date(filters.fechaHasta).toLocaleDateString()}`\r\n          : filters.fechaDesde \r\n            ? `Desde: ${new Date(filters.fechaDesde).toLocaleDateString()}`\r\n            : `Hasta: ${new Date(filters.fechaHasta).toLocaleDateString()}`;\r\n        doc.text(fechaTexto, 25, yPos);\r\n        yPos += 6;\r\n      }\r\n      \r\n      if (filters.sorteoFilter) {\r\n        doc.text(`Sorteo: ${filters.sorteoFilter}`, 25, yPos);\r\n        yPos += 6;\r\n      }\r\n      \r\n      const now = new Date();\r\n      doc.text(`Fecha de generación: ${now.toLocaleDateString()} - ${now.toLocaleTimeString()}`, 25, yPos);\r\n      yPos += 6;\r\n      \r\n      doc.text(`Total de transacciones: ${sales.length}`, 25, yPos);\r\n      yPos += 20;\r\n      \r\n      // Resumen por sucursal en formato tabla\r\n      const sucursalTotals: { [key: string]: { total: number, count: number } } = {};\r\n      sales.forEach(sale => {\r\n        if (!sucursalTotals[sale.sucursal]) {\r\n          sucursalTotals[sale.sucursal] = { total: 0, count: 0 };\r\n        }\r\n        sucursalTotals[sale.sucursal].total += sale.total;\r\n        sucursalTotals[sale.sucursal].count += 1;\r\n      });\r\n      \r\n      // Header del resumen con estilo\r\n      doc.setFillColor(52, 73, 94);\r\n      doc.setTextColor(255, 255, 255);\r\n      doc.rect(15, yPos - 3, 180, 10, 'F');\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(12);\r\n      doc.text('RESUMEN POR SUCURSAL', 105, yPos + 3, { align: 'center' });\r\n      yPos += 15;\r\n      \r\n      // Resetear color\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(10);\r\n      \r\n      // Crear mini tabla para resumen\r\n      Object.entries(sucursalTotals).forEach(([sucursal, data], index) => {\r\n        const fillColor = index % 2 === 0 ? [245, 245, 245] : [255, 255, 255];\r\n        doc.setFillColor(fillColor[0], fillColor[1], fillColor[2]);\r\n        doc.rect(15, yPos - 2, 180, 8, 'F');\r\n        \r\n        doc.text(`${sucursal}:`, 25, yPos + 2);\r\n        doc.text(`${data.count} ventas`, 105, yPos + 2, { align: 'center' });\r\n        doc.text(`L ${data.total.toFixed(2)}`, 175, yPos + 2, { align: 'right' });\r\n        yPos += 8;\r\n      });\r\n      \r\n      yPos += 5;\r\n      \r\n      // Total general destacado\r\n      const totalGeneral = sales.reduce((sum, sale) => sum + sale.total, 0);\r\n      doc.setFillColor(46, 204, 113); // Verde\r\n      doc.rect(15, yPos - 3, 180, 12, 'F');\r\n      doc.setTextColor(255, 255, 255);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(14);\r\n      doc.text(`TOTAL GENERAL: L ${totalGeneral.toFixed(2)}`, 105, yPos + 4, { align: 'center' });\r\n      yPos += 20;\r\n      \r\n      // Resetear para la tabla\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(12);\r\n      doc.text('DETALLE DE VENTAS:', 20, yPos);\r\n      yPos += 10;\r\n      \r\n      // Preparar datos para la tabla\r\n      const tableData = sales.map(sale => {\r\n        const details = saleDetails[sale.id] || [];\r\n        const numerosText = details.map(d => `${d.numero.toString().padStart(2, '0')}xL${d.monto}`).join(', ');\r\n        \r\n        // Formatear fecha con hora\r\n        const saleDate = new Date(sale.createdAt);\r\n        const fechaHoraStr = `${saleDate.toLocaleDateString()} ${saleDate.toLocaleTimeString('es-ES', { \r\n          hour: '2-digit', \r\n          minute: '2-digit' \r\n        })}`;\r\n        \r\n        return [\r\n          fechaHoraStr,\r\n          sale.numeroRecibo || sale.id.slice(-6),\r\n          sale.sucursal,\r\n          sale.sorteo,\r\n          numerosText,\r\n          `L ${sale.total.toFixed(2)}`\r\n        ];\r\n      });\r\n      \r\n      // Crear tabla con autoTable\r\n      autoTable(doc, {\r\n        startY: yPos,\r\n        head: [['Fecha/Hora', 'Recibo', 'Sucursal', 'Sorteo', 'Números', 'Total']],\r\n        body: tableData,\r\n        theme: 'grid',\r\n        headStyles: {\r\n          fillColor: [66, 139, 202],\r\n          textColor: 255,\r\n          fontSize: 10,\r\n          fontStyle: 'bold',\r\n          halign: 'center'\r\n        },\r\n        bodyStyles: {\r\n          fontSize: 9,\r\n          cellPadding: 3\r\n        },\r\n        columnStyles: {\r\n          0: { cellWidth: 35, halign: 'center' }, // Fecha/Hora (más ancho)\r\n          1: { cellWidth: 30, halign: 'center' }, // Recibo\r\n          2: { cellWidth: 25, halign: 'center' }, // Sucursal\r\n          3: { cellWidth: 20, halign: 'center' }, // Sorteo\r\n          4: { cellWidth: 45, halign: 'left' },   // Números\r\n          5: { cellWidth: 25, halign: 'right' }   // Total\r\n        },\r\n        alternateRowStyles: {\r\n          fillColor: [245, 245, 245]\r\n        },\r\n        margin: { left: 15, right: 15 },\r\n        didDrawPage: function(data: any) {\r\n          // Pie de página\r\n          doc.setFontSize(8);\r\n          doc.text(`Página ${data.pageNumber}`, 160, 290);\r\n          doc.text(`Generado el ${new Date().toLocaleString()}`, 15, 290);\r\n        }\r\n      });\r\n      \r\n      // Guardar el PDF\r\n      const fileName = `reporte_ventas_${new Date().toISOString().split('T')[0]}.pdf`;\r\n      doc.save(fileName);\r\n      \r\n    } catch (error) {\r\n      console.error('Error generando PDF:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SORTEO_SCHEDULES, SorteoSchedule } from '../models/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SorteoService {\r\n  \r\n  constructor() { }\r\n\r\n  getCurrentSorteo(): SorteoSchedule | null {\r\n    const now = new Date();\r\n    const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\r\n    \r\n    for (const sorteo of SORTEO_SCHEDULES) {\r\n      if (currentTime < sorteo.closeTime) {\r\n        return sorteo;\r\n      }\r\n    }\r\n    \r\n    // Si ya pasaron todos los sorteos del día, retorna null\r\n    return null;\r\n  }\r\n\r\n  getNextSorteo(): SorteoSchedule | null {\r\n    const now = new Date();\r\n    const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\r\n    \r\n    for (const sorteo of SORTEO_SCHEDULES) {\r\n      if (currentTime < sorteo.closeTime) {\r\n        return sorteo;\r\n      }\r\n    }\r\n    \r\n    // Si ya pasaron todos los sorteos del día, retorna el primero del siguiente día\r\n    return SORTEO_SCHEDULES[0];\r\n  }\r\n\r\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\r\n    const now = new Date();\r\n    const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\r\n    \r\n    return currentTime < sorteo.closeTime;\r\n  }\r\n\r\n  getTimeUntilClose(sorteo: SorteoSchedule): string {\r\n    const now = new Date();\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const closeTime = new Date();\r\n    closeTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    if (closeTime <= now) {\r\n      return '00:00';\r\n    }\r\n    \r\n    const diff = closeTime.getTime() - now.getTime();\r\n    const hoursLeft = Math.floor(diff / (1000 * 60 * 60));\r\n    const minutesLeft = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n    \r\n    return `${hoursLeft.toString().padStart(2, '0')}:${minutesLeft.toString().padStart(2, '0')}`;\r\n  }\r\n\r\n  getAllSorteos(): SorteoSchedule[] {\r\n    return SORTEO_SCHEDULES;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { createClient, SupabaseClient, User as SupabaseUser } from '@supabase/supabase-js';\r\nimport { environment } from '../../environments/environment';\r\nimport { User, Sale, SaleDetail, Sorteo } from '../models/interfaces';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupabaseService {\r\n  private supabase: SupabaseClient;\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n\r\n\r\n\r\n  constructor() {\r\n    this.supabase = createClient(environment.supabase.url, environment.supabase.key);\r\n    \r\n    // Inicializar sesión existente\r\n    this.initializeSession();\r\n    \r\n    // Escuchar cambios en la autenticación\r\n    this.supabase.auth.onAuthStateChange(async (event, session) => {\r\n      console.log('Auth state changed:', event, session?.user?.id);\r\n      \r\n      if (session?.user) {\r\n        console.log('Usuario autenticado:', session.user.id);\r\n        \r\n        // Usar datos básicos inmediatamente\r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email || '',\r\n          role: 'sucursal' as const,\r\n          sucursal: 'Principal',\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n        \r\n        console.log('Setting user data:', userData);\r\n        this.currentUserSubject.next(userData);\r\n        \r\n        // Cargar datos adicionales en segundo plano\r\n        this.loadUserDataInBackground(session.user.id);\r\n      } else {\r\n        console.log('No session, clearing user');\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Inicializar sesión existente\r\n  private async initializeSession(): Promise<void> {\r\n    try {\r\n      console.log('Inicializando sesión...');\r\n      \r\n      const { data: { session }, error } = await this.supabase.auth.getSession();\r\n      \r\n      if (error) {\r\n        console.error('Error obteniendo sesión:', error);\r\n        this.currentUserSubject.next(null);\r\n        return;\r\n      }\r\n      \r\n      if (session?.user) {\r\n        console.log('Sesión encontrada:', session.user.id);\r\n        \r\n        // Usar directamente los datos de la sesión para evitar timeouts\r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email || '',\r\n          role: 'sucursal' as const,\r\n          sucursal: 'Principal',\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n        \r\n        console.log('Datos de usuario inicializados:', userData);\r\n        this.currentUserSubject.next(userData);\r\n        \r\n        // Intentar obtener datos de la tabla users en segundo plano (no bloqueante)\r\n        this.loadUserDataInBackground(session.user.id);\r\n      } else {\r\n        console.log('No hay sesión activa');\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error inicializando sesión:', error);\r\n      this.currentUserSubject.next(null);\r\n    }\r\n  }\r\n\r\n  // Cargar datos del usuario en segundo plano\r\n  private async loadUserDataInBackground(uid: string): Promise<void> {\r\n    try {\r\n      console.log('Cargando datos de usuario en segundo plano...');\r\n      \r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Background load timeout')), 5000);\r\n      });\r\n      \r\n      const queryPromise = this.supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('id', uid)\r\n        .single();\r\n      \r\n      const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n      \r\n      if (data && !error) {\r\n        console.log('Datos actualizados desde la base de datos:', data);\r\n        const updatedUser: User = {\r\n          id: data.id,\r\n          email: data.email,\r\n          role: data.role,\r\n          sucursal: data.sucursal,\r\n          active: data.active,\r\n          createdAt: new Date(data.created_at)\r\n        };\r\n        this.currentUserSubject.next(updatedUser);\r\n      } else {\r\n        console.log('No se pudieron cargar datos adicionales, manteniendo datos por defecto');\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error cargando datos en segundo plano:', error);\r\n      // No hacer nada, mantener los datos por defecto\r\n    }\r\n  }\r\n\r\n  // Autenticación\r\n  async login(email: string, password: string): Promise<User | null> {\r\n    try {\r\n      console.log('Intentando login con:', email);\r\n      \r\n      const { data, error } = await this.supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (error) {\r\n        console.error('Error en auth.signInWithPassword:', error);\r\n        throw error;\r\n      }\r\n\r\n      if (data.user) {\r\n        console.log('Usuario autenticado:', data.user.id);\r\n        const userData = await this.getUserData(data.user.id);\r\n        console.log('Datos del usuario obtenidos:', userData);\r\n        return userData;\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error en login:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const { error } = await this.supabase.auth.signOut();\r\n    if (error) throw error;\r\n  }\r\n\r\n  // Verificar conexión a la base de datos\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('usuarios')\r\n        .select('count')\r\n        .limit(1);\r\n      \r\n      return !error;\r\n    } catch (error) {\r\n      console.error('Error testando conexión:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Usuarios\r\n  async getUserData(uid: string): Promise<User | null> {\r\n    try {\r\n      console.log('Buscando usuario con UID:', uid);\r\n      \r\n      // Primero obtener datos básicos de auth\r\n      const { data: authUser, error: authError } = await this.supabase.auth.getUser();\r\n      \r\n      if (authError || !authUser.user) {\r\n        console.error('Error obteniendo usuario autenticado:', authError);\r\n        return null;\r\n      }\r\n\r\n      // Datos por defecto usando auth\r\n      const defaultUserData: User = {\r\n        id: authUser.user.id,\r\n        email: authUser.user.email || '',\r\n        role: 'sucursal' as const,\r\n        sucursal: 'Principal',\r\n        active: true,\r\n        createdAt: new Date()\r\n      };\r\n\r\n      // Intentar obtener datos de la tabla users con timeout muy corto\r\n      try {\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => reject(new Error('Database timeout')), 1000); // 1 segundo timeout\r\n        });\r\n        \r\n        const queryPromise = this.supabase\r\n          .from('users')\r\n          .select('*')\r\n          .eq('id', uid)\r\n          .single();\r\n        \r\n        const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n        \r\n        if (data && !error) {\r\n          console.log('Usuario encontrado en tabla users:', data);\r\n          return {\r\n            id: data.id,\r\n            email: data.email,\r\n            role: data.role,\r\n            sucursal: data.sucursal,\r\n            active: data.active,\r\n            createdAt: new Date(data.created_at)\r\n          } as User;\r\n        }\r\n      } catch (dbError) {\r\n        console.warn('Error/timeout consultando tabla users, usando datos por defecto:', dbError);\r\n      }\r\n\r\n      console.log('Usando datos de auth como fallback');\r\n      return defaultUserData;\r\n      \r\n    } catch (error) {\r\n      console.error('Error en getUserData:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Ventas\r\n  async getNextCorrelativo(sucursal: string): Promise<number> {\r\n    try {\r\n      console.log('=== CALCULANDO SIGUIENTE CORRELATIVO ===');\r\n      console.log('Sucursal:', sucursal);\r\n      \r\n      // Obtener el correlativo más alto para esta sucursal en el día actual\r\n      const today = new Date();\r\n      const startOfDay = new Date(today);\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date(today);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n      \r\n      console.log('Fecha inicio del día:', startOfDay.toISOString());\r\n      console.log('Fecha fin del día:', endOfDay.toISOString());\r\n      \r\n      // Primero, obtener TODAS las ventas de esta sucursal para debug\r\n      const { data: allSales, error: allError } = await this.supabase\r\n        .from('sales')\r\n        .select('id, correlativo, fecha, created_at')\r\n        .eq('sucursal', sucursal)\r\n        .order('created_at', { ascending: false });\r\n        \r\n      if (allError) {\r\n        console.error('Error obteniendo todas las ventas:', allError);\r\n      } else {\r\n        console.log('=== TODAS LAS VENTAS DE LA SUCURSAL ===');\r\n        console.log('Total ventas encontradas:', allSales.length);\r\n        allSales.forEach((sale, index) => {\r\n          console.log(`Venta ${index + 1}: ID=${sale.id}, Correlativo=${sale.correlativo}, Fecha=${sale.fecha}, CreatedAt=${sale.created_at}`);\r\n        });\r\n      }\r\n      \r\n      // Ahora obtener solo las del día actual\r\n      const { data, error } = await this.supabase\r\n        .from('sales')\r\n        .select('correlativo, fecha, created_at')\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', startOfDay.toISOString())\r\n        .lte('fecha', endOfDay.toISOString())\r\n        .order('correlativo', { ascending: false })\r\n        .limit(1);\r\n\r\n      if (error) {\r\n        console.error('Error obteniendo correlativo del día:', error);\r\n        throw error;\r\n      }\r\n\r\n      console.log('=== VENTAS DEL DÍA ACTUAL ===');\r\n      console.log('Ventas del día encontradas:', data.length);\r\n      if (data.length > 0) {\r\n        console.log('Venta con correlativo más alto:', data[0]);\r\n        console.log('Correlativo más alto del día:', data[0].correlativo);\r\n      } else {\r\n        console.log('No se encontraron ventas del día actual');\r\n      }\r\n\r\n      const nextCorrelativo = data && data.length > 0 ? (data[0].correlativo || 0) + 1 : 1;\r\n      console.log('SIGUIENTE CORRELATIVO CALCULADO:', nextCorrelativo);\r\n      \r\n      return nextCorrelativo;\r\n    } catch (error) {\r\n      console.error('Error calculando correlativo:', error);\r\n      // En caso de error, usar 1 como fallback\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  async createSale(sale: Omit<Sale, 'id' | 'createdAt'>): Promise<string> {\r\n    try {\r\n      // Asegurar que la fecha sea del mismo día actual (timezone local)\r\n      const now = new Date();\r\n      const saleDate = new Date(sale.fecha);\r\n      \r\n      // Forzar que la fecha de la venta sea hoy en timezone local\r\n      const todayWithCorrectTime = new Date(now.getFullYear(), now.getMonth(), now.getDate(), \r\n                                          saleDate.getHours(), saleDate.getMinutes(), saleDate.getSeconds());\r\n\r\n      const saleData = {\r\n        user_id: sale.userId,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: todayWithCorrectTime.toISOString(),\r\n        total: sale.total,\r\n        numero_recibo: sale.numeroRecibo,\r\n        correlativo: sale.correlativo,\r\n        created_at: now.toISOString()\r\n      };\r\n\r\n      console.log('=== GUARDANDO VENTA ===');\r\n      console.log('Fecha original:', sale.fecha);\r\n      console.log('Fecha corregida:', todayWithCorrectTime.toISOString());\r\n      console.log('Fecha actual:', now.toISOString());\r\n      console.log('Datos de venta a guardar:', saleData);\r\n      console.log('Correlativo:', sale.correlativo);\r\n      console.log('Número de recibo:', sale.numeroRecibo);\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sales')\r\n        .insert([saleData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error('Error en la base de datos:', error);\r\n        throw error;\r\n      }\r\n\r\n      console.log('Venta guardada exitosamente:', data);\r\n      console.log('ID de venta creada:', data.id);\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      console.error('Error creando venta:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSaleDetail(detail: Omit<SaleDetail, 'id'>): Promise<string> {\r\n    try {\r\n      console.log('=== DEBUG createSaleDetail ===');\r\n      console.log('Detalle original recibido:', detail);\r\n      console.log('Número original:', detail.numero, 'Tipo:', typeof detail.numero);\r\n      console.log('Monto original:', detail.monto, 'Tipo:', typeof detail.monto);\r\n      \r\n      // Validar que los datos sean válidos\r\n      if (detail.numero === null || detail.numero === undefined) {\r\n        throw new Error('Número no puede ser null o undefined');\r\n      }\r\n      \r\n      if (detail.monto === null || detail.monto === undefined || detail.monto <= 0) {\r\n        throw new Error('Monto debe ser mayor a 0');\r\n      }\r\n      \r\n      // Convertir el número a string con formato de 2 dígitos (00, 01, 02, etc.)\r\n      const numeroString = detail.numero.toString().padStart(2, '0');\r\n      console.log('Número como string para BD:', numeroString);\r\n      \r\n      const detailData = {\r\n        sale_id: detail.saleId,\r\n        numero: numeroString,  // Enviar como string\r\n        monto: Number(detail.monto)\r\n      };\r\n\r\n      console.log('Datos finales que se enviarán a la BD:', detailData);\r\n      console.log('Tipos de datos:', {\r\n        sale_id: typeof detailData.sale_id,\r\n        numero: typeof detailData.numero,\r\n        monto: typeof detailData.monto\r\n      });\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .insert([detailData])\r\n        .select()\r\n        .single();\r\n      \r\n      if (error) {\r\n        console.error('Error de Supabase:', error);\r\n        console.error('Detalles del error:', JSON.stringify(error, null, 2));\r\n        throw error;\r\n      }\r\n\r\n      console.log('Detalle creado exitosamente:', data);\r\n      return data.id;\r\n    } catch (error) {\r\n      console.error('Error creando detalle de venta:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async getSalesByDateAndSorteo(fecha: Date, sorteo: string): Promise<Sale[]> {\r\n    try {\r\n      console.log('=== INICIANDO CONSULTA DE VENTAS ===');\r\n      console.log('Fecha solicitada:', fecha);\r\n      console.log('Sorteo filtro:', sorteo || 'TODOS');\r\n\r\n      const startOfDay = new Date(fecha);\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date(fecha);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n\r\n      console.log('Rango de consulta:');\r\n      console.log('Inicio:', startOfDay.toISOString());\r\n      console.log('Final:', endOfDay.toISOString());\r\n\r\n      let query = this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', startOfDay.toISOString())\r\n        .lte('fecha', endOfDay.toISOString())\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (sorteo && sorteo.trim() !== '') {\r\n        console.log('Aplicando filtro de sorteo:', sorteo);\r\n        query = query.eq('sorteo', sorteo);\r\n      }\r\n\r\n      console.log('Ejecutando consulta...');\r\n      const { data, error } = await query;\r\n\r\n      if (error) {\r\n        console.error('Error en consulta Supabase:', error);\r\n        throw error;\r\n      }\r\n\r\n      console.log('=== RESULTADOS DE CONSULTA ===');\r\n      console.log('Cantidad de ventas encontradas:', data?.length || 0);\r\n      \r\n      if (!data || data.length === 0) {\r\n        console.warn('No se encontraron ventas para los criterios especificados');\r\n        \r\n        // Hacer una consulta de debug para ver qué hay en la tabla\r\n        const { data: debugData, error: debugError } = await this.supabase\r\n          .from('sales')\r\n          .select('*')\r\n          .order('created_at', { ascending: false })\r\n          .limit(5);\r\n        \r\n        if (!debugError && debugData) {\r\n          console.log('Últimas 5 ventas en la tabla para debug:');\r\n          debugData.forEach((sale, index) => {\r\n            console.log(`${index + 1}. ID: ${sale.id}, Fecha: ${sale.fecha}, Sucursal: ${sale.sucursal}`);\r\n          });\r\n        }\r\n        \r\n        return [];\r\n      }\r\n\r\n      // Log detallado de cada venta encontrada\r\n      data.forEach((sale, index) => {\r\n        console.log(`Venta ${index + 1}:`);\r\n        console.log(`  - ID: ${sale.id}`);\r\n        console.log(`  - Fecha: ${sale.fecha}`);\r\n        console.log(`  - Sucursal: ${sale.sucursal}`);\r\n        console.log(`  - Sorteo: ${sale.sorteo}`);\r\n        console.log(`  - Total: ${sale.total}`);\r\n        console.log(`  - Correlativo: ${sale.correlativo}`);\r\n        console.log(`  - Numero Recibo: ${sale.numero_recibo}`);\r\n      });\r\n\r\n      const mappedSales = data.map(sale => ({\r\n        id: sale.id,\r\n        userId: sale.user_id,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: new Date(sale.fecha),\r\n        total: sale.total,\r\n        numeroRecibo: sale.numero_recibo || sale.id.slice(-6),\r\n        correlativo: sale.correlativo || 0,\r\n        createdAt: new Date(sale.created_at)\r\n      })) as Sale[];\r\n\r\n      console.log('=== VENTAS MAPEADAS EXITOSAMENTE ===');\r\n      console.log('Total de ventas devueltas:', mappedSales.length);\r\n\r\n      return mappedSales;\r\n    } catch (error) {\r\n      console.error('=== ERROR EN getSalesByDateAndSorteo ===');\r\n      console.error('Error completo:', error);\r\n      console.error('Fecha:', fecha);\r\n      console.error('Sorteo:', sorteo);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getSaleDetails(saleId: string): Promise<SaleDetail[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .select('*')\r\n        .eq('sale_id', saleId);\r\n\r\n      if (error) throw error;\r\n\r\n      return data.map(detail => ({\r\n        id: detail.id,\r\n        saleId: detail.sale_id,\r\n        numero: parseInt(detail.numero), // Convertir string a número para la interfaz\r\n        monto: detail.monto\r\n      })) as SaleDetail[];\r\n    } catch (error) {\r\n      console.error('Error obteniendo detalles de venta:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Sorteos\r\n  async createOrUpdateSorteo(sorteo: Omit<Sorteo, 'id'>): Promise<string> {\r\n    try {\r\n      const sorteoId = `${sorteo.fecha.toDateString()}-${sorteo.sorteo}`;\r\n      \r\n      // Convertir el número ganador a string con formato de 2 dígitos\r\n      const numeroGanadorString = (sorteo.numeroGanador ?? 0).toString().padStart(2, '0');\r\n      \r\n      const sorteoData = {\r\n        id: sorteoId,\r\n        fecha: sorteo.fecha.toISOString(),\r\n        sorteo: sorteo.sorteo,\r\n        hora_cierre: sorteo.horaCierre.toISOString(),\r\n        numero_ganador: numeroGanadorString,\r\n        factor_multiplicador: sorteo.factorMultiplicador,\r\n        total_vendido: sorteo.totalVendido,\r\n        total_pagado: sorteo.totalPagado,\r\n        ganancia_neta: sorteo.gananciaNeta,\r\n        cerrado: sorteo.cerrado\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .upsert([sorteoData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      console.error('Error creando/actualizando sorteo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getSorteo(fecha: Date, sorteo: string): Promise<Sorteo | null> {\r\n    try {\r\n      const sorteoId = `${fecha.toDateString()}-${sorteo}`;\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No se encontró el registro\r\n          return null;\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      return {\r\n        id: data.id,\r\n        fecha: new Date(data.fecha),\r\n        sorteo: data.sorteo,\r\n        horaCierre: new Date(data.hora_cierre),\r\n        // Convertir string a número para la interfaz\r\n        numeroGanador: parseInt(data.numero_ganador) || 0,\r\n        factorMultiplicador: data.factor_multiplicador,\r\n        totalVendido: data.total_vendido,\r\n        totalPagado: data.total_pagado,\r\n        gananciaNeta: data.ganancia_neta,\r\n        cerrado: data.cerrado\r\n      } as Sorteo;\r\n    } catch (error) {\r\n      console.error('Error obteniendo sorteo:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async updateSorteoWinner(sorteoId: string, numeroGanador: number, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n      // Convertir el número a string con formato de 2 dígitos\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n      \r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          cerrado: true\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error('Error actualizando ganador:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async calculateSorteoWinnings(sorteoId: string): Promise<void> {\r\n    try {\r\n      // Obtener el sorteo\r\n      const { data: sorteo, error: sorteoError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (sorteoError) throw sorteoError;\r\n      if (!sorteo.numero_ganador) return;\r\n\r\n      // Obtener todas las ventas del sorteo\r\n      const { data: sales, error: salesError } = await this.supabase\r\n        .from('sales')\r\n        .select('*, sale_details(*)')\r\n        .eq('sorteo', sorteo.sorteo)\r\n        .gte('fecha', new Date(sorteo.fecha).toISOString().split('T')[0])\r\n        .lt('fecha', new Date(new Date(sorteo.fecha).getTime() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]);\r\n\r\n      if (salesError) throw salesError;\r\n\r\n      // Calcular total vendido\r\n      let totalVendido = 0;\r\n      let totalPagado = 0;\r\n\r\n      for (const sale of sales) {\r\n        for (const detail of sale.sale_details) {\r\n          totalVendido += detail.monto;\r\n          \r\n          // Comparar números como strings (ambos deberían estar en formato \"00\", \"01\", etc.)\r\n          if (detail.numero === sorteo.numero_ganador) {\r\n            totalPagado += detail.monto * sorteo.factor_multiplicador;\r\n          }\r\n        }\r\n      }\r\n\r\n      const gananciaNeta = totalVendido - totalPagado;\r\n\r\n      // Actualizar el sorteo con los cálculos\r\n      const { error: updateError } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          total_vendido: totalVendido,\r\n          total_pagado: totalPagado,\r\n          ganancia_neta: gananciaNeta\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (updateError) throw updateError;\r\n    } catch (error) {\r\n      console.error('Error calculando ganancias:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método de debug para verificar conexión y datos\r\n  async debugSalesData(): Promise<void> {\r\n    try {\r\n      console.log('=== DEBUG SALES DATA ===');\r\n      console.log('Supabase URL:', environment.supabase.url);\r\n      console.log('Fecha actual:', new Date().toISOString());\r\n\r\n      // Verificar conexión básica\r\n      const { data: tablesData, error: tablesError } = await this.supabase\r\n        .from('sales')\r\n        .select('count(*)', { count: 'exact', head: true });\r\n\r\n      if (tablesError) {\r\n        console.error('Error verificando tabla sales:', tablesError);\r\n        return;\r\n      }\r\n\r\n      console.log('Total de ventas en la tabla:', tablesData);\r\n\r\n      // Verificar ventas de hoy sin filtros\r\n      const today = new Date();\r\n      const startOfDay = new Date(today);\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date(today);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n\r\n      console.log('Rango de fechas para hoy:');\r\n      console.log('Inicio del día:', startOfDay.toISOString());\r\n      console.log('Final del día:', endOfDay.toISOString());\r\n\r\n      const { data: todayData, error: todayError } = await this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', startOfDay.toISOString())\r\n        .lte('fecha', endOfDay.toISOString());\r\n\r\n      if (todayError) {\r\n        console.error('Error obteniendo ventas de hoy:', todayError);\r\n        return;\r\n      }\r\n\r\n      console.log('Ventas encontradas para hoy:', todayData?.length || 0);\r\n      if (todayData && todayData.length > 0) {\r\n        console.log('Primera venta encontrada:', todayData[0]);\r\n      }\r\n\r\n      // Verificar ventas de los últimos 3 días\r\n      const threeDaysAgo = new Date(today);\r\n      threeDaysAgo.setDate(threeDaysAgo.getDate() - 3);\r\n      threeDaysAgo.setHours(0, 0, 0, 0);\r\n\r\n      const { data: recentData, error: recentError } = await this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', threeDaysAgo.toISOString())\r\n        .order('created_at', { ascending: false })\r\n        .limit(10);\r\n\r\n      if (recentError) {\r\n        console.error('Error obteniendo ventas recientes:', recentError);\r\n        return;\r\n      }\r\n\r\n      console.log('Ventas de los últimos 3 días:', recentData?.length || 0);\r\n      if (recentData && recentData.length > 0) {\r\n        console.log('Ventas recientes encontradas:');\r\n        recentData.forEach((sale, index) => {\r\n          console.log(`${index + 1}. ID: ${sale.id}, Fecha: ${sale.fecha}, Sucursal: ${sale.sucursal}, Total: ${sale.total}`);\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error en debug de datos de ventas:', error);\r\n    }\r\n  }\r\n\r\n  // Método para verificar permisos y políticas RLS\r\n  async checkDatabasePermissions(): Promise<void> {\r\n    try {\r\n      console.log('=== VERIFICANDO PERMISOS DE BASE DE DATOS ===');\r\n      \r\n      // Verificar sesión actual\r\n      const { data: session, error: sessionError } = await this.supabase.auth.getSession();\r\n      if (sessionError) {\r\n        console.error('Error obteniendo sesión:', sessionError);\r\n        return;\r\n      }\r\n      \r\n      console.log('Usuario autenticado:', session?.session?.user?.id || 'NO AUTENTICADO');\r\n      console.log('Email del usuario:', session?.session?.user?.email || 'SIN EMAIL');\r\n      \r\n      // Probar consulta simple a la tabla sales\r\n      console.log('Probando consulta simple a tabla sales...');\r\n      const { data: simpleQuery, error: simpleError } = await this.supabase\r\n        .from('sales')\r\n        .select('id, sucursal, created_at')\r\n        .limit(1);\r\n      \r\n      if (simpleError) {\r\n        console.error('Error en consulta simple:', simpleError);\r\n        console.error('Código de error:', simpleError.code);\r\n        console.error('Detalles:', simpleError.details);\r\n        console.error('Mensaje:', simpleError.message);\r\n      } else {\r\n        console.log('Consulta simple exitosa, resultado:', simpleQuery);\r\n      }\r\n      \r\n      // Probar inserción de test (para verificar permisos de escritura)\r\n      console.log('Probando permisos de escritura...');\r\n      const testSale = {\r\n        user_id: session?.session?.user?.id || 'test-user',\r\n        sucursal: 'TEST',\r\n        sorteo: 'test',\r\n        fecha: new Date().toISOString(),\r\n        total: 0,\r\n        numero_recibo: 'TEST-001',\r\n        correlativo: 999\r\n      };\r\n      \r\n      const { data: insertTest, error: insertError } = await this.supabase\r\n        .from('sales')\r\n        .insert(testSale)\r\n        .select();\r\n      \r\n      if (insertError) {\r\n        console.error('Error en inserción de prueba:', insertError);\r\n      } else {\r\n        console.log('Inserción de prueba exitosa:', insertTest);\r\n        \r\n        // Eliminar el registro de prueba\r\n        if (insertTest && insertTest.length > 0) {\r\n          await this.supabase\r\n            .from('sales')\r\n            .delete()\r\n            .eq('id', insertTest[0].id);\r\n          console.log('Registro de prueba eliminado');\r\n        }\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error verificando permisos:', error);\r\n    }\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n   supabase: {\r\n    url: 'https://oxuhcoubrpupjmjvyzbv.supabase.co',\r\n    key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im94dWhjb3VicnB1cGptanZ5emJ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI3MTc1NDIsImV4cCI6MjA2ODI5MzU0Mn0.dvWlnt9WQpxSEU7QD4qm-r62Ggd_P_0BMwKB9zR-9o4'\r\n  }\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));"],"names":["AppComponent","constructor","supabaseService","router","ngOnInit","currentUser$","subscribe","user","url","includes","navigate","i0","ɵɵdirectiveInject","i1","SupabaseService","i2","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","FormsModule","RouterModule","CommonModule","LoginComponent","SucursalComponent","AdminComponent","AuthGuard","AdminGuard","routes","path","redirectTo","pathMatch","component","canActivate","AppModule","bootstrap","imports","forRoot","declarations","ɵɵtext","ɵɵproperty","sorteo_r2","name","ɵɵadvance","ɵɵtextInterpolate","label","tmp_7_0","ctx_r3","getSorteoData","sorteo_r3","numeroGanador","ɵɵtextInterpolate1","tmp_8_0","factorMultiplicador","tmp_9_0","totalVendido","toFixed","tmp_10_0","totalPagado","ɵɵclassProp","tmp_11_0","gananciaNeta","tmp_12_0","tmp_13_0","ɵɵtwoWayListener","AdminComponent_div_72_ng_template_11_div_0_Template_input_ngModelChange_4_listener","$event","ɵɵrestoreView","_r5","ɵɵnextContext","$implicit","ɵɵtwoWayBindingSet","winningNumbers","ɵɵresetView","AdminComponent_div_72_ng_template_11_div_0_Template_input_ngModelChange_8_listener","ɵɵlistener","AdminComponent_div_72_ng_template_11_div_0_Template_button_click_9_listener","setWinningNumber","ɵɵtwoWayProperty","isLoading","ɵɵtemplate","AdminComponent_div_72_ng_template_11_div_0_Template","AdminComponent_div_72_ng_template_11_div_1_Template","isSorteoOpen","AdminComponent_div_72_div_10_Template","AdminComponent_div_72_ng_template_11_Template","ɵɵtemplateRefExtractor","closeTime","setWinner_r6","AdminComponent_div_85_div_16_Template_button_click_12_listener","sale_r8","_r7","verDetalles","AdminComponent_div_85_div_16_Template_button_click_14_listener","reprintReceipt","formatDateTime","createdAt","sucursal","sorteo","total","numeroRecibo","id","slice","AdminComponent_div_85_div_16_Template","sales","trackBySale","AdminComponent_div_97_div_14_Template_button_click_11_listener","user_r10","_r9","editUser","AdminComponent_div_97_div_14_Template_button_click_13_listener","toggleUserStatus","email","role","active","AdminComponent_div_97_div_14_Template","users","trackByUser","AdminComponent_div_117_Template_input_ngModelChange_3_listener","_r11","userFormData","password","AdminComponent_div_126_Template_input_ngModelChange_3_listener","_r12","sorteoService","notificationService","printService","currentUser","sorteos","getAllSorteos","saleDetails","sorteosData","selectedSorteoFilter","selectedDate","fechaDesde","fechaHasta","showUserModal","editingUser","today","Date","toISOString","split","startOfDay","setHours","endOfDay","loadSales","loadSorteosData","loadUsers","toDateString","_this","_asyncToGenerator","selectedDateObj","getSalesByDateAndSorteo","sale","getSaleDetails","error","console","_this2","sorteoData","getSorteo","saleId","_this3","winningNumber","multiplicador","alert","sorteoId","updateSorteoWinner","calculateSorteoResults","_x","_x2","_this4","sorteoSales","details","detail","numero","monto","hours","minutes","horaCierre","parseInt","createOrUpdateSorteo","fecha","cerrado","apply","arguments","getTotalSales","reduce","getSucursalSummary","summary","count","Object","entries","map","data","getTotalVendido","getTotalPagado","values","getGananciaNeta","getTotalVentas","length","aplicarFiltros","loadSalesByDateRange","limpiarFiltros","onFiltroFechaChange","_this5","fechaDesdeDate","fechaHastaDate","allSales","currentDate","daySales","setDate","getDate","showError","log","closeUserModal","saveUser","_this6","showSuccess","deleteUser","userId","_this7","confirmed","showConfirmation","onDateChange","onSorteoFilterChange","generateDailyReport","reportDate","_this8","warn","generateThermalReceipt","logout","_this9","dateInput","date","toLocaleString","year","month","day","hour","minute","exportarVentas","exportarVentasExcel","generateVentasReportExcel","exportarVentasPDF","generateVentasReportPDF","index","toString","numeros","d","padStart","join","mensaje","correlativo","createUser","csvContent","blob","Blob","type","link","document","createElement","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","sorteoFilter","generateVentasReport","onFactorChange","sorteoName","event","target","value","SorteoService","i3","NotificationService","i4","PrintService","i5","AdminComponent_Template","AdminComponent_Template_button_click_6_listener","_r1","AdminComponent_Template_input_ngModelChange_13_listener","AdminComponent_Template_input_change_13_listener","AdminComponent_Template_input_ngModelChange_17_listener","AdminComponent_Template_input_change_17_listener","AdminComponent_Template_select_ngModelChange_21_listener","AdminComponent_Template_select_change_21_listener","AdminComponent_option_24_Template","AdminComponent_Template_button_click_26_listener","AdminComponent_Template_button_click_29_listener","AdminComponent_div_72_Template","AdminComponent_Template_button_click_79_listener","AdminComponent_Template_button_click_82_listener","AdminComponent_div_85_Template","AdminComponent_ng_template_86_Template","AdminComponent_Template_button_click_94_listener","AdminComponent_div_97_Template","AdminComponent_ng_template_98_Template","AdminComponent_Template_button_click_107_listener","AdminComponent_Template_input_ngModelChange_116_listener","AdminComponent_div_117_Template","AdminComponent_Template_select_ngModelChange_121_listener","AdminComponent_div_126_Template","AdminComponent_Template_input_ngModelChange_129_listener","AdminComponent_Template_button_click_133_listener","AdminComponent_Template_button_click_136_listener","noSales_r13","noUsers_r14","ɵɵstyleProp","userForm_r15","valid","ctx_r1","errorMessage","redirectUser","onLogin","showLoading","timeoutPromise","Promise","_","reject","setTimeout","Error","loginPromise","login","race","getErrorMessage","hideLoading","message","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_9_listener","LoginComponent_Template_input_ngModelChange_13_listener","LoginComponent_div_14_Template","loginForm_r3","timeUntilClose","SucursalComponent_div_12_div_4_span_5_Template","SucursalComponent_div_12_div_4_span_6_Template","currentSorteo","SucursalComponent_div_12_Template_button_click_2_listener","openNumberModal","SucursalComponent_div_12_div_4_Template","SucursalComponent_div_12_div_5_Template","isBlocked","SucursalComponent_div_13_div_9_Template_button_click_6_listener","i_r5","_r4","removeNumber","item_r6","SucursalComponent_div_13_div_9_Template","SucursalComponent_div_13_Template_button_click_11_listener","_r3","SucursalComponent_div_13_Template_button_click_14_listener","processSale","selectedNumbers","trackByIndex","ɵɵtextInterpolate2","detail_r8","SucursalComponent_div_14_div_7_span_9_Template","SucursalComponent_div_14_div_7_Template_button_click_13_listener","sale_r9","formatTime","trackByDetailId","SucursalComponent_div_14_div_7_Template","getFilteredSales","trackBySaleId","cdr","selectedNumber","selectedAmount","todaySales","recentSales","filteredSales","filterDate","numberInput","showKeypad","currentInput","showNumberModal","showAmountModal","showConfirmModal","tempNumber","tempAmount","modalNumberInput","modalAmountInput","isProcessingModal","userSubscription","initializeComponent","checkTimeRestrictions","timeCheckInterval","setInterval","ngOnDestroy","unsubscribe","sorteoUpdateInterval","clearInterval","updateSorteoInfo","loadTodaySales","loadRecentSales","setFilterDate","onFilterDateChange","filterSales","filterDateObj","filter","saleDate","getCurrentSorteo","getTimeUntilClose","addNumber","existingIndex","findIndex","n","push","splice","detectChanges","generateReceiptNumber","now","getFullYear","getMonth","sucursalCode","replace","toUpperCase","substring","correlativoFormatted","getTotal","item","getNextCorrelativo","JSON","stringify","createSale","detailId","createSaleDetail","saleWithId","detailsPromise","pressNumber","num","clearNumber","acceptNumber","showInfo","parseFloat","closeAllModals","pressModalNumber","clearModalNumber","acceptModalNumber","formattedNumber","pressModalAmount","clearModalAmount","acceptModalAmount","confirmAddNumber","cancelAddNumber","timeDiff","getTime","minutesLeft","Math","floor","showWarning","getTodayDate","toLocaleDateString","weekday","dateObj","toLocaleTimeString","hour12","debugModalState","toggleBloqueo","estado","debugSalesData","checkDatabasePermissions","keys","yesterday","yesterdaySales","tomorrow","tomorrowSales","ChangeDetectorRef","SucursalComponent_Template","SucursalComponent_Template_button_click_2_listener","SucursalComponent_Template_button_click_4_listener","SucursalComponent_Template_button_click_9_listener","SucursalComponent_div_12_Template","SucursalComponent_div_13_Template","SucursalComponent_div_14_Template","SucursalComponent_Template_div_click_15_listener","SucursalComponent_Template_div_click_16_listener","stopPropagation","SucursalComponent_Template_button_click_22_listener","SucursalComponent_Template_button_click_34_listener","SucursalComponent_Template_button_click_36_listener","SucursalComponent_Template_button_click_38_listener","SucursalComponent_Template_button_click_41_listener","SucursalComponent_Template_button_click_43_listener","SucursalComponent_Template_button_click_45_listener","SucursalComponent_Template_button_click_48_listener","SucursalComponent_Template_button_click_50_listener","SucursalComponent_Template_button_click_52_listener","SucursalComponent_Template_button_click_55_listener","SucursalComponent_Template_button_click_57_listener","SucursalComponent_Template_button_click_59_listener","SucursalComponent_Template_div_click_61_listener","SucursalComponent_Template_div_click_62_listener","SucursalComponent_Template_button_click_68_listener","SucursalComponent_Template_button_click_80_listener","SucursalComponent_Template_button_click_82_listener","SucursalComponent_Template_button_click_84_listener","SucursalComponent_Template_button_click_87_listener","SucursalComponent_Template_button_click_89_listener","SucursalComponent_Template_button_click_91_listener","SucursalComponent_Template_button_click_94_listener","SucursalComponent_Template_button_click_96_listener","SucursalComponent_Template_button_click_98_listener","SucursalComponent_Template_button_click_101_listener","SucursalComponent_Template_button_click_103_listener","SucursalComponent_Template_button_click_105_listener","SucursalComponent_Template_div_click_107_listener","SucursalComponent_Template_div_click_108_listener","SucursalComponent_Template_button_click_114_listener","SucursalComponent_Template_button_click_125_listener","SucursalComponent_Template_button_click_128_listener","tap","timeout","catchError","of","pipe","isAdmin","ɵɵinject","factory","ɵfac","providedIn","isAuthenticated","SORTEO_SCHEDULES","Swal","loadingInstance","title","text","fire","icon","confirmButtonText","confirmButtonColor","cancelButtonText","result","showCancelButton","cancelButtonColor","isConfirmed","allowOutsideClick","allowEscapeKey","showConfirmButton","didOpen","close","jsPDF","autoTable","pdf","orientation","unit","format","y","lineHeight","setFontSize","align","line","pdfData","output","printWindow","window","open","onload","focus","print","printError","checkClosed","closed","revokeObjectURL","printFrame","display","src","contentWindow","generateTestReceipt","testSale","testDetails","yPos","sorteoSummary","calculateSorteoSummary","totalGeneral","sum","save","filters","doc","setFillColor","rect","setTextColor","setFont","setDrawColor","fechaTexto","sucursalTotals","forEach","fillColor","tableData","numerosText","fechaHoraStr","startY","head","theme","headStyles","textColor","fontSize","fontStyle","halign","bodyStyles","cellPadding","columnStyles","cellWidth","alternateRowStyles","margin","left","right","didDrawPage","pageNumber","fileName","currentTime","getHours","getMinutes","getNextSorteo","diff","hoursLeft","createClient","environment","BehaviorSubject","currentUserSubject","asObservable","supabase","key","initializeSession","auth","onAuthStateChange","_ref","session","userData","next","loadUserDataInBackground","getSession","uid","queryPromise","from","select","eq","single","updatedUser","created_at","signInWithPassword","getUserData","signOut","testConnection","limit","authUser","authError","getUser","defaultUserData","dbError","allError","order","ascending","gte","lte","nextCorrelativo","todayWithCorrectTime","getSeconds","saleData","user_id","numero_recibo","insert","_this0","undefined","numeroString","detailData","sale_id","Number","_this1","query","trim","debugData","debugError","mappedSales","_this10","_this11","numeroGanadorString","hora_cierre","numero_ganador","factor_multiplicador","total_vendido","total_pagado","ganancia_neta","upsert","_this12","code","_this13","update","calculateSorteoWinnings","_this14","sorteoError","salesError","lt","sale_details","updateError","_this15","tablesData","tablesError","todayData","todayError","threeDaysAgo","recentData","recentError","_this16","sessionError","simpleQuery","simpleError","insertTest","insertError","delete","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}