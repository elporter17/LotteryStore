{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/login/login.component.ts","./src/app/components/sucursal/sucursal.component.ts","./src/app/components/sucursal/sucursal.component.html","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/models/interfaces.ts","./src/app/services/notification.service.ts","./src/app/services/print.service.ts","./src/app/services/sorteo.service.ts","./src/app/services/supabase.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SupabaseService } from './services/supabase.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"app-container\">\n      <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: [`\n    .app-container {\n      min-height: 100vh;\n      background-color: #f5f5f5;\n    }\n  `]\n})\nexport class AppComponent implements OnInit {\n  \n  constructor(\n    private supabaseService: SupabaseService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // Verificar estado de autenticación al iniciar\n    this.supabaseService.currentUser$.subscribe(user => {\n      if (!user && !this.router.url.includes('login')) {\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SucursalComponent } from './components/sucursal/sucursal.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminGuard } from './guards/admin.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'sucursal', component: SucursalComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard, AdminGuard] },\n  { path: '**', redirectTo: '/login' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SucursalComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [ AuthGuard, AdminGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoService } from '../../services/sorteo.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail, Sorteo } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  currentUser: any = null;\r\n  sorteos = this.sorteoService.getAllSorteos();\r\n  sales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  sorteosData: { [key: string]: Sorteo } = {};\r\n  winningNumbers: { [key: string]: number } = {};\r\n  factorMultiplicador: { [key: string]: number } = {};\r\n  selectedSorteoFilter: string = '';\r\n  isLoading: boolean = false;\r\n  selectedDate: string = '';\r\n\r\n  // Nuevas propiedades para las mejoras\r\n  fechaDesde: string = '';\r\n  fechaHasta: string = '';\r\n  users: any[] = [];\r\n  showUserModal: boolean = false;\r\n  editingUser: any = null;\r\n  userFormData: any = {\r\n    email: '',\r\n    password: '',\r\n    role: 'sucursal',\r\n    sucursal: '',\r\n    active: true\r\n  };\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private sorteoService: SorteoService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private router: Router\r\n  ) {\r\n    const today = new Date();\r\n    this.selectedDate = today.toISOString().split('T')[0];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'admin') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    this.loadSales();\r\n    this.loadSorteosData();\r\n    this.loadUsers();\r\n  }\r\n\r\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\r\n    return this.sorteoService.isSorteoOpen(sorteo);\r\n  }\r\n\r\n  getSorteoData(sorteo: SorteoSchedule): Sorteo | undefined {\r\n    const today = new Date().toDateString();\r\n    return this.sorteosData[`${today}-${sorteo.name}`];\r\n  }\r\n\r\n  async loadSales(): Promise<void> {\r\n    try {\r\n      const selectedDateObj = this.selectedDate ? new Date(this.selectedDate) : new Date();\r\n      this.sales = await this.supabaseService.getSalesByDateAndSorteo(selectedDateObj, this.selectedSorteoFilter);\r\n      \r\n      // Cargar detalles de cada venta\r\n      for (const sale of this.sales) {\r\n        this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando ventas:', error);\r\n    }\r\n  }\r\n\r\n  async loadSorteosData(): Promise<void> {\r\n    try {\r\n      const today = new Date();\r\n      for (const sorteo of this.sorteos) {\r\n        const sorteoData = await this.supabaseService.getSorteo(today, sorteo.name);\r\n        if (sorteoData) {\r\n          this.sorteosData[sorteoData.id] = sorteoData;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando datos de sorteos:', error);\r\n    }\r\n  }\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async setWinningNumber(sorteo: SorteoSchedule): Promise<void> {\r\n    const winningNumber = this.winningNumbers[sorteo.name];\r\n    const multiplicador = this.factorMultiplicador[sorteo.name] || 70;\r\n    \r\n    if (!winningNumber) {\r\n      alert('Por favor ingrese un número ganador');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const today = new Date();\r\n      const sorteoId = `${today.toDateString()}-${sorteo.name}`;\r\n      \r\n      await this.supabaseService.updateSorteoWinner(sorteoId, winningNumber, multiplicador);\r\n      \r\n      // Recalcular totales\r\n      await this.calculateSorteoResults(sorteo, winningNumber, multiplicador);\r\n      \r\n      // Recargar datos\r\n      await this.loadSorteosData();\r\n      \r\n      alert('Número ganador establecido correctamente');\r\n    } catch (error) {\r\n      console.error('Error estableciendo número ganador:', error);\r\n      alert('Error al establecer el número ganador');\r\n    }\r\n  }\r\n\r\n  private async calculateSorteoResults(sorteo: SorteoSchedule, winningNumber: number, multiplicador: number = 70): Promise<void> {\r\n    const today = new Date();\r\n    const sorteoSales = await this.supabaseService.getSalesByDateAndSorteo(today, sorteo.name);\r\n    \r\n    let totalVendido = 0;\r\n    let totalPagado = 0;\r\n    \r\n    for (const sale of sorteoSales) {\r\n      totalVendido += sale.total;\r\n      \r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n      for (const detail of details) {\r\n        if (detail.numero === winningNumber) {\r\n          totalPagado += detail.monto * multiplicador;\r\n        }\r\n      }\r\n    }\r\n    \r\n    const gananciaNeta = totalVendido - totalPagado;\r\n    \r\n    // Actualizar o crear sorteo\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const horaCierre = new Date();\r\n    horaCierre.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    await this.supabaseService.createOrUpdateSorteo({\r\n      fecha: today,\r\n      sorteo: sorteo.name,\r\n      horaCierre,\r\n      numeroGanador: winningNumber,\r\n      factorMultiplicador: multiplicador,\r\n      totalVendido,\r\n      totalPagado,\r\n      gananciaNeta,\r\n      cerrado: true\r\n    });\r\n  }\r\n\r\n  getTotalSales(): number {\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getSucursalSummary(): { name: string, total: number, count: number }[] {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n    \r\n    for (const sale of this.sales) {\r\n      if (!summary[sale.sucursal]) {\r\n        summary[sale.sucursal] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sucursal].total += sale.total;\r\n      summary[sale.sucursal].count += 1;\r\n    }\r\n    \r\n    return Object.entries(summary).map(([name, data]) => ({ \r\n      name, \r\n      total: data.total, \r\n      count: data.count \r\n    }));\r\n  }\r\n\r\n  // Métodos para cards de resumen\r\n  getTotalVendido(): number {\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getTotalPagado(): number {\r\n    return Object.values(this.sorteosData).reduce((total, sorteo) => total + (sorteo.totalPagado || 0), 0);\r\n  }\r\n\r\n  getGananciaNeta(): number {\r\n    return this.getTotalVendido() - this.getTotalPagado();\r\n  }\r\n\r\n  getTotalVentas(): number {\r\n    return this.sales.length;\r\n  }\r\n\r\n  // Métodos para filtros de fecha\r\n  aplicarFiltros(): void {\r\n    if (this.fechaDesde && this.fechaHasta) {\r\n      this.loadSalesByDateRange();\r\n    } else if (this.fechaDesde) {\r\n      this.selectedDate = this.fechaDesde;\r\n      this.loadSales();\r\n    } else {\r\n      this.loadSales();\r\n    }\r\n  }\r\n\r\n  limpiarFiltros(): void {\r\n    const today = new Date();\r\n    this.fechaDesde = '';\r\n    this.fechaHasta = '';\r\n    this.selectedDate = today.toISOString().split('T')[0];\r\n    this.selectedSorteoFilter = '';\r\n    this.loadSales();\r\n  }\r\n\r\n  onFiltroFechaChange(): void {\r\n    // Auto-aplicar filtros cuando cambian las fechas\r\n    this.aplicarFiltros();\r\n  }\r\n\r\n  async loadSalesByDateRange(): Promise<void> {\r\n    if (!this.fechaDesde || !this.fechaHasta) return;\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      const fechaDesdeDate = new Date(this.fechaDesde);\r\n      const fechaHastaDate = new Date(this.fechaHasta);\r\n      \r\n      // Cargar ventas para cada día en el rango\r\n      let allSales: Sale[] = [];\r\n      let currentDate = new Date(fechaDesdeDate);\r\n      \r\n      while (currentDate <= fechaHastaDate) {\r\n        const daySales = await this.supabaseService.getSalesByDateAndSorteo(currentDate, this.selectedSorteoFilter);\r\n        allSales = [...allSales, ...daySales];\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n      }\r\n\r\n      this.sales = allSales;\r\n      \r\n      // Cargar detalles de todas las ventas\r\n      for (const sale of this.sales) {\r\n        this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando ventas por rango:', error);\r\n      this.notificationService.showError('Error al cargar las ventas');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Gestión de usuarios\r\n  async loadUsers(): Promise<void> {\r\n    try {\r\n      // Implementar método en SupabaseService para cargar usuarios\r\n      // this.users = await this.supabaseService.getUsers();\r\n      console.log('Cargando usuarios...');\r\n    } catch (error) {\r\n      console.error('Error cargando usuarios:', error);\r\n    }\r\n  }\r\n\r\n  closeUserModal(): void {\r\n    this.showUserModal = false;\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n  }\r\n\r\n  editUser(user: any): void {\r\n    this.editingUser = user;\r\n    this.userFormData = { ...user };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  async saveUser(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      \r\n      if (this.editingUser) {\r\n        // Actualizar usuario existente\r\n        console.log('Actualizando usuario:', this.userFormData);\r\n        this.notificationService.showSuccess('Usuario actualizado exitosamente');\r\n      } else {\r\n        // Crear nuevo usuario\r\n        console.log('Creando usuario:', this.userFormData);\r\n        this.notificationService.showSuccess('Usuario creado exitosamente');\r\n      }\r\n      \r\n      this.closeUserModal();\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      console.error('Error guardando usuario:', error);\r\n      this.notificationService.showError('Error al guardar el usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async deleteUser(userId: string): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Eliminar Usuario',\r\n      '¿Está seguro que desea eliminar este usuario?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      try {\r\n        this.isLoading = true;\r\n        // Implementar eliminación en SupabaseService\r\n        console.log('Eliminando usuario:', userId);\r\n        this.notificationService.showSuccess('Usuario eliminado exitosamente');\r\n        await this.loadUsers();\r\n      } catch (error) {\r\n        console.error('Error eliminando usuario:', error);\r\n        this.notificationService.showError('Error al eliminar el usuario');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  onDateChange(): void {\r\n    this.loadSales();\r\n  }\r\n\r\n  onSorteoFilterChange(): void {\r\n    this.loadSales();\r\n  }\r\n\r\n  generateDailyReport(): void {\r\n    const reportDate = this.selectedDate ? new Date(this.selectedDate) : new Date();\r\n    this.printService.generateDailyReport(this.sales, reportDate);\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    await this.supabaseService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  onFactorChange(sorteoName: string, event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    if (target && target.value) {\r\n      this.factorMultiplicador[sorteoName] = +target.value;\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n    <h2><i class=\"fas fa-cog\"></i> Panel de Administración</h2>\r\n    <button class=\"btn btn-danger\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n      <i class=\"fas fa-sign-out-alt\"></i> Cerrar Sesión\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Cards de Resumen General -->\r\n  <div class=\"row mb-4\">\r\n    <div class=\"col-md-3 mb-3\">\r\n      <div class=\"card summary-card bg-primary text-white\">\r\n        <div class=\"card-body\">\r\n          <div class=\"d-flex justify-content-between\">\r\n            <div>\r\n              <h6 class=\"card-title\"><i class=\"fas fa-money-bill-wave\"></i> Total Vendido</h6>\r\n              <h4>L. {{ getTotalVendido().toFixed(2) }}</h4>\r\n            </div>\r\n            <div class=\"card-icon\">\r\n              <i class=\"fas fa-chart-line fa-2x\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col-md-3 mb-3\">\r\n      <div class=\"card summary-card bg-warning text-white\">\r\n        <div class=\"card-body\">\r\n          <div class=\"d-flex justify-content-between\">\r\n            <div>\r\n              <h6 class=\"card-title\"><i class=\"fas fa-trophy\"></i> Total Pagado</h6>\r\n              <h4>L. {{ getTotalPagado().toFixed(2) }}</h4>\r\n            </div>\r\n            <div class=\"card-icon\">\r\n              <i class=\"fas fa-coins fa-2x\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col-md-3 mb-3\">\r\n      <div class=\"card summary-card\" [class.bg-success]=\"getGananciaNeta() > 0\" [class.bg-danger]=\"getGananciaNeta() < 0\" class=\"text-white\">\r\n        <div class=\"card-body\">\r\n          <div class=\"d-flex justify-content-between\">\r\n            <div>\r\n              <h6 class=\"card-title\"><i class=\"fas fa-chart-pie\"></i> Ganancia Neta</h6>\r\n              <h4>L. {{ getGananciaNeta().toFixed(2) }}</h4>\r\n            </div>\r\n            <div class=\"card-icon\">\r\n              <i class=\"fas fa-piggy-bank fa-2x\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col-md-3 mb-3\">\r\n      <div class=\"card summary-card bg-info text-white\">\r\n        <div class=\"card-body\">\r\n          <div class=\"d-flex justify-content-between\">\r\n            <div>\r\n              <h6 class=\"card-title\"><i class=\"fas fa-ticket-alt\"></i> Ventas Totales</h6>\r\n              <h4>{{ getTotalVentas() }}</h4>\r\n            </div>\r\n            <div class=\"card-icon\">\r\n              <i class=\"fas fa-shopping-cart fa-2x\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filtro de Fechas -->\r\n  <div class=\"row mb-4\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n          <h5><i class=\"fas fa-filter\"></i> Filtros de Fecha</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n              <label for=\"fechaDesde\"><i class=\"fas fa-calendar-alt\"></i> Fecha Desde:</label>\r\n              <input type=\"date\" id=\"fechaDesde\" class=\"form-control\" \r\n                     [(ngModel)]=\"fechaDesde\" (change)=\"onFiltroFechaChange()\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n              <label for=\"fechaHasta\"><i class=\"fas fa-calendar-alt\"></i> Fecha Hasta:</label>\r\n              <input type=\"date\" id=\"fechaHasta\" class=\"form-control\" \r\n                     [(ngModel)]=\"fechaHasta\" (change)=\"onFiltroFechaChange()\">\r\n            </div>\r\n            <div class=\"col-md-4 d-flex align-items-end\">\r\n              <button class=\"btn btn-primary me-2\" (click)=\"aplicarFiltros()\">\r\n                <i class=\"fas fa-search\"></i> Aplicar Filtros\r\n              </button>\r\n              <button class=\"btn btn-secondary\" (click)=\"limpiarFiltros()\">\r\n                <i class=\"fas fa-eraser\"></i> Limpiar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Controles de Sorteo -->\r\n  <div class=\"row mb-4\">\r\n    <div *ngFor=\"let sorteo of sorteos\" class=\"col-md-4 mb-3\">\r\n      <div class=\"card sorteo-card\">\r\n        <div class=\"card-header\">\r\n          <h4><i class=\"fas fa-dice\"></i> {{ sorteo.label }}</h4>\r\n          <p class=\"mb-0\">Cierra: {{ sorteo.closeTime }}</p>\r\n          <span class=\"badge\" [class.badge-success]=\"isSorteoOpen(sorteo)\" [class.badge-danger]=\"!isSorteoOpen(sorteo)\">\r\n            {{ isSorteoOpen(sorteo) ? 'Abierto' : 'Cerrado' }}\r\n          </span>\r\n        </div>\r\n        \r\n        <div class=\"card-body\">\r\n          <div *ngIf=\"getSorteoData(sorteo)?.numeroGanador; else setWinner\">\r\n            <div class=\"winner-display\">\r\n              <h3><i class=\"fas fa-trophy\"></i> Ganador: {{ getSorteoData(sorteo)?.numeroGanador }}</h3>\r\n              <p>Factor: {{ getSorteoData(sorteo)?.factorMultiplicador || 70 }}</p>\r\n              <div class=\"results\">\r\n                <div class=\"result-item\">\r\n                  <strong>Vendido:</strong> L. {{ getSorteoData(sorteo)?.totalVendido?.toFixed(2) || '0.00' }}\r\n                </div>\r\n                <div class=\"result-item\">\r\n                  <strong>Pagado:</strong> L. {{ getSorteoData(sorteo)?.totalPagado?.toFixed(2) || '0.00' }}\r\n                </div>\r\n                <div class=\"result-item\" [class.text-success]=\"(getSorteoData(sorteo)?.gananciaNeta || 0) > 0\" \r\n                     [class.text-danger]=\"(getSorteoData(sorteo)?.gananciaNeta || 0) < 0\">\r\n                  <strong>Ganancia:</strong> L. {{ getSorteoData(sorteo)?.gananciaNeta?.toFixed(2) || '0.00' }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <ng-template #setWinner>\r\n            <div *ngIf=\"!isSorteoOpen(sorteo)\" class=\"winner-form\">\r\n              <div class=\"form-group\">\r\n                <label><i class=\"fas fa-hashtag\"></i> Número Ganador:</label>\r\n                <input type=\"number\" class=\"form-control\" min=\"1\" max=\"99\" \r\n                       [(ngModel)]=\"winningNumbers[sorteo.name]\" [disabled]=\"isLoading\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label><i class=\"fas fa-calculator\"></i> Factor Multiplicador:</label>\r\n                <input type=\"number\" class=\"form-control\" min=\"1\" max=\"100\" step=\"0.1\" \r\n                       [(ngModel)]=\"factorMultiplicador[sorteo.name]\" \r\n                       [value]=\"factorMultiplicador[sorteo.name] || 70\" [disabled]=\"isLoading\">\r\n              </div>\r\n              <button class=\"btn btn-success btn-block\" (click)=\"setWinningNumber(sorteo)\" \r\n                      [disabled]=\"!winningNumbers[sorteo.name] || isLoading\">\r\n                <i class=\"fas fa-check\"></i> Establecer Ganador\r\n              </button>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filtros -->\r\n  <div class=\"card mb-4\">\r\n    <div class=\"card-header\">\r\n      <h4><i class=\"fas fa-filter\"></i> Filtros</h4>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <label><i class=\"fas fa-calendar\"></i> Fecha:</label>\r\n          <input type=\"date\" class=\"form-control\" [(ngModel)]=\"selectedDate\" \r\n                 (change)=\"onDateChange()\" [disabled]=\"isLoading\">\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <label><i class=\"fas fa-filter\"></i> Sorteo:</label>\r\n          <select class=\"form-control\" [(ngModel)]=\"selectedSorteoFilter\" \r\n                  (change)=\"onSorteoFilterChange()\" [disabled]=\"isLoading\">\r\n            <option value=\"\">Todos los sorteos</option>\r\n            <option *ngFor=\"let sorteo of sorteos\" [value]=\"sorteo.name\">\r\n              {{ sorteo.label }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"col-md-4 d-flex align-items-end\">\r\n          <button class=\"btn btn-primary\" (click)=\"generateDailyReport()\" [disabled]=\"isLoading\">\r\n            <i class=\"fas fa-file-pdf\"></i> Generar Reporte\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Gestión de Usuarios -->\r\n  <div class=\"card mb-4\">\r\n    <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n      <h4><i class=\"fas fa-users\"></i> Gestión de Usuarios</h4>\r\n      <button class=\"btn btn-success\" (click)=\"showUserModal = true\">\r\n        <i class=\"fas fa-plus\"></i> Nuevo Usuario\r\n      </button>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th><i class=\"fas fa-envelope\"></i> Email</th>\r\n              <th><i class=\"fas fa-user-tag\"></i> Rol</th>\r\n              <th><i class=\"fas fa-store\"></i> Sucursal</th>\r\n              <th><i class=\"fas fa-toggle-on\"></i> Estado</th>\r\n              <th><i class=\"fas fa-cogs\"></i> Acciones</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let user of users\">\r\n              <td>{{ user.email }}</td>\r\n              <td>\r\n                <span class=\"badge\" [class.badge-success]=\"user.role === 'admin'\" [class.badge-primary]=\"user.role === 'sucursal'\">\r\n                  {{ user.role | titlecase }}\r\n                </span>\r\n              </td>\r\n              <td>{{ user.sucursal || 'N/A' }}</td>\r\n              <td>\r\n                <span class=\"badge\" [class.badge-success]=\"user.active\" [class.badge-danger]=\"!user.active\">\r\n                  {{ user.active ? 'Activo' : 'Inactivo' }}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                <button class=\"btn btn-sm btn-outline-primary me-1\" (click)=\"editUser(user)\">\r\n                  <i class=\"fas fa-edit\"></i>\r\n                </button>\r\n                <button class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteUser(user.id)\">\r\n                  <i class=\"fas fa-trash\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Ventas con Scroll -->\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h4><i class=\"fas fa-chart-line\"></i> Ventas</h4>\r\n      <div class=\"total-display\">\r\n        <strong>Total: L. {{ getTotalSales().toFixed(2) }}</strong>\r\n      </div>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div *ngIf=\"isLoading\" class=\"text-center\">\r\n        <div class=\"spinner-border\" role=\"status\">\r\n          <span class=\"sr-only\">Cargando...</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div *ngIf=\"!isLoading && sales.length > 0; else noSales\" class=\"sales-container\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th><i class=\"fas fa-store\"></i> Sucursal</th>\r\n                <th><i class=\"fas fa-dice\"></i> Sorteo</th>\r\n                <th><i class=\"fas fa-clock\"></i> Fecha</th>\r\n                <th><i class=\"fas fa-dollar-sign\"></i> Total</th>\r\n                <th><i class=\"fas fa-list-ol\"></i> Números</th>\r\n                <th><i class=\"fas fa-print\"></i> Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let sale of sales\">\r\n                <td>{{ sale.sucursal }}</td>\r\n                <td>\r\n                  <span class=\"badge badge-primary\">{{ sale.sorteo | uppercase }}</span>\r\n                </td>\r\n                <td>{{ sale.fecha | date:'medium' }}</td>\r\n                <td class=\"text-success\">\r\n                  <strong>L. {{ sale.total.toFixed(2) }}</strong>\r\n                </td>\r\n                <td>\r\n                  <div class=\"numbers-display\">\r\n                    <span *ngFor=\"let detail of getSaleDetails(sale.id)\" \r\n                          class=\"badge badge-info mr-1 mb-1\">\r\n                      Nº {{ detail.numero.toString().padStart(2, '0') }}: L. {{ detail.monto.toFixed(2) }}\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <button class=\"btn btn-sm btn-outline-primary\" \r\n                          (click)=\"printService.generateThermalReceipt(sale, getSaleDetails(sale.id))\">\r\n                    <i class=\"fas fa-print\"></i> Reimprimir\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      \r\n      <ng-template #noSales>\r\n        <div class=\"alert alert-info\" *ngIf=\"!isLoading\">\r\n          <i class=\"fas fa-info-circle\"></i> No hay ventas registradas para los filtros seleccionados.\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Resumen por Sucursal -->\r\n  <div class=\"card mt-4\">\r\n    <div class=\"card-header\">\r\n      <h4><i class=\"fas fa-chart-bar\"></i> Resumen por Sucursal</h4>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div *ngFor=\"let sucursal of getSucursalSummary()\" class=\"col-md-3 mb-3\">\r\n          <div class=\"card sucursal-summary\">\r\n            <div class=\"card-body text-center\">\r\n              <h5>{{ sucursal.name }}</h5>\r\n              <h3 class=\"text-success\">L. {{ sucursal.total.toFixed(2) }}</h3>\r\n              <p class=\"text-muted\">{{ sucursal.count }} ventas</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal de Usuario -->\r\n<div class=\"modal fade\" [class.show]=\"showUserModal\" [style.display]=\"showUserModal ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" *ngIf=\"showUserModal\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-user-plus\"></i> {{ editingUser ? 'Editar Usuario' : 'Nuevo Usuario' }}\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"closeUserModal()\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #userForm=\"ngForm\">\r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"userEmail\"><i class=\"fas fa-envelope\"></i> Email:</label>\r\n            <input type=\"email\" id=\"userEmail\" class=\"form-control\" \r\n                   [(ngModel)]=\"userFormData.email\" name=\"email\" required>\r\n          </div>\r\n          \r\n          <div class=\"form-group mb-3\" *ngIf=\"!editingUser\">\r\n            <label for=\"userPassword\"><i class=\"fas fa-lock\"></i> Contraseña:</label>\r\n            <input type=\"password\" id=\"userPassword\" class=\"form-control\" \r\n                   [(ngModel)]=\"userFormData.password\" name=\"password\" required>\r\n          </div>\r\n          \r\n          <div class=\"form-group mb-3\">\r\n            <label for=\"userRole\"><i class=\"fas fa-user-tag\"></i> Rol:</label>\r\n            <select id=\"userRole\" class=\"form-control\" \r\n                    [(ngModel)]=\"userFormData.role\" name=\"role\" required>\r\n              <option value=\"sucursal\">Sucursal</option>\r\n              <option value=\"admin\">Administrador</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"form-group mb-3\" *ngIf=\"userFormData.role === 'sucursal'\">\r\n            <label for=\"userSucursal\"><i class=\"fas fa-store\"></i> Sucursal:</label>\r\n            <input type=\"text\" id=\"userSucursal\" class=\"form-control\" \r\n                   [(ngModel)]=\"userFormData.sucursal\" name=\"sucursal\" \r\n                   placeholder=\"Nombre de la sucursal\">\r\n          </div>\r\n          \r\n          <div class=\"form-group mb-3\">\r\n            <div class=\"form-check\">\r\n              <input type=\"checkbox\" id=\"userActive\" class=\"form-check-input\" \r\n                     [(ngModel)]=\"userFormData.active\" name=\"active\">\r\n              <label for=\"userActive\" class=\"form-check-label\">\r\n                <i class=\"fas fa-toggle-on\"></i> Usuario Activo\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeUserModal()\">\r\n          <i class=\"fas fa-times\"></i> Cancelar\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveUser()\" \r\n                [disabled]=\"!userForm.valid || isLoading\">\r\n          <i class=\"fas fa-save\"></i> {{ editingUser ? 'Actualizar' : 'Crear' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal-backdrop fade\" [class.show]=\"showUserModal\" *ngIf=\"showUserModal\"></div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"card\" style=\"max-width: 400px; margin: 100px auto;\">\r\n        <h2 class=\"text-center mb-3\">Sistema de Lotería</h2>\r\n        <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email:</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"email\" \r\n              name=\"email\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"email\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Contraseña:</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"password\" \r\n              name=\"password\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"password\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\r\n            {{ errorMessage }}\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            class=\"btn btn-primary w-100\" \r\n            [disabled]=\"!loginForm.valid || isLoading\">\r\n            {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .w-100 {\r\n      width: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: string = '';\r\n  password: string = '';\r\n  errorMessage: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Verificar si ya hay un usuario logueado con timeout\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      if (user) {\r\n        console.log('Usuario ya logueado, redirigiendo...');\r\n        this.redirectUser(user);\r\n      }\r\n    });\r\n  }\r\n\r\n  async onLogin(): Promise<void> {\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n    this.notificationService.showLoading('Iniciando sesión...');\r\n\r\n    try {\r\n      console.log('Iniciando login desde componente...');\r\n      \r\n      // Usar timeout para evitar que se cuelgue el login\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Login timeout')), 10000); // 10 segundos\r\n      });\r\n      \r\n      const loginPromise = this.supabaseService.login(this.email, this.password);\r\n      \r\n      const user = await Promise.race([loginPromise, timeoutPromise]) as any;\r\n      \r\n      console.log('Resultado del login:', user);\r\n      \r\n      if (user) {\r\n        console.log('Usuario logueado exitosamente, redirigiendo...');\r\n        this.redirectUser(user);\r\n      } else {\r\n        console.log('Login falló - usuario es null');\r\n        this.errorMessage = 'Credenciales inválidas';\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error en login:', error);\r\n      this.errorMessage = this.getErrorMessage(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  private redirectUser(user: any): void {\r\n    if (user.role === 'admin') {\r\n      this.router.navigate(['/admin']);\r\n    } else {\r\n      this.router.navigate(['/sucursal']);\r\n    }\r\n  }\r\n\r\n  private getErrorMessage(error: any): string {\r\n    switch (error.message) {\r\n      case 'Invalid login credentials':\r\n        return 'Credenciales inválidas';\r\n      case 'Email not confirmed':\r\n        return 'Email no confirmado';\r\n      case 'Too many requests':\r\n        return 'Demasiados intentos, intenta más tarde';\r\n      case 'Login timeout':\r\n        return 'Tiempo de espera agotado, intenta de nuevo';\r\n      default:\r\n        return 'Error en el inicio de sesión';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoService } from '../../services/sorteo.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-sucursal',\r\n  templateUrl: './sucursal.component.html',\r\n  styleUrls: ['./sucursal.component.scss']\r\n})\r\nexport class SucursalComponent implements OnInit {\r\n  currentUser: any = null;\r\n  currentSorteo: SorteoSchedule | null = null;\r\n  timeUntilClose: string = '';\r\n  isSorteoOpen: boolean = false;\r\n  \r\n  selectedNumber: number | null = null;\r\n  selectedAmount: number | null = null;\r\n  selectedNumbers: { numero: number, monto: number }[] = [];\r\n  \r\n  // Propiedades para entrada individual\r\n  numero: number | null = null;\r\n  monto: number | null = null;\r\n  \r\n  todaySales: Sale[] = [];\r\n  recentSales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  filteredSales: Sale[] = [];\r\n  filterDate: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  // Propiedades para el teclado numérico\r\n  numberInput: string = '';\r\n  showKeypad: boolean = false;\r\n  isBlocked: boolean = false;\r\n  currentInput: 'numero' | 'monto' = 'numero';\r\n\r\n  // Propiedades para el flujo de modales\r\n  showNumberModal: boolean = false;\r\n  showAmountModal: boolean = false;\r\n  showConfirmModal: boolean = false;\r\n  tempNumber: number | null = null;\r\n  tempAmount: number | null = null;\r\n  modalNumberInput: string = '';\r\n  modalAmountInput: string = '';\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private sorteoService: SorteoService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'sucursal') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    this.initializeComponent();\r\n    this.checkTimeRestrictions();\r\n    \r\n    // Verificar bloqueo cada minuto\r\n    setInterval(() => {\r\n      this.checkTimeRestrictions();\r\n    }, 60000);\r\n  }\r\n\r\n  private async initializeComponent(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      this.notificationService.showLoading('Cargando datos...');\r\n\r\n      await this.updateSorteoInfo();\r\n      await this.loadTodaySales();\r\n      await this.loadRecentSales();\r\n      this.setFilterDate();\r\n      \r\n      // Actualizar cada minuto\r\n      setInterval(() => {\r\n        this.updateSorteoInfo();\r\n      }, 60000);\r\n    } catch (error) {\r\n      console.error('Error inicializando componente:', error);\r\n      this.notificationService.showError('Error al cargar los datos');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  setFilterDate(): void {\r\n    const today = new Date();\r\n    this.filterDate = today.toISOString().split('T')[0];\r\n  }\r\n\r\n  onFilterDateChange(): void {\r\n    this.filterSales();\r\n  }\r\n\r\n  filterSales(): void {\r\n    if (!this.filterDate) {\r\n      this.filteredSales = this.todaySales;\r\n      return;\r\n    }\r\n\r\n    const filterDateObj = new Date(this.filterDate);\r\n    this.filteredSales = this.todaySales.filter(sale => {\r\n      const saleDate = new Date(sale.fecha);\r\n      return saleDate.toDateString() === filterDateObj.toDateString();\r\n    });\r\n  }\r\n\r\n  updateSorteoInfo(): void {\r\n    try {\r\n      this.currentSorteo = this.sorteoService.getCurrentSorteo();\r\n      \r\n      if (this.currentSorteo) {\r\n        this.isSorteoOpen = this.sorteoService.isSorteoOpen(this.currentSorteo);\r\n        this.timeUntilClose = this.sorteoService.getTimeUntilClose(this.currentSorteo);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error actualizando info del sorteo:', error);\r\n    }\r\n  }\r\n\r\n  addNumber(): void {\r\n    if (this.numero && this.monto && \r\n        this.numero >= 0 && this.numero <= 99) {\r\n      \r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.numero);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.monto!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.numero,\r\n          monto: this.monto\r\n        });\r\n      }\r\n      \r\n      this.numero = null;\r\n      this.monto = null;\r\n      this.numberInput = '';\r\n      this.currentInput = 'numero';\r\n      this.notificationService.showSuccess('Número agregado', 'Número agregado exitosamente a la venta');\r\n    }\r\n  }\r\n\r\n  removeNumber(index: number): void {\r\n    this.selectedNumbers.splice(index, 1);\r\n  }\r\n\r\n  async confirmRemoveNumber(index: number): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      '¿Eliminar número?',\r\n      'Esta acción no se puede deshacer.'\r\n    );\r\n\r\n    if (confirmed) {\r\n      this.removeNumber(index);\r\n    }\r\n  }\r\n\r\n  getTotal(): number {\r\n    return this.selectedNumbers.reduce((total, item) => total + item.monto, 0);\r\n  }\r\n\r\n  async processSale(): Promise<void> {\r\n    if (!this.currentSorteo || !this.currentUser || this.selectedNumbers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Validar que el usuario tenga sucursal configurada\r\n    if (!this.currentUser.sucursal) {\r\n      await this.notificationService.showError(\r\n        'Error: El usuario no tiene una sucursal asignada. Contacte al administrador.'\r\n      );\r\n      console.error('Usuario sin sucursal:', this.currentUser);\r\n      return;\r\n    }\r\n\r\n    // Confirmar venta\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Confirmar venta',\r\n      `¿Procesar venta por L. ${this.getTotal().toFixed(2)}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    this.notificationService.showLoading('Procesando venta...');\r\n\r\n    try {\r\n      const sale: any = {\r\n        userId: this.currentUser.id,\r\n        sucursal: this.currentUser.sucursal,\r\n        sorteo: this.currentSorteo.name,\r\n        fecha: new Date(),\r\n        total: this.getTotal()\r\n      };\r\n\r\n      console.log('Procesando venta:', sale);\r\n\r\n      const saleId = await this.supabaseService.createSale(sale);\r\n\r\n      // Crear detalles de venta\r\n      const saleDetails: SaleDetail[] = [];\r\n      for (const item of this.selectedNumbers) {\r\n        const detailId = await this.supabaseService.createSaleDetail({\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n        saleDetails.push({\r\n          id: detailId,\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n      }\r\n\r\n      // Generar e imprimir recibo\r\n      const saleWithId = { ...sale, id: saleId };\r\n      this.printService.generateThermalReceipt(saleWithId, saleDetails);\r\n\r\n      // Limpiar selección\r\n      this.selectedNumbers = [];\r\n      \r\n      // Recargar ventas\r\n      await this.loadTodaySales();\r\n      \r\n      this.notificationService.showSuccess('Venta procesada exitosamente');\r\n    } catch (error) {\r\n      console.error('Error procesando venta:', error);\r\n      this.notificationService.showError('Error al procesar la venta');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  async loadTodaySales(): Promise<void> {\r\n    if (!this.currentUser) return;\r\n\r\n    try {\r\n      const today = new Date();\r\n      const allSales = await this.supabaseService.getSalesByDateAndSorteo(today, '');\r\n      \r\n      this.todaySales = allSales.filter(sale => sale.sucursal === this.currentUser.sucursal);\r\n      \r\n      // Cargar detalles de cada venta con timeout individual\r\n      for (const sale of this.todaySales) {\r\n        try {\r\n          const timeoutPromise = new Promise((_, reject) => {\r\n            setTimeout(() => reject(new Error('Timeout cargando detalles')), 3000);\r\n          });\r\n          \r\n          const detailsPromise = this.supabaseService.getSaleDetails(sale.id);\r\n          \r\n          this.saleDetails[sale.id] = await Promise.race([detailsPromise, timeoutPromise]) as SaleDetail[];\r\n        } catch (error) {\r\n          console.warn(`Error cargando detalles de venta ${sale.id}:`, error);\r\n          this.saleDetails[sale.id] = [];\r\n        }\r\n      }\r\n\r\n      this.filterSales();\r\n    } catch (error) {\r\n      console.error('Error cargando ventas:', error);\r\n      this.notificationService.showError('Error al cargar las ventas');\r\n    }\r\n  }\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Cerrar sesión',\r\n      '¿Está seguro que desea cerrar sesión?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      this.notificationService.showLoading('Cerrando sesión...');\r\n      try {\r\n        await this.supabaseService.logout();\r\n        this.router.navigate(['/login']);\r\n      } catch (error) {\r\n        console.error('Error cerrando sesión:', error);\r\n        this.notificationService.showError('Error al cerrar sesión');\r\n      } finally {\r\n        this.notificationService.hideLoading();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Métodos del teclado numérico\r\n  pressNumber(num: number) {\r\n    if (this.isBlocked) {\r\n      this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      return;\r\n    }\r\n\r\n    if (this.numberInput.length < 5) { // Máximo 5 dígitos\r\n      this.numberInput += num.toString();\r\n    }\r\n  }\r\n\r\n  clearNumber() {\r\n    this.numberInput = '';\r\n  }\r\n\r\n  acceptNumber() {\r\n    if (!this.numberInput) return;\r\n\r\n    if (this.currentInput === 'numero') {\r\n      const numero = parseInt(this.numberInput);\r\n      if (numero >= 0 && numero <= 99) {\r\n        this.numero = numero;\r\n        this.numberInput = '';\r\n        this.currentInput = 'monto';\r\n        this.notificationService.showInfo('Número seleccionado', 'Ahora ingresa el monto a apostar');\r\n      } else {\r\n        this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n      }\r\n    } else {\r\n      const monto = parseFloat(this.numberInput);\r\n      if (monto > 0 && monto <= 500) {\r\n        this.monto = monto;\r\n        this.addNumber();\r\n        this.numberInput = '';\r\n        this.currentInput = 'numero';\r\n      } else {\r\n        this.notificationService.showError('Monto inválido', 'El monto debe ser mayor a 0 y menor o igual a L. 500');\r\n      }\r\n    }\r\n  }\r\n\r\n  // Flujo de modales para selección de números\r\n  openNumberModal(): void {\r\n    console.log('Abriendo modal de número');\r\n    if (this.isBlocked) {\r\n      this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      return;\r\n    }\r\n    this.showNumberModal = true;\r\n    this.modalNumberInput = '';\r\n    console.log('Modal abierto:', this.showNumberModal);\r\n  }\r\n\r\n  closeAllModals(): void {\r\n    console.log('Cerrando todos los modales');\r\n    this.showNumberModal = false;\r\n    this.showAmountModal = false;\r\n    this.showConfirmModal = false;\r\n    this.modalNumberInput = '';\r\n    this.modalAmountInput = '';\r\n    this.tempNumber = null;\r\n    this.tempAmount = null;\r\n  }\r\n\r\n  // Modal 1: Selección de número\r\n  pressModalNumber(num: number): void {\r\n    console.log('Presionando número:', num);\r\n    if (this.modalNumberInput.length < 2) {\r\n      this.modalNumberInput += num.toString();\r\n      console.log('Input actual:', this.modalNumberInput);\r\n    }\r\n  }\r\n\r\n  clearModalNumber(): void {\r\n    console.log('Limpiando número');\r\n    this.modalNumberInput = '';\r\n    // Forzar detección de cambios\r\n    setTimeout(() => {\r\n      console.log('Número limpiado, input actual:', this.modalNumberInput);\r\n    }, 0);\r\n  }\r\n\r\n  acceptModalNumber(): void {\r\n    console.log('Aceptando número:', this.modalNumberInput);\r\n    \r\n    // Evitar múltiples ejecuciones\r\n    if (!this.modalNumberInput || this.showAmountModal) {\r\n      if (!this.modalNumberInput) {\r\n        this.notificationService.showError('Número requerido', 'Debe ingresar un número');\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Formatear el número con ceros a la izquierda si es necesario\r\n    let formattedNumber = this.modalNumberInput.padStart(2, '0');\r\n    const numero = parseInt(formattedNumber);\r\n    \r\n    if (numero >= 0 && numero <= 99) {\r\n      this.tempNumber = numero;\r\n      \r\n      // Cerrar modal actual y abrir siguiente\r\n      this.showNumberModal = false;\r\n      \r\n      // Usar setTimeout para asegurar que el cambio se aplique\r\n      setTimeout(() => {\r\n        this.showAmountModal = true;\r\n        this.modalAmountInput = '';\r\n        console.log('Modal de apuesta abierto, número seleccionado:', numero);\r\n      }, 100);\r\n      \r\n    } else {\r\n      this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n    }\r\n  }\r\n\r\n  // Modal 2: Selección de apuesta\r\n  pressModalAmount(num: number): void {\r\n    console.log('Presionando cantidad:', num);\r\n    if (this.modalAmountInput.length < 4) { // Máximo 4 dígitos para el monto\r\n      this.modalAmountInput += num.toString();\r\n      console.log('Monto actual:', this.modalAmountInput);\r\n    }\r\n  }\r\n\r\n  clearModalAmount(): void {\r\n    console.log('Limpiando monto');\r\n    this.modalAmountInput = '';\r\n    // Forzar detección de cambios\r\n    setTimeout(() => {\r\n      console.log('Monto limpiado, input actual:', this.modalAmountInput);\r\n    }, 0);\r\n  }\r\n\r\n  acceptModalAmount(): void {\r\n    console.log('Aceptando monto:', this.modalAmountInput);\r\n    if (!this.modalAmountInput) {\r\n      this.notificationService.showError('Monto requerido', 'Debe ingresar un monto');\r\n      return;\r\n    }\r\n\r\n    const monto = parseFloat(this.modalAmountInput);\r\n    if (monto > 0 && monto <= 1000) { // Límite de apuesta\r\n      this.tempAmount = monto;\r\n      this.showAmountModal = false;\r\n      this.showConfirmModal = true;\r\n      console.log('Pasando a confirmación, monto:', monto);\r\n    } else {\r\n      this.notificationService.showError('Monto inválido', 'El monto debe estar entre 1 y 1000');\r\n    }\r\n  }\r\n\r\n  // Modal 3: Confirmación\r\n  confirmAddNumber(): void {\r\n    if (this.tempNumber !== null && this.tempAmount !== null) {\r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.tempNumber);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.tempAmount!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.tempNumber,\r\n          monto: this.tempAmount\r\n        });\r\n      }\r\n      \r\n      this.notificationService.showSuccess('Número agregado', `Número ${this.tempNumber.toString().padStart(2, '0')} agregado con apuesta de L. ${this.tempAmount}`);\r\n      this.closeAllModals();\r\n    }\r\n  }\r\n\r\n  cancelAddNumber(): void {\r\n    this.closeAllModals();\r\n  }\r\n\r\n  // Verificación de restricciones de tiempo\r\n  checkTimeRestrictions() {\r\n    if (!this.currentSorteo) return;\r\n\r\n    const now = new Date();\r\n    const [hours, minutes] = this.currentSorteo.closeTime.split(':');\r\n    const closeTime = new Date();\r\n    closeTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    const timeDiff = closeTime.getTime() - now.getTime();\r\n    const minutesLeft = Math.floor(timeDiff / (1000 * 60));\r\n\r\n    if (minutesLeft <= 5 && minutesLeft >= 0) {\r\n      this.isBlocked = true;\r\n      if (minutesLeft <= 0) {\r\n        this.notificationService.showWarning('Sorteo cerrado', 'El sorteo ya ha comenzado. No se pueden realizar más ventas.');\r\n      } else {\r\n        this.notificationService.showWarning('Ventas bloqueadas', `Faltan ${minutesLeft} minutos para el sorteo. Ventas bloqueadas.`);\r\n      }\r\n    } else {\r\n      this.isBlocked = false;\r\n    }\r\n  }\r\n\r\n  // Filtrar ventas solo del día actual\r\n  getFilteredSales(): Sale[] {\r\n    if (!this.recentSales) return [];\r\n    \r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    return this.recentSales.filter((sale: Sale) => {\r\n      const saleDate = new Date(sale.createdAt);\r\n      saleDate.setHours(0, 0, 0, 0);\r\n      return saleDate.getTime() === today.getTime();\r\n    });\r\n  }\r\n\r\n  // Obtener fecha de hoy formateada\r\n  getTodayDate(): string {\r\n    return new Date().toLocaleDateString('es-HN', { \r\n      weekday: 'long', \r\n      year: 'numeric', \r\n      month: 'long', \r\n      day: 'numeric' \r\n    });\r\n  }\r\n\r\n  // Formatear hora\r\n  formatTime(date: string | Date): string {\r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    return dateObj.toLocaleTimeString('es-HN', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: true\r\n    });\r\n  }\r\n\r\n  // Método para cargar ventas recientes (inicializar recentSales)\r\n  async loadRecentSales(): Promise<void> {\r\n    try {\r\n      // Este método debe cargar las ventas del día actual\r\n      this.recentSales = this.todaySales;\r\n    } catch (error) {\r\n      console.error('Error cargando ventas recientes:', error);\r\n      this.recentSales = [];\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n    <h2>Sucursal: {{ currentUser?.sucursal }}</h2>\r\n    <button class=\"btn btn-danger\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n      <i class=\"fas fa-sign-out-alt\"></i> Cerrar Sesión\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"card\">\r\n    <h3><i class=\"fas fa-clock\"></i> Sorteo Actual</h3>\r\n    <div *ngIf=\"currentSorteo; else noSorteo\">\r\n      <div class=\"alert alert-info\">\r\n        <strong>{{ currentSorteo.label }}</strong> - \r\n        <span *ngIf=\"isSorteoOpen\" class=\"text-success\">\r\n          <i class=\"fas fa-check-circle\"></i> Abierto (cierra {{ timeUntilClose }})\r\n        </span>\r\n        <span *ngIf=\"!isSorteoOpen\" class=\"text-danger\">\r\n          <i class=\"fas fa-times-circle\"></i> Cerrado\r\n        </span>\r\n      </div>\r\n      \r\n      <div *ngIf=\"isSorteoOpen && !isBlocked\" class=\"row\">\r\n        <!-- Botón para abrir modal de selección -->\r\n        <div class=\"col-12 text-center mb-4\">\r\n          <button class=\"btn btn-primary btn-lg\" (click)=\"openNumberModal()\" [disabled]=\"isLoading\">\r\n            <i class=\"fas fa-plus-circle\"></i> Agregar Número\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Mensaje de bloqueo -->\r\n      <div *ngIf=\"isBlocked\" class=\"alert alert-danger\">\r\n        <i class=\"fas fa-lock\"></i> \r\n        <strong>Venta bloqueada:</strong> Faltan menos de 5 minutos para el cierre del sorteo.\r\n      </div>\r\n      \r\n      <div *ngIf=\"selectedNumbers.length > 0\" class=\"mt-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h4><i class=\"fas fa-shopping-cart\"></i> Venta Actual</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"selected-numbers-container\">\r\n              <div *ngFor=\"let item of selectedNumbers; let i = index\" \r\n                   class=\"selected-number-item\">\r\n                <div class=\"number-info\">\r\n                  <span class=\"number-badge\">{{ item.numero.toString().padStart(2, '0') }}</span>\r\n                  <span class=\"amount-text\">L. {{ item.monto.toFixed(2) }}</span>\r\n                </div>\r\n                <button class=\"btn btn-danger btn-sm delete-btn\" \r\n                        (click)=\"confirmRemoveNumber(i)\" [disabled]=\"isLoading\">\r\n                  <i class=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"total-section mt-3\">\r\n              <div class=\"total-display\">\r\n                <strong><i class=\"fas fa-calculator\"></i> Total: L. {{ getTotal().toFixed(2) }}</strong>\r\n              </div>\r\n              <button class=\"btn btn-success btn-lg\" (click)=\"processSale()\" \r\n                      [disabled]=\"selectedNumbers.length === 0 || isLoading || isBlocked\">\r\n                <i class=\"fas fa-cash-register\"></i> Procesar Venta\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Historial de Ventas del Día Actual -->\r\n      <div *ngIf=\"recentSales.length > 0\" class=\"mt-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h4><i class=\"fas fa-history\"></i> Ventas del Día ({{ getTodayDate() }})</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"sales-history-container\">\r\n              <div *ngFor=\"let sale of getFilteredSales()\" class=\"sale-item\">\r\n                <div class=\"sale-info\">\r\n                  <div class=\"sale-header\">\r\n                    <span class=\"sale-time\">\r\n                      <i class=\"fas fa-clock\"></i> {{ formatTime(sale.createdAt) }}\r\n                    </span>\r\n                    <span class=\"sale-total\">\r\n                      <i class=\"fas fa-dollar-sign\"></i> L. {{ sale.total.toFixed(2) }}\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"sale-numbers\">\r\n                    <span *ngFor=\"let detail of getSaleDetails(sale.id)\" class=\"number-badge-small\">\r\n                      {{ detail.numero.toString().padStart(2, '0') }}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <ng-template #noSorteo>\r\n      <div class=\"alert alert-warning\">\r\n        <i class=\"fas fa-exclamation-triangle\"></i> No hay sorteo activo en este momento.\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n\r\n  <div class=\"card mt-4\">\r\n    <h3><i class=\"fas fa-chart-line\"></i> Ventas del Día</h3>\r\n    \r\n    <div class=\"row mb-3\">\r\n      <div class=\"col-md-4\">\r\n        <label><i class=\"fas fa-calendar\"></i> Filtrar por fecha:</label>\r\n        <input type=\"date\" class=\"form-control\" [(ngModel)]=\"filterDate\" \r\n               (change)=\"onFilterDateChange()\" [disabled]=\"isLoading\">\r\n      </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"isLoading\" class=\"text-center\">\r\n      <div class=\"spinner-border\" role=\"status\">\r\n        <span class=\"sr-only\">Cargando...</span>\r\n      </div>\r\n    </div>\r\n    \r\n    <div *ngIf=\"!isLoading && filteredSales.length > 0; else noSales\">\r\n      <div *ngFor=\"let sale of filteredSales\" class=\"card mb-2\">\r\n        <div class=\"card-body\">\r\n          <div class=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              <h5 class=\"card-title\">\r\n                <i class=\"fas fa-ticket-alt\"></i> {{ sale.sorteo | uppercase }}\r\n              </h5>\r\n              <p class=\"card-text\">\r\n                <i class=\"fas fa-clock\"></i> {{ sale.fecha | date:'medium' }}\r\n              </p>\r\n            </div>\r\n            <div class=\"text-right\">\r\n              <h4 class=\"text-success\">L. {{ sale.total.toFixed(2) }}</h4>\r\n              <button class=\"btn btn-sm btn-outline-primary\" \r\n                      (click)=\"printService.generateThermalReceipt(sale, getSaleDetails(sale.id))\">\r\n                <i class=\"fas fa-print\"></i> Reimprimir\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-2\">\r\n            <h6><i class=\"fas fa-list-ol\"></i> Números jugados:</h6>\r\n            <div class=\"row\">\r\n              <div *ngFor=\"let detail of getSaleDetails(sale.id)\" class=\"col-md-6 mb-1\">\r\n                <span class=\"badge badge-info\">\r\n                  Nº {{ detail.numero.toString().padStart(2, '0') }}: L. {{ detail.monto.toFixed(2) }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <ng-template #noSales>\r\n      <div class=\"alert alert-info\" *ngIf=\"!isLoading\">\r\n        <i class=\"fas fa-info-circle\"></i> No hay ventas registradas para la fecha seleccionada.\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 1: Selección de Número -->\r\n<div class=\"modal\" [style.display]=\"showNumberModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showNumberModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-hashtag\"></i> Seleccionar Número\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"calculator-container\">\r\n          <!-- Display del número -->\r\n          <div class=\"calculator-display\">\r\n            <span class=\"display-label\">NUMERO</span>\r\n            <div class=\"display-value\">{{ (modalNumberInput || '00').padStart(2, '0') }}</div>\r\n          </div>\r\n          \r\n          <!-- Teclado numérico -->\r\n          <div class=\"calculator-keypad\">\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(1); $event.stopPropagation()\">1</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(2); $event.stopPropagation()\">2</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(3); $event.stopPropagation()\">3</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(4); $event.stopPropagation()\">4</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(5); $event.stopPropagation()\">5</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(6); $event.stopPropagation()\">6</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(7); $event.stopPropagation()\">7</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(8); $event.stopPropagation()\">8</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(9); $event.stopPropagation()\">9</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(0); $event.stopPropagation()\">0</button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-clear\" (click)=\"clearModalNumber(); $event.stopPropagation()\">\r\n                C\r\n              </button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-accept\" (click)=\"acceptModalNumber(); $event.stopPropagation()\" \r\n                      [disabled]=\"!modalNumberInput\">\r\n                Aceptar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 2: Selección de Apuesta -->\r\n<div class=\"modal\" [style.display]=\"showAmountModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showAmountModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-dollar-sign\"></i> Ingresar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"calculator-container\">\r\n          <!-- Display de la apuesta -->\r\n          <div class=\"calculator-display\">\r\n            <span class=\"display-label\">APUESTA</span>\r\n            <div class=\"display-value\">{{ modalAmountInput || '00' }}</div>\r\n          </div>\r\n          \r\n          <!-- Teclado numérico -->\r\n          <div class=\"calculator-keypad\">\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(1); $event.stopPropagation()\">1</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(2); $event.stopPropagation()\">2</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(3); $event.stopPropagation()\">3</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(4); $event.stopPropagation()\">4</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(5); $event.stopPropagation()\">5</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(6); $event.stopPropagation()\">6</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(7); $event.stopPropagation()\">7</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(8); $event.stopPropagation()\">8</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(9); $event.stopPropagation()\">9</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalAmount(0); $event.stopPropagation()\">0</button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-clear\" (click)=\"clearModalAmount(); $event.stopPropagation()\">\r\n                C\r\n              </button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-accept\" (click)=\"acceptModalAmount(); $event.stopPropagation()\" \r\n                      [disabled]=\"!modalAmountInput\">\r\n                Aceptar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 3: Confirmación -->\r\n<div class=\"modal\" [style.display]=\"showConfirmModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showConfirmModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-check-circle\"></i> Confirmar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"confirmation-container\">\r\n          <div class=\"confirmation-card\">\r\n            <div class=\"number-display-large\">\r\n              # {{ tempNumber !== null ? tempNumber.toString().padStart(2, '0') : '00' }}\r\n            </div>\r\n            <div class=\"amount-display\">\r\n              APUESTA: L {{ tempAmount || 0 }}\r\n            </div>\r\n            <div class=\"confirmation-buttons\">\r\n              <button type=\"button\" class=\"btn btn-success btn-lg\" (click)=\"confirmAddNumber()\">\r\n                <i class=\"fas fa-check\"></i> CONFIRMAR\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-secondary btn-lg\" (click)=\"cancelAddNumber()\">\r\n                <i class=\"fas fa-times\"></i> Cancelar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Eliminar el backdrop separado ya que usamos el modal completo -->\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(5000), // 5 segundos timeout\r\n      map(user => {\r\n        console.log('AdminGuard - Usuario actual:', user);\r\n        return user?.role === 'admin';\r\n      }),\r\n      tap(isAdmin => {\r\n        console.log('AdminGuard - Es admin:', isAdmin);\r\n        if (!isAdmin) {\r\n          console.log('AdminGuard - Redirigiendo a login');\r\n          this.router.navigate(['/login']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        console.error('AdminGuard - Error o timeout:', error);\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(5000), // 5 segundos timeout\r\n      map(user => {\r\n        console.log('AuthGuard - Usuario actual:', user);\r\n        return !!user;\r\n      }),\r\n      tap(isAuthenticated => {\r\n        console.log('AuthGuard - Autenticado:', isAuthenticated);\r\n        if (!isAuthenticated) {\r\n          console.log('AuthGuard - Redirigiendo a login');\r\n          this.router.navigate(['/login']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        console.error('AuthGuard - Error o timeout:', error);\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export interface User {\r\n  id: string;\r\n  email: string;\r\n  role: 'admin' | 'sucursal';\r\n  sucursal?: string;\r\n  active: boolean;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface Sale {\r\n  id: string;\r\n  userId: string;\r\n  sucursal: string;\r\n  sorteo: 'mañana' | 'tarde' | 'noche';\r\n  fecha: Date;\r\n  total: number;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface SaleDetail {\r\n  id: string;\r\n  saleId: string;\r\n  numero: number;\r\n  monto: number;\r\n}\r\n\r\nexport interface Sorteo {\r\n  id: string;\r\n  fecha: Date;\r\n  sorteo: 'mañana' | 'tarde' | 'noche';\r\n  horaCierre: Date;\r\n  numeroGanador?: number;\r\n  factorMultiplicador: number; // Factor para calcular ganancias (ej: 70)\r\n  totalVendido: number;\r\n  totalPagado: number;\r\n  gananciaNeta: number;\r\n  cerrado: boolean;\r\n}\r\n\r\nexport interface SorteoSchedule {\r\n  name: 'mañana' | 'tarde' | 'noche';\r\n  label: string;\r\n  closeTime: string; // \"10:55\", \"14:55\", \"20:55\"\r\n}\r\n\r\nexport const SORTEO_SCHEDULES: SorteoSchedule[] = [\r\n  { name: 'mañana', label: 'Mañana', closeTime: '10:55' },\r\n  { name: 'tarde', label: 'Tarde', closeTime: '14:55' },\r\n  { name: 'noche', label: 'Noche', closeTime: '22:00' }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  private loadingInstance: any = null;\r\n\r\n  constructor() { }\r\n\r\n  // Mostrar mensaje de éxito\r\n  async showSuccess(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'success',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#28a745'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de error\r\n  async showError(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'error',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#dc3545'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de información\r\n  async showInfo(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'info',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#007bff'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de advertencia\r\n  async showWarning(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'warning',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#ffc107'\r\n    });\r\n  }\r\n\r\n  // Mostrar confirmación\r\n  async showConfirmation(\r\n    title: string, \r\n    text?: string, \r\n    confirmButtonText: string = 'Sí, confirmar',\r\n    cancelButtonText: string = 'Cancelar'\r\n  ): Promise<boolean> {\r\n    const result = await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText,\r\n      cancelButtonText,\r\n      confirmButtonColor: '#28a745',\r\n      cancelButtonColor: '#dc3545'\r\n    });\r\n\r\n    return result.isConfirmed;\r\n  }\r\n\r\n  // Mostrar loader\r\n  showLoading(title: string = 'Cargando...'): void {\r\n    this.hideLoading(); // Cerrar cualquier loading anterior\r\n    \r\n    this.loadingInstance = Swal.fire({\r\n      title,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showConfirmButton: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Cerrar loader\r\n  hideLoading(): void {\r\n    if (this.loadingInstance) {\r\n      Swal.close();\r\n      this.loadingInstance = null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport jsPDF from 'jspdf';\r\nimport { Sale, SaleDetail } from '../models/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrintService {\r\n\r\n  constructor() { }\r\n\r\n  // Generar PDF térmico para venta\r\n  generateThermalReceipt(sale: Sale, details: SaleDetail[]): void {\r\n    // Configurar PDF para impresora térmica de 80mm\r\n    const pdf = new jsPDF({\r\n      orientation: 'portrait',\r\n      unit: 'mm',\r\n      format: [80, 200] // Ancho 80mm, altura variable\r\n    });\r\n\r\n    // Configurar fuente\r\n    pdf.setFont('helvetica', 'normal');\r\n    pdf.setFontSize(10);\r\n\r\n    let yPosition = 10;\r\n    const lineHeight = 4;\r\n    const leftMargin = 5;\r\n    const rightMargin = 75;\r\n\r\n    // Título\r\n    pdf.setFontSize(12);\r\n    pdf.text('RECIBO DE VENTA', 40, yPosition, { align: 'center' });\r\n    yPosition += lineHeight * 2;\r\n\r\n    // Línea separadora\r\n    pdf.line(leftMargin, yPosition, rightMargin, yPosition);\r\n    yPosition += lineHeight;\r\n\r\n    // Información general\r\n    pdf.setFontSize(9);\r\n    pdf.text(`Fecha: ${new Date(sale.fecha).toLocaleString()}`, leftMargin, yPosition);\r\n    yPosition += lineHeight;\r\n    \r\n    pdf.text(`Sucursal: ${sale.sucursal}`, leftMargin, yPosition);\r\n    yPosition += lineHeight;\r\n    \r\n    pdf.text(`Sorteo: ${sale.sorteo.toUpperCase()}`, leftMargin, yPosition);\r\n    yPosition += lineHeight * 2;\r\n\r\n    // Línea separadora\r\n    pdf.line(leftMargin, yPosition, rightMargin, yPosition);\r\n    yPosition += lineHeight;\r\n\r\n    // Encabezado de números\r\n    pdf.setFontSize(8);\r\n    pdf.text('NÚMEROS JUGADOS:', leftMargin, yPosition);\r\n    yPosition += lineHeight;\r\n\r\n    // Línea separadora\r\n    pdf.line(leftMargin, yPosition, rightMargin, yPosition);\r\n    yPosition += lineHeight;\r\n\r\n    // Detalles de números\r\n    pdf.setFontSize(9);\r\n    for (const detail of details) {\r\n      const numeroText = `Num: ${detail.numero.toString().padStart(2, '0')}`;\r\n      const montoText = `L. ${detail.monto.toFixed(2)}`;\r\n      \r\n      pdf.text(numeroText, leftMargin, yPosition);\r\n      pdf.text(montoText, rightMargin, yPosition, { align: 'right' });\r\n      yPosition += lineHeight;\r\n    }\r\n\r\n    // Línea separadora\r\n    yPosition += lineHeight;\r\n    pdf.line(leftMargin, yPosition, rightMargin, yPosition);\r\n    yPosition += lineHeight;\r\n\r\n    // Total\r\n    pdf.setFontSize(11);\r\n    pdf.text('TOTAL:', leftMargin, yPosition);\r\n    pdf.text(`L. ${sale.total.toFixed(2)}`, rightMargin, yPosition, { align: 'right' });\r\n    yPosition += lineHeight * 2;\r\n\r\n    // Línea separadora\r\n    pdf.line(leftMargin, yPosition, rightMargin, yPosition);\r\n    yPosition += lineHeight;\r\n\r\n    // Mensaje final\r\n    pdf.setFontSize(8);\r\n    pdf.text('¡Gracias por su compra!', 40, yPosition, { align: 'center' });\r\n    yPosition += lineHeight;\r\n    pdf.text('¡Mucha suerte!', 40, yPosition, { align: 'center' });\r\n    yPosition += lineHeight * 2;\r\n\r\n    // Código de venta (ID)\r\n    pdf.setFontSize(7);\r\n    pdf.text(`ID: ${sale.id}`, 40, yPosition, { align: 'center' });\r\n\r\n    // Ajustar altura del PDF\r\n    const finalHeight = yPosition + 10;\r\n    pdf.internal.pageSize.height = finalHeight;\r\n\r\n    // Guardar o imprimir\r\n    const fileName = `recibo_${sale.sorteo}_${new Date().getTime()}.pdf`;\r\n    pdf.save(fileName);\r\n\r\n    // También abrir en ventana nueva para imprimir\r\n    window.open(pdf.output('bloburl'), '_blank');\r\n  }\r\n\r\n  // Generar PDF de reporte diario\r\n  generateDailyReport(sales: Sale[], fecha: Date): void {\r\n    const pdf = new jsPDF();\r\n    \r\n    pdf.setFontSize(16);\r\n    pdf.text('REPORTE DIARIO DE VENTAS', 105, 20, { align: 'center' });\r\n    \r\n    pdf.setFontSize(12);\r\n    pdf.text(`Fecha: ${fecha.toLocaleDateString()}`, 20, 35);\r\n    \r\n    // Aquí se puede expandir para incluir más detalles del reporte\r\n    let yPos = 50;\r\n    \r\n    // Resumen por sorteo\r\n    const sorteoSummary = this.calculateSorteoSummary(sales);\r\n    \r\n    pdf.setFontSize(14);\r\n    pdf.text('RESUMEN POR SORTEO:', 20, yPos);\r\n    yPos += 10;\r\n    \r\n    pdf.setFontSize(10);\r\n    for (const [sorteo, data] of Object.entries(sorteoSummary)) {\r\n      pdf.text(`${sorteo.toUpperCase()}: L. ${data.total.toFixed(2)} (${data.count} ventas)`, 25, yPos);\r\n      yPos += 7;\r\n    }\r\n    \r\n    // Total general\r\n    const totalGeneral = sales.reduce((sum, sale) => sum + sale.total, 0);\r\n    yPos += 10;\r\n    pdf.setFontSize(12);\r\n    pdf.text(`TOTAL GENERAL: L. ${totalGeneral.toFixed(2)}`, 20, yPos);\r\n    \r\n    pdf.save(`reporte_diario_${fecha.toISOString().split('T')[0]}.pdf`);\r\n  }\r\n\r\n  private calculateSorteoSummary(sales: Sale[]): { [key: string]: { total: number, count: number } } {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n    \r\n    for (const sale of sales) {\r\n      if (!summary[sale.sorteo]) {\r\n        summary[sale.sorteo] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sorteo].total += sale.total;\r\n      summary[sale.sorteo].count += 1;\r\n    }\r\n    \r\n    return summary;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SORTEO_SCHEDULES, SorteoSchedule } from '../models/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SorteoService {\r\n  \r\n  constructor() { }\r\n\r\n  getCurrentSorteo(): SorteoSchedule | null {\r\n    const now = new Date();\r\n    const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\r\n    \r\n    for (const sorteo of SORTEO_SCHEDULES) {\r\n      if (currentTime < sorteo.closeTime) {\r\n        return sorteo;\r\n      }\r\n    }\r\n    \r\n    // Si ya pasaron todos los sorteos del día, retorna null\r\n    return null;\r\n  }\r\n\r\n  getNextSorteo(): SorteoSchedule | null {\r\n    const now = new Date();\r\n    const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\r\n    \r\n    for (const sorteo of SORTEO_SCHEDULES) {\r\n      if (currentTime < sorteo.closeTime) {\r\n        return sorteo;\r\n      }\r\n    }\r\n    \r\n    // Si ya pasaron todos los sorteos del día, retorna el primero del siguiente día\r\n    return SORTEO_SCHEDULES[0];\r\n  }\r\n\r\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\r\n    const now = new Date();\r\n    const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\r\n    \r\n    return currentTime < sorteo.closeTime;\r\n  }\r\n\r\n  getTimeUntilClose(sorteo: SorteoSchedule): string {\r\n    const now = new Date();\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const closeTime = new Date();\r\n    closeTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n    \r\n    if (closeTime <= now) {\r\n      return '00:00';\r\n    }\r\n    \r\n    const diff = closeTime.getTime() - now.getTime();\r\n    const hoursLeft = Math.floor(diff / (1000 * 60 * 60));\r\n    const minutesLeft = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n    \r\n    return `${hoursLeft.toString().padStart(2, '0')}:${minutesLeft.toString().padStart(2, '0')}`;\r\n  }\r\n\r\n  getAllSorteos(): SorteoSchedule[] {\r\n    return SORTEO_SCHEDULES;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { createClient, SupabaseClient, User as SupabaseUser } from '@supabase/supabase-js';\r\nimport { environment } from '../../environments/environment';\r\nimport { User, Sale, SaleDetail, Sorteo } from '../models/interfaces';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupabaseService {\r\n  private supabase: SupabaseClient;\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n\r\n  // Workaround functions para la restricción de número 0 en la BD\r\n  private convertNumeroToBD(numero: number): number {\r\n    // Convertir 0 a 100 para evitar la restricción de la BD\r\n    return numero === 0 ? 100 : numero;\r\n  }\r\n\r\n  private convertNumeroFromBD(numero: number): number {\r\n    // Convertir 100 de vuelta a 0 para mostrar al usuario\r\n    return numero === 100 ? 0 : numero;\r\n  }\r\n\r\n  constructor() {\r\n    this.supabase = createClient(environment.supabase.url, environment.supabase.key);\r\n    \r\n    // Inicializar sesión existente\r\n    this.initializeSession();\r\n    \r\n    // Escuchar cambios en la autenticación\r\n    this.supabase.auth.onAuthStateChange(async (event, session) => {\r\n      console.log('Auth state changed:', event, session?.user?.id);\r\n      \r\n      if (session?.user) {\r\n        console.log('Usuario autenticado:', session.user.id);\r\n        \r\n        // Usar datos básicos inmediatamente\r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email || '',\r\n          role: 'sucursal' as const,\r\n          sucursal: 'Principal',\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n        \r\n        console.log('Setting user data:', userData);\r\n        this.currentUserSubject.next(userData);\r\n        \r\n        // Cargar datos adicionales en segundo plano\r\n        this.loadUserDataInBackground(session.user.id);\r\n      } else {\r\n        console.log('No session, clearing user');\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Inicializar sesión existente\r\n  private async initializeSession(): Promise<void> {\r\n    try {\r\n      console.log('Inicializando sesión...');\r\n      \r\n      const { data: { session }, error } = await this.supabase.auth.getSession();\r\n      \r\n      if (error) {\r\n        console.error('Error obteniendo sesión:', error);\r\n        this.currentUserSubject.next(null);\r\n        return;\r\n      }\r\n      \r\n      if (session?.user) {\r\n        console.log('Sesión encontrada:', session.user.id);\r\n        \r\n        // Usar directamente los datos de la sesión para evitar timeouts\r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email || '',\r\n          role: 'sucursal' as const,\r\n          sucursal: 'Principal',\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n        \r\n        console.log('Datos de usuario inicializados:', userData);\r\n        this.currentUserSubject.next(userData);\r\n        \r\n        // Intentar obtener datos de la tabla users en segundo plano (no bloqueante)\r\n        this.loadUserDataInBackground(session.user.id);\r\n      } else {\r\n        console.log('No hay sesión activa');\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error inicializando sesión:', error);\r\n      this.currentUserSubject.next(null);\r\n    }\r\n  }\r\n\r\n  // Cargar datos del usuario en segundo plano\r\n  private async loadUserDataInBackground(uid: string): Promise<void> {\r\n    try {\r\n      console.log('Cargando datos de usuario en segundo plano...');\r\n      \r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Background load timeout')), 5000);\r\n      });\r\n      \r\n      const queryPromise = this.supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('id', uid)\r\n        .single();\r\n      \r\n      const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n      \r\n      if (data && !error) {\r\n        console.log('Datos actualizados desde la base de datos:', data);\r\n        const updatedUser: User = {\r\n          id: data.id,\r\n          email: data.email,\r\n          role: data.role,\r\n          sucursal: data.sucursal,\r\n          active: data.active,\r\n          createdAt: new Date(data.created_at)\r\n        };\r\n        this.currentUserSubject.next(updatedUser);\r\n      } else {\r\n        console.log('No se pudieron cargar datos adicionales, manteniendo datos por defecto');\r\n      }\r\n    } catch (error) {\r\n      console.warn('Error cargando datos en segundo plano:', error);\r\n      // No hacer nada, mantener los datos por defecto\r\n    }\r\n  }\r\n\r\n  // Autenticación\r\n  async login(email: string, password: string): Promise<User | null> {\r\n    try {\r\n      console.log('Intentando login con:', email);\r\n      \r\n      const { data, error } = await this.supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (error) {\r\n        console.error('Error en auth.signInWithPassword:', error);\r\n        throw error;\r\n      }\r\n\r\n      if (data.user) {\r\n        console.log('Usuario autenticado:', data.user.id);\r\n        const userData = await this.getUserData(data.user.id);\r\n        console.log('Datos del usuario obtenidos:', userData);\r\n        return userData;\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error en login:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const { error } = await this.supabase.auth.signOut();\r\n    if (error) throw error;\r\n  }\r\n\r\n  // Verificar conexión a la base de datos\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('usuarios')\r\n        .select('count')\r\n        .limit(1);\r\n      \r\n      return !error;\r\n    } catch (error) {\r\n      console.error('Error testando conexión:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Usuarios\r\n  async getUserData(uid: string): Promise<User | null> {\r\n    try {\r\n      console.log('Buscando usuario con UID:', uid);\r\n      \r\n      // Primero obtener datos básicos de auth\r\n      const { data: authUser, error: authError } = await this.supabase.auth.getUser();\r\n      \r\n      if (authError || !authUser.user) {\r\n        console.error('Error obteniendo usuario autenticado:', authError);\r\n        return null;\r\n      }\r\n\r\n      // Datos por defecto usando auth\r\n      const defaultUserData: User = {\r\n        id: authUser.user.id,\r\n        email: authUser.user.email || '',\r\n        role: 'sucursal' as const,\r\n        sucursal: 'Principal',\r\n        active: true,\r\n        createdAt: new Date()\r\n      };\r\n\r\n      // Intentar obtener datos de la tabla users con timeout muy corto\r\n      try {\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => reject(new Error('Database timeout')), 1000); // 1 segundo timeout\r\n        });\r\n        \r\n        const queryPromise = this.supabase\r\n          .from('users')\r\n          .select('*')\r\n          .eq('id', uid)\r\n          .single();\r\n        \r\n        const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n        \r\n        if (data && !error) {\r\n          console.log('Usuario encontrado en tabla users:', data);\r\n          return {\r\n            id: data.id,\r\n            email: data.email,\r\n            role: data.role,\r\n            sucursal: data.sucursal,\r\n            active: data.active,\r\n            createdAt: new Date(data.created_at)\r\n          } as User;\r\n        }\r\n      } catch (dbError) {\r\n        console.warn('Error/timeout consultando tabla users, usando datos por defecto:', dbError);\r\n      }\r\n\r\n      console.log('Usando datos de auth como fallback');\r\n      return defaultUserData;\r\n      \r\n    } catch (error) {\r\n      console.error('Error en getUserData:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Ventas\r\n  async createSale(sale: Omit<Sale, 'id' | 'createdAt'>): Promise<string> {\r\n    try {\r\n      const saleData = {\r\n        user_id: sale.userId,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: sale.fecha,\r\n        total: sale.total,\r\n        created_at: new Date().toISOString()\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sales')\r\n        .insert([saleData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      console.error('Error creando venta:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSaleDetail(detail: Omit<SaleDetail, 'id'>): Promise<string> {\r\n    try {\r\n      const detailData = {\r\n        sale_id: detail.saleId,\r\n        numero: this.convertNumeroToBD(detail.numero),\r\n        monto: detail.monto\r\n      };\r\n\r\n      console.log('Creando detalle con número:', detail.numero, '-> BD:', detailData.numero);\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .insert([detailData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      console.error('Error creando detalle de venta:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getSalesByDateAndSorteo(fecha: Date, sorteo: string): Promise<Sale[]> {\r\n    try {\r\n      const startOfDay = new Date(fecha);\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date(fecha);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n\r\n      let query = this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', startOfDay.toISOString())\r\n        .lte('fecha', endOfDay.toISOString())\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (sorteo) {\r\n        query = query.eq('sorteo', sorteo);\r\n      }\r\n\r\n      const { data, error } = await query;\r\n\r\n      if (error) throw error;\r\n\r\n      return data.map(sale => ({\r\n        id: sale.id,\r\n        userId: sale.user_id,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: new Date(sale.fecha),\r\n        total: sale.total,\r\n        createdAt: new Date(sale.created_at)\r\n      })) as Sale[];\r\n    } catch (error) {\r\n      console.error('Error obteniendo ventas:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getSaleDetails(saleId: string): Promise<SaleDetail[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .select('*')\r\n        .eq('sale_id', saleId);\r\n\r\n      if (error) throw error;\r\n\r\n      return data.map(detail => ({\r\n        id: detail.id,\r\n        saleId: detail.sale_id,\r\n        numero: this.convertNumeroFromBD(detail.numero),\r\n        monto: detail.monto\r\n      })) as SaleDetail[];\r\n    } catch (error) {\r\n      console.error('Error obteniendo detalles de venta:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Sorteos\r\n  async createOrUpdateSorteo(sorteo: Omit<Sorteo, 'id'>): Promise<string> {\r\n    try {\r\n      const sorteoId = `${sorteo.fecha.toDateString()}-${sorteo.sorteo}`;\r\n      \r\n      // Workaround: Convertir número 0 a 100 para la BD\r\n      const numeroGanadorParaBD = sorteo.numeroGanador === 0 ? 100 : sorteo.numeroGanador;\r\n      \r\n      const sorteoData = {\r\n        id: sorteoId,\r\n        fecha: sorteo.fecha.toISOString(),\r\n        sorteo: sorteo.sorteo,\r\n        hora_cierre: sorteo.horaCierre.toISOString(),\r\n        numero_ganador: numeroGanadorParaBD,\r\n        factor_multiplicador: sorteo.factorMultiplicador,\r\n        total_vendido: sorteo.totalVendido,\r\n        total_pagado: sorteo.totalPagado,\r\n        ganancia_neta: sorteo.gananciaNeta,\r\n        cerrado: sorteo.cerrado\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .upsert([sorteoData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      console.error('Error creando/actualizando sorteo:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getSorteo(fecha: Date, sorteo: string): Promise<Sorteo | null> {\r\n    try {\r\n      const sorteoId = `${fecha.toDateString()}-${sorteo}`;\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No se encontró el registro\r\n          return null;\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      return {\r\n        id: data.id,\r\n        fecha: new Date(data.fecha),\r\n        sorteo: data.sorteo,\r\n        horaCierre: new Date(data.hora_cierre),\r\n        // Workaround: Convertir número 100 de vuelta a 0 para mostrar como 00\r\n        numeroGanador: data.numero_ganador === 100 ? 0 : data.numero_ganador,\r\n        factorMultiplicador: data.factor_multiplicador,\r\n        totalVendido: data.total_vendido,\r\n        totalPagado: data.total_pagado,\r\n        gananciaNeta: data.ganancia_neta,\r\n        cerrado: data.cerrado\r\n      } as Sorteo;\r\n    } catch (error) {\r\n      console.error('Error obteniendo sorteo:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async updateSorteoWinner(sorteoId: string, numeroGanador: number, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n      // Workaround: Convertir número 0 a 100 para la BD\r\n      const numeroParaBD = numeroGanador === 0 ? 100 : numeroGanador;\r\n      \r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          numero_ganador: numeroParaBD,\r\n          factor_multiplicador: factorMultiplicador,\r\n          cerrado: true\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error('Error actualizando ganador:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async calculateSorteoWinnings(sorteoId: string): Promise<void> {\r\n    try {\r\n      // Obtener el sorteo\r\n      const { data: sorteo, error: sorteoError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (sorteoError) throw sorteoError;\r\n      if (!sorteo.numero_ganador) return;\r\n\r\n      // Obtener todas las ventas del sorteo\r\n      const { data: sales, error: salesError } = await this.supabase\r\n        .from('sales')\r\n        .select('*, sale_details(*)')\r\n        .eq('sorteo', sorteo.sorteo)\r\n        .gte('fecha', new Date(sorteo.fecha).toISOString().split('T')[0])\r\n        .lt('fecha', new Date(new Date(sorteo.fecha).getTime() + 24 * 60 * 60 * 1000).toISOString().split('T')[0]);\r\n\r\n      if (salesError) throw salesError;\r\n\r\n      // Calcular total vendido\r\n      let totalVendido = 0;\r\n      let totalPagado = 0;\r\n\r\n      for (const sale of sales) {\r\n        for (const detail of sale.sale_details) {\r\n          totalVendido += detail.monto;\r\n          \r\n          // Si el número coincide con el ganador, calcular ganancia\r\n          // Considerar tanto el número directo como la conversión 0 <-> 100\r\n          const numeroDetalle = detail.numero === 100 ? 0 : detail.numero;\r\n          const numeroGanador = sorteo.numero_ganador === 100 ? 0 : sorteo.numero_ganador;\r\n          \r\n          if (numeroDetalle === numeroGanador) {\r\n            totalPagado += detail.monto * sorteo.factor_multiplicador;\r\n          }\r\n        }\r\n      }\r\n\r\n      const gananciaNeta = totalVendido - totalPagado;\r\n\r\n      // Actualizar el sorteo con los cálculos\r\n      const { error: updateError } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          total_vendido: totalVendido,\r\n          total_pagado: totalPagado,\r\n          ganancia_neta: gananciaNeta\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (updateError) throw updateError;\r\n    } catch (error) {\r\n      console.error('Error calculando ganancias:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n   supabase: {\r\n    url: 'https://oxuhcoubrpupjmjvyzbv.supabase.co',\r\n    key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im94dWhjb3VicnB1cGptanZ5emJ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI3MTc1NDIsImV4cCI6MjA2ODI5MzU0Mn0.dvWlnt9WQpxSEU7QD4qm-r62Ggd_P_0BMwKB9zR-9o4'\r\n  }\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));"],"names":["AppComponent","constructor","supabaseService","router","ngOnInit","currentUser$","subscribe","user","url","includes","navigate","i0","ɵɵdirectiveInject","i1","SupabaseService","i2","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","FormsModule","RouterModule","CommonModule","LoginComponent","SucursalComponent","AdminComponent","AuthGuard","AdminGuard","routes","path","redirectTo","pathMatch","component","canActivate","AppModule","bootstrap","imports","forRoot","declarations","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","tmp_5_0","ctx_r2","getSorteoData","sorteo_r2","numeroGanador","tmp_6_0","factorMultiplicador","tmp_7_0","totalVendido","toFixed","tmp_8_0","totalPagado","ɵɵclassProp","tmp_9_0","gananciaNeta","tmp_10_0","tmp_11_0","ɵɵtwoWayListener","AdminComponent_div_84_ng_template_12_div_0_Template_input_ngModelChange_5_listener","$event","ɵɵrestoreView","_r4","ɵɵnextContext","$implicit","ɵɵtwoWayBindingSet","winningNumbers","name","ɵɵresetView","AdminComponent_div_84_ng_template_12_div_0_Template_input_ngModelChange_10_listener","ɵɵlistener","AdminComponent_div_84_ng_template_12_div_0_Template_button_click_11_listener","setWinningNumber","ɵɵtwoWayProperty","ɵɵproperty","isLoading","ɵɵtemplate","AdminComponent_div_84_ng_template_12_div_0_Template","isSorteoOpen","AdminComponent_div_84_div_11_Template","AdminComponent_div_84_ng_template_12_Template","ɵɵtemplateRefExtractor","label","closeTime","setWinner_r5","sorteo_r6","AdminComponent_tr_138_Template_button_click_13_listener","user_r8","_r7","editUser","AdminComponent_tr_138_Template_button_click_15_listener","deleteUser","id","ɵɵtextInterpolate","email","role","ɵɵpipeBind1","sucursal","active","ɵɵtextInterpolate2","detail_r10","numero","toString","padStart","monto","AdminComponent_div_149_tr_24_span_15_Template","AdminComponent_div_149_tr_24_Template_button_click_17_listener","sale_r11","_r9","printService","generateThermalReceipt","getSaleDetails","sorteo","ɵɵpipeBind2","fecha","total","AdminComponent_div_149_tr_24_Template","sales","AdminComponent_ng_template_150_div_0_Template","sucursal_r12","count","AdminComponent_div_160_div_16_Template_input_ngModelChange_4_listener","_r14","userFormData","password","AdminComponent_div_160_div_26_Template_input_ngModelChange_4_listener","_r15","AdminComponent_div_160_Template_button_click_7_listener","_r13","closeUserModal","AdminComponent_div_160_Template_input_ngModelChange_15_listener","AdminComponent_div_160_div_16_Template","AdminComponent_div_160_Template_select_ngModelChange_21_listener","AdminComponent_div_160_div_26_Template","AdminComponent_div_160_Template_input_ngModelChange_29_listener","AdminComponent_div_160_Template_button_click_34_listener","AdminComponent_div_160_Template_button_click_37_listener","saveUser","ɵɵstyleProp","showUserModal","editingUser","userForm_r16","valid","sorteoService","notificationService","currentUser","sorteos","getAllSorteos","saleDetails","sorteosData","selectedSorteoFilter","selectedDate","fechaDesde","fechaHasta","users","today","Date","toISOString","split","loadSales","loadSorteosData","loadUsers","toDateString","_this","_asyncToGenerator","selectedDateObj","getSalesByDateAndSorteo","sale","error","console","_this2","sorteoData","getSorteo","saleId","_this3","winningNumber","multiplicador","alert","sorteoId","updateSorteoWinner","calculateSorteoResults","_x","_x2","_this4","sorteoSales","details","detail","hours","minutes","horaCierre","setHours","parseInt","createOrUpdateSorteo","cerrado","apply","arguments","getTotalSales","reduce","getSucursalSummary","summary","Object","entries","map","data","getTotalVendido","getTotalPagado","values","getGananciaNeta","getTotalVentas","length","aplicarFiltros","loadSalesByDateRange","limpiarFiltros","onFiltroFechaChange","_this5","fechaDesdeDate","fechaHastaDate","allSales","currentDate","daySales","setDate","getDate","showError","log","_this6","showSuccess","userId","_this7","confirmed","showConfirmation","onDateChange","onSorteoFilterChange","generateDailyReport","reportDate","logout","_this8","onFactorChange","sorteoName","event","target","value","SorteoService","i3","NotificationService","i4","PrintService","i5","AdminComponent_Template","AdminComponent_Template_button_click_5_listener","_r1","AdminComponent_Template_input_ngModelChange_70_listener","AdminComponent_Template_input_change_70_listener","AdminComponent_Template_input_ngModelChange_75_listener","AdminComponent_Template_input_change_75_listener","AdminComponent_Template_button_click_77_listener","AdminComponent_Template_button_click_80_listener","AdminComponent_div_84_Template","AdminComponent_Template_input_ngModelChange_96_listener","AdminComponent_Template_input_change_96_listener","AdminComponent_Template_select_ngModelChange_101_listener","AdminComponent_Template_select_change_101_listener","AdminComponent_option_104_Template","AdminComponent_Template_button_click_106_listener","AdminComponent_Template_button_click_114_listener","AdminComponent_tr_138_Template","AdminComponent_div_148_Template","AdminComponent_div_149_Template","AdminComponent_ng_template_150_Template","AdminComponent_div_159_Template","AdminComponent_div_160_Template","AdminComponent_div_161_Template","noSales_r17","ctx_r1","errorMessage","redirectUser","onLogin","showLoading","timeoutPromise","Promise","_","reject","setTimeout","Error","loginPromise","login","race","getErrorMessage","hideLoading","message","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_9_listener","LoginComponent_Template_input_ngModelChange_13_listener","LoginComponent_div_14_Template","loginForm_r3","timeUntilClose","SucursalComponent_div_11_div_7_Template_button_click_2_listener","_r3","openNumberModal","SucursalComponent_div_11_div_9_div_8_Template_button_click_6_listener","i_r6","_r5","index","confirmRemoveNumber","item_r7","SucursalComponent_div_11_div_9_div_8_Template","SucursalComponent_div_11_div_9_Template_button_click_14_listener","processSale","selectedNumbers","getTotal","isBlocked","detail_r8","SucursalComponent_div_11_div_10_div_8_span_10_Template","formatTime","sale_r9","createdAt","SucursalComponent_div_11_div_10_div_8_Template","getTodayDate","getFilteredSales","SucursalComponent_div_11_span_5_Template","SucursalComponent_div_11_span_6_Template","SucursalComponent_div_11_div_7_Template","SucursalComponent_div_11_div_8_Template","SucursalComponent_div_11_div_9_Template","SucursalComponent_div_11_div_10_Template","currentSorteo","recentSales","detail_r12","SucursalComponent_div_25_div_1_Template_button_click_15_listener","_r10","SucursalComponent_div_25_div_1_div_23_Template","SucursalComponent_div_25_div_1_Template","filteredSales","SucursalComponent_ng_template_26_div_0_Template","selectedNumber","selectedAmount","todaySales","filterDate","numberInput","showKeypad","currentInput","showNumberModal","showAmountModal","showConfirmModal","tempNumber","tempAmount","modalNumberInput","modalAmountInput","initializeComponent","checkTimeRestrictions","setInterval","updateSorteoInfo","loadTodaySales","loadRecentSales","setFilterDate","onFilterDateChange","filterSales","filterDateObj","filter","saleDate","getCurrentSorteo","getTimeUntilClose","addNumber","existingIndex","findIndex","n","push","removeNumber","splice","item","createSale","detailId","createSaleDetail","saleWithId","detailsPromise","warn","pressNumber","num","clearNumber","acceptNumber","showInfo","parseFloat","closeAllModals","pressModalNumber","clearModalNumber","acceptModalNumber","formattedNumber","pressModalAmount","clearModalAmount","acceptModalAmount","confirmAddNumber","cancelAddNumber","now","timeDiff","getTime","minutesLeft","Math","floor","showWarning","toLocaleDateString","weekday","year","month","day","date","dateObj","toLocaleTimeString","hour","minute","hour12","SucursalComponent_Template","SucursalComponent_Template_button_click_4_listener","SucursalComponent_div_11_Template","SucursalComponent_ng_template_12_Template","SucursalComponent_Template_input_ngModelChange_23_listener","SucursalComponent_Template_input_change_23_listener","SucursalComponent_div_24_Template","SucursalComponent_div_25_Template","SucursalComponent_ng_template_26_Template","SucursalComponent_Template_div_click_28_listener","SucursalComponent_Template_div_click_29_listener","stopPropagation","SucursalComponent_Template_button_click_35_listener","SucursalComponent_Template_button_click_47_listener","SucursalComponent_Template_button_click_49_listener","SucursalComponent_Template_button_click_51_listener","SucursalComponent_Template_button_click_54_listener","SucursalComponent_Template_button_click_56_listener","SucursalComponent_Template_button_click_58_listener","SucursalComponent_Template_button_click_61_listener","SucursalComponent_Template_button_click_63_listener","SucursalComponent_Template_button_click_65_listener","SucursalComponent_Template_button_click_68_listener","SucursalComponent_Template_button_click_70_listener","SucursalComponent_Template_button_click_72_listener","SucursalComponent_Template_div_click_74_listener","SucursalComponent_Template_div_click_75_listener","SucursalComponent_Template_button_click_81_listener","SucursalComponent_Template_button_click_93_listener","SucursalComponent_Template_button_click_95_listener","SucursalComponent_Template_button_click_97_listener","SucursalComponent_Template_button_click_100_listener","SucursalComponent_Template_button_click_102_listener","SucursalComponent_Template_button_click_104_listener","SucursalComponent_Template_button_click_107_listener","SucursalComponent_Template_button_click_109_listener","SucursalComponent_Template_button_click_111_listener","SucursalComponent_Template_button_click_114_listener","SucursalComponent_Template_button_click_116_listener","SucursalComponent_Template_button_click_118_listener","SucursalComponent_Template_div_click_120_listener","SucursalComponent_Template_div_click_121_listener","SucursalComponent_Template_button_click_127_listener","SucursalComponent_Template_button_click_138_listener","SucursalComponent_Template_button_click_141_listener","noSorteo_r13","noSales_r14","tap","timeout","catchError","of","pipe","isAdmin","ɵɵinject","factory","ɵfac","providedIn","isAuthenticated","SORTEO_SCHEDULES","Swal","loadingInstance","title","text","fire","icon","confirmButtonText","confirmButtonColor","cancelButtonText","result","showCancelButton","cancelButtonColor","isConfirmed","allowOutsideClick","allowEscapeKey","showConfirmButton","didOpen","close","jsPDF","pdf","orientation","unit","format","setFont","setFontSize","yPosition","lineHeight","leftMargin","rightMargin","align","line","toLocaleString","toUpperCase","numeroText","montoText","finalHeight","internal","pageSize","height","fileName","save","window","open","output","yPos","sorteoSummary","calculateSorteoSummary","totalGeneral","sum","currentTime","getHours","getMinutes","getNextSorteo","diff","hoursLeft","createClient","environment","BehaviorSubject","convertNumeroToBD","convertNumeroFromBD","currentUserSubject","asObservable","supabase","key","initializeSession","auth","onAuthStateChange","_ref","session","userData","next","loadUserDataInBackground","getSession","uid","queryPromise","from","select","eq","single","updatedUser","created_at","signInWithPassword","getUserData","signOut","testConnection","limit","authUser","authError","getUser","defaultUserData","dbError","saleData","user_id","insert","_this9","detailData","sale_id","_this0","startOfDay","endOfDay","query","gte","lte","order","ascending","_this1","_this10","numeroGanadorParaBD","hora_cierre","numero_ganador","factor_multiplicador","total_vendido","total_pagado","ganancia_neta","upsert","_this11","code","_this12","numeroParaBD","update","calculateSorteoWinnings","_this13","sorteoError","salesError","lt","sale_details","numeroDetalle","updateError","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}