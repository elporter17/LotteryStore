{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAkBM,MAAOA,YAAY;EAEvBC,YACUC,eAAgC,EAChCC,MAAc;IADd,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJC,QAAQA,CAAA;IACN;IACA,IAAI,CAACF,eAAe,CAACG,YAAY,CAACC,SAAS,CAACC,IAAI,IAAG;MACjD,IAAI,CAACA,IAAI,IAAI,CAAC,IAAI,CAACJ,MAAM,CAACK,GAAG,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;QAC/C,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,CAAC;EACJ;;;uBAdWV,YAAY,EAAAW,+DAAA,CAAAE,uEAAA,GAAAF,+DAAA,CAAAI,mDAAA;IAAA;EAAA;;;YAAZf,YAAY;MAAAiB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAXrBZ,4DAAA,aAA2B;UACzBA,uDAAA,oBAA+B;UACjCA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRgD;AACb;AACU;AACR;AAEA;AACqB;AACS;AACT;AAC6B;AACA;AACZ;AACrC;AACE;AACM;;;AAExD,MAAM8B,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,QAAQ;EAAEC,SAAS,EAAE;AAAM,CAAE,EACrD;EAAEF,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAEb,6EAAcA;AAAA,CAAE,EAC5C;EAAEU,IAAI,EAAE,UAAU;EAAEG,SAAS,EAAEZ,sFAAiB;EAAEa,WAAW,EAAE,CAACR,yDAAS;AAAC,CAAE,EAC5E;EAAEI,IAAI,EAAE,aAAa;EAAEG,SAAS,EAAER,8FAAmB;EAAES,WAAW,EAAE,CAACR,yDAAS,EAAEE,iEAAa;AAAC,CAAE,EAChG;EAAEE,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAEX,6EAAc;EAAEY,WAAW,EAAE,CAACR,yDAAS,EAAEC,2DAAU;AAAC,CAAE,EAClF;EAAEG,IAAI,EAAE,aAAa;EAAEG,SAAS,EAAEV,0GAAuB;EAAEW,WAAW,EAAE,CAACR,yDAAS,EAAEC,2DAAU;AAAC,CAAE,EACjG;EAAEG,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAQ,CAAE,CACrC;AAqBK,MAAOI,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,SAAA,GAFRhD,wDAAY;IAAA;EAAA;;;iBADb,CAAEsC,yDAAS,EAAEC,2DAAU,EAAEC,iEAAa,CAAC;MAAAS,OAAA,GANhDrB,qEAAa,EACbG,0DAAY,EACZF,wDAAW,EACXC,0DAAY,CAACoB,OAAO,CAACT,MAAM,CAAC,EAC5BL,0GAAuB;IAAA;EAAA;;;uHAKdW,SAAS;IAAAI,YAAA,GAjBlBnD,wDAAY,EACZgC,6EAAc,EACdC,sFAAiB,EACjBC,6EAAc,EACdC,0GAAuB,EACvBE,8FAAmB;IAAAY,OAAA,GAGnBrB,qEAAa,EACbG,0DAAY,EACZF,wDAAW,EAAAhB,0DAAA,EAEXuB,0GAAuB;EAAA;AAAA,K;;;;;;;;;;;;;;;;;;;;;;;;;;AClC0F;;;;;;;;;;;;;;;;;;;;ICM7GzB,4DAAA,gBAA2E;IAAAA,oDAAA,aAAC;IAAAA,0DAAA,EAAO;;;;;IAmBnFA,4DAAA,gBAAyD;IACvDA,uDAAA,aAAsC;IACxCA,0DAAA,EAAO;;;;;IAWPA,4DAAA,gBAAyD;IACvDA,uDAAA,aAAsC;IACxCA,0DAAA,EAAO;;;;;IAWPA,4DAAA,gBAAyD;IACvDA,uDAAA,aAAsC;IACxCA,0DAAA,EAAO;;;;;IAMPA,4DAAA,kBAA6D;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAS;;;;IAAjDA,wDAAA,UAAA4C,SAAA,CAAAC,IAAA,CAAqB;IAAC7C,uDAAA,EAAkB;IAAlBA,+DAAA,CAAA4C,SAAA,CAAAI,KAAA,CAAkB;;;;;IAM/EhD,uDAAA,aAAgF;;;;;IACvDA,uDAAA,aAA6B;;;;;IAItDA,uDAAA,aAAgF;;;;;IACvDA,uDAAA,aAA6B;;;;;IAYtDA,uDAAA,aAAwE;;;;;IAChDA,uDAAA,aAAiC;;;;;IAIzDA,uDAAA,aAAsE;;;;;IAChDA,uDAAA,aAA+B;;;;;IAqFjDA,4DADF,eAAoE,gBACtC;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAO;IAC1DA,4DAAA,gBAA2B;IAAAA,oDAAA,GAAoC;IAAAA,0DAAA,EAAO;IACtEA,4DAAA,gBAA6B;IAAAA,oDAAA,GAA0D;IAAAA,0DAAA,EAAO;IAC9FA,4DAAA,gBAAyB;IAAAA,oDAAA,GAAmG;IAC9HA,0DAD8H,EAAO,EAC/H;;;;IAJwBA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAAiD,WAAA,CAAAC,QAAA,CAAuB;IACxBlD,uDAAA,GAAoC;IAApCA,gEAAA,KAAAiD,WAAA,CAAAG,oBAAA,MAAoC;IAClCpD,uDAAA,GAA0D;IAA1DA,gEAAA,QAAAiD,WAAA,CAAAI,uBAAA,OAAAC,OAAA,QAA0D;IAC9DtD,uDAAA,GAAmG;IAAnGA,gEAAA,SAAAiD,WAAA,CAAAI,uBAAA,UAAAJ,WAAA,CAAAG,oBAAA,QAAAE,OAAA,QAAmG;;;;;IAjChItD,4DAFJ,eAA8F,cAChE,SACtB;IAAAA,uDAAA,YAA6B;IAACA,oDAAA,gDAA8B;IAAAA,0DAAA,EAAK;IACrEA,4DAAA,cAA8B;IAAAA,oDAAA,oCAA6B;IAC7DA,0DAD6D,EAAM,EAC7D;IAKAA,4DAHN,eAAiC,eACI,eACL,iBACA;IAAAA,oDAAA,IAAkD;IAAAA,0DAAA,EAAO;IACnFA,4DAAA,iBAA2B;IAAAA,oDAAA,2BAAc;IAC3CA,0DAD2C,EAAO,EAC5C;IAGFA,4DAFJ,gBAA6B,gBACH,iBACI;IAAAA,oDAAA,IAAkD;IAAAA,0DAAA,EAAO;IACnFA,4DAAA,iBAA0B;IAAAA,oDAAA,sBAAc;IAC1CA,0DAD0C,EAAO,EAC3C;IAEJA,4DADF,gBAAwB,iBACI;IAAAA,oDAAA,IAA+B;IAAAA,0DAAA,EAAO;IAChEA,4DAAA,iBAA0B;IAAAA,oDAAA,qBAAa;IAG7CA,0DAH6C,EAAO,EAC1C,EACF,EACF;IAIFA,4DAFJ,gBAAgC,gBACF,YACpB;IAAAA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAO;IACrBA,4DAAA,YAAM;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAO;IACnBA,4DAAA,YAAM;IAAAA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAO;IACrBA,4DAAA,YAAM;IAAAA,oDAAA,YAAI;IACZA,0DADY,EAAO,EACb;IACNA,wDAAA,KAAAwD,qCAAA,mBAAoE;IAQ1ExD,0DAFI,EAAM,EACF,EACF;;;;IA9B4BA,uDAAA,IAAkD;IAAlDA,+DAAA,EAAAyD,MAAA,CAAAC,iBAAA,qBAAAD,MAAA,CAAAC,iBAAA,IAAAC,cAAA,UAAkD;IAKhD3D,uDAAA,GAAkD;IAAlDA,gEAAA,OAAAyD,MAAA,CAAAG,6BAAA,GAAAN,OAAA,QAAkD;IAIlDtD,uDAAA,GAA+B;IAA/BA,gEAAA,OAAAyD,MAAA,CAAAI,qBAAA,OAA+B;IAaf7D,uDAAA,IAAoB;IAApBA,wDAAA,YAAAyD,MAAA,CAAAC,iBAAA,CAAoB;;;;;IAyCxD1D,4DADF,eAAqG,eAC/E;IAAAA,oDAAA,GAA+C;IAAAA,0DAAA,EAAM;IACzEA,4DAAA,eAAsB;IAAAA,oDAAA,GAAsC;IAAAA,0DAAA,EAAM;IAClEA,4DAAA,eAAsB;IAAAA,oDAAA,GAAY;IACpCA,0DADoC,EAAM,EACpC;;;;;IAHgBA,uDAAA,GAA+C;IAA/CA,+DAAA,CAAA8D,SAAA,CAAAC,MAAA,CAAAC,QAAA,GAAAC,QAAA,SAA+C;IAC7CjE,uDAAA,GAAsC;IAAtCA,gEAAA,OAAA8D,SAAA,CAAAI,YAAA,CAAAZ,OAAA,QAAsC;IACtCtD,uDAAA,GAAY;IAAZA,gEAAA,MAAAmE,IAAA,SAAY;;;;;IAgBlCnE,4DAJF,eAGoH,gBACvF;IAAAA,oDAAA,GAAqC;IAAAA,0DAAA,EAAO;IACvEA,4DAAA,gBAA2B;IAAAA,oDAAA,GAAqD;IAClFA,0DADkF,EAAO,EACnF;;;;;;IAJDA,wDAAA,CAAAyD,MAAA,CAAAY,kBAAA,CAAAC,gBAAA,EAAAC,MAAA,EAAgD;IAChDvE,wDAAA,2BAAAuE,MAAA,CAAAP,QAAA,GAAAC,QAAA,oBAAAR,MAAA,CAAAe,cAAA,CAAAF,gBAAA,EAAAC,MAAA,EAAAjB,OAAA,IAA8G;IACtFtD,uDAAA,GAAqC;IAArCA,+DAAA,CAAAuE,MAAA,CAAAP,QAAA,GAAAC,QAAA,SAAqC;IACrCjE,uDAAA,GAAqD;IAArDA,gEAAA,OAAAyD,MAAA,CAAAe,cAAA,CAAAF,gBAAA,EAAAC,MAAA,EAAAjB,OAAA,QAAqD;;;;;IA/BpFtD,4DAFJ,eAAiF,eAClD,SACvB;IAAAA,oDAAA,GAA4B;IAAAA,0DAAA,EAAK;IACrCA,4DAAA,gBAA6B;IAAAA,oDAAA,GAAkD;IACjFA,0DADiF,EAAO,EAClF;IAIJA,4DADF,eAAiC,SAC3B;IACFA,uDAAA,YAA6B;IAC7BA,oDAAA,6CACF;IAAAA,0DAAA,EAAK;IACLA,4DAAA,gBAA8B;IAC5BA,wDAAA,KAAAyE,kDAAA,mBAAqG;IAMzGzE,0DADE,EAAM,EACF;IAIJA,4DADF,gBAA6B,UACvB;IACFA,uDAAA,cAA+B;IAC/BA,oDAAA,kCACF;IAAAA,0DAAA,EAAK;IACLA,4DAAA,gBAAmC;IACjCA,wDAAA,KAAA0E,kDAAA,mBAGoH;IAM1H1E,0DAFI,EAAM,EACF,EACF;;;;;IAnCEA,uDAAA,GAA4B;IAA5BA,+DAAA,CAAAsE,gBAAA,CAAApB,QAAA,CAA4B;IACHlD,uDAAA,GAAkD;IAAlDA,gEAAA,OAAAyD,MAAA,CAAAkB,gBAAA,CAAAL,gBAAA,EAAAhB,OAAA,QAAkD;IAU7BtD,uDAAA,GAAsC;IAAtCA,wDAAA,YAAAsE,gBAAA,CAAAM,OAAA,CAAAC,KAAA,OAAsC;IAgBjE7E,uDAAA,GAAkB;IAAlBA,wDAAA,YAAAyD,MAAA,CAAAqB,aAAA,GAAkB;;;;;IApC7C9E,4DAFJ,eAAoG,eAC/D,SAC7B;IAAAA,oDAAA,GAAwB;IAAAA,0DAAA,EAAK;IACjCA,4DAAA,eAA0B;IACxBA,oDAAA,GACF;IACFA,0DADE,EAAM,EACF;IAENA,4DAAA,eAAkC;IAChCA,wDAAA,IAAA+E,2CAAA,oBAAiF;IAuCrF/E,0DADE,EAAM,EACF;;;;;IA9CEA,uDAAA,GAAwB;IAAxBA,+DAAA,CAAAgF,cAAA,CAAAC,MAAA,CAAwB;IAE1BjF,uDAAA,GACF;IADEA,gEAAA,eAAAyD,MAAA,CAAAyB,cAAA,CAAAF,cAAA,EAAA1B,OAAA,SACF;IAI+BtD,uDAAA,GAAyB;IAAzBA,wDAAA,YAAAgF,cAAA,CAAAG,UAAA,CAAyB;;;;;IAV9DnF,4DAAA,eAAiF;IAC/EA,wDAAA,IAAAoF,qCAAA,mBAAoG;IAiDtGpF,0DAAA,EAAM;;;;IAjDyBA,uDAAA,EAAyC;IAAzCA,wDAAA,YAAAyD,MAAA,CAAA4B,oCAAA,GAAyC;;;;;IAoDtErF,4DAAA,eAA6B;IAC3BA,uDAAA,YAAgC;IAChCA,4DAAA,SAAI;IAAAA,oDAAA,kDAAsC;IAAAA,0DAAA,EAAK;IAC/CA,4DAAA,QAAG;IAAAA,oDAAA,2EAA0D;IAC/DA,0DAD+D,EAAI,EAC7D;;;;;IA2BEA,4DAHJ,UAAoD,eAEtB,eACC;IACzBA,uDAAA,YAA6B;IAC7BA,4DAAA,WAAM;IAAAA,oDAAA,GAAmD;IAC3DA,0DAD2D,EAAO,EAC5D;IACNA,4DAAA,eAAoB;IAAAA,oDAAA,GAA8D;IAGtFA,0DAHsF,EAAM,EACpF,EAEF;;;;;;;IALMA,uDAAA,GAAmD;IAAnDA,+DAAA,GAAAsF,QAAA,GAAA7B,MAAA,CAAA8B,aAAA,CAAAC,UAAA,oBAAAF,QAAA,CAAAG,aAAA,WAAmD;IAEvCzF,uDAAA,GAA8D;IAA9DA,gEAAA,eAAA0F,QAAA,GAAAjC,MAAA,CAAA8B,aAAA,CAAAC,UAAA,oBAAAE,QAAA,CAAAC,mBAAA,YAA8D;;;;;IAkBhF3F,4DAAA,WAAwB;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAO;;;;;IAC1CA,4DAAA,WAAyB;IAAAA,oDAAA,0BAAmB;IAAAA,0DAAA,EAAO;;;;;;IAVnDA,4DAFJ,eAAuD,cAC7B,YACf;IAAAA,oDAAA,2BAAe;IAAAA,0DAAA,EAAQ;IAC9BA,4DAAA,iBAG2C;IAFpCA,8DAAA,2BAAA6F,oFAAAC,MAAA;MAAA9F,2DAAA,CAAAgG,IAAA;MAAA,MAAAR,UAAA,GAAAxF,2DAAA,IAAAkG,SAAA;MAAA,MAAAzC,MAAA,GAAAzD,2DAAA;MAAAA,gEAAA,CAAAyD,MAAA,CAAA2C,cAAA,CAAAZ,UAAA,CAAA3C,IAAA,GAAAiD,MAAA,MAAArC,MAAA,CAAA2C,cAAA,CAAAZ,UAAA,CAAA3C,IAAA,IAAAiD,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAAyC;IAGlD9F,0DAJE,EAG2C,EACvC;IACNA,4DAAA,kBAC+D;IADhCA,wDAAA,mBAAAuG,6EAAA;MAAAvG,2DAAA,CAAAgG,IAAA;MAAA,MAAAR,UAAA,GAAAxF,2DAAA,IAAAkG,SAAA;MAAA,MAAAzC,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAA+C,gBAAA,CAAAhB,UAAA,CAAA3C,IAAA,GAAAY,MAAA,CAAA2C,cAAA,CAAAZ,UAAA,CAAA3C,IAAA,EAA2D;IAAA,EAAC;IAElG7C,uDAAA,YAA0B;IAE1BA,wDADA,IAAAyG,2DAAA,oBAAwB,IAAAC,2DAAA,oBACC;IAE7B1G,0DADE,EAAS,EACL;;;;;IAVKA,uDAAA,GAAyC;IAAzCA,8DAAA,YAAAyD,MAAA,CAAA2C,cAAA,CAAAZ,UAAA,CAAA3C,IAAA,EAAyC;IACzC7C,wDAAA,aAAAyD,MAAA,CAAAmD,SAAA,CAAsB;IAIvB5G,uDAAA,EAAsD;IAAtDA,wDAAA,cAAAyD,MAAA,CAAA2C,cAAA,CAAAZ,UAAA,CAAA3C,IAAA,KAAAY,MAAA,CAAAmD,SAAA,CAAsD;IAErD5G,uDAAA,GAAe;IAAfA,wDAAA,SAAAyD,MAAA,CAAAmD,SAAA,CAAe;IACf5G,uDAAA,EAAgB;IAAhBA,wDAAA,UAAAyD,MAAA,CAAAmD,SAAA,CAAgB;;;;;IAK3B5G,4DAAA,eAA8D;IAC5DA,uDAAA,aAA4B;IAC5BA,4DAAA,WAAM;IAAAA,oDAAA,wCAAiC;IACzCA,0DADyC,EAAO,EAC1C;;;;;IAHNA,wDAjBA,IAAA6G,oDAAA,mBAAuD,IAAAC,oDAAA,mBAiBO;;;;;IAjBxD9G,wDAAA,UAAAyD,MAAA,CAAAsD,YAAA,CAAAvB,UAAA,EAA2B;IAiB3BxF,uDAAA,EAA0B;IAA1BA,wDAAA,SAAAyD,MAAA,CAAAsD,YAAA,CAAAvB,UAAA,EAA0B;;;;;IA1ClCxF,4DAFJ,eAAwD,eAC3B,SACrB;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAK;IAEzBA,4DADF,eAA2B,gBAC6E;IACpGA,oDAAA,GACF;IAAAA,0DAAA,EAAO;IACPA,4DAAA,gBAAyB;IAAAA,oDAAA,GAAsB;IAEnDA,0DAFmD,EAAO,EAClD,EACF;IAENA,4DAAA,eAA4B;IAc1BA,wDAZA,KAAAgH,sCAAA,mBAAoD,KAAAC,8CAAA,gCAAAjH,oEAAA,CAY5B;IAyB5BA,0DADE,EAAM,EACF;;;;;;IAhDEA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAwF,UAAA,CAAAxC,KAAA,CAAkB;IAEOhD,uDAAA,GAAmC;IAACA,yDAApC,SAAAyD,MAAA,CAAAsD,YAAA,CAAAvB,UAAA,EAAmC,YAAA/B,MAAA,CAAAsD,YAAA,CAAAvB,UAAA,EAAuC;IACnGxF,uDAAA,EACF;IADEA,gEAAA,MAAAyD,MAAA,CAAAsD,YAAA,CAAAvB,UAAA,+BACF;IACyBxF,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAwF,UAAA,CAAA4B,SAAA,CAAsB;IAM3CpH,uDAAA,GAA8B;IAAAA,wDAA9B,SAAAyD,MAAA,CAAA4D,cAAA,CAAA7B,UAAA,EAA8B,aAAA8B,aAAA,CAAc;;;;;;IA6ElDtH,4DADF,cAA6C,iBACjB;IAAAA,oDAAA,uBAAW;IAAAA,0DAAA,EAAQ;IAC7CA,4DAAA,iBAEuC;IADhCA,8DAAA,2BAAAuH,+DAAAzB,MAAA;MAAA9F,2DAAA,CAAAwH,IAAA;MAAA,MAAA/D,MAAA,GAAAzD,2DAAA;MAAAA,gEAAA,CAAAyD,MAAA,CAAAgE,YAAA,CAAAC,QAAA,EAAA5B,MAAA,MAAArC,MAAA,CAAAgE,YAAA,CAAAC,QAAA,GAAA5B,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAAmC;IAE5C9F,0DAHE,EAEuC,EACnC;;;;IAFGA,uDAAA,GAAmC;IAAnCA,8DAAA,YAAAyD,MAAA,CAAAgE,YAAA,CAAAC,QAAA,CAAmC;;;;;;IAc1C1H,4DADF,cAAiE,iBACrC;IAAAA,oDAAA,gBAAS;IAAAA,0DAAA,EAAQ;IAC3CA,4DAAA,iBAE2C;IADpCA,8DAAA,2BAAA2H,+DAAA7B,MAAA;MAAA9F,2DAAA,CAAA4H,IAAA;MAAA,MAAAnE,MAAA,GAAAzD,2DAAA;MAAAA,gEAAA,CAAAyD,MAAA,CAAAgE,YAAA,CAAAvE,QAAA,EAAA4C,MAAA,MAAArC,MAAA,CAAAgE,YAAA,CAAAvE,QAAA,GAAA4C,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAAmC;IAE5C9F,0DAHE,EAE2C,EACvC;;;;IAFGA,uDAAA,GAAmC;IAAnCA,8DAAA,YAAAyD,MAAA,CAAAgE,YAAA,CAAAvE,QAAA,CAAmC;;;;;IAuHtClD,4DAFJ,eAAgG,eACrE,eACH;IAAAA,oDAAA,GAA+C;IAAAA,0DAAA,EAAM;IACzEA,4DAAA,eAAoB;IAAAA,oDAAA,GAA+B;IAEvDA,0DAFuD,EAAM,EACrD,EACF;;;;IAHkBA,uDAAA,GAA+C;IAA/CA,+DAAA,CAAA6H,UAAA,CAAA9D,MAAA,CAAAC,QAAA,GAAAC,QAAA,SAA+C;IAC/CjE,uDAAA,GAA+B;IAA/BA,gEAAA,OAAA6H,UAAA,CAAAC,KAAA,CAAAxE,OAAA,QAA+B;;;;;IALzDtD,4DADF,eAAoE,SAC9D;IAAAA,uDAAA,aAA2B;IAACA,oDAAA,4BAAe;IAAAA,0DAAA,EAAK;IACpDA,4DAAA,eAA0B;IACxBA,wDAAA,IAAA+H,4CAAA,mBAAgG;IAMlG/H,0DAAA,EAAM;IAIFA,4DAFJ,eAA6B,eACD,gBACJ;IAAAA,oDAAA,gCAAoB;IAAAA,0DAAA,EAAO;IAC/CA,4DAAA,iBAAoB;IAAAA,oDAAA,IAAgC;IACtDA,0DADsD,EAAO,EACvD;IAEJA,4DADF,gBAA0B,iBACJ;IAAAA,oDAAA,uBAAe;IAAAA,0DAAA,EAAO;IAC1CA,4DAAA,iBAAoB;IAAAA,oDAAA,IAAoC;IAG9DA,0DAH8D,EAAO,EAC3D,EACF,EACF;;;;IAlB0CA,uDAAA,GAAwB;IAAAA,wDAAxB,YAAAyD,MAAA,CAAAuE,mBAAA,CAAwB,iBAAAvE,MAAA,CAAAwE,iBAAA,CAA0B;IAWxEjI,uDAAA,GAAgC;IAAhCA,+DAAA,CAAAyD,MAAA,CAAAuE,mBAAA,CAAAE,MAAA,CAAgC;IAIhClI,uDAAA,GAAoC;IAApCA,gEAAA,OAAAyD,MAAA,CAAA0E,eAAA,GAAA7E,OAAA,QAAoC;;;;;IAK9DtD,4DAAA,eAAiE;IAC/DA,uDAAA,aAA2C;IAC3CA,4DAAA,QAAG;IAAAA,oDAAA,qDAAyC;IAC9CA,0DAD8C,EAAI,EAC5C;;;;;IApDFA,4DAJN,cAAsD,eAExB,eACJ,gBACA;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAO;IAClCA,4DAAA,gBAAoB;IAAAA,oDAAA,GAAwC;IAC9DA,0DAD8D,EAAO,EAC/D;IAEJA,4DADF,eAAsB,gBACA;IAAAA,oDAAA,mBAAY;IAAAA,0DAAA,EAAO;IACvCA,4DAAA,iBAAoB;IAAAA,oDAAA,IAAuC;IAC7DA,0DAD6D,EAAO,EAC9D;IAEJA,4DADF,gBAAsB,iBACA;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAO;IACjCA,4DAAA,iBAAoB;IAAAA,oDAAA,IAAqD;IAC3EA,0DAD2E,EAAO,EAC5E;IAEJA,4DADF,gBAAsB,iBACA;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAO;IACpCA,4DAAA,iBAAoB;IAAAA,oDAAA,IAAoC;IAC1DA,0DAD0D,EAAO,EAC3D;IAEJA,4DADF,gBAAsB,iBACA;IAAAA,oDAAA,eAAO;IAAAA,0DAAA,EAAO;IAClCA,4DAAA,iBAAoC;IAAAA,oDAAA,IAAkC;IACxEA,0DADwE,EAAO,EACzE;IAEJA,4DADF,gBAAgC,iBACV;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAO;IACjCA,4DAAA,iBAAoB;IAAAA,oDAAA,IAA8C;IAEtEA,0DAFsE,EAAO,EACrE,EACF;IA0BNA,wDAvBA,KAAAoI,sCAAA,oBAAoE,KAAAC,sCAAA,mBAuBH;IAInErI,0DAAA,EAAM;;;;IApDoBA,uDAAA,GAAwC;IAAxCA,+DAAA,CAAAyD,MAAA,CAAA6E,qBAAA,CAAAC,YAAA,CAAwC;IAIxCvI,uDAAA,GAAuC;IAAvCA,+DAAA,CAAAyD,MAAA,CAAA6E,qBAAA,CAAAE,WAAA,CAAuC;IAIvCxI,uDAAA,GAAqD;IAArDA,+DAAA,CAAAyD,MAAA,CAAAgF,cAAA,CAAAhF,MAAA,CAAA6E,qBAAA,CAAAI,SAAA,EAAqD;IAIrD1I,uDAAA,GAAoC;IAApCA,+DAAA,CAAAyD,MAAA,CAAA6E,qBAAA,CAAApF,QAAA,CAAoC;IAIpBlD,uDAAA,GAAkC;IAAlCA,+DAAA,CAAAyD,MAAA,CAAA6E,qBAAA,CAAArD,MAAA,CAAkC;IAIlDjF,uDAAA,GAA8C;IAA9CA,gEAAA,OAAAyD,MAAA,CAAA6E,qBAAA,CAAAK,KAAA,CAAArF,OAAA,QAA8C;IAKxCtD,uDAAA,EAAoC;IAApCA,wDAAA,SAAAyD,MAAA,CAAAuE,mBAAA,CAAAE,MAAA,KAAoC;IAuBzClI,uDAAA,EAAsC;IAAtCA,wDAAA,SAAAyD,MAAA,CAAAuE,mBAAA,CAAAE,MAAA,OAAsC;;;;;IA4B/DlI,4DADF,eAAyD,eAC7B;IAAAA,oDAAA,GAA0C;IAAAA,0DAAA,EAAM;IAC1EA,4DAAA,eAA4B;IAAAA,oDAAA,GAA4E;IAC1GA,0DAD0G,EAAM,EAC1G;;;;IAFsBA,uDAAA,GAA0C;IAA1CA,+DAAA,CAAAyD,MAAA,CAAAmF,uBAAA,CAAA3D,MAAA,CAAAjC,KAAA,CAA0C;IACxChD,uDAAA,GAA4E;IAA5EA,gEAAA,0BAAAyD,MAAA,CAAAmF,uBAAA,CAAAC,aAAA,CAAA5E,QAAA,aAA4E;;;;;IAuBhGjE,4DAAA,WAAyE;IACvEA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;;IADLA,uDAAA,EACF;IADEA,gEAAA,MAAA+I,QAAA,CAAAC,KAAA,OAAAC,QAAA,kBACF;;;;;IAJFjJ,4DADF,eAA+D,YACtD;IACLA,oDAAA,kBACA;IAAAA,wDAAA,IAAAkJ,yDAAA,oBAAyE;IAI7ElJ,0DADE,EAAQ,EACJ;;;;;IAJqBA,uDAAA,GAAiC;IAAjCA,wDAAA,YAAAyD,MAAA,CAAA0F,kBAAA,CAAAC,YAAA,EAAiC;;;;;;IAP5DpJ,4DAFJ,eAAuF,eAC1D,eACE;IACzBA,uDAAA,aAA4B;IAC5BA,oDAAA,GACF;IAAAA,0DAAA,EAAM;IACNA,wDAAA,IAAAqJ,kDAAA,mBAA+D;IAQjErJ,0DAAA,EAAM;IAGJA,4DADF,eAA0B,YACjB;IAAAA,oDAAA,sBAAe;IAAAA,0DAAA,EAAQ;IAE5BA,4DADF,eAA0B,kBAQL;IADjBA,wDAAA,mBAAAsJ,qEAAAxD,MAAA;MAAA,MAAAsD,YAAA,GAAApJ,2DAAA,CAAAuJ,IAAA,EAAArD,SAAA;MAAA,MAAAzC,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAA+F,uBAAA,CAAAJ,YAAA,EAAAtD,MAAA,CAAA2D,MAAA,CAAAC,KAAA,CAA4D;IAAA,EAAC;IANxE1J,0DAAA,EAOmB;IACnBA,4DAAA,iBAA2B;IAAAA,oDAAA,SAAC;IAGlCA,0DAHkC,EAAO,EAC/B,EACF,EACF;;;;;IA1BAA,uDAAA,GACF;IADEA,gEAAA,MAAAoJ,YAAA,MACF;IAC6BpJ,uDAAA,EAAgC;IAAhCA,wDAAA,SAAAyD,MAAA,CAAAkG,gBAAA,CAAAP,YAAA,EAAgC;IAkBzDpJ,uDAAA,GAA6C;IAA7CA,wDAAA,UAAAyD,MAAA,CAAAmG,mBAAA,CAAAR,YAAA,QAA6C;;;;;IAzBvDpJ,4DAAA,eAAgE;IAC9DA,wDAAA,IAAA6J,4CAAA,oBAAuF;IA+BzF7J,0DAAA,EAAM;;;;IA/B0CA,uDAAA,EAA0B;IAA1BA,wDAAA,YAAAyD,MAAA,CAAAqG,mBAAA,GAA0B;;;;;IAiC1E9J,4DAAA,eAAkF;IAChFA,uDAAA,aAAsC;IACtCA,4DAAA,QAAG;IAAAA,oDAAA,mDAAuC;IAC5CA,0DAD4C,EAAI,EAC1C;;;;;IAENA,4DAAA,eAAiF;IAC/EA,uDAAA,aAA2C;IAC3CA,4DAAA,QAAG;IAAAA,oDAAA,2CAAoC;IACzCA,0DADyC,EAAI,EACvC;;;;;IASJA,uDAAA,aAAwD;;;;;IACxDA,uDAAA,YAAgD;;;;;;IA1ExDA,4DAAA,eAAkF;IAA9BA,wDAAA,mBAAA+J,qDAAA;MAAA/J,2DAAA,CAAAgK,IAAA;MAAA,MAAAvG,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAAwG,iBAAA,EAAmB;IAAA,EAAC;IAC/EjK,4DAAA,eAA8E;IAAnCA,wDAAA,mBAAAkK,qDAAApE,MAAA;MAAA9F,2DAAA,CAAAgK,IAAA;MAAA,OAAAhK,yDAAA,CAAS8F,MAAA,CAAAqE,eAAA,EAAwB;IAAA,EAAC;IAEzEnK,4DADF,cAA0B,SACpB;IACFA,uDAAA,aAAiC;IACjCA,oDAAA,yCACF;IAAAA,0DAAA,EAAK;IACLA,wDAAA,IAAAoK,qCAAA,mBAAyD;IAIzDpK,4DAAA,kBAAwD;IAA9BA,wDAAA,mBAAAqK,wDAAA;MAAArK,2DAAA,CAAAgK,IAAA;MAAA,MAAAvG,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAAwG,iBAAA,EAAmB;IAAA,EAAC;IACrDjK,uDAAA,YAA4B;IAEhCA,0DADE,EAAS,EACL;IAGJA,4DADF,cAAwB,gBACW;IAC/BA,uDAAA,cAAkC;IAClCA,4DAAA,SAAG;IAAAA,oDAAA,4IAAqH;IAC1HA,0DAD0H,EAAI,EACxH;IAyCNA,wDAvCA,KAAAsK,sCAAA,mBAAgE,KAAAC,sCAAA,mBAkCkB,KAAAC,sCAAA,mBAKD;IAInFxK,0DAAA,EAAM;IAGJA,4DADF,eAA0B,mBACqE;IAArDA,wDAAA,mBAAAyK,yDAAA;MAAAzK,2DAAA,CAAAgK,IAAA;MAAA,MAAAvG,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAAwG,iBAAA,EAAmB;IAAA,EAAC;IACnEjK,uDAAA,aAA4B;IAC5BA,oDAAA,kBACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,mBAAyG;IAAnEA,wDAAA,mBAAA0K,yDAAA;MAAA1K,2DAAA,CAAAgK,IAAA;MAAA,MAAAvG,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAAkH,+BAAA,EAAiC;IAAA,EAAC;IAE/E3K,wDADA,KAAA4K,oCAAA,iBAAoD,KAAAC,oCAAA,iBACR;IAC5C7K,oDAAA,IACF;IAGNA,0DAHM,EAAS,EACL,EACF,EACF;;;;IAxE0BA,uDAAA,GAA6B;IAA7BA,wDAAA,SAAAyD,MAAA,CAAAmF,uBAAA,CAA6B;IAe5B5I,uDAAA,GAAmC;IAAnCA,wDAAA,SAAAyD,MAAA,CAAAqH,kBAAA,CAAA5C,MAAA,KAAmC;IAkChClI,uDAAA,EAAkD;IAAlDA,wDAAA,SAAAyD,MAAA,CAAAmD,SAAA,IAAAnD,MAAA,CAAAqH,kBAAA,CAAA5C,MAAA,OAAkD;IAKpDlI,uDAAA,EAAmD;IAAnDA,wDAAA,UAAAyD,MAAA,CAAAmD,SAAA,IAAAnD,MAAA,CAAAqH,kBAAA,CAAA5C,MAAA,OAAmD;IAOTlI,uDAAA,GAAsB;IAAtBA,wDAAA,aAAAyD,MAAA,CAAAmD,SAAA,CAAsB;IAIV5G,uDAAA,GAAsB;IAAtBA,wDAAA,aAAAyD,MAAA,CAAAmD,SAAA,CAAsB;IACnE5G,uDAAA,EAAe;IAAfA,wDAAA,SAAAyD,MAAA,CAAAmD,SAAA,CAAe;IACxB5G,uDAAA,EAAgB;IAAhBA,wDAAA,UAAAyD,MAAA,CAAAmD,SAAA,CAAgB;IAC1C5G,uDAAA,EACF;IADEA,gEAAA,MAAAyD,MAAA,CAAAmD,SAAA,kDACF;;;;;IAkCI5G,4DADF,eAAkE,eACtC;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAM;IACvDA,4DAAA,eAAwB;IAAAA,oDAAA,GAAoC;IAAAA,0DAAA,EAAM;IAEhEA,4DADF,eAAgC,gBACA;IAAAA,oDAAA,GAA0D;IAAAA,0DAAA,EAAO;IAC/FA,4DAAA,iBAA8B;IAAAA,oDAAA,GAA0I;IAC1KA,0DAD0K,EAAQ,EAC5K;IACNA,4DAAA,gBAAyB;IAAAA,oDAAA,IAAoD;IAAAA,0DAAA,EAAM;IACnFA,4DAAA,gBAAwB;IAAAA,oDAAA,IAAmD;IAAAA,0DAAA,EAAM;IACjFA,4DAAA,gBAE0D;IACxDA,oDAAA,IACF;IACFA,0DADE,EAAM,EACF;;;;IAbsBA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAA+K,YAAA,CAAA7H,QAAA,CAAuB;IACzBlD,uDAAA,GAAoC;IAApCA,gEAAA,KAAA+K,YAAA,CAAA3H,oBAAA,MAAoC;IAE5BpD,uDAAA,GAA0D;IAA1DA,gEAAA,QAAA+K,YAAA,CAAA1H,uBAAA,OAAAC,OAAA,QAA0D;IAC1DtD,uDAAA,GAA0I;IAA1IA,gEAAA,MAAA+K,YAAA,CAAA3H,oBAAA,aAAA2H,YAAA,CAAA1H,uBAAA,UAAA0H,YAAA,CAAA3H,oBAAA,QAAAE,OAAA,QAA0I;IAEjJtD,uDAAA,GAAoD;IAApDA,gEAAA,QAAA+K,YAAA,CAAAC,aAAA,kBAAAD,YAAA,CAAAC,aAAA,CAAA1H,OAAA,mBAAoD;IACrDtD,uDAAA,GAAmD;IAAnDA,gEAAA,QAAA+K,YAAA,CAAAE,YAAA,kBAAAF,YAAA,CAAAE,YAAA,CAAA3H,OAAA,mBAAmD;IAEtEtD,uDAAA,EAAoD;IACpDA,yDADA,cAAA+K,YAAA,CAAAG,aAAA,WAAoD,cAAAH,YAAA,CAAAG,aAAA,WACA;IACvDlL,uDAAA,EACF;IADEA,gEAAA,SAAA+K,YAAA,CAAAG,aAAA,kBAAAH,YAAA,CAAAG,aAAA,CAAA5H,OAAA,oBACF;;;;;;IAxCVtD,4DAAA,eAAkF;IAA9BA,wDAAA,mBAAAmL,qDAAA;MAAAnL,2DAAA,CAAAoL,IAAA;MAAA,MAAA3H,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAA4H,iBAAA,EAAmB;IAAA,EAAC;IAC/ErL,4DAAA,eAA8E;IAAnCA,wDAAA,mBAAAsL,qDAAAxF,MAAA;MAAA9F,2DAAA,CAAAoL,IAAA;MAAA,OAAApL,yDAAA,CAAS8F,MAAA,CAAAqE,eAAA,EAAwB;IAAA,EAAC;IAEzEnK,4DADF,cAA0B,SACpB;IACFA,uDAAA,YAAgC;IAChCA,oDAAA,yCACF;IAAAA,0DAAA,EAAK;IACLA,4DAAA,iBAAsE;IAA9BA,wDAAA,mBAAAuL,wDAAA;MAAAvL,2DAAA,CAAAoL,IAAA;MAAA,MAAA3H,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAA4H,iBAAA,EAAmB;IAAA,EAAC;IACnErL,uDAAA,YAA4B;IAEhCA,0DADE,EAAS,EACL;IAIFA,4DAFJ,cAAwB,eACG,UACnB;IAAAA,oDAAA,IAA6B;IACnCA,0DADmC,EAAK,EAClC;IAIFA,4DAFJ,gBAA2B,gBACC,gBACE;IAAAA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAM;IACxCA,4DAAA,gBAAwB;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAM;IACpCA,4DAAA,gBAAgC;IAAAA,oDAAA,IAA4D;IAAAA,0DAAA,EAAM;IAClGA,4DAAA,gBAAyB;IAAAA,oDAAA,qBAAa;IAAAA,0DAAA,EAAM;IAC5CA,4DAAA,gBAAwB;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAM;IAC1CA,4DAAA,gBAA0B;IAAAA,oDAAA,qBAAa;IACzCA,0DADyC,EAAM,EACzC;IAENA,wDAAA,KAAAwL,sCAAA,qBAAkE;IAkBtCxL,4DAD5B,gBAA0B,gBACE,cAAQ;IAAAA,oDAAA,qBAAa;IAASA,0DAAT,EAAS,EAAM;IAC9DA,4DAAA,gBAAwB;IAAAA,oDAAA,SAAC;IAAAA,0DAAA,EAAM;IAE7BA,4DADF,gBAAgC,cACtB;IAAAA,oDAAA,IAAkD;IAC5DA,0DAD4D,EAAS,EAC/D;IAEJA,4DADF,gBAAyB,cACf;IAAAA,oDAAA,IAAgC;IAC1CA,0DAD0C,EAAS,EAC7C;IAEJA,4DADF,gBAAwB,cACd;IAAAA,oDAAA,IAA+B;IACzCA,0DADyC,EAAS,EAC5C;IAIJA,4DAHF,gBAEsD,cAC5C;IAAAA,oDAAA,IAA4C;IAI5DA,0DAJ4D,EAAS,EACzD,EACF,EACF,EACF;IAGJA,4DADF,eAA0B,mBAC4C;IAA9BA,wDAAA,mBAAAyL,yDAAA;MAAAzL,2DAAA,CAAAoL,IAAA;MAAA,MAAA3H,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAA4H,iBAAA,EAAmB;IAAA,EAAC;IACjErL,uDAAA,cAA4B;IAC5BA,oDAAA,mBACF;IAGNA,0DAHM,EAAS,EACL,EACF,EACF;;;;IA1DMA,uDAAA,IAA6B;IAA7BA,+DAAA,CAAAyD,MAAA,CAAAiI,uBAAA,CAA6B;IAOC1L,uDAAA,GAA4D;IAA5DA,gEAAA,gBAAAyD,MAAA,CAAAC,iBAAA,qBAAAD,MAAA,CAAAC,iBAAA,IAAAC,cAAA,cAA4D;IAMlD3D,uDAAA,GAAoB;IAApBA,wDAAA,YAAAyD,MAAA,CAAAC,iBAAA,CAAoB;IAqBpD1D,uDAAA,GAAkD;IAAlDA,gEAAA,OAAAyD,MAAA,CAAAG,6BAAA,GAAAN,OAAA,QAAkD;IAGlDtD,uDAAA,GAAgC;IAAhCA,gEAAA,OAAAyD,MAAA,CAAAkI,sBAAA,OAAgC;IAGhC3L,uDAAA,GAA+B;IAA/BA,gEAAA,OAAAyD,MAAA,CAAAI,qBAAA,OAA+B;IAGpC7D,uDAAA,EAAgD;IAChDA,yDADA,aAAAyD,MAAA,CAAAmI,uBAAA,OAAgD,aAAAnI,MAAA,CAAAmI,uBAAA,OACA;IAC3C5L,uDAAA,GAA4C;IAA5CA,gEAAA,OAAAyD,MAAA,CAAAmI,uBAAA,GAAAtI,OAAA,QAA4C;;;;;IAuDlDtD,4DAAA,kBAA0E;IACxEA,oDAAA,GACF;IAAAA,0DAAA,EAAS;;;;IAF8CA,wDAAA,UAAA6L,YAAA,CAAkB;IACvE7L,uDAAA,EACF;IADEA,gEAAA,MAAA6L,YAAA,MACF;;;;;IAoBN7L,4DADF,eAAuD,eACxB;IAC3BA,uDAAA,aAAsC;IACtCA,4DAAA,WAAM;IAAAA,oDAAA,wBAAiB;IAE3BA,0DAF2B,EAAO,EAC1B,EACF;;;;;IAuBAA,4DAAA,gBAA0D;IACxDA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;IADLA,uDAAA,EACF;IADEA,gEAAA,OAAAyD,MAAA,CAAAqI,iBAAA,CAAArI,MAAA,CAAAsI,uBAAA,QACF;;;;;IAwHM/L,4DAAA,eAC8C;IAC5CA,uDAAA,aAAmC;IACnCA,4DAAA,WAAM;IAAAA,oDAAA,GAA8E;IACtFA,0DADsF,EAAO,EACvF;;;;IADEA,uDAAA,GAA8E;IAA9EA,gEAAA,sCAAAgM,UAAA,CAAAC,qBAAA,kBAAAD,UAAA,CAAAC,qBAAA,CAAA3I,OAAA,mBAA8E;;;;;IAGtFtD,4DAAA,eAC+C;IAC7CA,uDAAA,aAA2C;IAEzCA,4DADF,eAA6B,eACA;IAAAA,oDAAA,yCAAwB;IAAAA,0DAAA,EAAM;IAEvDA,4DADF,eAA6B,WACrB;IAAAA,oDAAA,GAAqE;IAAAA,0DAAA,EAAO;IAClFA,4DAAA,WAAM;IAAAA,oDAAA,GAA2D;IAAAA,0DAAA,EAAO;IACxEA,4DAAA,iBAAyB;IAAAA,oDAAA,IAA4E;IAG3GA,0DAH2G,EAAO,EACxG,EACF,EACF;;;;IALMA,uDAAA,GAAqE;IAArEA,gEAAA,mBAAAgM,UAAA,CAAAC,qBAAA,kBAAAD,UAAA,CAAAC,qBAAA,CAAA3I,OAAA,mBAAqE;IACrEtD,uDAAA,GAA2D;IAA3DA,gEAAA,kBAAAgM,UAAA,CAAAf,YAAA,kBAAAe,UAAA,CAAAf,YAAA,CAAA3H,OAAA,mBAA2D;IACxCtD,uDAAA,GAA4E;IAA5EA,gEAAA,oBAAAgM,UAAA,CAAAE,eAAA,kBAAAF,UAAA,CAAAE,eAAA,CAAAC,UAAA,kBAAAH,UAAA,CAAAE,eAAA,CAAAC,UAAA,CAAA7I,OAAA,mBAA4E;;;;;IA1E7GtD,4DAFJ,eAAwF,eAC3D,eACA;IAAAA,oDAAA,GAAiC;IAAAA,0DAAA,EAAM;IAChEA,4DAAA,eAIQ;IACNA,uDAAA,aAGO;IACPA,oDAAA,GACF;IACFA,0DADE,EAAM,EACF;IAKAA,4DAHN,eAAgC,eACD,eACJ,gBACG;IACtBA,uDAAA,aAA6B;IAC7BA,oDAAA,6BACF;IAAAA,0DAAA,EAAM;IACNA,4DAAA,gBAAuC;IACrCA,oDAAA,IACF;IACFA,0DADE,EAAM,EACF;IAGJA,4DADF,gBAAuB,gBACG;IACtBA,uDAAA,aAAoC;IACpCA,oDAAA,2BACF;IAAAA,0DAAA,EAAM;IACNA,4DAAA,gBAAwB;IACtBA,oDAAA,IACF;IACFA,0DADE,EAAM,EACF;IAGJA,4DADF,gBAAuB,gBACG;IACtBA,uDAAA,aAA4B;IAC5BA,oDAAA,gBACF;IAAAA,0DAAA,EAAM;IACNA,4DAAA,gBAA+B;IAC7BA,oDAAA,IACF;IAEJA,0DAFI,EAAM,EACF,EACF;IAIFA,4DAFJ,gBAAiC,gBACF,iBACA;IAAAA,oDAAA,IAAqE;IAAAA,0DAAA,EAAO;IACvGA,4DAAA,iBAA+B;IAAAA,oDAAA,cAAC;IAAAA,0DAAA,EAAO;IACvCA,4DAAA,iBAA2B;IAAAA,oDAAA,IAAiC;IAAAA,0DAAA,EAAO;IACnEA,4DAAA,iBAA+B;IAAAA,oDAAA,SAAC;IAAAA,0DAAA,EAAO;IACvCA,4DAAA,iBAA6B;IAAAA,oDAAA,IAA0D;IACzFA,0DADyF,EAAO,EAC1F;IACNA,4DAAA,gBAA2B;IAAAA,oDAAA,qBAAa;IAC1CA,0DAD0C,EAAM,EAC1C;IAGNA,4DAAA,gBAAsC;IAOpCA,wDANA,KAAAoM,mDAAA,mBAC8C,KAAAC,mDAAA,oBAMC;IAarDrM,0DAFI,EAAM,EACF,EACF;;;;IAhFuBA,uDAAA,GAAiC;IAAjCA,+DAAA,CAAAgM,UAAA,CAAA/G,MAAA,CAAAqH,WAAA,GAAiC;IAErDtM,uDAAA,EAGE;IAHFA,wDAAA,YAAAA,6DAAA,KAAAwM,GAAA,EAAAR,UAAA,CAAAS,SAAA,GAAAT,UAAA,CAAAS,SAAA,EAGE;IACUzM,uDAAA,EAGb;IAHaA,wDAAA,YAAAA,6DAAA,KAAA0M,GAAA,EAAAV,UAAA,CAAAS,SAAA,GAAAT,UAAA,CAAAS,SAAA,EAGb;IACFzM,uDAAA,EACF;IADEA,gEAAA,MAAAgM,UAAA,CAAAS,SAAA,0CACF;IAWMzM,uDAAA,GACF;IADEA,gEAAA,OAAAgM,UAAA,CAAArI,cAAA,MACF;IASE3D,uDAAA,GACF;IADEA,gEAAA,SAAAgM,UAAA,CAAAW,gCAAA,kBAAAX,UAAA,CAAAW,gCAAA,CAAArJ,OAAA,oBACF;IASEtD,uDAAA,GACF;IADEA,gEAAA,MAAAgM,UAAA,CAAA5I,oBAAA,OACF;IAM2BpD,uDAAA,GAAqE;IAArEA,gEAAA,QAAAgM,UAAA,CAAAW,gCAAA,kBAAAX,UAAA,CAAAW,gCAAA,CAAArJ,OAAA,mBAAqE;IAErEtD,uDAAA,GAAiC;IAAjCA,+DAAA,CAAAgM,UAAA,CAAA5I,oBAAA,CAAiC;IAE/BpD,uDAAA,GAA0D;IAA1DA,gEAAA,QAAAgM,UAAA,CAAAC,qBAAA,kBAAAD,UAAA,CAAAC,qBAAA,CAAA3I,OAAA,mBAA0D;IAQnFtD,uDAAA,GAAsC;IAAtCA,wDAAA,SAAAgM,UAAA,CAAAE,eAAA,kBAAAF,UAAA,CAAAE,eAAA,CAAAU,QAAA,CAAsC;IAMtC5M,uDAAA,EAAuC;IAAvCA,wDAAA,WAAAgM,UAAA,CAAAE,eAAA,kBAAAF,UAAA,CAAAE,eAAA,CAAAU,QAAA,EAAuC;;;;;IA5EnD5M,4DAFJ,eAAsE,cACxC,SACtB;IACFA,uDAAA,YAA2B;IAC3BA,oDAAA,6BACA;IAAAA,4DAAA,gBAAoB;IAAAA,oDAAA,GAA0C;IAElEA,0DAFkE,EAAO,EAClE,EACD;IACNA,4DAAA,eAA0B;IACxBA,wDAAA,IAAA6M,4CAAA,qBAAwF;IAoF5F7M,0DADE,EAAM,EACF;;;;IAxFoBA,uDAAA,GAA0C;IAA1CA,+DAAA,CAAAyD,MAAA,CAAAqJ,6BAAA,CAAA5E,MAAA,CAA0C;IAIxClI,uDAAA,GAAgC;IAAhCA,wDAAA,YAAAyD,MAAA,CAAAqJ,6BAAA,CAAgC;;;;;IAiGtD9M,4DADF,eAA8E,eACjD;IACzBA,oDAAA,GACF;;IAAAA,0DAAA,EAAM;IAEJA,4DADF,eAA2B,eAC8D;IACrFA,oDAAA,GACF;IAAAA,0DAAA,EAAM;IACNA,4DAAA,eAA6B;IAAAA,oDAAA,GAAuB;IACtDA,0DADsD,EAAM,EACtD;IACNA,4DAAA,eAAyF;IACvFA,oDAAA,IACF;IACFA,0DADE,EAAM,EACF;;;;;IAXFA,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,OAAAgN,cAAA,CAAAC,KAAA,gBACF;IAE6BjN,uDAAA,GAA2D;IAA3DA,wDAAA,YAAAyD,MAAA,CAAAyJ,8BAAA,CAAAF,cAAA,CAAAG,IAAA,EAA2D;IACpFnN,uDAAA,EACF;IADEA,gEAAA,MAAAyD,MAAA,CAAA2J,8BAAA,CAAAJ,cAAA,CAAAG,IAAA,OACF;IAC6BnN,uDAAA,GAAuB;IAAvBA,+DAAA,CAAAgN,cAAA,CAAAK,MAAA,CAAuB;IAEzBrN,uDAAA,EAA2D;IAA3DA,wDAAA,YAAAyD,MAAA,CAAAyJ,8BAAA,CAAAF,cAAA,CAAAG,IAAA,EAA2D;IACtFnN,uDAAA,EACF;IADEA,gEAAA,MAAAgN,cAAA,CAAAG,IAAA,gCAAA1J,MAAA,CAAA6J,sBAAA,CAAAN,cAAA,CAAAlF,KAAA,OACF;;;;;IAnBF9H,4DAFJ,eAAgE,cAClC,SACtB;IACFA,uDAAA,aAAmC;IACnCA,oDAAA,iCACA;IAAAA,4DAAA,gBAAoB;IAAAA,oDAAA,GAAoC;IAE5DA,0DAF4D,EAAO,EAC5D,EACD;IACNA,4DAAA,eAA4B;IAC1BA,wDAAA,IAAAuN,4CAAA,qBAA8E;IAelFvN,0DADE,EAAM,EACF;;;;IAnBoBA,uDAAA,GAAoC;IAApCA,+DAAA,CAAAyD,MAAA,CAAA+J,uBAAA,CAAAtF,MAAA,CAAoC;IAI9BlI,uDAAA,GAA0B;IAA1BA,wDAAA,YAAAyD,MAAA,CAAA+J,uBAAA,CAA0B;;;;;IAkB1DxN,4DAAA,eAAuE;IACrEA,uDAAA,aAAkC;IAClCA,oDAAA,iDACF;IAAAA,0DAAA,EAAM;;;;;IAENA,4DAAA,eAA6E;IAC3EA,uDAAA,aAAkC;IAClCA,oDAAA,iDACF;IAAAA,0DAAA,EAAM;;;;;IAtMJA,4DAJJ,eAA2G,eAGhF,eACA;IACrBA,uDAAA,aAA+B;IAC/BA,oDAAA,GACF;;IAAAA,0DAAA,EAAM;IACNA,4DAAA,eAA2B;IACzBA,uDAAA,aAA4B;IAC5BA,oDAAA,GACF;IACFA,0DADE,EAAM,EACF;IAKJA,4DAFF,eAC2E,gBAC7C;IAC1BA,uDAAA,cAAgF;IAChFA,4DAAA,YAAM;IAAAA,oDAAA,IAA0E;IAAAA,0DAAA,EAAO;IACvFA,wDAAA,KAAAyN,uCAAA,oBAA0D;IAI9DzN,0DADE,EAAM,EACF;IAIJA,4DADF,gBAA+B,gBACF;IACzBA,uDAAA,aAAiC;IACjCA,oDAAA,8BACF;IAAAA,0DAAA,EAAM;IAIFA,4DAFJ,eAA2B,eACS,eACT;IAAAA,oDAAA,oBAAE;IAAAA,0DAAA,EAAM;IAE7BA,4DADF,eAA0B,gBACA;IAAAA,oDAAA,qBAAa;IAAAA,0DAAA,EAAM;IAC3CA,4DAAA,gBAAkC;IAAAA,oDAAA,IAAoE;IAE1GA,0DAF0G,EAAM,EACxG,EACF;IAGJA,4DADF,eAAiC,eACR;IAAAA,oDAAA,oBAAE;IAAAA,0DAAA,EAAM;IAE7BA,4DADF,eAA0B,gBACA;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAM;IAC1CA,4DAAA,gBAAkC;IAAAA,oDAAA,IAAmE;IAEzGA,0DAFyG,EAAM,EACvG,EACF;IAGJA,4DADF,eAAmC,eACV;IAAAA,oDAAA,oBAAE;IAAAA,0DAAA,EAAM;IAE7BA,4DADF,eAA0B,gBACA;IAAAA,oDAAA,qBAAa;IAAAA,0DAAA,EAAM;IAC3CA,4DAAA,gBAAmJ;IACjJA,oDAAA,IACF;IAEJA,0DAFI,EAAM,EACF,EACF;IAGJA,4DADF,gBAAkC,eACT;IAAAA,oDAAA,oBAAE;IAAAA,0DAAA,EAAM;IAE7BA,4DADF,eAA0B,gBACA;IAAAA,oDAAA,qBAAa;IAAAA,0DAAA,EAAM;IAC3CA,4DAAA,gBAAiC;IAAAA,oDAAA,IAAoE;IAI7GA,0DAJ6G,EAAM,EACvG,EACF,EACF,EACF;IAmINA,wDAhIA,KAAA0N,sCAAA,mBAAsE,KAAAC,sCAAA,mBAgGN,KAAAC,sCAAA,mBA2BO,KAAAC,sCAAA,mBAKM;IAK/E7N,0DAAA,EAAM;;;;IAtMAA,uDAAA,GACF;IADEA,gEAAA,MAAAA,yDAAA,QAAAyD,MAAA,CAAAqK,uBAAA,qBACF;IAGE9N,uDAAA,GACF;IADEA,gEAAA,MAAAyD,MAAA,CAAAsK,yBAAA,MACF;IAKG/N,uDAAA,EAAqE;IAArEA,wDAAA,YAAAyD,MAAA,CAAAsI,uBAAA,mCAAqE;IAEvD/L,uDAAA,GAA4D;IAA5DA,wDAAA,YAAAyD,MAAA,CAAAsI,uBAAA,0BAA4D;IACrE/L,uDAAA,GAA0E;IAA1EA,+DAAA,CAAAyD,MAAA,CAAAsI,uBAAA,8CAA0E;IACzE/L,uDAAA,EAA6B;IAA7BA,wDAAA,SAAAyD,MAAA,CAAAsI,uBAAA,CAA6B;IAkBE/L,uDAAA,IAAoE;IAApEA,+DAAA,CAAAyD,MAAA,CAAA6J,sBAAA,CAAA7J,MAAA,CAAAuK,mBAAA,CAAAhD,aAAA,OAAoE;IAQpEhL,uDAAA,GAAmE;IAAnEA,+DAAA,CAAAyD,MAAA,CAAA6J,sBAAA,CAAA7J,MAAA,CAAAuK,mBAAA,CAAA/C,YAAA,OAAmE;IAQ5EjL,uDAAA,GAA4D;IAACA,yDAA7D,cAAAyD,MAAA,CAAAuK,mBAAA,CAAAC,UAAA,WAA4D,cAAAxK,MAAA,CAAAuK,mBAAA,CAAAC,UAAA,WAA6D;IAChJjO,uDAAA,EACF;IADEA,gEAAA,MAAAyD,MAAA,CAAA6J,sBAAA,CAAA7J,MAAA,CAAAuK,mBAAA,CAAAC,UAAA,YACF;IAQiCjO,uDAAA,GAAoE;IAApEA,+DAAA,CAAAyD,MAAA,CAAA6J,sBAAA,CAAA7J,MAAA,CAAAuK,mBAAA,CAAAE,aAAA,OAAoE;IAOvFlO,uDAAA,EAA8C;IAA9CA,wDAAA,SAAAyD,MAAA,CAAAqJ,6BAAA,CAAA5E,MAAA,KAA8C;IAgG9ClI,uDAAA,EAAwC;IAAxCA,wDAAA,SAAAyD,MAAA,CAAA+J,uBAAA,CAAAtF,MAAA,KAAwC;IA2BxDlI,uDAAA,EAA0C;IAA1CA,wDAAA,SAAAyD,MAAA,CAAA+J,uBAAA,CAAAtF,MAAA,OAA0C;IAK1ClI,uDAAA,EAAgD;IAAhDA,wDAAA,SAAAyD,MAAA,CAAAqJ,6BAAA,CAAA5E,MAAA,OAAgD;;;;;IAStDlI,4DADF,eAAkF,eACxD;IACtBA,uDAAA,aAA4B;IAC9BA,0DAAA,EAAM;IACNA,4DAAA,SAAI;IAAAA,oDAAA,8BAAuB;IAAAA,0DAAA,EAAK;IAChCA,4DAAA,QAAG;IAAAA,oDAAA,oDAA6C;IAClDA,0DADkD,EAAI,EAChD;;;;;;IAcNA,4DAAA,kBAIkC;IAFhCA,wDAAA,mBAAAmO,iEAAA;MAAAnO,2DAAA,CAAAoO,IAAA;MAAA,MAAA3K,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAA4K,4BAAA,EAA8B;IAAA,EAAC;IAGxCrO,uDAAA,aAA+B;IAC/BA,oDAAA,0BACF;IAAAA,0DAAA,EAAS;;;;IAJPA,wDAAA,cAAAyD,MAAA,CAAAsI,uBAAA,CAAqC;;;;;;IAXvC/L,4DADF,eAA6D,kBACe;IAAlCA,wDAAA,mBAAAsO,wDAAA;MAAAtO,2DAAA,CAAAuO,IAAA;MAAA,MAAA9K,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAA+K,qBAAA,EAAuB;IAAA,EAAC;IACvExO,uDAAA,YAA4B;IAC5BA,oDAAA,eACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAA8E;IAAxCA,wDAAA,mBAAAyO,wDAAA;MAAAzO,2DAAA,CAAAuO,IAAA;MAAA,MAAA9K,MAAA,GAAAzD,2DAAA;MAAA,OAAAA,yDAAA,CAASyD,MAAA,CAAAiL,2BAAA,EAA6B;IAAA,EAAC;IAC3E1O,uDAAA,aAA4B;IAC5BA,oDAAA,GACF;IAAAA,0DAAA,EAAS;IACTA,wDAAA,IAAA2O,wCAAA,sBAIkC;IAIpC3O,0DAAA,EAAM;;;;IAVFA,uDAAA,GACF;IADEA,gEAAA,MAAAyD,MAAA,CAAAsI,uBAAA,kDACF;IAKG/L,uDAAA,EAA6B;IAA7BA,wDAAA,SAAAyD,MAAA,CAAAsI,uBAAA,CAA6B;;;AD58BhC,MAAOxK,cAAc;EAiFzBjC,YACUC,eAAgC,EAChCqP,mBAAwC,EACzCC,YAA0B,EACzBC,aAA4B,EAC5BtP,MAAc,EACduP,GAAsB;IALtB,KAAAxP,eAAe,GAAfA,eAAe;IACf,KAAAqP,mBAAmB,GAAnBA,mBAAmB;IACpB,KAAAC,YAAY,GAAZA,YAAY;IACX,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAtP,MAAM,GAANA,MAAM;IACN,KAAAuP,GAAG,GAAHA,GAAG;IAtFb,KAAAC,WAAW,GAAQ,IAAI;IACvB,KAAAC,OAAO,GAAGxM,gEAAgB,CAAC,CAAC;IAC5B,KAAAyM,KAAK,GAAW,EAAE;IAClB,KAAAC,WAAW,GAAuC,EAAE;IACpD,KAAAC,WAAW,GAA8B,EAAE;IAC3C,KAAAhJ,cAAc,GAA8B,EAAE;IAC9C,KAAAT,mBAAmB,GAA8B,EAAE;IACnD,KAAA0J,oBAAoB,GAAW,EAAE;IACjC,KAAAzI,SAAS,GAAY,KAAK;IAC1B,KAAA0I,gBAAgB,GAAY,KAAK,CAAC,CAAC;IACnC,KAAAC,YAAY,GAAW,EAAE;IAGzB;IACA,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,aAAa,GAAY,KAAK;IAC9B,KAAAC,WAAW,GAAQ,IAAI;IACvB,KAAAnI,YAAY,GAAQ;MAClBuB,KAAK,EAAE,EAAE;MACTtB,QAAQ,EAAE,EAAE;MACZmI,IAAI,EAAE,UAAU;MAChB3M,QAAQ,EAAE,EAAE;MACZ4M,MAAM,EAAE;KACT;IAED;IACA,KAAAC,mBAAmB,GAAY,KAAK;IACpC,KAAAzH,qBAAqB,GAAgB,IAAI;IACzC,KAAAN,mBAAmB,GAAiB,EAAE;IAEtC;IACA,KAAAgI,eAAe,GAAY,KAAK;IAChC,KAAAC,aAAa,GAAQ,IAAI;IAEzB,KAAAC,eAAe,GAAqB,CAAC,GAAGzN,gEAAgB,CAAC;IAEzD;IACA,KAAA0N,iBAAiB,GAAY,KAAK;IAClC,KAAAC,uBAAuB,GAAQ,IAAI;IACnC,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,eAAe,GAAW,EAAE;IAE5B;IACA,KAAAC,kBAAkB,GAAY,KAAK;IACnC,KAAAC,gBAAgB,GAAY,KAAK;IAEjC;IACA,KAAAC,gBAAgB,GAAY,KAAK;IACjC,KAAA3F,kBAAkB,GAAqB,EAAE;IACzC,KAAAlB,mBAAmB,GAAmC,EAAE;IACxD,KAAAhB,uBAAuB,GAA6D,IAAI;IAExF;IACQ,KAAA8H,mBAAmB,GAAQ,IAAI;IAC/B,KAAAC,iBAAiB,GAAQ,IAAI;IAC7B,KAAAC,aAAa,GAAgB,IAAI;IACjC,KAAAC,cAAc,GAAG,KAAK,CAAC,CAAC;IAEhC;IACA,KAAAC,gBAAgB,GAAY,KAAK;IACjC,KAAApN,iBAAiB,GAAU,EAAE;IAC7B,KAAAgI,uBAAuB,GAAW,EAAE;IAEpC;IACA,KAAAqF,mBAAmB,GAAY,KAAK;IACpC,KAAAhD,yBAAyB,GAAW,EAAE;IACtC,KAAAD,uBAAuB,GAAS,IAAIkD,IAAI,EAAE,CAAC,CAAC;IAC5C,KAAAhD,mBAAmB,GAAQ,IAAI;IAC/B,KAAAlB,6BAA6B,GAAU,EAAE;IACzC,KAAAU,uBAAuB,GAAU,EAAE;IACnC,KAAAyD,qBAAqB,GAAa,EAAE;IACpC,KAAAC,iBAAiB,GAAY,KAAK;IAClC,KAAAnF,uBAAuB,GAAQ,IAAI,CAAC,CAAC;IAErC;IACQ,KAAAoF,qBAAqB,GAAgB,IAAI;IAChC,KAAAC,yBAAyB,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IAU1D;IACA,MAAMC,aAAa,GAAG,IAAI,CAAC9R,eAAe,CAAC+R,mBAAmB,EAAE;IAChE,IAAI,CAAC/B,YAAY,GAAG,IAAI,CAAChQ,eAAe,CAACgS,2BAA2B,CAACF,aAAa,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEjG;IACA,IAAI,CAAC1D,uBAAuB,GAAGuD,aAAa;IAE5C;IACA,IAAI,CAACtB,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACJ,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACQ,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACM,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAACK,gBAAgB,GAAG,KAAK;IAE7B;IACA,IAAI,CAACW,eAAe,EAAE;IAEtB;IACA,IAAI,CAAC,IAAI,CAACjC,UAAU,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;MACxC,MAAMiC,WAAW,GAAG,IAAI,CAACnS,eAAe,CAACoS,qBAAqB,CAACN,aAAa,CAAC;MAC7E,MAAMO,QAAQ,GAAG,IAAI,CAACrS,eAAe,CAACsS,mBAAmB,CAACR,aAAa,CAAC;MAExE,IAAI,CAAC7B,UAAU,GAAG,IAAI,CAACjQ,eAAe,CAACgS,2BAA2B,CAACG,WAAW,CAAC;MAC/E,IAAI,CAACjC,UAAU,GAAG,IAAI,CAAClQ,eAAe,CAACgS,2BAA2B,CAACK,QAAQ,CAAC;;EAGhF;EAEA;EACQH,eAAeA,CAAA;IACrB,IAAI;MACF,MAAMK,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MAC1D,IAAIF,YAAY,EAAE;QAChB,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;QACxC,IAAI,CAACtC,UAAU,GAAGyC,OAAO,CAACzC,UAAU,IAAI,EAAE;QAC1C,IAAI,CAACC,UAAU,GAAGwC,OAAO,CAACxC,UAAU,IAAI,EAAE;QAC1C,IAAI,CAACJ,oBAAoB,GAAG4C,OAAO,CAAC5C,oBAAoB,IAAI,EAAE;QAC9D,IAAI,CAACE,YAAY,GAAG0C,OAAO,CAAC1C,YAAY,IAAI,EAAE;;KAEjD,CAAC,OAAO6C,KAAK,EAAE,C;EAElB;EAEA;EACQC,eAAeA,CAAA;IACrB,IAAI;MACF,MAAMJ,OAAO,GAAG;QACdzC,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BC,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BJ,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;QAC/CE,YAAY,EAAE,IAAI,CAACA;OACpB;MACDwC,YAAY,CAACO,OAAO,CAAC,eAAe,EAAEJ,IAAI,CAACK,SAAS,CAACN,OAAO,CAAC,CAAC;KAC/D,CAAC,OAAOG,KAAK,EAAE,C;EAElB;EAEA3S,QAAQA,CAAA;IACN,IAAI,CAACF,eAAe,CAACG,YAAY,CAACC,SAAS,CAACC,IAAI,IAAG;MACjD,IAAI,CAACoP,WAAW,GAAGpP,IAAI;MACvB,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACiQ,IAAI,KAAK,OAAO,EAAE;QAClC,IAAI,CAACrQ,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,CAAC;IAEF;IACA,IAAI,CAACyS,SAAS,EAAE;IAChB,IAAI,CAACC,eAAe,EAAE,CAAC,CAAC;IACxB,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,mBAAmB,EAAE,CAAC,CAAC;EAC9B;EAEMD,eAAeA,CAAA;IAAA,IAAAE,KAAA;IAAA,OAAAC,4JAAA;MACnB,IAAI;QACF;QACA,MAAMD,KAAI,CAACrT,eAAe,CAACuT,uBAAuB,EAAE;QACpD;QACA,MAAMF,KAAI,CAACG,SAAS,EAAE;OACvB,CAAC,OAAOX,KAAK,EAAE;QACd;QACAQ,KAAI,CAAClD,KAAK,GAAG,CACX;UACEsD,EAAE,EAAE,GAAG;UACPhK,KAAK,EAAE,mBAAmB;UAC1B6G,IAAI,EAAE,OAAO;UACb3M,QAAQ,EAAE,EAAE;UACZ4M,MAAM,EAAE,IAAI;UACZpH,SAAS,EAAE,IAAIsI,IAAI;SACpB,EACD;UACEgC,EAAE,EAAE,GAAG;UACPhK,KAAK,EAAE,uBAAuB;UAC9B6G,IAAI,EAAE,UAAU;UAChB3M,QAAQ,EAAE,YAAY;UACtB4M,MAAM,EAAE,IAAI;UACZpH,SAAS,EAAE,IAAIsI,IAAI;SACpB,EACD;UACEgC,EAAE,EAAE,GAAG;UACPhK,KAAK,EAAE,uBAAuB;UAC9B6G,IAAI,EAAE,UAAU;UAChB3M,QAAQ,EAAE,YAAY;UACtB4M,MAAM,EAAE,KAAK;UACbpH,SAAS,EAAE,IAAIsI,IAAI;SACpB,CACF;QACD4B,KAAI,CAAChE,mBAAmB,CAACqE,SAAS,CAAC,iFAAiF,CAAC;;IACtH;EACH;EAEAlM,YAAYA,CAAC9B,MAAsB;IACjC,MAAMiO,GAAG,GAAG,IAAI,CAAC3T,eAAe,CAAC+R,mBAAmB,EAAE;IACtD,MAAM,CAAC6B,KAAK,EAAEC,OAAO,CAAC,GAAGnO,MAAM,CAACmC,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC;IACpD,MAAMpK,SAAS,GAAG,IAAI4J,IAAI,CAACkC,GAAG,CAAC;IAC/B9L,SAAS,CAACiM,QAAQ,CAACC,QAAQ,CAACH,KAAK,CAAC,EAAEG,QAAQ,CAACF,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAG5D,OAAOF,GAAG,IAAI9L,SAAS;EACzB;EAEA7B,aAAaA,CAACN,MAAsB;IAClC,MAAMoM,aAAa,GAAG,IAAI,CAAC9R,eAAe,CAAC+R,mBAAmB,EAAE;IAChE,MAAMiC,WAAW,GAAG,IAAI,CAAChU,eAAe,CAACiU,yBAAyB,CAACnC,aAAa,CAAC;IACjF,MAAMoC,QAAQ,GAAG,GAAGF,WAAW,IAAItO,MAAM,CAACpC,IAAI,EAAE;IAGhD;IACA,OAAO,IAAI,CAACuM,WAAW,CAACqE,QAAQ,CAAC;EACnC;EAEA;EACAC,eAAeA,CAACzO,MAAsB;IACpC,MAAM0O,UAAU,GAAG,IAAI,CAACpO,aAAa,CAACN,MAAM,CAAC;IAC7C;IACA,OAAO,CAAC,EAAE0O,UAAU,EAAEC,OAAO,IAAID,UAAU,EAAElO,aAAa,CAAC;EAC7D;EAEA;EACA4B,cAAcA,CAACpC,MAAsB;IACnC,MAAM0O,UAAU,GAAG,IAAI,CAACpO,aAAa,CAACN,MAAM,CAAC;IAC7C;IACA,OAAO,CAAC,CAAE0O,UAAU,EAAElO,aAAc;EACtC;EAEA;EACAoO,sBAAsBA,CAAC5O,MAAsB;IAC3C,OAAO,CAAC,EAAE,IAAI,CAACmB,cAAc,CAACnB,MAAM,CAACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACwE,cAAc,CAACpC,MAAM,CAAC,CAAC;EAC7E;EAEA;EACM6O,cAAcA,CAACL,QAAgB;IAAA,IAAAM,MAAA;IAAA,OAAAlB,4JAAA;MACnC,IAAI;QAEF,MAAM5N,MAAM,SAAS8O,MAAI,CAACxU,eAAe,CAACyU,aAAa,CAACP,QAAQ,CAAC;QAEjE,IAAIxO,MAAM,EAAE;UACV;UACA8O,MAAI,CAAC3E,WAAW,CAACqE,QAAQ,CAAC,GAAGxO,MAAM;UAEnC;UACA,MAAMgP,UAAU,GAAGhP,MAAM,CAACA,MAAM;UAChC,IAAIA,MAAM,CAACQ,aAAa,EAAE;YACxBsO,MAAI,CAAC3N,cAAc,CAAC6N,UAAU,CAAC,GAAGhP,MAAM,CAACQ,aAAa;;UAGxD;UACAsO,MAAI,CAAChF,GAAG,CAACmF,aAAa,EAAE;SACzB,MAAM,C;OAER,CAAC,OAAO9B,KAAU,EAAE;QAEnB;QACA,IAAIA,KAAK,EAAE+B,UAAU,IAAI/B,KAAK,EAAEgC,IAAI,KAAK,OAAO,EAAE;UAChD,IAAI;YACF,MAAMC,UAAU,SAASN,MAAI,CAACxU,eAAe,CAAC+U,mBAAmB,CAACb,QAAQ,CAAC;YAC3E,IAAIY,UAAU,IAAIA,UAAU,CAACnM,MAAM,GAAG,CAAC,EAAE;cACvC,MAAMqM,IAAI,GAAGF,UAAU,CAAC,CAAC,CAAC;cAE1B;cACA,MAAMpP,MAAM,GAAW;gBACrB+N,EAAE,EAAES,QAAQ;gBACZxG,KAAK,EAAEsH,IAAI,CAACtH,KAAK,GAAG,IAAI+D,IAAI,CAACuD,IAAI,CAACtH,KAAK,CAAC,GAAG,IAAI+D,IAAI,EAAE;gBACrD/L,MAAM,EAAEsP,IAAI,CAACtP,MAAM,IAAIwO,QAAQ,CAACjC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7CgD,UAAU,EAAED,IAAI,CAACE,WAAW,GAAG,IAAIzD,IAAI,CAACuD,IAAI,CAACE,WAAW,CAAC,GAAG,IAAIzD,IAAI,EAAE;gBACtEvL,aAAa,EAAE8O,IAAI,CAAC5Q,cAAc,IAAI,EAAE;gBACxCgC,mBAAmB,EAAE4O,IAAI,CAACnR,oBAAoB,IAAI,CAAC;gBACnDc,YAAY,EAAEqQ,IAAI,CAACvJ,aAAa,IAAI,CAAC;gBACrC0J,WAAW,EAAEH,IAAI,CAACtJ,YAAY,IAAI,CAAC;gBACnC0J,YAAY,EAAEJ,IAAI,CAACrJ,aAAa,IAAI,CAAC;gBACrC0I,OAAO,EAAEW,IAAI,CAACX,OAAO,IAAI;eAC1B;cAED;cACAG,MAAI,CAAC3E,WAAW,CAACqE,QAAQ,CAAC,GAAGxO,MAAM;cAEnC;cACA,IAAIA,MAAM,CAACQ,aAAa,EAAE;gBACxBsO,MAAI,CAAC3N,cAAc,CAACnB,MAAM,CAACA,MAAM,CAAC,GAAGA,MAAM,CAACQ,aAAa;;cAG3DsO,MAAI,CAAChF,GAAG,CAACmF,aAAa,EAAE;;WAE3B,CAAC,OAAOU,aAAa,EAAE,C;;;IAG3B;EACH;EAEA;EACMC,oBAAoBA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAjC,4JAAA;MACxB,IAAI;QACF,MAAMxB,aAAa,GAAGyD,MAAI,CAACvV,eAAe,CAAC+R,mBAAmB,EAAE;QAChE,MAAMiC,WAAW,GAAGuB,MAAI,CAACvV,eAAe,CAACiU,yBAAyB,CAACnC,aAAa,CAAC;QAEjF,KAAK,MAAMpM,MAAM,IAAI6P,MAAI,CAAC5E,eAAe,EAAE;UACzC,MAAMuD,QAAQ,GAAG,GAAGF,WAAW,IAAItO,MAAM,CAACpC,IAAI,EAAE;UAChD,MAAMiS,MAAI,CAAChB,cAAc,CAACL,QAAQ,CAAC;;OAGtC,CAAC,OAAOrB,KAAK,EAAE,C;IACf;EACH;EAEMI,SAASA,CAAA;IAAA,IAAAuC,MAAA;IAAA,OAAAlC,4JAAA;MACb,IAAI;QACF;QACA,IAAI,CAACkC,MAAI,CAACzF,gBAAgB,EAAE;UAC1ByF,MAAI,CAACnO,SAAS,GAAG,IAAI;;QAGvB;QACAmO,MAAI,CAACC,UAAU,EAAE;QAEjB;QACA,IAAID,MAAI,CAACvF,UAAU,IAAIuF,MAAI,CAACtF,UAAU,EAAE;UACtC,MAAMsF,MAAI,CAACE,6BAA6B,EAAE;UAC1C;;QAGF;QACA,IAAIC,iBAAuB;QAE3B,IAAIH,MAAI,CAACxF,YAAY,EAAE;UACrB;UACA2F,iBAAiB,GAAG,IAAIlE,IAAI,CAAC+D,MAAI,CAACxF,YAAY,CAAC;SAChD,MAAM;UACL;UACA2F,iBAAiB,GAAGH,MAAI,CAACxV,eAAe,CAAC+R,mBAAmB,EAAE;;QAGhE6D,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,iBAAiB,CAAC;QAEzE;QACA,MAAMG,aAAa,SAASN,MAAI,CAACxV,eAAe,CAAC+V,qBAAqB,CACpEJ,iBAAiB,EACjBH,MAAI,CAAC1F,oBAAoB,CAC1B;QAED;QACA0F,MAAI,CAAC7F,KAAK,GAAGmG,aAAa,CAACnG,KAAK;QAChC6F,MAAI,CAAC5F,WAAW,GAAGkG,aAAa,CAAClG,WAAW;QAC5C4F,MAAI,CAACrE,mBAAmB,GAAG2E,aAAa,CAACE,aAAa;QACtDR,MAAI,CAACnE,aAAa,GAAG,IAAII,IAAI,EAAE;QAE/BmE,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;UACzCI,MAAM,EAAET,MAAI,CAAC7F,KAAK,CAAChH,MAAM;UACzBhE,YAAY,EAAEmR,aAAa,CAACE,aAAa,CAACrR;SAC3C,CAAC;QAEF;QACA6Q,MAAI,CAAChG,GAAG,CAACmF,aAAa,EAAE;OAEzB,CAAC,OAAO9B,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC3D2C,MAAI,CAAC7F,KAAK,GAAG,EAAE;QACf6F,MAAI,CAAC5F,WAAW,GAAG,EAAE;QACrB4F,MAAI,CAACC,UAAU,EAAE;QACjBD,MAAI,CAACnG,mBAAmB,CAACqE,SAAS,CAAC,4BAA4B,CAAC;OACjE,SAAS;QACR;QACA,IAAI,CAAC8B,MAAI,CAACzF,gBAAgB,EAAE;UAC1ByF,MAAI,CAACnO,SAAS,GAAG,KAAK;;;IAEzB;EACH;EAEA;EACMqO,6BAA6BA,CAAA;IAAA,IAAAQ,MAAA;IAAA,OAAA5C,4JAAA;MACjC,IAAI,CAAC4C,MAAI,CAACjG,UAAU,IAAI,CAACiG,MAAI,CAAChG,UAAU,EAAE;QACxC,MAAMgG,MAAI,CAACC,mBAAmB,EAAE;QAChC;;MAGF,IAAI;QACFP,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEK,MAAI,CAACjG,UAAU,EAAE,OAAO,EAAEiG,MAAI,CAAChG,UAAU,CAAC;QAE9F;QACA,MAAMkG,aAAa,GAAGF,MAAI,CAAClW,eAAe,CAACqW,uBAAuB,CAACH,MAAI,CAACjG,UAAU,CAAC;QACnF,MAAMqG,aAAa,GAAGJ,MAAI,CAAClW,eAAe,CAACqW,uBAAuB,CAACH,MAAI,CAAChG,UAAU,CAAC;QAEnF;QACA,IAAIkG,aAAa,GAAGE,aAAa,EAAE;UACjCJ,MAAI,CAAC7G,mBAAmB,CAACqE,SAAS,CAAC,sDAAsD,CAAC;UAC1FwC,MAAI,CAACvG,KAAK,GAAG,EAAE;UACfuG,MAAI,CAACtG,WAAW,GAAG,EAAE;UACrB;;QAGF;QACA,MAAMkG,aAAa,SAASI,MAAI,CAAClW,eAAe,CAACuW,4BAA4B,CAC3EH,aAAa,EACbE,aAAa,EACbJ,MAAI,CAACpG,oBAAoB,CAC1B;QAED;QACAoG,MAAI,CAACvG,KAAK,GAAGmG,aAAa,CAACnG,KAAK;QAChCuG,MAAI,CAACtG,WAAW,GAAGkG,aAAa,CAAClG,WAAW;QAE5C;QACA,MAAMoG,aAAa,SAASE,MAAI,CAAClW,eAAe,CAACwW,qBAAqB,CACpEJ,aAAa,EACbE,aAAa,EACbJ,MAAI,CAACpG,oBAAoB,CAC1B;QAEDoG,MAAI,CAAC/E,mBAAmB,GAAG6E,aAAa;QACxCE,MAAI,CAAC9E,iBAAiB,GAAG4E,aAAa,CAACS,gBAAgB;QACvDP,MAAI,CAAC7E,aAAa,GAAG,IAAII,IAAI,EAAE;QAE/BmE,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE;UAClDI,MAAM,EAAEC,MAAI,CAACvG,KAAK,CAAChH,MAAM;UACzBhE,YAAY,EAAEqR,aAAa,CAACrR;SAC7B,CAAC;QAEF;QACAuR,MAAI,CAAC1G,GAAG,CAACmF,aAAa,EAAE;OAEzB,CAAC,OAAO9B,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDqD,MAAI,CAAC7G,mBAAmB,CAACqE,SAAS,CAAC,8BAA8B,GAAGb,KAAK,CAAC;QAC1EqD,MAAI,CAACvG,KAAK,GAAG,EAAE;QACfuG,MAAI,CAACtG,WAAW,GAAG,EAAE;QACrBsG,MAAI,CAACT,UAAU,EAAE;;IAClB;EACH;EAEA;EACQA,UAAUA,CAAA;IAChB,IAAI,CAACtE,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,aAAa,GAAG,IAAI;EAC3B;EAEA;EACQqF,YAAYA,CAAA;IAClB,IAAI,CAAC,IAAI,CAACrF,aAAa,IAAI,CAAC,IAAI,CAACF,mBAAmB,EAAE;MACpD,OAAO,KAAK;;IAEd,OAAQ,IAAIM,IAAI,EAAE,CAACkF,OAAO,EAAE,GAAG,IAAI,CAACtF,aAAa,CAACsF,OAAO,EAAE,GAAI,IAAI,CAACrF,cAAc;EACpF;EAGAsF,cAAcA,CAACC,MAAc;IAC3B,OAAO,IAAI,CAACjH,WAAW,CAACiH,MAAM,CAAC,IAAI,EAAE;EACvC;EAEMC,gBAAgBA,CAACpR,MAAsB;IAAA,IAAAqR,MAAA;IAAA,OAAAzD,4JAAA;MAC3C,MAAMhK,aAAa,GAAGyN,MAAI,CAAClQ,cAAc,CAACnB,MAAM,CAACpC,IAAI,CAAC;MAEtD,IAAI,CAACgG,aAAa,EAAE;QAClByN,MAAI,CAAC1H,mBAAmB,CAACqE,SAAS,CAAC,qCAAqC,CAAC;QACzE;;MAGF;MACA,IAAI,CAACqD,MAAI,CAACtH,WAAW,EAAE;QACrBsH,MAAI,CAAC1H,mBAAmB,CAACqE,SAAS,CAAC,6DAA6D,CAAC;QACjGqD,MAAI,CAAC9W,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC;;MAGF;MACA,MAAMuW,MAAI,CAAC9P,gBAAgB,CAACvB,MAAM,EAAE4D,aAAa,CAAC;IAAC;EACrD;EAEc0N,sBAAsBA,CAAAC,EAAA,EAAAC,GAAA,EAA0E;IAAA,IAAAC,MAAA;IAAA,OAAA7D,4JAAA,YAAzE5N,MAAsB,EAAE4D,aAAqB,EAAE8N,aAAA,GAAwB,EAAE;MAC5G,MAAMtF,aAAa,GAAGqF,MAAI,CAACnX,eAAe,CAAC+R,mBAAmB,EAAE;MAEhE,MAAMsF,WAAW,SAASF,MAAI,CAACnX,eAAe,CAACsX,uBAAuB,CAACxF,aAAa,EAAEpM,MAAM,CAACpC,IAAI,CAAC;MAElG,IAAIqB,YAAY,GAAG,CAAC;MACpB,IAAIwQ,WAAW,GAAG,CAAC;MAEnB,KAAK,MAAMoC,IAAI,IAAIF,WAAW,EAAE;QAC9B1S,YAAY,IAAI4S,IAAI,CAACnO,KAAK;QAE1B,MAAMoO,OAAO,SAASL,MAAI,CAACnX,eAAe,CAAC4W,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;QAClE,KAAK,MAAMgE,MAAM,IAAID,OAAO,EAAE;UAC5B,IAAIC,MAAM,CAACjT,MAAM,CAACC,QAAQ,EAAE,KAAK6E,aAAa,EAAE;YAC9C6L,WAAW,IAAIsC,MAAM,CAAClP,KAAK,GAAG6O,aAAa;;;;MAKjD,MAAMhC,YAAY,GAAGzQ,YAAY,GAAGwQ,WAAW;MAE/C;MACA,MAAM,CAACvB,KAAK,EAAEC,OAAO,CAAC,GAAGnO,MAAM,CAACmC,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC;MACpD,MAAMgD,UAAU,GAAG,IAAIxD,IAAI,EAAE;MAC7BwD,UAAU,CAACnB,QAAQ,CAACC,QAAQ,CAACH,KAAK,CAAC,EAAEG,QAAQ,CAACF,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAE7D,MAAMsD,MAAI,CAACnX,eAAe,CAAC0X,oBAAoB,CAAC;QAC9ChK,KAAK,EAAEoE,aAAa;QACpBpM,MAAM,EAAEA,MAAM,CAACpC,IAAI;QACnB2R,UAAU;QACV/O,aAAa,EAAEoD,aAAa;QAC5BlD,mBAAmB,EAAEgR,aAAa;QAClCzS,YAAY;QACZwQ,WAAW;QACXC,YAAY;QACZf,OAAO,EAAE;OACV,CAAC;IAAC,GAAAsD,KAAA,OAAAC,SAAA;EACL;EAEA;EACc1E,eAAeA,CAAA;IAAA,IAAA2E,MAAA;IAAA,OAAAvE,4JAAA;MAC3B,IAAI;QACF,MAAMxB,aAAa,GAAG+F,MAAI,CAAC7X,eAAe,CAAC+R,mBAAmB,EAAE;QAEhE;QACA8F,MAAI,CAAChI,WAAW,GAAG,EAAE;QAErB;QACA,KAAK,MAAMnK,MAAM,IAAImS,MAAI,CAACnI,OAAO,EAAE;UACjC,IAAI;YACF,MAAMwE,QAAQ,GAAG,GAAG2D,MAAI,CAAC7X,eAAe,CAACiU,yBAAyB,CAACnC,aAAa,CAAC,IAAIpM,MAAM,CAACpC,IAAI,EAAE;YAClG,MAAM8Q,UAAU,SAASyD,MAAI,CAAC7X,eAAe,CAACyU,aAAa,CAACP,QAAQ,CAAC;YAErE,IAAIE,UAAU,EAAE;cACdyD,MAAI,CAAChI,WAAW,CAACqE,QAAQ,CAAC,GAAGE,UAAU,CAAC,CAAC;cAEzC;cACAyD,MAAI,CAAChR,cAAc,CAACnB,MAAM,CAACpC,IAAI,CAAC,GAAG8Q,UAAU,CAAClO,aAAa,IAAI,EAAE;cACjE2R,MAAI,CAACzR,mBAAmB,CAACV,MAAM,CAACpC,IAAI,CAAC,GAAG8Q,UAAU,CAAChO,mBAAmB,IAAI,EAAE;;WAE/E,CAAC,OAAOyM,KAAU,EAAE;YAEnB;YACA,IAAIA,KAAK,EAAEiF,MAAM,KAAK,GAAG,IAAIjF,KAAK,EAAEgC,IAAI,KAAK,OAAO,EAAE;cACpD;YAAA;;;QAMN;QACAgD,MAAI,CAACrI,GAAG,CAACmF,aAAa,EAAE;OACzB,CAAC,OAAO9B,KAAK,EAAE,C;IACf;EACH;EAEA;EACckF,cAAcA,CAACrD,UAAkB,EAAEpL,aAAqB,EAAE8N,aAAqB;IAAA,IAAAY,MAAA;IAAA,OAAA1E,4JAAA;MAC3F,IAAI;QACF,MAAMxB,aAAa,GAAGkG,MAAI,CAAChY,eAAe,CAAC+R,mBAAmB,EAAE;QAChE,MAAMmC,QAAQ,GAAG,GAAG8D,MAAI,CAAChY,eAAe,CAACiU,yBAAyB,CAACnC,aAAa,CAAC,IAAI4C,UAAU,EAAE;QAEjG;QACAsD,MAAI,CAACnR,cAAc,CAAC6N,UAAU,CAAC,GAAGpL,aAAa;QAC/C0O,MAAI,CAAC5R,mBAAmB,CAACsO,UAAU,CAAC,GAAG0C,aAAa;QAEpD;QACA,MAAMY,MAAI,CAACzD,cAAc,CAACL,QAAQ,CAAC;QAEnC;QACA,IAAI,CAAC8D,MAAI,CAACnI,WAAW,CAACqE,QAAQ,CAAC,EAAE;UAC/B8D,MAAI,CAACnI,WAAW,CAACqE,QAAQ,CAAC,GAAG;YAC3BT,EAAE,EAAES,QAAQ;YACZxG,KAAK,EAAEoE,aAAa;YACpBpM,MAAM,EAAEgP,UAAU;YAClBO,UAAU,EAAEnD,aAAa;YACzB5L,aAAa,EAAEoD,aAAa;YAC5BlD,mBAAmB,EAAEgR,aAAa;YAClCzS,YAAY,EAAE,CAAC;YACfwQ,WAAW,EAAE,CAAC;YACdC,YAAY,EAAE,CAAC;YACff,OAAO,EAAE;WACA;;QAGb;QACA2D,MAAI,CAACxI,GAAG,CAACmF,aAAa,EAAE;QAExB;QACAsD,UAAU,cAAA3E,4JAAA,CAAC,aAAW;UACpB,MAAM0E,MAAI,CAACzD,cAAc,CAACL,QAAQ,CAAC;QACrC,CAAC,GAAE,IAAI,CAAC;OAET,CAAC,OAAOrB,KAAK,EAAE;QACd;QACAmF,MAAI,CAACnR,cAAc,CAAC6N,UAAU,CAAC,GAAGpL,aAAa;QAC/C0O,MAAI,CAAC5R,mBAAmB,CAACsO,UAAU,CAAC,GAAG0C,aAAa;QACpDY,MAAI,CAACxI,GAAG,CAACmF,aAAa,EAAE;;IACzB;EACH;EAGAuD,aAAaA,CAAA;IACX,OAAO,IAAI,CAACvI,KAAK,CAACwI,MAAM,CAAC,CAAC/O,KAAK,EAAEmO,IAAI,KAAKnO,KAAK,GAAGmO,IAAI,CAACnO,KAAK,EAAE,CAAC,CAAC;EAClE;EAEAgP,kBAAkBA,CAAA;IAChB,MAAMC,OAAO,GAAwD,EAAE;IAEvE,KAAK,MAAMd,IAAI,IAAI,IAAI,CAAC5H,KAAK,EAAE;MAC7B,IAAI,CAAC0I,OAAO,CAACd,IAAI,CAAC5T,QAAQ,CAAC,EAAE;QAC3B0U,OAAO,CAACd,IAAI,CAAC5T,QAAQ,CAAC,GAAG;UAAEyF,KAAK,EAAE,CAAC;UAAEkP,KAAK,EAAE;QAAC,CAAE;;MAEjDD,OAAO,CAACd,IAAI,CAAC5T,QAAQ,CAAC,CAACyF,KAAK,IAAImO,IAAI,CAACnO,KAAK;MAC1CiP,OAAO,CAACd,IAAI,CAAC5T,QAAQ,CAAC,CAAC2U,KAAK,IAAI,CAAC;;IAGnC,OAAOC,MAAM,CAACC,OAAO,CAACH,OAAO,CAAC,CAACI,GAAG,CAAC,CAAC,CAACnV,IAAI,EAAE0R,IAAI,CAAC,MAAM;MACpD1R,IAAI;MACJ8F,KAAK,EAAE4L,IAAI,CAAC5L,KAAK;MACjBkP,KAAK,EAAEtD,IAAI,CAACsD;KACb,CAAC,CAAC;EACL;EAGA;EACAI,eAAeA,CAAA;IACb;IACA,IAAI,IAAI,CAAChC,YAAY,EAAE,IAAI,IAAI,CAACvF,mBAAmB,EAAE;MACnD,OAAO,IAAI,CAACA,mBAAmB,CAACxM,YAAY;;IAG9C;IACA,OAAO,IAAI,CAACgL,KAAK,CAACwI,MAAM,CAAC,CAAC/O,KAAK,EAAEmO,IAAI,KAAKnO,KAAK,GAAGmO,IAAI,CAACnO,KAAK,EAAE,CAAC,CAAC;EAClE;EAEAuP,cAAcA,CAAA;IACZ;IACA,IAAI,IAAI,CAACjC,YAAY,EAAE,IAAI,IAAI,CAACvF,mBAAmB,EAAE;MACnD,OAAO,IAAI,CAACA,mBAAmB,CAACgE,WAAW;;IAG7C;IACA,IAAIA,WAAW,GAAG,CAAC;IAEnB;IACA,KAAK,MAAMoC,IAAI,IAAI,IAAI,CAAC5H,KAAK,EAAE;MAC7B,MAAMiJ,cAAc,GAAG,IAAI,CAAClJ,OAAO,CAACmJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACxV,IAAI,KAAKiU,IAAI,CAAC7R,MAAM,CAAC;MACrE,IAAIkT,cAAc,EAAE;QAClB,MAAMxE,UAAU,GAAG,IAAI,CAACpO,aAAa,CAAC4S,cAAc,CAAC;QACrD,IAAIxE,UAAU,IAAIA,UAAU,CAACC,OAAO,IAAID,UAAU,CAAClO,aAAa,EAAE;UAChE,MAAM0J,WAAW,GAAG,IAAI,CAACgH,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;UAChD,KAAK,MAAMgE,MAAM,IAAI7H,WAAW,EAAE;YAChC,IAAI6H,MAAM,CAACjT,MAAM,CAACC,QAAQ,EAAE,KAAK2P,UAAU,CAAClO,aAAa,CAACzB,QAAQ,EAAE,EAAE;cACpE,MAAMsU,MAAM,GAAG3E,UAAU,CAAChO,mBAAmB,IAAI,EAAE;cACnD+O,WAAW,IAAIsC,MAAM,CAAClP,KAAK,GAAGwQ,MAAM;;;;;;IAO9C,OAAO5D,WAAW;EACpB;EAEA6D,eAAeA,CAAA;IACb,OAAO,IAAI,CAACN,eAAe,EAAE,GAAG,IAAI,CAACC,cAAc,EAAE;EACvD;EAEAM,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACtJ,KAAK,CAAChH,MAAM;EAC1B;EAEA;EACMuQ,cAAcA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAA7F,4JAAA;MAClB,IAAI;QACF6F,MAAI,CAACpJ,gBAAgB,GAAG,IAAI;QAE5B;QACA,IAAIoJ,MAAI,CAAClJ,UAAU,IAAIkJ,MAAI,CAACjJ,UAAU,EAAE;UACtC,MAAMD,UAAU,GAAG,IAAIwB,IAAI,CAAC0H,MAAI,CAAClJ,UAAU,CAAC;UAC5C,MAAMC,UAAU,GAAG,IAAIuB,IAAI,CAAC0H,MAAI,CAACjJ,UAAU,CAAC;UAE5C,IAAID,UAAU,GAAGC,UAAU,EAAE;YAC3BiJ,MAAI,CAAC9J,mBAAmB,CAACqE,SAAS,CAAC,sDAAsD,CAAC;YAC1FyF,MAAI,CAACpJ,gBAAgB,GAAG,KAAK;YAC7B;;;QAKJ;QACAoJ,MAAI,CAACrG,eAAe,EAAE;QAEtB;QACA,MAAMqG,MAAI,CAAClG,SAAS,EAAE;OAEvB,CAAC,OAAOJ,KAAK,EAAE;QACdsG,MAAI,CAAC9J,mBAAmB,CAACqE,SAAS,CAAC,0BAA0B,CAAC;OAC/D,SAAS;QACR;QACAuE,UAAU,CAAC,MAAK;UACdkB,MAAI,CAACpJ,gBAAgB,GAAG,KAAK;UAC7BoJ,MAAI,CAAC3J,GAAG,CAACmF,aAAa,EAAE;QAC1B,CAAC,EAAE,GAAG,CAAC;;IACR;EACH;EAEMyE,cAAcA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAA/F,4JAAA;MAClB,IAAI;QACF+F,MAAI,CAACtJ,gBAAgB,GAAG,IAAI;QAC5B,MAAM+B,aAAa,GAAGuH,MAAI,CAACrZ,eAAe,CAAC+R,mBAAmB,EAAE;QAEhE;QACA,MAAMI,WAAW,GAAGkH,MAAI,CAACrZ,eAAe,CAACoS,qBAAqB,CAACN,aAAa,CAAC;QAC7E,MAAMO,QAAQ,GAAGgH,MAAI,CAACrZ,eAAe,CAACsS,mBAAmB,CAACR,aAAa,CAAC;QAExEuH,MAAI,CAACpJ,UAAU,GAAGoJ,MAAI,CAACrZ,eAAe,CAACgS,2BAA2B,CAACG,WAAW,CAAC;QAC/EkH,MAAI,CAACnJ,UAAU,GAAGmJ,MAAI,CAACrZ,eAAe,CAACgS,2BAA2B,CAACK,QAAQ,CAAC;QAC5EgH,MAAI,CAACrJ,YAAY,GAAGqJ,MAAI,CAACrZ,eAAe,CAACgS,2BAA2B,CAACF,aAAa,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjGoH,MAAI,CAACvJ,oBAAoB,GAAG,EAAE;QAG9B;QACAuJ,MAAI,CAACvG,eAAe,EAAE;QAEtB,MAAMuG,MAAI,CAACpG,SAAS,EAAE;OAEvB,CAAC,OAAOJ,KAAK,EAAE;QACdwG,MAAI,CAAChK,mBAAmB,CAACqE,SAAS,CAAC,0BAA0B,CAAC;OAC/D,SAAS;QACR;QACAuE,UAAU,CAAC,MAAK;UACdoB,MAAI,CAACtJ,gBAAgB,GAAG,KAAK;UAC7BsJ,MAAI,CAAC7J,GAAG,CAACmF,aAAa,EAAE;QAC1B,CAAC,EAAE,GAAG,CAAC;;IACR;EACH;EAEM2E,mBAAmBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAAjG,4JAAA;MAEvB;MACA,MAAMiG,OAAI,CAACL,cAAc,EAAE;IAAC;EAC9B;EAEMM,YAAYA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAAnG,4JAAA;MAChB,IAAI;QACFmG,OAAI,CAAC1J,gBAAgB,GAAG,IAAI;QAE5B;QACA0J,OAAI,CAAC3G,eAAe,EAAE;QACtB,MAAM2G,OAAI,CAACxG,SAAS,EAAE;OACvB,CAAC,OAAOJ,KAAK,EAAE;QACd4G,OAAI,CAACpK,mBAAmB,CAACqE,SAAS,CAAC,2BAA2B,CAAC;OAChE,SAAS;QACR+F,OAAI,CAAC1J,gBAAgB,GAAG,KAAK;;IAC9B;EACH;EAEM2J,oBAAoBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAArG,4JAAA;MACxB,IAAI;QACFqG,OAAI,CAAC5J,gBAAgB,GAAG,IAAI;QAE5B;QACA4J,OAAI,CAAC7G,eAAe,EAAE;QACtB,MAAM6G,OAAI,CAAC1G,SAAS,EAAE;OACvB,CAAC,OAAOJ,KAAK,EAAE;QACd8G,OAAI,CAACtK,mBAAmB,CAACqE,SAAS,CAAC,sCAAsC,CAAC;OAC3E,SAAS;QACRiG,OAAI,CAAC5J,gBAAgB,GAAG,KAAK;;IAC9B;EACH;EAEA;EACM6J,kBAAkBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAAvG,4JAAA;MACtB,MAAMuG,OAAI,CAACX,cAAc,EAAE;IAAC;EAC9B;EAEA;EACMY,kBAAkBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAAzG,4JAAA;MACtB,MAAMyG,OAAI,CAACb,cAAc,EAAE;IAAC;EAC9B;EAEMc,oBAAoBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAA3G,4JAAA;MACxB,IAAI,CAAC2G,OAAI,CAAChK,UAAU,IAAI,CAACgK,OAAI,CAAC/J,UAAU,EAAE;QACxC,MAAM+J,OAAI,CAAC9D,mBAAmB,EAAE;QAChC;;MAGF;MACA,IAAI,CAAC8D,OAAI,CAAClK,gBAAgB,EAAE;QAC1BkK,OAAI,CAAC5S,SAAS,GAAG,IAAI;;MAEvB,IAAI;QAEF;QACA,MAAM+O,aAAa,GAAG6D,OAAI,CAACja,eAAe,CAACqW,uBAAuB,CAAC4D,OAAI,CAAChK,UAAU,CAAC;QACnF,MAAMqG,aAAa,GAAG2D,OAAI,CAACja,eAAe,CAACqW,uBAAuB,CAAC4D,OAAI,CAAC/J,UAAU,CAAC;QAEnF;QACA,IAAIkG,aAAa,GAAGE,aAAa,EAAE;UACjC2D,OAAI,CAAC5K,mBAAmB,CAACqE,SAAS,CAAC,sDAAsD,CAAC;UAC1FuG,OAAI,CAACtK,KAAK,GAAG,EAAE;UACf;;QAGF;QACA,IAAIuK,QAAQ,GAAW,EAAE;QACzB,IAAIC,WAAW,GAAG,IAAI1I,IAAI,CAAC2E,aAAa,CAAC;QACzC,IAAIgE,aAAa,GAAG,CAAC;QACrB,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAC;QAEpB,OAAOF,WAAW,IAAI7D,aAAa,IAAI8D,aAAa,GAAGC,OAAO,EAAE;UAE9D,MAAMC,QAAQ,SAASL,OAAI,CAACja,eAAe,CAACsX,uBAAuB,CAAC6C,WAAW,EAAEF,OAAI,CAACnK,oBAAoB,CAAC;UAE3GoK,QAAQ,GAAG,CAAC,GAAGA,QAAQ,EAAE,GAAGI,QAAQ,CAAC;UAErC;UACAH,WAAW,GAAG,IAAI1I,IAAI,CAAC0I,WAAW,CAAC;UACnCA,WAAW,CAACI,UAAU,CAACJ,WAAW,CAACK,UAAU,EAAE,GAAG,CAAC,CAAC;UACpDJ,aAAa,EAAE;;QAGjB,IAAIA,aAAa,IAAIC,OAAO,EAAE;UAC5BJ,OAAI,CAAC5K,mBAAmB,CAACoL,QAAQ,CAAC,8CAA8C,CAAC;;QAGnF;QACAR,OAAI,CAACtK,KAAK,GAAG,CAAC,GAAGuK,QAAQ,CAAC;QAG1B;QACA,KAAK,MAAM3C,IAAI,IAAI0C,OAAI,CAACtK,KAAK,EAAE;UAC7BsK,OAAI,CAACrK,WAAW,CAAC2H,IAAI,CAAC9D,EAAE,CAAC,SAASwG,OAAI,CAACja,eAAe,CAAC4W,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;;QAGhF;QACAwG,OAAI,CAACzK,GAAG,CAACmF,aAAa,EAAE;OAGzB,CAAC,OAAO9B,KAAK,EAAE;QACdoH,OAAI,CAAC5K,mBAAmB,CAACqE,SAAS,CAAC,8BAA8B,GAAGb,KAAK,CAAC;QAC1EoH,OAAI,CAACtK,KAAK,GAAG,EAAE;OAChB,SAAS;QACR;QACA,IAAI,CAACsK,OAAI,CAAClK,gBAAgB,EAAE;UAC1BkK,OAAI,CAAC5S,SAAS,GAAG,KAAK;;;IAEzB;EACH;EAEA;EACc8O,mBAAmBA,CAAA;IAAA,IAAAuE,OAAA;IAAA,OAAApH,4JAAA;MAC/B,MAAM5F,KAAK,GAAGgN,OAAI,CAAC1K,YAAY,GAAG,IAAIyB,IAAI,CAACiJ,OAAI,CAAC1K,YAAY,CAAC,GAAG0K,OAAI,CAAC1a,eAAe,CAAC+R,mBAAmB,EAAE;MAE1G2I,OAAI,CAAC/K,KAAK,SAAS+K,OAAI,CAAC1a,eAAe,CAACsX,uBAAuB,CAAC5J,KAAK,EAAEgN,OAAI,CAAC5K,oBAAoB,CAAC;MACjG4K,OAAI,CAAC/K,KAAK,GAAG,CAAC,IAAI+K,OAAI,CAAC/K,KAAK,IAAI,EAAE,CAAC,CAAC;MAEpC,KAAK,MAAM4H,IAAI,IAAImD,OAAI,CAAC/K,KAAK,EAAE;QAC7B+K,OAAI,CAAC9K,WAAW,CAAC2H,IAAI,CAAC9D,EAAE,CAAC,SAASiH,OAAI,CAAC1a,eAAe,CAAC4W,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;;MAGhFiH,OAAI,CAAClL,GAAG,CAACmF,aAAa,EAAE;IAAC;EAC3B;EAEA;EACMnB,SAASA,CAAA;IAAA,IAAAmH,OAAA;IAAA,OAAArH,4JAAA;MACb,IAAI;QACFqH,OAAI,CAACxK,KAAK,SAASwK,OAAI,CAAC3a,eAAe,CAAC4a,WAAW,EAAE;QAErD,IAAID,OAAI,CAACxK,KAAK,CAACxH,MAAM,KAAK,CAAC,EAAE;UAC3BgS,OAAI,CAACtL,mBAAmB,CAACoL,QAAQ,CAAC,mGAAmG,CAAC;;OAEzI,CAAC,OAAO5H,KAAK,EAAE;QACd8H,OAAI,CAACtL,mBAAmB,CAACqE,SAAS,CAAC,4BAA4B,GAAIb,KAAa,EAAEgI,OAAO,CAAC;QAC1F;QACAF,OAAI,CAACxK,KAAK,GAAG,EAAE;;IAChB;EACH;EAEAiD,mBAAmBA,CAAA;IACjB,IAAI,CAACzC,eAAe,GAAG,CAAC,GAAGzN,gEAAgB,CAAC;IAE5C,IAAI,IAAI,CAACyN,eAAe,CAAChI,MAAM,KAAK,CAAC,EAAE;MACrC,IAAI,CAAC0G,mBAAmB,CAACqE,SAAS,CAAC,oDAAoD,CAAC;KACzF,MAAM,C;EAET;EAEAoH,cAAcA,CAAA;IACZ,IAAI,CAAC1K,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACnI,YAAY,GAAG;MAClBuB,KAAK,EAAE,EAAE;MACTtB,QAAQ,EAAE,EAAE;MACZmI,IAAI,EAAE,UAAU;MAChB3M,QAAQ,EAAE,EAAE;MACZ4M,MAAM,EAAE;KACT;EACH;EAEAwK,QAAQA,CAAC1a,IAAS;IAChB,IAAI,CAACgQ,WAAW,GAAGhQ,IAAI;IACvB,IAAI,CAAC6H,YAAY,GAAG;MAAE,GAAG7H;IAAI,CAAE;IAC/B,IAAI,CAAC+P,aAAa,GAAG,IAAI;EAC3B;EAEM4K,QAAQA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAA3H,4JAAA;MACZ,IAAI;QACF2H,OAAI,CAAC5T,SAAS,GAAG,IAAI;QAErB,IAAI4T,OAAI,CAAC5K,WAAW,EAAE;UACpB;UACA,MAAM4K,OAAI,CAACjb,eAAe,CAACkb,kBAAkB,CAACD,OAAI,CAAC5K,WAAW,CAACoD,EAAE,EAAE;YACjEhK,KAAK,EAAEwR,OAAI,CAAC/S,YAAY,CAACuB,KAAK;YAC9B6G,IAAI,EAAE2K,OAAI,CAAC/S,YAAY,CAACoI,IAAI;YAC5B3M,QAAQ,EAAEsX,OAAI,CAAC/S,YAAY,CAACvE,QAAQ;YACpC4M,MAAM,EAAE0K,OAAI,CAAC/S,YAAY,CAACqI;WAC3B,CAAC;UACF0K,OAAI,CAAC5L,mBAAmB,CAAC8L,WAAW,CAAC,kCAAkC,CAAC;SACzE,MAAM;UACL;UACA,MAAMF,OAAI,CAACjb,eAAe,CAACob,aAAa,CAACH,OAAI,CAAC/S,YAAY,CAAC;UAC3D+S,OAAI,CAAC5L,mBAAmB,CAAC8L,WAAW,CAAC,6BAA6B,CAAC;;QAGrEF,OAAI,CAACH,cAAc,EAAE;QACrB,MAAMG,OAAI,CAACzH,SAAS,EAAE;OACvB,CAAC,OAAOX,KAAK,EAAE;QACdoI,OAAI,CAAC5L,mBAAmB,CAACqE,SAAS,CAAC,6BAA6B,CAAC;OAClE,SAAS;QACRuH,OAAI,CAAC5T,SAAS,GAAG,KAAK;;IACvB;EACH;EAEMgU,gBAAgBA,CAAChb,IAAS;IAAA,IAAAib,OAAA;IAAA,OAAAhI,4JAAA;MAC9B,IAAI;QACFgI,OAAI,CAACjU,SAAS,GAAG,IAAI;QACrB,MAAMiU,OAAI,CAACtb,eAAe,CAACub,wBAAwB,CAAClb,IAAI,CAACoT,EAAE,CAAC;QAC5D6H,OAAI,CAACjM,mBAAmB,CAAC8L,WAAW,CAAC,gCAAgC,CAAC;QACtE,MAAMG,OAAI,CAAC9H,SAAS,EAAE;OACvB,CAAC,OAAOX,KAAK,EAAE;QACdyI,OAAI,CAACjM,mBAAmB,CAACqE,SAAS,CAAC,wCAAwC,CAAC;OAC7E,SAAS;QACR4H,OAAI,CAACjU,SAAS,GAAG,KAAK;;IACvB;EACH;EAEMmU,UAAUA,CAACC,MAAc;IAAA,IAAAC,OAAA;IAAA,OAAApI,4JAAA;MAC7B,MAAMqI,SAAS,SAASD,OAAI,CAACrM,mBAAmB,CAACuM,gBAAgB,CAC/D,kBAAkB,EAClB,+CAA+C,CAChD;MAED,IAAID,SAAS,EAAE;QACb,IAAI;UACFD,OAAI,CAACrU,SAAS,GAAG,IAAI;UACrB;UACAqU,OAAI,CAACrM,mBAAmB,CAAC8L,WAAW,CAAC,gCAAgC,CAAC;UACtE,MAAMO,OAAI,CAAClI,SAAS,EAAE;SACvB,CAAC,OAAOX,KAAK,EAAE;UACd6I,OAAI,CAACrM,mBAAmB,CAACqE,SAAS,CAAC,8BAA8B,CAAC;SACnE,SAAS;UACRgI,OAAI,CAACrU,SAAS,GAAG,KAAK;;;IAEzB;EACH;EAEAwU,mBAAmBA,CAAA;IACjB,MAAMC,UAAU,GAAG,IAAI,CAAC9L,YAAY,GAAG,IAAIyB,IAAI,CAAC,IAAI,CAACzB,YAAY,CAAC,GAAG,IAAI,CAAChQ,eAAe,CAAC+R,mBAAmB,EAAE;IAC/G,IAAI,CAACzC,YAAY,CAACuM,mBAAmB,CAAC,IAAI,CAAClM,KAAK,EAAEmM,UAAU,CAAC;EAC/D;EAEA;EACMC,cAAcA,CAACxE,IAAU;IAAA,IAAAyE,OAAA;IAAA,OAAA1I,4JAAA;MAC7B,IAAI;QAEF;QACA,MAAMkE,OAAO,SAASwE,OAAI,CAAChc,eAAe,CAAC4W,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;QAElE,IAAI+D,OAAO,CAAC7O,MAAM,KAAK,CAAC,EAAE;UACxBqT,OAAI,CAAC3M,mBAAmB,CAACqE,SAAS,CAAC,+EAA+E,CAAC;UACnH;;QAGF;QACAsI,OAAI,CAAC1M,YAAY,CAAC2M,sBAAsB,CAAC1E,IAAI,EAAEC,OAAO,CAAC;QACvDwE,OAAI,CAAC3M,mBAAmB,CAAC8L,WAAW,CAAC,4BAA4B,CAAC;OAEnE,CAAC,OAAOtI,KAAK,EAAE;QACdmJ,OAAI,CAAC3M,mBAAmB,CAACqE,SAAS,CAAC,8DAA8D,CAAC;;IACnG;EACH;EAEMwI,MAAMA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAA7I,4JAAA;MACV,MAAM6I,OAAI,CAACnc,eAAe,CAACkc,MAAM,EAAE;MACnCC,OAAI,CAAClc,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAAC;EACnC;EAEA;EACA0I,cAAcA,CAACkT,SAAwB;IACrC,MAAMC,IAAI,GAAG,OAAOD,SAAS,KAAK,QAAQ,GAAG,IAAI3K,IAAI,CAAC2K,SAAS,CAAC,GAAGA,SAAS;IAC5E,OAAOC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;MAClCC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;KACT,CAAC;EACJ;EAEA;EACQC,mBAAmBA,CAACP,IAAU;IACpC;IACA,OAAO,IAAI,CAACrc,eAAe,CAACgS,2BAA2B,CAACqK,IAAI,CAAC;EAC/D;EAEA;EACAQ,oBAAoBA,CAACR,IAAmB;IACtC,MAAMS,OAAO,GAAG,OAAOT,IAAI,KAAK,QAAQ,GAAG,IAAI5K,IAAI,CAAC4K,IAAI,CAAC,GAAGA,IAAI;IAChE,OAAO,IAAI,CAACrc,eAAe,CAAC+c,sBAAsB,CAACD,OAAO,CAAC;EAC7D;EAEA;EACAE,cAAcA,CAAA;IACZ;IACA,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EAEAA,mBAAmBA,CAAA;IACjB,IAAI,CAACC,yBAAyB,EAAE;EAClC;EAEAC,iBAAiBA,CAAA;IACf,IAAI,CAACC,uBAAuB,EAAE;EAChC;EAEAC,WAAWA,CAACC,KAAa,EAAE/F,IAAU;IACnC,OAAOA,IAAI,CAAC9D,EAAE;EAChB;EAEA8J,WAAWA,CAACD,KAAa,EAAEjd,IAAS;IAClC,OAAOA,IAAI,CAACoT,EAAE;EAChB;EAEA+J,aAAaA,CAACF,KAAa,EAAE5X,MAAW;IACtC,OAAOA,MAAM,CAAC+N,EAAE,IAAI6J,KAAK,CAAC7Y,QAAQ,EAAE;EACtC;EAEAiE,iBAAiBA,CAAC4U,KAAa,EAAE7F,MAAkB;IACjD,OAAOA,MAAM,CAAChE,EAAE;EAClB;EAEAgK,WAAWA,CAAClG,IAAU;IAEpB;IACA,IAAI,CAAC/G,mBAAmB,GAAG,KAAK;IAEhC;IACA,MAAMgH,OAAO,GAAG,IAAI,CAACZ,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;IAE5C;IACA,IAAI,CAAC1K,qBAAqB,GAAGwO,IAAI;IACjC,IAAI,CAAC9O,mBAAmB,GAAG+O,OAAO;IAClC,IAAI,CAAChH,mBAAmB,GAAG,IAAI;IAE/B;IACA,IAAI,CAAChB,GAAG,CAACmF,aAAa,EAAE;EAE1B;EAEA;EACA+I,oBAAoBA,CAAA;IAElB,IAAI,CAAClN,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACzH,qBAAqB,GAAG,IAAI;IACjC,IAAI,CAACN,mBAAmB,GAAG,EAAE;IAE7B;IACA,IAAI,CAAC+G,GAAG,CAACmF,aAAa,EAAE;EAE1B;EAEA;EACAgJ,yBAAyBA,CAAA;IACvB,IAAI,CAACnN,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACzH,qBAAqB,GAAG,IAAI;IACjC,IAAI,CAACN,mBAAmB,GAAG,EAAE;EAC/B;EAEA;EACAmV,UAAUA,CAAA;IAER;IACA,IAAI,CAACpN,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACJ,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACQ,iBAAiB,GAAG,KAAK;IAE9B;IACA,IAAI,CAAC7H,qBAAqB,GAAG,IAAI;IACjC,IAAI,CAACN,mBAAmB,GAAG,EAAE;IAE7B;IACAwP,UAAU,CAAC,MAAK;MACd;MACA,MAAM4F,SAAS,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,iBAAiB,CAAC;MAC9DF,SAAS,CAACG,OAAO,CAACC,EAAE,IAAG;QACrB,IAAIA,EAAE,CAACC,UAAU,EAAE;UACjBD,EAAE,CAACC,UAAU,CAACC,WAAW,CAACF,EAAE,CAAC;;MAEjC,CAAC,CAAC;MAEF;MACAH,QAAQ,CAACM,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;IAE9C,CAAC,EAAE,GAAG,CAAC;EACT;EAEA;EACA1V,eAAeA,CAAA;IACb,OAAO,IAAI,CAACH,mBAAmB,CAAC0P,MAAM,CAAC,CAAC/O,KAAK,EAAEqO,MAAM,KAAKrO,KAAK,GAAGqO,MAAM,CAAClP,KAAK,EAAE,CAAC,CAAC;EACpF;EAEAgW,UAAUA,CAAA;IACR,IAAI,CAAClO,WAAW,GAAG,IAAI;IACvB,IAAI,CAACnI,YAAY,GAAG;MAClBuB,KAAK,EAAE,EAAE;MACTtB,QAAQ,EAAE,EAAE;MACZmI,IAAI,EAAE,UAAU;MAChB3M,QAAQ,EAAE,EAAE;MACZ4M,MAAM,EAAE;KACT;IACD,IAAI,CAACH,aAAa,GAAG,IAAI;EAC3B;EAEA;EACA;EACA;EAEAoO,cAAcA,CAACne,IAAS;IACtB,IAAI,CAACwQ,uBAAuB,GAAGxQ,IAAI;IACnC,IAAI,CAACyQ,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACH,iBAAiB,GAAG,IAAI;EAC/B;EAEA6N,kBAAkBA,CAAA;IAChB,IAAI,CAAC7N,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACC,uBAAuB,GAAG,IAAI;IACnC,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,eAAe,GAAG,EAAE;EAC3B;EAEM2N,kBAAkBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAArL,4JAAA;MACtB,IAAIqL,OAAI,CAAC7N,WAAW,KAAK6N,OAAI,CAAC5N,eAAe,EAAE;QAC7C4N,OAAI,CAACtP,mBAAmB,CAACqE,SAAS,CAAC,8BAA8B,CAAC;QAClE;;MAGF,IAAIiL,OAAI,CAAC7N,WAAW,CAACnI,MAAM,GAAG,CAAC,EAAE;QAC/BgW,OAAI,CAACtP,mBAAmB,CAACqE,SAAS,CAAC,gDAAgD,CAAC;QACpF;;MAGF,IAAI;QACFiL,OAAI,CAACtX,SAAS,GAAG,IAAI;QACrB;QACA,MAAMsX,OAAI,CAAC3e,eAAe,CAAC4e,kBAAkB,CAACD,OAAI,CAAC9N,uBAAuB,CAAC4C,EAAE,EAAEkL,OAAI,CAAC7N,WAAW,CAAC;QAChG6N,OAAI,CAACtP,mBAAmB,CAAC8L,WAAW,CAAC,qCAAqC,CAAC;QAC3EwD,OAAI,CAACF,kBAAkB,EAAE;OAC1B,CAAC,OAAO5L,KAAK,EAAE;QACd8L,OAAI,CAACtP,mBAAmB,CAACqE,SAAS,CAAC,gCAAgC,CAAC;OACrE,SAAS;QACRiL,OAAI,CAACtX,SAAS,GAAG,KAAK;;IACvB;EACH;EAEA;EACA6V,yBAAyBA,CAAA;IACvB,IAAI,IAAI,CAACvN,KAAK,CAAChH,MAAM,KAAK,CAAC,EAAE;MAC3B,IAAI,CAAC0G,mBAAmB,CAACqE,SAAS,CAAC,6BAA6B,CAAC;MACjE;;IAGF,IAAI;MACF;MACA,IAAImL,UAAU,GAAG,0DAA0D;MAE3E,KAAK,MAAMtH,IAAI,IAAI,IAAI,CAAC5H,KAAK,EAAE;QAC7B,MAAM6H,OAAO,GAAG,IAAI,CAACZ,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;QAC5C,MAAMpO,OAAO,GAAGmS,OAAO,CAACiB,GAAG,CAACqG,CAAC,IAAI,GAAGA,CAAC,CAACta,MAAM,IAAIsa,CAAC,CAACvW,KAAK,EAAE,CAAC,CAACwW,IAAI,CAAC,GAAG,CAAC;QACpEF,UAAU,IAAI,IAAI,IAAI,CAAC3V,cAAc,CAACqO,IAAI,CAACpO,SAAS,CAAC,MAAMoO,IAAI,CAAC5T,QAAQ,MAAM4T,IAAI,CAAC7R,MAAM,MAAM6R,IAAI,CAACnO,KAAK,MAAMmO,IAAI,CAACvO,YAAY,IAAIuO,IAAI,CAAC9D,EAAE,CAACnO,KAAK,CAAC,CAAC,CAAC,CAAC,MAAMiS,IAAI,CAACtO,WAAW,MAAM5D,OAAO,KAAK;;MAG/L;MACA,MAAM2Z,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,UAAU,CAAC,EAAE;QAAEK,IAAI,EAAE;MAAyB,CAAE,CAAC;MACxE,MAAMC,IAAI,GAAGrB,QAAQ,CAACsB,aAAa,CAAC,GAAG,CAAC;MACxC,MAAM9e,GAAG,GAAG+e,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;MACrCG,IAAI,CAACI,YAAY,CAAC,MAAM,EAAEjf,GAAG,CAAC;MAC9B,MAAMwR,aAAa,GAAG,IAAI,CAAC9R,eAAe,CAAC+R,mBAAmB,EAAE;MAChEoN,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,gBAAgB,IAAI,CAACvf,eAAe,CAACiU,yBAAyB,CAACnC,aAAa,CAAC,MAAM,CAAC;MAClHqN,IAAI,CAACK,KAAK,CAACC,UAAU,GAAG,QAAQ;MAChC3B,QAAQ,CAACM,IAAI,CAACsB,WAAW,CAACP,IAAI,CAAC;MAC/BA,IAAI,CAACQ,KAAK,EAAE;MACZ7B,QAAQ,CAACM,IAAI,CAACD,WAAW,CAACgB,IAAI,CAAC;MAE/B,IAAI,CAAC9P,mBAAmB,CAAC8L,WAAW,CAAC,sCAAsC,CAAC;KAC7E,CAAC,OAAOtI,KAAK,EAAE;MACd,IAAI,CAACxD,mBAAmB,CAACqE,SAAS,CAAC,oCAAoC,CAAC;;EAE5E;EAEA;EACA0J,uBAAuBA,CAAA;IACrB,IAAI,IAAI,CAACzN,KAAK,CAAChH,MAAM,KAAK,CAAC,EAAE;MAC3B,IAAI,CAAC0G,mBAAmB,CAACqE,SAAS,CAAC,6BAA6B,CAAC;MACjE;;IAGF,IAAI;MACF;MACA,IAAI,CAACpE,YAAY,CAAC8N,uBAAuB,CAAC,IAAI,CAACzN,KAAK,EAAE,IAAI,CAACC,WAAW,EAAE;QACtEK,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BC,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3B0P,YAAY,EAAE,IAAI,CAAC9P;OACpB,CAAC;MAEF,IAAI,CAACT,mBAAmB,CAAC8L,WAAW,CAAC,mCAAmC,CAAC;KAC1E,CAAC,OAAOtI,KAAK,EAAE;MACd,IAAI,CAACxD,mBAAmB,CAACqE,SAAS,CAAC,kCAAkC,CAAC;;EAE1E;EAEA;EACAmM,oBAAoBA,CAAA;IAClB;IACA,IAAI,CAAC3C,yBAAyB,EAAE;EAClC;EAEA4C,cAAcA,CAACpL,UAAkB,EAAEqL,KAAY;IAC7C,MAAM7V,MAAM,GAAG6V,KAAK,CAAC7V,MAA0B;IAC/C,IAAIA,MAAM,IAAIA,MAAM,CAACC,KAAK,EAAE;MAC1B,IAAI,CAAC/D,mBAAmB,CAACsO,UAAU,CAAC,GAAG,CAACxK,MAAM,CAACC,KAAK;;EAExD;EACA;EACA;EACA;EAEM6V,oBAAoBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAA3M,4JAAA;MACxB,IAAI;QACF2M,OAAI,CAAC5Y,SAAS,GAAG,IAAI;QACrB;QACA4Y,OAAI,CAAC5Q,mBAAmB,CAAC8L,WAAW,CAAC,qDAAqD,CAAC;OAC5F,CAAC,OAAOtI,KAAK,EAAE;QACdoN,OAAI,CAAC5Q,mBAAmB,CAACqE,SAAS,CAAC,wBAAwB,CAAC;OAC7D,SAAS;QACRuM,OAAI,CAAC5Y,SAAS,GAAG,KAAK;;IACvB;EACH;EAIA;EAEA6Y,oBAAoBA,CAAA;IAClB,IAAI,CAAClP,kBAAkB,GAAG,CAAC,IAAI,CAACA,kBAAkB;EACpD;EAEAmP,kBAAkBA,CAAA;IAChB,IAAI,CAAClP,gBAAgB,GAAG,CAAC,IAAI,CAACA,gBAAgB;EAChD;EAEA;EAEAmP,mBAAmBA,CAAA;IACjB,IAAI,CAAC/P,WAAW,GAAG,IAAI;IACvB,IAAI,CAACnI,YAAY,GAAG;MAClBuB,KAAK,EAAE,EAAE;MACTtB,QAAQ,EAAE,EAAE;MACZmI,IAAI,EAAE,UAAU;MAChB3M,QAAQ,EAAE,EAAE;MACZ4M,MAAM,EAAE;KACT;IACD,IAAI,CAACH,aAAa,GAAG,IAAI;EAC3B;EAEMiQ,iBAAiBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAAhN,4JAAA;MACrB,IAAI;QACFgN,OAAI,CAACjZ,SAAS,GAAG,IAAI;QACrBiZ,OAAI,CAACjR,mBAAmB,CAACoL,QAAQ,CAAC,4CAA4C,CAAC;QAE/E;QACA,MAAM6F,OAAI,CAACtgB,eAAe,CAACqgB,iBAAiB,EAAE;QAE9C;QACA,MAAMC,OAAI,CAAC9M,SAAS,EAAE;QAEtB8M,OAAI,CAACjR,mBAAmB,CAAC8L,WAAW,CAAC,sCAAsC,CAAC;OAC7E,CAAC,OAAOtI,KAAK,EAAE;QACdyN,OAAI,CAACjR,mBAAmB,CAACqE,SAAS,CAAC,+BAA+B,CAAC;OACpE,SAAS;QACR4M,OAAI,CAACjZ,SAAS,GAAG,KAAK;;IACvB;EACH;EAEA;EACAkZ,eAAeA,CAAA;IACb,IAAI,CAACtgB,MAAM,CAACO,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EACxC;EAMMyG,gBAAgBA,CAACuZ,YAAqC,EAAElX,aAA8B;IAAA,IAAAmX,OAAA;IAAA,OAAAnN,4JAAA;MAC1F,IAAI;QACFmN,OAAI,CAACpZ,SAAS,GAAG,IAAI;QAErB;QACAoZ,OAAI,CAAClV,kBAAkB,SAASkV,OAAI,CAACzgB,eAAe,CAAC0gB,wBAAwB,EAAE;QAE/E;QACAD,OAAI,CAACpW,mBAAmB,GAAG,EAAE;QAC7B,KAAK,MAAM1G,QAAQ,IAAI8c,OAAI,CAAClV,kBAAkB,EAAE;UAC9CkV,OAAI,CAACpW,mBAAmB,CAAC1G,QAAQ,CAACA,QAAQ,CAAC,GAAGA,QAAQ,CAACoV,MAAM;;QAG/D;QACA,IAAI,OAAOyH,YAAY,KAAK,QAAQ,EAAE;UACpC;UACA,MAAM5H,cAAc,GAAG1V,gEAAgB,CAAC2V,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACxV,IAAI,KAAKkd,YAAY,CAAC;UAC1E,IAAI5H,cAAc,EAAE;YAClB6H,OAAI,CAACpX,uBAAuB,GAAG;cAC7B3D,MAAM,EAAEkT,cAAc;cACtBtP,aAAa,EAAEA,aAAa,CAAC7E,QAAQ;aACtC;;SAEJ,MAAM;UACL;UACAgc,OAAI,CAACpX,uBAAuB,GAAG;YAC7B3D,MAAM,EAAE8a,YAAY;YACpBlX,aAAa,EAAEA,aAAa,CAAC7E,QAAQ;WACtC;;QAGHgc,OAAI,CAACvP,gBAAgB,GAAG,IAAI;OAE7B,CAAC,OAAO2B,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD4N,OAAI,CAACpR,mBAAmB,CAACqE,SAAS,CAAC,6CAA6C,CAAC;OAClF,SAAS;QACR+M,OAAI,CAACpZ,SAAS,GAAG,KAAK;;IACvB;EACH;EAEAqD,iBAAiBA,CAAA;IACf,IAAI,CAACwG,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAAC7H,uBAAuB,GAAG,IAAI;IACnC,IAAI,CAACgB,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACkB,kBAAkB,GAAG,EAAE;EAC9B;EAEAO,iBAAiBA,CAAA;IACf,IAAI,CAACyF,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAACpN,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACgI,uBAAuB,GAAG,EAAE;EACnC;EAEMf,+BAA+BA,CAAA;IAAA,IAAAuV,OAAA;IAAA,OAAArN,4JAAA;MACnC,IAAI,CAACqN,OAAI,CAACtX,uBAAuB,EAAE;QACjCsX,OAAI,CAACtR,mBAAmB,CAACqE,SAAS,CAAC,4BAA4B,CAAC;QAChE;;MAGF,MAAM;QAAEhO,MAAM;QAAE4D;MAAa,CAAE,GAAGqX,OAAI,CAACtX,uBAAuB;MAE9D,IAAI;QACFsX,OAAI,CAACtZ,SAAS,GAAG,IAAI;QAErB;QACA,MAAMyK,aAAa,GAAG6O,OAAI,CAAC3gB,eAAe,CAAC+R,mBAAmB,EAAE;QAChE,MAAM6O,QAAQ,GAAGD,OAAI,CAAC3gB,eAAe,CAACiU,yBAAyB,CAACnC,aAAa,CAAC;QAC9E,MAAMoC,QAAQ,GAAG,GAAG0M,QAAQ,IAAIlb,MAAM,CAACpC,IAAI,EAAE;QAE7C;QACA,MAAMqd,OAAI,CAAC3gB,eAAe,CAAC6gB,uBAAuB,CAChD3M,QAAQ,EACR5K,aAAa,EACbqX,OAAI,CAACtW,mBAAmB,CACzB;QAED;QACA,MAAMsW,OAAI,CAAC3gB,eAAe,CAAC8gB,gCAAgC,CAAC5M,QAAQ,CAAC;QAErE;QACAyM,OAAI,CAACjW,iBAAiB,EAAE;QAExB;QACAiW,OAAI,CAACxc,iBAAiB,SAASwc,OAAI,CAAC3gB,eAAe,CAAC+gB,2BAA2B,CAAC7M,QAAQ,CAAC;QACzFyM,OAAI,CAACxU,uBAAuB,GAAG,GAAGzG,MAAM,CAACjC,KAAK,sBAAsB6F,aAAa,CAAC5E,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;QAEpG;QACAic,OAAI,CAACpP,gBAAgB,GAAG,IAAI;QAE5B;QACA,MAAMoP,OAAI,CAAC1N,SAAS,EAAE;QACtB,MAAM0N,OAAI,CAACzN,eAAe,EAAE;QAE5B;QACAyN,OAAI,CAAC3gB,eAAe,CAACghB,mBAAmB,EAAE;QAE1C;QACAL,OAAI,CAAC9Z,cAAc,CAACnB,MAAM,CAACpC,IAAI,CAAC,GAAGgG,aAAa;QAEhDqX,OAAI,CAACtR,mBAAmB,CAAC8L,WAAW,CAClC,kBAAkB7R,aAAa,CAAC5E,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,2DAA2DgB,MAAM,CAACpC,IAAI,EAAE,CACzH;OAEF,CAAC,OAAOuP,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC3D8N,OAAI,CAACtR,mBAAmB,CAACqE,SAAS,CAAC,iEAAiE,CAAC;OACtG,SAAS;QACRiN,OAAI,CAACtZ,SAAS,GAAG,KAAK;;IACvB;EACH;EAEA;EACAkD,mBAAmBA,CAAA;IACjB,OAAO,CAAC,GAAG,IAAI0W,GAAG,CAAC,IAAI,CAAC1V,kBAAkB,CAACkN,GAAG,CAACK,CAAC,IAAIA,CAAC,CAACnV,QAAQ,CAAC,CAAC,CAAC;EACnE;EAEA;EACAsG,uBAAuBA,CAACtG,QAAgB,EAAEoV,MAAuB;IAC/D,IAAI,CAAC1O,mBAAmB,CAAC1G,QAAQ,CAAC,GAAG,OAAOoV,MAAM,KAAK,QAAQ,GAAGmI,UAAU,CAACnI,MAAM,CAAC,GAAGA,MAAM;EAC/F;EAEA;EACAnP,kBAAkBA,CAACjG,QAAgB;IACjC,OAAO,IAAI,CAAC4H,kBAAkB,CAAC4V,MAAM,CAACrI,CAAC,IAAIA,CAAC,CAACnV,QAAQ,KAAKA,QAAQ,CAAC;EACrE;EAEAyG,gBAAgBA,CAACzG,QAAgB;IAC/B,OAAO,IAAI,CAAC4H,kBAAkB,CAAC4V,MAAM,CAACrI,CAAC,IAAIA,CAAC,CAACnV,QAAQ,KAAKA,QAAQ,CAAC,CAACgF,MAAM,GAAG,CAAC;EAChF;EAEA;EACAyD,sBAAsBA,CAAA;IACpB,MAAMhD,KAAK,GAAG,IAAI,CAACsP,eAAe,EAAE;IACpC,OAAOtP,KAAK,CAACrF,OAAO,CAAC,CAAC,CAAC;EACzB;EAEAO,qBAAqBA,CAAA;IACnB,MAAM8E,KAAK,GAAG,IAAI,CAACuP,cAAc,EAAE;IACnC,OAAOvP,KAAK,CAACrF,OAAO,CAAC,CAAC,CAAC;EACzB;EAEAsI,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAAC2M,eAAe,EAAE;EAC/B;EAEA;EACA3U,6BAA6BA,CAAA;IAC3B,IAAI,CAAC,IAAI,CAACF,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACwE,MAAM,KAAK,CAAC,EAAE;MAClE,OAAO,CAAC;;IAGV,OAAO,IAAI,CAACxE,iBAAiB,CAACgU,MAAM,CAAC,CAAC/O,KAAK,EAAEzF,QAAQ,KAAI;MACvD,OAAOyF,KAAK,IAAIzF,QAAQ,CAACG,uBAAuB,IAAI,CAAC,CAAC;IACxD,CAAC,EAAE,CAAC,CAAC;EACP;EAEA;EACAsd,iBAAiBA,CAAA;IACf;IACA,IAAI,IAAI,CAAC1K,YAAY,EAAE,IAAI,IAAI,CAACtF,iBAAiB,EAAE;MACjD,MAAMiQ,YAAY,GAAG,IAAI,CAACjQ,iBAAiB,CAACkQ,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;MAC7D,MAAMC,MAAM,GAAgG,EAAE;MAE9G,IAAI,CAACnQ,iBAAiB,CAAC4M,OAAO,CAAC,CAAC7T,KAAU,EAAEqX,GAAW,KAAI;QACzD,IAAIA,GAAG,KAAK,OAAO,IAAI,OAAOrX,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACxF,YAAY,KAAK8c,SAAS,EAAE;UACpFF,MAAM,CAACG,IAAI,CAAC;YACVld,MAAM,EAAEuP,QAAQ,CAACyN,GAAG,CAAC;YACrB7c,YAAY,EAAEwF,KAAK,CAACxF,YAAY;YAChCgd,cAAc,EAAExX,KAAK,CAACwX,cAAc;YACpCC,UAAU,EAAEP,YAAY,GAAG,CAAC,GAAIlX,KAAK,CAACxF,YAAY,GAAG0c,YAAY,GAAI,GAAG,GAAG;WAC5E,CAAC;;MAEN,CAAC,CAAC;MAEF,OAAOE,MAAM,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACpd,YAAY,GAAGmd,CAAC,CAACnd,YAAY,CAAC;;IAG/D;IACA,MAAMgL,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMqS,WAAW,GAA2E,EAAE;IAC9F,IAAIX,YAAY,GAAG,CAAC;IAEpB;IACA1R,KAAK,CAACqO,OAAO,CAAEzG,IAAU,IAAI;MAC3B,MAAMC,OAAO,GAAG,IAAI,CAACZ,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;MAC5C+D,OAAO,CAACwG,OAAO,CAACvG,MAAM,IAAG;QACvB,IAAI,CAACuK,WAAW,CAACvK,MAAM,CAACjT,MAAM,CAAC,EAAE;UAC/Bwd,WAAW,CAACvK,MAAM,CAACjT,MAAM,CAAC,GAAG;YAAEG,YAAY,EAAE,CAAC;YAAEgd,cAAc,EAAE;UAAC,CAAE;;QAErEK,WAAW,CAACvK,MAAM,CAACjT,MAAM,CAAC,CAACG,YAAY,IAAI8S,MAAM,CAAClP,KAAK;QACvDyZ,WAAW,CAACvK,MAAM,CAACjT,MAAM,CAAC,CAACmd,cAAc,IAAI,CAAC;QAC9CN,YAAY,IAAI5J,MAAM,CAAClP,KAAK;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF;IACA,OAAOgQ,MAAM,CAACC,OAAO,CAACwJ,WAAW,CAAC,CAC/BvJ,GAAG,CAAC,CAAC,CAACjU,MAAM,EAAEyd,KAAK,CAAC,MAAM;MACzBzd,MAAM,EAAEuP,QAAQ,CAACvP,MAAM,CAAC;MACxBG,YAAY,EAAEsd,KAAK,CAACtd,YAAY;MAChCgd,cAAc,EAAEM,KAAK,CAACN,cAAc;MACpCC,UAAU,EAAEP,YAAY,GAAG,CAAC,GAAIY,KAAK,CAACtd,YAAY,GAAG0c,YAAY,GAAI,GAAG,GAAG;KAC5E,CAAC,CAAC,CACFQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACpd,YAAY,GAAGmd,CAAC,CAACnd,YAAY,CAAC,CAAC,CAAC;EACtD;EAEA;EACAmB,oCAAoCA,CAAA;IAOlC,MAAMoc,MAAM,GAAyH,EAAE;IAEvI;IACA,IAAI,CAACvS,KAAK,CAACqO,OAAO,CAACzG,IAAI,IAAG;MACxB,MAAM7R,MAAM,GAAG6R,IAAI,CAAC7R,MAAM,IAAI,YAAY;MAC1C,MAAM/B,QAAQ,GAAG4T,IAAI,CAAC5T,QAAQ,IAAI,cAAc;MAEhD,IAAI,CAACue,MAAM,CAACxc,MAAM,CAAC,EAAE;QACnBwc,MAAM,CAACxc,MAAM,CAAC,GAAG,EAAE;;MAErB,IAAI,CAACwc,MAAM,CAACxc,MAAM,CAAC,CAAC/B,QAAQ,CAAC,EAAE;QAC7Bue,MAAM,CAACxc,MAAM,CAAC,CAAC/B,QAAQ,CAAC,GAAG,EAAE;;MAG/B,MAAM6T,OAAO,GAAG,IAAI,CAACZ,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;MAC5C+D,OAAO,CAACwG,OAAO,CAACvG,MAAM,IAAG;QACvB,MAAMjT,MAAM,GAAGuP,QAAQ,CAAC0D,MAAM,CAACjT,MAAM,CAACC,QAAQ,EAAE,CAAC;QACjD,IAAI,CAACyd,MAAM,CAACxc,MAAM,CAAC,CAAC/B,QAAQ,CAAC,CAACa,MAAM,CAAC,EAAE;UACrC0d,MAAM,CAACxc,MAAM,CAAC,CAAC/B,QAAQ,CAAC,CAACa,MAAM,CAAC,GAAG;YAAEG,YAAY,EAAE,CAAC;YAAEgd,cAAc,EAAE;UAAC,CAAE;;QAE3EO,MAAM,CAACxc,MAAM,CAAC,CAAC/B,QAAQ,CAAC,CAACa,MAAM,CAAC,CAACG,YAAY,IAAI8S,MAAM,CAAClP,KAAK;QAC7D2Z,MAAM,CAACxc,MAAM,CAAC,CAAC/B,QAAQ,CAAC,CAACa,MAAM,CAAC,CAACmd,cAAc,IAAI,CAAC;MACtD,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF;IACA,OAAOpJ,MAAM,CAAC4J,IAAI,CAACD,MAAM,CAAC,CAACzJ,GAAG,CAAC/S,MAAM,IAAG;MACtC,MAAM0O,UAAU,GAAG8N,MAAM,CAACxc,MAAM,CAAC;MAEjC,MAAME,UAAU,GAAG2S,MAAM,CAAC4J,IAAI,CAAC/N,UAAU,CAAC,CAACqE,GAAG,CAAC9U,QAAQ,IAAG;QACxD,MAAMye,YAAY,GAAGhO,UAAU,CAACzQ,QAAQ,CAAC;QACzC,MAAM0e,aAAa,GAAG9J,MAAM,CAAC+J,MAAM,CAACF,YAAY,CAAC,CAACjK,MAAM,CAAC,CAACoK,GAAG,EAAEvN,IAAI,KAAKuN,GAAG,GAAGvN,IAAI,CAACrQ,YAAY,EAAE,CAAC,CAAC;QAEnG,MAAMU,OAAO,GAAGkT,MAAM,CAAC4J,IAAI,CAACC,YAAY,CAAC,CAAC3J,GAAG,CAAC+J,SAAS,IAAG;UACxD,MAAMhe,MAAM,GAAGuP,QAAQ,CAACyO,SAAS,CAAC;UAClC,MAAMxN,IAAI,GAAGoN,YAAY,CAAC5d,MAAM,CAAC;UACjC,OAAO;YACLA,MAAM;YACNG,YAAY,EAAEqQ,IAAI,CAACrQ,YAAY;YAC/Bgd,cAAc,EAAE3M,IAAI,CAAC2M,cAAc;YACnCC,UAAU,EAAES,aAAa,GAAG,CAAC,GAAIrN,IAAI,CAACrQ,YAAY,GAAG0d,aAAa,GAAI,GAAG,GAAG;WAC7E;QACH,CAAC,CAAC,CAACR,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACpd,YAAY,GAAGmd,CAAC,CAACnd,YAAY,CAAC;QAElD,OAAO;UACLhB,QAAQ;UACR0B;SACD;MACH,CAAC,CAAC;MAEF,OAAO;QACLK,MAAM;QACNE;OACD;IACH,CAAC,CAAC;EACJ;EAEA;EACAD,cAAcA,CAAC8c,WAAgB;IAC7B,OAAOA,WAAW,CAAC7c,UAAU,CAACuS,MAAM,CAAC,CAAC/O,KAAa,EAAEzF,QAAa,KAAI;MACpE,OAAOyF,KAAK,GAAGzF,QAAQ,CAAC0B,OAAO,CAAC8S,MAAM,CAAC,CAACuK,QAAgB,EAAEle,MAAW,KAAKke,QAAQ,GAAGle,MAAM,CAACG,YAAY,EAAE,CAAC,CAAC;IAC9G,CAAC,EAAE,CAAC,CAAC;EACP;EAEAS,gBAAgBA,CAACud,aAAkB;IACjC,OAAOA,aAAa,CAACtd,OAAO,CAAC8S,MAAM,CAAC,CAAC/O,KAAa,EAAE5E,MAAW,KAAK4E,KAAK,GAAG5E,MAAM,CAACG,YAAY,EAAE,CAAC,CAAC;EACrG;EAEA;EACAY,aAAaA,CAAA;IACX,MAAMqd,OAAO,GAAG,EAAE;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5BD,OAAO,CAAClB,IAAI,CAACmB,CAAC,CAAC;;IAEjB,OAAOD,OAAO;EAChB;EAEA3d,cAAcA,CAAC0d,aAAkB,EAAEne,MAAc;IAC/C,MAAMse,UAAU,GAAGH,aAAa,CAACtd,OAAO,CAACwT,IAAI,CAAEkK,CAAM,IAAKA,CAAC,CAACve,MAAM,KAAKA,MAAM,CAAC;IAC9E,OAAOse,UAAU,GAAGA,UAAU,CAACne,YAAY,GAAG,CAAC;EACjD;EAEAG,kBAAkBA,CAAC6d,aAAkB,EAAEne,MAAc;IACnD,MAAMwe,KAAK,GAAG,IAAI,CAAC/d,cAAc,CAAC0d,aAAa,EAAEne,MAAM,CAAC;IACxD,MAAMye,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGR,aAAa,CAACtd,OAAO,CAACoT,GAAG,CAAEsK,CAAM,IAAKA,CAAC,CAACpe,YAAY,CAAC,CAAC;IAEnF,IAAIqe,KAAK,KAAK,CAAC,EAAE,OAAO,WAAW;IACnC,IAAIC,QAAQ,KAAK,CAAC,EAAE,OAAO,WAAW;IAEtC,MAAMG,UAAU,GAAGJ,KAAK,GAAGC,QAAQ;IAEnC,IAAIG,UAAU,IAAI,GAAG,EAAE,OAAO,qBAAqB;IACnD,IAAIA,UAAU,IAAI,GAAG,EAAE,OAAO,iBAAiB;IAC/C,IAAIA,UAAU,IAAI,GAAG,EAAE,OAAO,kBAAkB;IAChD,IAAIA,UAAU,IAAI,GAAG,EAAE,OAAO,iBAAiB;IAC/C,OAAO,qBAAqB;EAC9B;EAEA;EACQC,iBAAiBA,CAAA;IACvB;IACA,MAAMC,YAAY,GAAG,IAAI,CAACrT,UAAU,GAClC,IAAI,CAACjQ,eAAe,CAACiU,yBAAyB,CAAC,IAAI,CAACjU,eAAe,CAACqW,uBAAuB,CAAC,IAAI,CAACpG,UAAU,CAAC,CAAC,GAC7G,IAAI,CAACD,YAAY,IAAI,IAAI,CAAChQ,eAAe,CAACiU,yBAAyB,CAAC,IAAI,CAACjU,eAAe,CAAC+R,mBAAmB,EAAE,CAAC;IAEjH,MAAMwR,YAAY,GAAG,IAAI,CAACvjB,eAAe,CAAC+R,mBAAmB,EAAE;IAC/D,MAAMyR,SAAS,GAAG,IAAI,CAACxjB,eAAe,CAAC+c,sBAAsB,CAACwG,YAAY,CAAC;IAC3E,MAAM,GAAGE,IAAI,EAAEC,OAAO,CAAC,GAAGF,SAAS,CAACvR,KAAK,CAAC,GAAG,CAAC;IAE9C;IACA,IAAI0R,cAAc,GAAG,iBAAiB;IACtC,IAAI,IAAI,CAAC1T,UAAU,IAAI,IAAI,CAACC,UAAU,EAAE;MACtCyT,cAAc,GAAG,UAAU,IAAI,CAAC1T,UAAU,WAAW,IAAI,CAACC,UAAU,EAAE;KACvE,MAAM,IAAI,IAAI,CAACD,UAAU,EAAE;MAC1B0T,cAAc,GAAG,UAAU,IAAI,CAAC1T,UAAU,EAAE;KAC7C,MAAM,IAAI,IAAI,CAACC,UAAU,EAAE;MAC1ByT,cAAc,GAAG,UAAU,IAAI,CAACzT,UAAU,EAAE;;IAE9C,IAAI,IAAI,CAACJ,oBAAoB,EAAE;MAC7B6T,cAAc,IAAI,cAAc,IAAI,CAAC7T,oBAAoB,EAAE;;IAG7D;IACA,MAAMkG,aAAa,GAAG;MACpBrR,YAAY,EAAE,IAAI,CAAC+T,eAAe,EAAE;MACpCvD,WAAW,EAAE,IAAI,CAACwD,cAAc,EAAE;MAClCvD,YAAY,EAAE,IAAI,CAAC4D,eAAe,EAAE;MACpC4K,aAAa,EAAE,IAAI,CAAC3K,cAAc;KACnC;IAED;IACA,MAAMxC,gBAAgB,GAAG,IAAI,CAAC3Q,oCAAoC,EAAE;IAEpE;IACA,MAAMI,aAAa,GAAG,IAAI,CAAC/B,iBAAiB,CAACwE,MAAM,GAAG,CAAC,GAAG,IAAI,CAACxE,iBAAiB,CAAC,CAAC,CAAC,CAACC,cAAc,GAAG,EAAE;IACvG,MAAMyf,oBAAoB,GAAG;MAC3BC,OAAO,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,aAAa5d,aAAa,EAAE,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,CAAC;MAC/G6d,KAAK,EAAE,IAAI,CAAC5f,iBAAiB,CAACsU,GAAG,CAAC9U,QAAQ,KAAK;QAC7CA,QAAQ,EAAEA,QAAQ,CAACA,QAAQ;QAC3BoV,MAAM,EAAE,GAAGpV,QAAQ,CAACE,oBAAoB,GAAG;QAC3CmgB,qBAAqB,EAAErgB,QAAQ,CAACG,uBAAuB,IAAI,CAAC;QAC5Da,YAAY,EAAEhB,QAAQ,CAAC8H,aAAa,IAAI,CAAC;QACzC0J,WAAW,EAAExR,QAAQ,CAAC+H,YAAY,IAAI,CAAC;QACvC0J,YAAY,EAAEzR,QAAQ,CAACgI,aAAa,IAAI;OACzC,CAAC,CAAC;MACHsY,OAAO,EAAE;QACPtgB,QAAQ,EAAE,eAAe;QACzBoV,MAAM,EAAE,GAAG;QACXiL,qBAAqB,EAAE,IAAI,CAAC3f,6BAA6B,EAAE;QAC3DM,YAAY,EAAEuc,UAAU,CAAC,IAAI,CAAC9U,sBAAsB,EAAE,CAAC;QACvD+I,WAAW,EAAE+L,UAAU,CAAC,IAAI,CAAC5c,qBAAqB,EAAE,CAAC;QACrD8Q,YAAY,EAAE,IAAI,CAAC/I,uBAAuB;;KAE7C;IAED,OAAO;MACL;MACAiX,YAAY,EAAEA,YAAY;MAC1BY,WAAW,EAAE,GAAGT,IAAI,IAAIC,OAAO,EAAE;MACjCC,cAAc,EAAEA,cAAc;MAE9B;MACAQ,SAAS,EAAEnO,aAAa;MACxBS,gBAAgB,EAAEA,gBAAgB;MAClCoN,oBAAoB,EAAEA;KACvB;EACH;EAEA;EACQO,uBAAuBA,CAAA;IAC7B;IACA,MAAMC,mBAAmB,GAAG,IAAI,CAAC3L,eAAe,EAAE;IAClD,MAAM4L,kBAAkB,GAAG,IAAI,CAAC3L,cAAc,EAAE;IAChD,MAAMvD,YAAY,GAAGiP,mBAAmB,GAAGC,kBAAkB;IAE7D;IACA,MAAMf,YAAY,GAAG,IAAI,CAACvjB,eAAe,CAAC+R,mBAAmB,EAAE;IAC/D,MAAMwS,eAAe,GAAG,IAAI,CAACvkB,eAAe,CAAC+c,sBAAsB,CAACwG,YAAY,CAAC;IACjF,MAAM,CAAC7V,KAAK,EAAE8W,YAAY,CAAC,GAAGD,eAAe,CAACtS,KAAK,CAAC,GAAG,CAAC;IACxD,MAAMwR,IAAI,GAAGe,YAAY,IAAI,EAAE;IAC/B,MAAMd,OAAO,GAAGa,eAAe,CAAChkB,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI;IAE5D;IACA,IAAIkkB,gBAAgB,GAAG,iBAAiB;IACxC,IAAI,IAAI,CAACxU,UAAU,IAAI,IAAI,CAACC,UAAU,EAAE;MACtC,MAAMwU,cAAc,GAAG,IAAI,CAACzU,UAAU,CAACgC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpD,MAAM0S,cAAc,GAAG,IAAI,CAACzU,UAAU,CAAC+B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpDwS,gBAAgB,GAAG,UAAUC,cAAc,WAAWC,cAAc,EAAE;KACvE,MAAM,IAAI,IAAI,CAAC3U,YAAY,EAAE;MAC5ByU,gBAAgB,GAAG,UAAU,IAAI,CAACzU,YAAY,EAAE;;IAElD,IAAI,IAAI,CAACF,oBAAoB,EAAE;MAC7B2U,gBAAgB,IAAI,cAAc,IAAI,CAAC3U,oBAAoB,EAAE;;IAG/D;IACA,MAAMqU,SAAS,GAAG;MAChBxf,YAAY,EAAE0f,mBAAmB;MACjClP,WAAW,EAAEmP,kBAAkB;MAC/BlP,YAAY,EAAEA,YAAY;MAC1BwO,aAAa,EAAE,IAAI,CAACjU,KAAK,CAAChH;KAC3B;IAED;IACA,MAAM8N,gBAAgB,GAAG,IAAI,CAAC3Q,oCAAoC,EAAE;IAEpE;IACA,IAAI+d,oBAAoB;IAExB,IAAI,IAAI,CAAC1f,iBAAiB,IAAI,IAAI,CAACA,iBAAiB,CAACwE,MAAM,GAAG,CAAC,EAAE;MAC/D;MACAkb,oBAAoB,GAAG;QACrBC,OAAO,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,CAAC;QACjFC,KAAK,EAAE,IAAI,CAAC5f,iBAAiB,CAACsU,GAAG,CAACmM,OAAO,IAAI,CAC3CA,OAAO,CAACjhB,QAAQ,EAChB,GAAGihB,OAAO,CAAC/gB,oBAAoB,IAAI,EAAE,GAAG,EACxC,KAAK,CAAC+gB,OAAO,CAACnZ,aAAa,IAAI,CAAC,EAAE6Q,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,EACzF,KAAK,CAACD,OAAO,CAAClZ,YAAY,IAAI,CAAC,EAAE4Q,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,EACxF,KAAK,CAACD,OAAO,CAACjZ,aAAa,IAAI,CAAC,EAAE2Q,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,CAC1F,CAAC;QACFZ,OAAO,EAAE,CACP,eAAe,EACf,EAAE,EACF,KAAKI,mBAAmB,CAAC/H,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,EAChF,KAAKP,kBAAkB,CAAChI,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,EAC/E,KAAKzP,YAAY,CAACkH,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE;OAE5E;KACF,MAAM;MACL;MACA,MAAMC,aAAa,GAAG,IAAIC,GAAG,EAAE;MAE/B;MACA,IAAI,CAACpV,KAAK,CAACqO,OAAO,CAACzG,IAAI,IAAG;QACxB,MAAM5T,QAAQ,GAAG4T,IAAI,CAAC5T,QAAQ,IAAI,cAAc;QAChD,IAAI,CAACmhB,aAAa,CAACE,GAAG,CAACrhB,QAAQ,CAAC,EAAE;UAChCmhB,aAAa,CAACG,GAAG,CAACthB,QAAQ,EAAE;YAC1BA,QAAQ,EAAEA,QAAQ;YAClBoV,MAAM,EAAE,EAAE;YACVpU,YAAY,EAAE,CAAC;YACfwQ,WAAW,EAAE,CAAC;YACdC,YAAY,EAAE;WACf,CAAC;;QAEJ,MAAMJ,IAAI,GAAG8P,aAAa,CAACxD,GAAG,CAAC3d,QAAQ,CAAC;QACxCqR,IAAI,CAACrQ,YAAY,IAAI4S,IAAI,CAACnO,KAAK;QAE/B;QACA,MAAMwP,cAAc,GAAG,IAAI,CAAClJ,OAAO,CAACmJ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACxV,IAAI,KAAKiU,IAAI,CAAC7R,MAAM,CAAC;QACrE,IAAIkT,cAAc,EAAE;UAClB,MAAMxE,UAAU,GAAG,IAAI,CAACpO,aAAa,CAAC4S,cAAc,CAAC;UACrD,IAAIxE,UAAU,IAAIA,UAAU,CAACC,OAAO,IAAID,UAAU,CAAClO,aAAa,EAAE;YAChE,MAAM0J,WAAW,GAAG,IAAI,CAACgH,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;YAChD7D,WAAW,CAACoO,OAAO,CAACvG,MAAM,IAAG;cAC3B,IAAI1D,QAAQ,CAAC0D,MAAM,CAACjT,MAAM,CAACC,QAAQ,EAAE,CAAC,KAAKsP,QAAQ,CAACK,UAAU,CAAClO,aAAa,IAAI,GAAG,CAAC,EAAE;gBACpF8O,IAAI,CAACG,WAAW,IAAIsC,MAAM,CAAClP,KAAK,IAAI6L,UAAU,CAAChO,mBAAmB,IAAI,EAAE,CAAC;;YAE7E,CAAC,CAAC;;;QAIN4O,IAAI,CAACI,YAAY,GAAGJ,IAAI,CAACrQ,YAAY,GAAGqQ,IAAI,CAACG,WAAW;MAC1D,CAAC,CAAC;MAEF,MAAM+P,eAAe,GAAGC,KAAK,CAACC,IAAI,CAACN,aAAa,CAACxC,MAAM,EAAE,CAAC;MAE1DuB,oBAAoB,GAAG;QACrBC,OAAO,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,CAAC;QACjFC,KAAK,EAAEmB,eAAe,CAACzM,GAAG,CAAC9U,QAAQ,IAAI,CACrCA,QAAQ,CAACA,QAAQ,EACjB,GAAGA,QAAQ,CAACoV,MAAM,GAAG,EACrB,KAAKpV,QAAQ,CAACgB,YAAY,CAAC2X,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,EAClF,KAAKlhB,QAAQ,CAACwR,WAAW,CAACmH,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,EACjF,KAAKlhB,QAAQ,CAACyR,YAAY,CAACkH,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,CACnF,CAAC;QACFZ,OAAO,EAAE,CACP,eAAe,EACf,EAAE,EACF,KAAKI,mBAAmB,CAAC/H,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,EAChF,KAAKP,kBAAkB,CAAChI,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE,EAC/E,KAAKzP,YAAY,CAACkH,cAAc,CAAC,OAAO,EAAE;UAAEuI,qBAAqB,EAAE;QAAC,CAAE,CAAC,EAAE;OAE5E;;IAGH,OAAO;MACLnX,KAAK,EAAEA,KAAK,IAAI6V,YAAY,CAAC8B,kBAAkB,CAAC,OAAO,CAAC;MACxD5B,IAAI,EAAEA,IAAI,IAAIF,YAAY,CAAC+B,kBAAkB,CAAC,OAAO,CAAC;MACtDC,OAAO,EAAEd,gBAAgB;MACzBN,SAAS,EAAEA,SAAS;MACpB1N,gBAAgB,EAAEA,gBAAgB;MAClCoN,oBAAoB,EAAEA;KACvB;EACH;EAEM2B,wBAAwBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAAnS,4JAAA;MAC5B,IAAI;QACFmS,OAAI,CAACpe,SAAS,GAAG,IAAI;QACrB,MAAMqe,UAAU,GAAGD,OAAI,CAACrB,uBAAuB,EAAE;QACjD,MAAMqB,OAAI,CAAClW,aAAa,CAACoW,mBAAmB,CAACD,UAAU,EAAE,wBAAwBD,OAAI,CAACzV,YAAY,EAAE,CAAC;QACrGyV,OAAI,CAACpW,mBAAmB,CAAC8L,WAAW,CAAC,uCAAuC,CAAC;OAC9E,CAAC,OAAOtI,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxD4S,OAAI,CAACpW,mBAAmB,CAACqE,SAAS,CAAC,qCAAqC,CAAC;OAC1E,SAAS;QACR+R,OAAI,CAACpe,SAAS,GAAG,KAAK;;IACvB;EACH;EAEMue,sBAAsBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAAvS,4JAAA;MAC1B,IAAI;QACFuS,OAAI,CAACxe,SAAS,GAAG,IAAI;QACrB,MAAMqe,UAAU,GAAGG,OAAI,CAACzB,uBAAuB,EAAE;QACjD,MAAMyB,OAAI,CAACtW,aAAa,CAACuW,iBAAiB,CAACJ,UAAU,EAAE,wBAAwBG,OAAI,CAAC7V,YAAY,EAAE,CAAC;QACnG6V,OAAI,CAACxW,mBAAmB,CAAC8L,WAAW,CAAC,qCAAqC,CAAC;OAC5E,CAAC,OAAOtI,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDgT,OAAI,CAACxW,mBAAmB,CAACqE,SAAS,CAAC,mCAAmC,CAAC;OACxE,SAAS;QACRmS,OAAI,CAACxe,SAAS,GAAG,KAAK;;IACvB;EACH;EAEA;EAEM0e,oBAAoBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAA1S,4JAAA;MACxBsC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;MAC3D,MAAMoQ,SAAS,GAAGC,WAAW,CAACvS,GAAG,EAAE;MAEnC;MACAqS,OAAI,CAACxU,mBAAmB,GAAG,IAAI;MAC/BoE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEqQ,WAAW,CAACvS,GAAG,EAAE,GAAGsS,SAAS,EAAE,IAAI,CAAC;MAEpE;MACAD,OAAI,CAACrU,iBAAiB,GAAG,KAAK;MAC9B,MAAMqU,OAAI,CAACG,2BAA2B,EAAE;MACxC;MACA,MAAMC,GAAG,GAAG,IAAI3U,IAAI,EAAE;MACtBuU,OAAI,CAACzX,uBAAuB,GAAG6X,GAAG,CAAC,CAAC;MAEpCJ,OAAI,CAACxX,yBAAyB,GAAG,EAAE;MACnCwX,OAAI,CAACvX,mBAAmB,GAAG,IAAI;MAC/BuX,OAAI,CAACzY,6BAA6B,GAAG,EAAE;MACvCyY,OAAI,CAAC/X,uBAAuB,GAAG,EAAE;MAEjC2H,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEqQ,WAAW,CAACvS,GAAG,EAAE,GAAGsS,SAAS,EAAE,IAAI,CAAC;MAErF;MACAD,OAAI,CAACxW,GAAG,CAACmF,aAAa,EAAE;MACxBiB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEqQ,WAAW,CAACvS,GAAG,EAAE,GAAGsS,SAAS,EAAE,IAAI,CAAC;MAE9E;MAEArQ,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEqQ,WAAW,CAACvS,GAAG,EAAE,GAAGsS,SAAS,EAAE,IAAI,CAAC;IAAC;EACtF;EAIcE,2BAA2BA,CAAA;IAAA,IAAAE,OAAA;IAAA,OAAA/S,4JAAA;MACvC,IAAI;QACF,MAAMK,GAAG,GAAG,IAAIlC,IAAI,EAAE;QAGtB,IAAI6U,QAAQ,GAAGD,OAAI,CAAClW,KAAK;QACzB,IAAI,CAACmW,QAAQ,EAAE3d,MAAM,EAAE;UACrB2d,QAAQ,SAASD,OAAI,CAACrmB,eAAe,CAAC4a,WAAW,EAAE;UACnDyL,OAAI,CAAClW,KAAK,GAAGmW,QAAQ,CAAC,CAAC;;QAGzB,MAAMC,aAAa,GAAG,IAAItF,GAAG,EAAU;QAEvC,KAAK,MAAM5gB,IAAI,IAAIimB,QAAQ,EAAE;UAC3B,IAAIjmB,IAAI,CAACkQ,MAAM,IAAIlQ,IAAI,CAACiQ,IAAI,KAAK,UAAU,IAAIjQ,IAAI,CAACsD,QAAQ,EAAE;YAC5D4iB,aAAa,CAACC,GAAG,CAACnmB,IAAI,CAACsD,QAAQ,CAAC;;;QAIpC0iB,OAAI,CAAC3U,qBAAqB,GAAGyT,KAAK,CAACC,IAAI,CAACmB,aAAa,CAAC,CAAC1E,IAAI,EAAE;QAE7DjM,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEwQ,OAAI,CAAC3U,qBAAqB,CAAC;OAC5E,CAAC,OAAOmB,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDwT,OAAI,CAAC3U,qBAAqB,GAAG,EAAE;;IAChC;EACH;EAGM+U,sBAAsBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAApT,4JAAA;MAC1B,IAAI,CAACoT,OAAI,CAAClY,yBAAyB,EAAE;MAErC;MACAkY,OAAI,CAAC/U,iBAAiB,GAAG,IAAI;MAC7B+U,OAAI,CAACjY,mBAAmB,GAAG,IAAI;MAC/BiY,OAAI,CAACnZ,6BAA6B,GAAG,EAAE;MACvCmZ,OAAI,CAACzY,uBAAuB,GAAG,EAAE;MAEjC;MACAyY,OAAI,CAAClX,GAAG,CAACmF,aAAa,EAAE;MAExB;MACAsD,UAAU,cAAA3E,4JAAA,CAAC,aAAW;QACpB,IAAI;UACF,MAAMoT,OAAI,CAACC,6BAA6B,EAAE;SAC3C,CAAC,OAAO9T,KAAK,EAAE;UACd+C,OAAO,CAAC/C,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;UAChE6T,OAAI,CAACrX,mBAAmB,CAACqE,SAAS,CAAC,0CAA0C,CAAC;SAC/E,SAAS;UACRgT,OAAI,CAAC/U,iBAAiB,GAAG,KAAK;UAC9B+U,OAAI,CAAClX,GAAG,CAACmF,aAAa,EAAE;;MAE5B,CAAC,GAAE,CAAC,CAAC;IAAC;EACR;EAGA;EACciS,iBAAiBA,CAAIC,OAAmB,EAAEC,SAAiB,EAAEC,QAAgB;IAAA,OAAAzT,4JAAA;MACzF,MAAM0T,cAAc,GAAG,IAAIC,OAAO,CAAI,CAACC,CAAC,EAAEC,MAAM,KAC9ClP,UAAU,CAAC,MAAMkP,MAAM,CAAC,IAAIC,KAAK,CAACL,QAAQ,CAAC,CAAC,EAAED,SAAS,CAAC,CACzD;MACD,OAAOG,OAAO,CAACI,IAAI,CAAC,CAACR,OAAO,EAAEG,cAAc,CAAC,CAAC;IAAC;EACjD;EAEcL,6BAA6BA,CAAA;IAAA,IAAAW,OAAA;IAAA,OAAAhU,4JAAA;MACzC,IAAI,CAACgU,OAAI,CAAC9Y,yBAAyB,EAAE;MAErC,IAAI;QACF,MAAM,CAAC+Y,WAAW,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,eAAe,CAAC,SAAST,OAAO,CAACU,GAAG,CAAC,CAC3FL,OAAI,CAACtnB,eAAe,CAAC4nB,yBAAyB,CAC5CN,OAAI,CAAC/Y,uBAAuB,EAC5B+Y,OAAI,CAAC9Y,yBAAyB,CAC/B,EACD8Y,OAAI,CAACtnB,eAAe,CAAC6nB,4BAA4B,CAC/CP,OAAI,CAAC/Y,uBAAuB,EAC5B+Y,OAAI,CAAC9Y,yBAAyB,CAC/B,EACD8Y,OAAI,CAACtnB,eAAe,CAAC8nB,sBAAsB,CACzCR,OAAI,CAAC/Y,uBAAuB,EAC5B+Y,OAAI,CAAC9Y,yBAAyB,CAC/B,EACD8Y,OAAI,CAACtnB,eAAe,CAAC+nB,mBAAmB,CACtCT,OAAI,CAAC/Y,uBAAuB,EAC5B+Y,OAAI,CAAC9Y,yBAAyB,CAC/B,CACF,CAAC;QAEFoH,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;QAE5DyR,OAAI,CAAC7Y,mBAAmB,GAAG8Y,WAAW;QACtCD,OAAI,CAAC/Z,6BAA6B,GAAGia,iBAAiB;QACtDF,OAAI,CAACrZ,uBAAuB,GAAGwZ,eAAe;QAC9CH,OAAI,CAAC9a,uBAAuB,GAAGkb,eAAe;OAE/C,CAAC,OAAO7U,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;QAEhEyU,OAAI,CAAC7Y,mBAAmB,GAAG;UACzBhD,aAAa,EAAE,CAAC;UAChBC,YAAY,EAAE,CAAC;UACfgD,UAAU,EAAE,CAAC;UACbsZ,mBAAmB,EAAE,CAAC;UACtBC,kBAAkB,EAAE,CAAC;UACrBtZ,aAAa,EAAE;SAChB;QACD2Y,OAAI,CAAC/Z,6BAA6B,GAAG,EAAE;QACvC+Z,OAAI,CAACrZ,uBAAuB,GAAG,EAAE;QACjCqZ,OAAI,CAAC9a,uBAAuB,GAAG,IAAI;QAEnC,MAAMqG,KAAK;;IACZ;EACH;EAIMqV,mBAAmBA,CAAA;IAAA,IAAAC,OAAA;IAAA,OAAA7U,4JAAA;MACvB,IAAI6U,OAAI,CAAC3Z,yBAAyB,EAAE;QAClC,MAAM2Z,OAAI,CAAC1B,sBAAsB,EAAE;;IACpC;EACH;EAEAxX,qBAAqBA,CAAA;IACnB2G,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,MAAMoQ,SAAS,GAAGC,WAAW,CAACvS,GAAG,EAAE;IAEnC;IACA,IAAI,CAACnC,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACG,iBAAiB,GAAG,KAAK;IAE9B;IACA,IAAI,CAACnC,GAAG,CAACmF,aAAa,EAAE;IAExB;IACAsD,UAAU,CAAC,MAAK;MACd,IAAI,CAACzJ,yBAAyB,GAAG,EAAE;MACnC,IAAI,CAACC,mBAAmB,GAAG,IAAI;MAC/B,IAAI,CAAClB,6BAA6B,GAAG,EAAE;MACvC,IAAI,CAACU,uBAAuB,GAAG,EAAE;MAEjC2H,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEqQ,WAAW,CAACvS,GAAG,EAAE,GAAGsS,SAAS,EAAE,IAAI,CAAC;IACxF,CAAC,EAAE,CAAC,CAAC;EACP;EAGA;EACAlY,sBAAsBA,CAACxF,KAAa;IAClC,OAAO,KAAKA,KAAK,CAACxE,OAAO,CAAC,CAAC,CAAC,EAAE;EAChC;EAEA8J,8BAA8BA,CAACD,IAAY;IACzC,OAAOA,IAAI,KAAK,SAAS,GAAG,SAAS,GAAG,QAAQ;EAClD;EAEAD,8BAA8BA,CAACC,IAAY;IACzC,OAAOA,IAAI,KAAK,SAAS,GAAG,cAAc,GAAG,aAAa;EAC5D;EAEA;EACArB,iBAAiBA,CAAC6b,MAAW;IAC3B,IAAI,CAACA,MAAM,EAAE,OAAO,EAAE;IACtB,MAAM1a,KAAK,GAAG,IAAI+D,IAAI,CAAC2W,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,UAAU,CAAC;IAChE,OAAO5a,KAAK,CAAC2X,kBAAkB,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG3X,KAAK,CAAC4X,kBAAkB,CAAC,OAAO,EAAE;MAAE5I,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAS,CAAE,CAAC;EAC5H;EAEMxN,2BAA2BA,CAAA;IAAA,IAAAoZ,OAAA;IAAA,OAAAjV,4JAAA;MAC/B,IAAI,CAACiV,OAAI,CAAC9Z,mBAAmB,IAAI,CAAC8Z,OAAI,CAAC/Z,yBAAyB,EAAE;MAElE,IAAI;QACF,MAAMga,SAAS,GAAGD,OAAI,CAACE,+BAA+B,EAAE;QACxD,MAAMF,OAAI,CAACjZ,YAAY,CAACoZ,YAAY,CAACF,SAAS,CAAC;OAChD,CAAC,OAAO3V,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C0V,OAAI,CAAClZ,mBAAmB,CAACqE,SAAS,CAAC,8BAA8B,CAAC;;IACnE;EACH;EAEQ+U,+BAA+BA,CAAA;IACrC,MAAM/a,KAAK,GAAG,IAAI,CAACa,uBAAuB,CAAC8W,kBAAkB,CAAC,OAAO,CAAC;IACtE,MAAM1hB,QAAQ,GAAG,IAAI,CAAC6K,yBAAyB;IAE/C,IAAIga,SAAS,GAAG;;;;sBAIE9a,KAAK;yBACF/J,QAAQ;;;;;gCAKD,IAAI,CAAC8K,mBAAmB,CAAChD,aAAa,EAAE1H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;+BAC7D,IAAI,CAAC0K,mBAAmB,CAAC/C,YAAY,EAAE3H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;gCAC1D,IAAI,CAAC0K,mBAAmB,CAACC,UAAU,EAAE3K,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;;;;2BAK9D,IAAI,CAAC0K,mBAAmB,CAACuZ,mBAAmB,EAAEjkB,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;0BACnE,IAAI,CAAC0K,mBAAmB,CAACwZ,kBAAkB,EAAElkB,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;wCACnD,IAAI,CAAC0K,mBAAmB,CAACE,aAAa,EAAE5K,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;KAE/F;IAED;IACA,IAAI,IAAI,CAACwJ,6BAA6B,CAAC5E,MAAM,GAAG,CAAC,EAAE;MACjD6f,SAAS,IAAI;;;OAGZ;MAED,IAAI,CAACjb,6BAA6B,CAACyQ,OAAO,CAACtY,MAAM,IAAG;QAClD8iB,SAAS,IAAI;eACN9iB,MAAM,CAACA,MAAM,CAACqH,WAAW,EAAE;uBACnBrH,MAAM,CAACtB,cAAc;0BAClBsB,MAAM,CAACgG,YAAY,EAAE3H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;SAE1D;MACH,CAAC,CAAC;MAEFykB,SAAS,IAAI,QAAQ;;IAGvB;IACA,IAAI,IAAI,CAACva,uBAAuB,CAACtF,MAAM,GAAG,CAAC,EAAE;MAC3C6f,SAAS,IAAI;;;OAGZ;MAED,IAAI,CAACva,uBAAuB,CAAC+P,OAAO,CAAC2K,GAAG,IAAG;QACzC,MAAM/a,IAAI,GAAG+a,GAAG,CAAC/a,IAAI,KAAK,SAAS,GAAG,SAAS,GAAG,QAAQ;QAC1D,MAAMgb,KAAK,GAAGD,GAAG,CAAC/a,IAAI,KAAK,SAAS,GAAG,GAAG,GAAG,GAAG;QAChD4a,SAAS,IAAI;;cAEP5a,IAAI,KAAKgb,KAAK,KAAKD,GAAG,CAACpgB,KAAK,CAACxE,OAAO,CAAC,CAAC,CAAC;cACvC4kB,GAAG,CAAC7a,MAAM;;SAEf;MACH,CAAC,CAAC;MAEF0a,SAAS,IAAI,QAAQ;;IAGvBA,SAAS,IAAI;;yBAEQ,IAAI/W,IAAI,EAAE,CAAC6K,cAAc,CAAC,OAAO,CAAC;;;KAGtD;IAED,OAAOkM,SAAS;EAClB;EAEA;EACM1Z,4BAA4BA,CAAA;IAAA,IAAA+Z,OAAA;IAAA,OAAAvV,4JAAA;MAChC,IAAI,CAACuV,OAAI,CAACrc,uBAAuB,IAAI,CAACqc,OAAI,CAACra,yBAAyB,EAAE;QACpEqa,OAAI,CAACxZ,mBAAmB,CAACqE,SAAS,CAAC,sCAAsC,CAAC;QAC1E;;MAGF,IAAI;QACF,MAAM8U,SAAS,GAAGK,OAAI,CAACC,oCAAoC,EAAE;QAC7D,MAAMD,OAAI,CAACvZ,YAAY,CAACoZ,YAAY,CAACF,SAAS,CAAC;QAC/CK,OAAI,CAACxZ,mBAAmB,CAAC8L,WAAW,CAAC,mCAAmC,CAAC;OAC1E,CAAC,OAAOtI,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDgW,OAAI,CAACxZ,mBAAmB,CAACqE,SAAS,CAAC,oCAAoC,CAAC;;IACzE;EACH;EAEA;EACQoV,oCAAoCA,CAAA;IAC1C,MAAMpb,KAAK,GAAG,IAAI,CAACa,uBAAuB,CAAC8W,kBAAkB,CAAC,OAAO,CAAC;IACtE,MAAM1hB,QAAQ,GAAG,IAAI,CAAC6K,yBAAyB;IAC/C,MAAM4Z,MAAM,GAAG,IAAI,CAAC5b,uBAAuB;IAE3C,IAAIgc,SAAS,GAAG;;;;uCAImB9a,KAAK;0CACF/J,QAAQ;4CACN,IAAI8N,IAAI,CAAC2W,MAAM,CAACE,UAAU,IAAIF,MAAM,CAACC,YAAY,IAAID,MAAM,CAACjf,SAAS,CAAC,CAACmT,cAAc,CAAC,OAAO,CAAC;;;;;;iDAMzF,CAAC8L,MAAM,CAACzjB,YAAY,IAAIyjB,MAAM,CAAC3c,aAAa,GAAG1H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;gDACpE,CAACqkB,MAAM,CAACjT,WAAW,IAAIiT,MAAM,CAAC1c,YAAY,GAAG3H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;iDAChE,CAACqkB,MAAM,CAACW,IAAI,IAAIX,MAAM,CAAC1Z,UAAU,IAAK,CAAC0Z,MAAM,CAACzjB,YAAY,IAAIyjB,MAAM,CAAC3c,aAAa,IAAI,CAAC,KAAK2c,MAAM,CAACjT,WAAW,IAAIiT,MAAM,CAAC1c,YAAY,IAAI,CAAC,CAAE,GAAG3H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;;;;qDAK/J,CAAC,CAACqkB,MAAM,CAACW,IAAI,IAAIX,MAAM,CAAC1Z,UAAU,IAAK,CAAC0Z,MAAM,CAACzjB,YAAY,IAAIyjB,MAAM,CAAC3c,aAAa,IAAI,CAAC,KAAK2c,MAAM,CAACjT,WAAW,IAAIiT,MAAM,CAAC1c,YAAY,IAAI,CAAC,CAAE,KAAK,IAAI,CAAC+C,mBAAmB,EAAEuZ,mBAAmB,IAAI,CAAC,CAAC,IAAI,IAAI,CAACvZ,mBAAmB,EAAEwZ,kBAAkB,IAAI,CAAC,CAAC,GAAGlkB,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;sDACjR,CAACqkB,MAAM,CAACY,iBAAiB,IAAIZ,MAAM,CAACa,kBAAkB,GAAGllB,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;6BACtGmf,IAAI,CAACgG,GAAG,CAACd,MAAM,CAACxb,UAAU,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,OAAO,GAAG,KAAK;6CACzC,CAACwb,MAAM,CAACxb,UAAU,IAAI,CAAC,GAAG7I,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;;KAGtF;IAED;IACA,IAAIqkB,MAAM,CAACe,aAAa,IAAIf,MAAM,CAACgB,YAAY,IAAIhB,MAAM,CAACiB,YAAY,IAAIjB,MAAM,CAACkB,cAAc,IAAIlB,MAAM,CAACmB,aAAa,IAAInB,MAAM,CAACoB,aAAa,EAAE;MAC/IhB,SAAS,IAAI;;;OAGZ;MAED,MAAMiB,YAAY,GAAGrB,MAAM,CAACe,aAAa,IAAIf,MAAM,CAACkB,cAAc;MAClE,IAAIG,YAAY,EAAE;QAChBjB,SAAS,IAAI;;;uBAGEiB,YAAY,CAACvjB,aAAa,IAAIujB,YAAY,CAACrlB,cAAc,IAAI,KAAK;yBAChE,CAACqlB,YAAY,CAAC9kB,YAAY,IAAI8kB,YAAY,CAAChe,aAAa,GAAG1H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;wBAChF,CAAC0lB,YAAY,CAACtU,WAAW,IAAIsU,YAAY,CAAC/d,YAAY,GAAG3H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;SAE5F;;MAGH,MAAM2lB,WAAW,GAAGtB,MAAM,CAACgB,YAAY,IAAIhB,MAAM,CAACmB,aAAa;MAC/D,IAAIG,WAAW,EAAE;QACflB,SAAS,IAAI;;;uBAGEkB,WAAW,CAACxjB,aAAa,IAAIwjB,WAAW,CAACtlB,cAAc,IAAI,KAAK;yBAC9D,CAACslB,WAAW,CAAC/kB,YAAY,IAAI+kB,WAAW,CAACje,aAAa,GAAG1H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;wBAC9E,CAAC2lB,WAAW,CAACvU,WAAW,IAAIuU,WAAW,CAAChe,YAAY,GAAG3H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;SAE1F;;MAGH,MAAM4lB,WAAW,GAAGvB,MAAM,CAACiB,YAAY,IAAIjB,MAAM,CAACoB,aAAa;MAC/D,IAAIG,WAAW,EAAE;QACfnB,SAAS,IAAI;;;uBAGEmB,WAAW,CAACzjB,aAAa,IAAIyjB,WAAW,CAACvlB,cAAc,IAAI,KAAK;yBAC9D,CAACulB,WAAW,CAAChlB,YAAY,IAAIglB,WAAW,CAACle,aAAa,GAAG1H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;wBAC9E,CAAC4lB,WAAW,CAACxU,WAAW,IAAIwU,WAAW,CAACje,YAAY,GAAG3H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;SAE1F;;MAGHykB,SAAS,IAAI,QAAQ;;IAGvB;IACA,IAAI,IAAI,CAACva,uBAAuB,CAACtF,MAAM,GAAG,CAAC,EAAE;MAC3C6f,SAAS,IAAI;;;OAGZ;MAED,IAAI,CAACva,uBAAuB,CAAC+P,OAAO,CAAC2K,GAAG,IAAG;QACzC,MAAM/a,IAAI,GAAG+a,GAAG,CAAC/a,IAAI,KAAK,SAAS,GAAG,SAAS,GAAG,QAAQ;QAC1D,MAAMgb,KAAK,GAAGD,GAAG,CAAC/a,IAAI,KAAK,SAAS,GAAG,GAAG,GAAG,GAAG;QAChD4a,SAAS,IAAI;;sBAEC5a,IAAI,cAAcgb,KAAK,KAAKD,GAAG,CAACpgB,KAAK,CAACxE,OAAO,CAAC,CAAC,CAAC;cACxD4kB,GAAG,CAAC7a,MAAM;qBACH,IAAI2D,IAAI,CAACkX,GAAG,CAACjb,KAAK,CAAC,CAAC4X,kBAAkB,CAAC,OAAO,CAAC;;SAE3D;MACH,CAAC,CAAC;MAEFkD,SAAS,IAAI,QAAQ;;IAGvB;IACA,IAAIJ,MAAM,CAACwB,KAAK,IAAIxB,MAAM,CAACwB,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE,EAAE;MAC9CrB,SAAS,IAAI;;;2CAGwBJ,MAAM,CAACwB,KAAK;;OAEhD;;IAGHpB,SAAS,IAAI;;;;0BAIS,IAAI/W,IAAI,EAAE,CAAC6K,cAAc,CAAC,OAAO,CAAC;;;;;KAKvD;IAED,OAAOkM,SAAS;EAClB;;;uBAruEWxmB,cAAc,EAAAvB,+DAAA,CAAAE,uEAAA,GAAAF,+DAAA,CAAAI,+EAAA,GAAAJ,+DAAA,CAAAspB,iEAAA,GAAAtpB,+DAAA,CAAAwpB,mEAAA,GAAAxpB,+DAAA,CAAA0pB,mDAAA,GAAA1pB,+DAAA,CAAAA,4DAAA;IAAA;EAAA;;;YAAduB,cAAc;MAAAjB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAkpB,wBAAAhpB,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UCRrBZ,4DALN,aAA6B,aAGH,cACG,SACnB;UAAAA,uDAAA,YAA0B;UAACA,oDAAA,oCAAuB;UACxDA,0DADwD,EAAK,EACvD;UAGJA,4DADF,cAA4B,iBAEe;UADEA,wDAAA,mBAAA6pB,gDAAA;YAAA7pB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAykB,oBAAA,EAAsB;UAAA,EAAC;UAEzEtlB,uDAAA,YAAoC;UAACA,oDAAA,oCACrC;UAAAA,wDAAA,KAAA+pB,+BAAA,mBAA2E;UAC7E/pB,0DAAA,EAAS;UAETA,4DAAA,kBAAwF;UAAnDA,wDAAA,mBAAAgqB,iDAAA;YAAAhqB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAif,eAAA,EAAiB;UAAA,EAAC;UAC9D9f,uDAAA,aAA4B;UAACA,oDAAA,kCAC/B;UAAAA,0DAAA,EAAS;UAETA,4DAAA,kBAAgF;UAA1CA,wDAAA,mBAAAiqB,iDAAA;YAAAjqB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAA4a,MAAA,EAAQ;UAAA,EAAC;UACtDzb,uDAAA,aAAmC;UAACA,oDAAA,4BACtC;UAEJA,0DAFI,EAAS,EACL,EACF;UAKFA,4DAFJ,eAAyB,eACG,iBACA;UACtBA,uDAAA,aAAmC;UACnCA,oDAAA,gBACA;UAAAA,wDAAA,KAAAkqB,+BAAA,mBAAyD;UAG3DlqB,0DAAA,EAAQ;UACRA,4DAAA,iBAEqC;UAD9BA,8DAAA,2BAAAmqB,wDAAArkB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAA2O,UAAA,EAAA1J,MAAA,MAAAjF,GAAA,CAAA2O,UAAA,GAAA1J,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAwB;UAAC9F,wDAAA,oBAAAoqB,iDAAA;YAAApqB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAUa,GAAA,CAAAgY,mBAAA,EAAqB;UAAA,EAAC;UAElE7Y,0DAHE,EAEqC,EACjC;UAGJA,4DADF,eAA0B,iBACA;UACtBA,uDAAA,aAAmC;UACnCA,oDAAA,gBACA;UAAAA,wDAAA,KAAAqqB,+BAAA,mBAAyD;UAG3DrqB,0DAAA,EAAQ;UACRA,4DAAA,iBAEqC;UAD9BA,8DAAA,2BAAAsqB,wDAAAxkB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAA4O,UAAA,EAAA3J,MAAA,MAAAjF,GAAA,CAAA4O,UAAA,GAAA3J,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAwB;UAAC9F,wDAAA,oBAAAuqB,iDAAA;YAAAvqB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAUa,GAAA,CAAAgY,mBAAA,EAAqB;UAAA,EAAC;UAElE7Y,0DAHE,EAEqC,EACjC;UAGJA,4DADF,eAA0B,iBACE;UACxBA,uDAAA,aAA6B;UAC7BA,oDAAA,iBACA;UAAAA,wDAAA,KAAAwqB,+BAAA,mBAAyD;UAG3DxqB,0DAAA,EAAQ;UACRA,4DAAA,kBAEsC;UAD9BA,8DAAA,2BAAAyqB,yDAAA3kB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAAwO,oBAAA,EAAAvJ,MAAA,MAAAjF,GAAA,CAAAwO,oBAAA,GAAAvJ,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAkC;UAAC9F,wDAAA,oBAAA0qB,kDAAA;YAAA1qB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAUa,GAAA,CAAA4X,cAAA,EAAgB;UAAA,EAAC;UAEpEzY,4DAAA,kBAAiB;UAAAA,oDAAA,yBAAiB;UAAAA,0DAAA,EAAS;UAC3CA,wDAAA,KAAA2qB,iCAAA,qBAA6D;UAEjE3qB,0DADE,EAAS,EACL;UAGJA,4DADF,eAA4B,kBACmF;UAAtEA,wDAAA,mBAAA4qB,iDAAA;YAAA5qB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAA4X,cAAA,EAAgB;UAAA,EAAC;UAE/DzY,wDADA,KAAA6qB,4BAAA,gBAA4E,KAAAC,sCAAA,gCAAA9qB,oEAAA,CACnD;UACzBA,oDAAA,IACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAA+G;UAAtEA,wDAAA,mBAAA+qB,iDAAA;YAAA/qB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAA8X,cAAA,EAAgB;UAAA,EAAC;UAEjE3Y,wDADA,KAAAgrB,4BAAA,gBAA4E,KAAAC,sCAAA,gCAAAjrB,oEAAA,CACnD;UACzBA,oDAAA,IACF;UACFA,0DADE,EAAS,EACL;UAIJA,4DADF,eAA4B,eACA;UACxBA,uDAAA,aAA+B;UAC/BA,oDAAA,mCACF;UAAAA,0DAAA,EAAM;UACNA,4DAAA,kBAAiG;UAA5DA,wDAAA,mBAAAkrB,iDAAA;YAAAlrB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAkkB,wBAAA,EAA0B;UAAA,EAAC;UAEvE/kB,wDADA,KAAAmrB,4BAAA,gBAAoE,KAAAC,sCAAA,gCAAAprB,oEAAA,CAC5C;UACxBA,oDAAA,eACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAA6F;UAA1DA,wDAAA,mBAAAqrB,iDAAA;YAAArrB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAskB,sBAAA,EAAwB;UAAA,EAAC;UAEnEnlB,wDADA,KAAAsrB,4BAAA,gBAAkE,KAAAC,sCAAA,gCAAAvrB,oEAAA,CAC5C;UACtBA,oDAAA,aACF;UAEJA,0DAFI,EAAS,EACL,EACF;UAQAA,4DALN,eAA0B,eAGG,eACS,eACT;UACrBA,uDAAA,aAAiC;UACnCA,0DAAA,EAAM;UAEJA,4DADF,eAA0B,UACpB;UAAAA,oDAAA,IAAoC;UAAAA,0DAAA,EAAK;UAC7CA,4DAAA,SAAG;UAAAA,oDAAA,qBAAa;UAEpBA,0DAFoB,EAAI,EAChB,EACF;UAGJA,4DADF,eAAiC,eACR;UACrBA,uDAAA,aAA4B;UAC9BA,0DAAA,EAAM;UAEJA,4DADF,eAA0B,UACpB;UAAAA,oDAAA,IAAmC;UAAAA,0DAAA,EAAK;UAC5CA,4DAAA,SAAG;UAAAA,oDAAA,oBAAY;UAEnBA,0DAFmB,EAAI,EACf,EACF;UAGJA,4DADF,eAAqH,eAC5F;UACrBA,uDAAA,aAAiC;UACnCA,0DAAA,EAAM;UAEJA,4DADF,eAA0B,UACpB;UAAAA,oDAAA,IAAoC;UAAAA,0DAAA,EAAK;UAC7CA,4DAAA,SAAG;UAAAA,oDAAA,qBAAa;UAEpBA,0DAFoB,EAAI,EAChB,EACF;UAGJA,4DADF,eAAiC,eACR;UACrBA,uDAAA,aAAoC;UACtCA,0DAAA,EAAM;UAEJA,4DADF,eAA0B,UACpB;UAAAA,oDAAA,IAAsB;UAAAA,0DAAA,EAAK;UAC/BA,4DAAA,SAAG;UAAAA,oDAAA,sBAAc;UAGvBA,0DAHuB,EAAI,EACjB,EACF,EACF;UAGNA,wDAAA,KAAAwrB,8BAAA,mBAA8F;UA4C1FxrB,4DAFJ,eAAsC,gBACR,WACtB;UAAAA,uDAAA,cAAgC;UAACA,oDAAA,0CAA2B;UAAAA,0DAAA,EAAK;UACrEA,4DAAA,gBAA8B;UAAAA,oDAAA,sDAA6C;UAC7EA,0DAD6E,EAAM,EAC7E;UAsDNA,wDApDA,MAAAyrB,+BAAA,kBAAiF,MAAAC,uCAAA,gCAAA1rB,oEAAA,CAoDnD;UAOhCA,0DAAA,EAAM;UAKFA,4DAFJ,gBAA6B,gBACC,WACtB;UAAAA,uDAAA,cAA2B;UAACA,oDAAA,iCAAkB;UACpDA,0DADoD,EAAK,EACnD;UAENA,4DAAA,gBAA0B;UACxBA,wDAAA,MAAA2rB,+BAAA,mBAAwD;UAoD5D3rB,0DADE,EAAM,EACF;UAGNA,uDAAA,4BAA2C;UAG/CA,0DADE,EAAM,EACF;UAGNA,4DAAA,gBACuH;UAAtFA,wDAAA,mBAAA4rB,+CAAA9lB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAAa,GAAA,CAAA8O,aAAA,IAAA7J,MAAA,CAAA2D,MAAA,KAAA3D,MAAA,CAAA+lB,aAAA,IAAoEhrB,GAAA,CAAAwZ,cAAA,EAAgB;UAAA,EAAC;UAI9Gra,4DAHN,gBAAgE,gBACnC,gBACC,eACA;UACtBA,uDAAA,cAA2B;UAACA,oDAAA,KAC9B;UAAAA,0DAAA,EAAK;UACLA,4DAAA,mBAAsF;UAA3BA,wDAAA,mBAAA8rB,kDAAA;YAAA9rB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAwZ,cAAA,EAAgB;UAAA,EAAC;UACnFra,4DAAA,iBAAyB;UAAAA,oDAAA,eAAO;UAEpCA,0DAFoC,EAAO,EAChC,EACL;UAIAA,4DAHN,gBAAwB,sBACG,gBACC,kBACC;UAAAA,oDAAA,eAAM;UAAAA,0DAAA,EAAQ;UACrCA,4DAAA,kBAEyC;UADlCA,8DAAA,2BAAA+rB,yDAAAjmB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAA4G,YAAA,CAAAuB,KAAA,EAAAlD,MAAA,MAAAjF,GAAA,CAAA4G,YAAA,CAAAuB,KAAA,GAAAlD,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAgC;UAEzC9F,0DAHE,EAEyC,EACrC;UAGJA,4DADF,gBAAwB,kBACA;UAAAA,oDAAA,gBAAO;UAAAA,0DAAA,EAAQ;UACrCA,4DAAA,kBAEiD;UAD1CA,8DAAA,2BAAAgsB,yDAAAlmB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAA4G,YAAA,CAAAwkB,MAAA,EAAAnmB,MAAA,MAAAjF,GAAA,CAAA4G,YAAA,CAAAwkB,MAAA,GAAAnmB,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAiC;UAE1C9F,0DAHE,EAEiD,EAC7C;UAENA,wDAAA,MAAAksB,+BAAA,kBAA6C;UAQ3ClsB,4DADF,gBAAwB,kBACA;UAAAA,oDAAA,aAAI;UAAAA,0DAAA,EAAQ;UAClCA,4DAAA,mBAC6D;UAArDA,8DAAA,2BAAAmsB,0DAAArmB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAA4G,YAAA,CAAAoI,IAAA,EAAA/J,MAAA,MAAAjF,GAAA,CAAA4G,YAAA,CAAAoI,IAAA,GAAA/J,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAA+B;UACrC9F,4DAAA,mBAAsB;UAAAA,oDAAA,sBAAa;UAAAA,0DAAA,EAAS;UAC5CA,4DAAA,mBAAyB;UAAAA,oDAAA,iBAAQ;UAErCA,0DAFqC,EAAS,EACnC,EACL;UAENA,wDAAA,MAAAosB,+BAAA,kBAAiE;UAS7DpsB,4DAFJ,gBAAwB,kBACQ,kBAC2C;UAAhDA,8DAAA,2BAAAqsB,yDAAAvmB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAA4G,YAAA,CAAAqI,MAAA,EAAAhK,MAAA,MAAAjF,GAAA,CAAA4G,YAAA,CAAAqI,MAAA,GAAAhK,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAiC;UAAxD9F,0DAAA,EAAuE;UACvEA,uDAAA,iBAA+B;UAC/BA,oDAAA,yBACF;UAGNA,0DAHM,EAAQ,EACJ,EACD,EACH;UAEJA,4DADF,gBAA0B,mBACyD;UAA3BA,wDAAA,mBAAAssB,kDAAA;YAAAtsB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAwZ,cAAA,EAAgB;UAAA,EAAC;UAC9Era,uDAAA,cAA4B;UAACA,oDAAA,mBAC/B;UAAAA,0DAAA,EAAS;UACTA,4DAAA,mBACkD;UADEA,wDAAA,mBAAAusB,kDAAA;YAAAvsB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAA0Z,QAAA,EAAU;UAAA,EAAC;UAEtEva,uDAAA,cAA2B;UAACA,oDAAA,KAC9B;UAIRA,0DAJQ,EAAS,EACL,EACF,EACF,EACF;UAINA,4DAAA,gBAC+H;UAA9FA,wDAAA,mBAAAwsB,+CAAA1mB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAAa,GAAA,CAAAsP,iBAAA,IAAArK,MAAA,CAAA2D,MAAA,KAAA3D,MAAA,CAAA+lB,aAAA,IAAwEhrB,GAAA,CAAAmd,kBAAA,EAAoB;UAAA,EAAC;UAItHhe,4DAHN,gBAAgE,gBACnC,gBACC,eACA;UACtBA,uDAAA,cAA0B;UAACA,oDAAA,kCAC7B;UAAAA,0DAAA,EAAK;UACLA,4DAAA,mBAA0F;UAA/BA,wDAAA,mBAAAysB,kDAAA;YAAAzsB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAmd,kBAAA,EAAoB;UAAA,EAAC;UACvFhe,4DAAA,iBAAyB;UAAAA,oDAAA,eAAO;UAEpCA,0DAFoC,EAAO,EAChC,EACL;UAIAA,4DAHN,gBAAwB,sBACO,gBACH,kBACG;UAAAA,oDAAA,+BAAiB;UAAAA,0DAAA,EAAQ;UAClDA,4DAAA,kBAEiD;UAD1CA,8DAAA,2BAAA0sB,yDAAA5mB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAAwP,WAAA,EAAAvK,MAAA,MAAAjF,GAAA,CAAAwP,WAAA,GAAAvK,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAyB;UAElC9F,0DAHE,EAEiD,EAC7C;UAGJA,4DADF,gBAAwB,kBACO;UAAAA,oDAAA,mCAAqB;UAAAA,0DAAA,EAAQ;UAC1DA,4DAAA,kBAEkD;UAD3CA,8DAAA,2BAAA2sB,yDAAA7mB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAAyP,eAAA,EAAAxK,MAAA,MAAAjF,GAAA,CAAAyP,eAAA,GAAAxK,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAA6B;UAI1C9F,0DALM,EAEkD,EAC9C,EACD,EACH;UAEJA,4DADF,gBAA0B,mBAC6D;UAA/BA,wDAAA,mBAAA4sB,kDAAA;YAAA5sB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAmd,kBAAA,EAAoB;UAAA,EAAC;UAClFhe,uDAAA,cAA4B;UAACA,oDAAA,mBAC/B;UAAAA,0DAAA,EAAS;UACTA,4DAAA,mBACyF;UADrCA,wDAAA,mBAAA6sB,kDAAA;YAAA7sB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAod,kBAAA,EAAoB;UAAA,EAAC;UAEhFje,uDAAA,cAA2B;UAACA,oDAAA,kCAC9B;UAIRA,0DAJQ,EAAS,EACL,EACF,EACF,EACF;UAGNA,4DAAA,gBAGkB;UADbA,wDAAA,4BAAA8sB,wDAAA;YAAA9sB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAkBa,GAAA,CAAAoc,oBAAA,EAAsB;UAAA,EAAC;UAE5Cjd,4DAAA,gBAAmF;UAAnCA,wDAAA,mBAAA+sB,+CAAAjnB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAS8F,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAG5EnK,4DAFJ,gBAA2B,gBACC,eACA;UAAAA,uDAAA,cAA8B;UAACA,oDAAA,2BAAiB;UAAAA,0DAAA,EAAK;UAC7EA,4DAAA,mBAAyE;UAAjCA,wDAAA,mBAAAgtB,kDAAA;YAAAhtB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAoc,oBAAA,EAAsB;UAAA,EAAC;UACtEjd,uDAAA,cAA4B;UAEhCA,0DADE,EAAS,EACL;UAENA,wDAAA,MAAAitB,+BAAA,oBAAsD;UA4DpDjtB,4DADF,gBAA0B,mBAEO;UADqBA,wDAAA,mBAAAktB,kDAAA;YAAAltB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAya,cAAA,CAAAza,GAAA,CAAAyH,qBAAA,CAAsC;UAAA,EAAC;UAElGtI,uDAAA,eAA4B;UAACA,oDAAA,4BAC/B;UAAAA,0DAAA,EAAS;UACTA,4DAAA,mBAAuF;UAAjCA,wDAAA,mBAAAmtB,kDAAA;YAAAntB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAAoc,oBAAA,EAAsB;UAAA,EAAC;UACpFjd,uDAAA,cAA4B;UAACA,oDAAA,iBAC/B;UAIRA,0DAJQ,EAAS,EACL,EACF,EACF,EACF;UAqFNA,wDAlFA,MAAAotB,+BAAA,oBAAkF,MAAAC,+BAAA,qBAkFA;UA2ElFrtB,4DAAA,iBAGwG;UAAnGA,wDAAA,mBAAAstB,+CAAAxnB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAAa,GAAA,CAAAkQ,mBAAA,IAAAjL,MAAA,CAAA2D,MAAA,KAAA3D,MAAA,CAAA+lB,aAAA,IAA0EhrB,GAAA,CAAA2N,qBAAA,EAAuB;UAAA,EAAC;UAInGxO,4DAFF,iBAAuE,iBAEpC;UAC/BA,uDAAA,iBAA8B;UAChCA,0DAAA,EAAM;UAKFA,4DAFJ,iBAAiC,iBACH,gBACF;UACtBA,uDAAA,cAAoC;UACpCA,oDAAA,sCACF;UAAAA,0DAAA,EAAK;UACLA,4DAAA,oBAAmG;UAArDA,wDAAA,mBAAAutB,kDAAA;YAAAvtB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAASa,GAAA,CAAA2N,qBAAA,EAAuB;UAAA,EAAC;UAC7ExO,uDAAA,cAA4B;UAGlCA,0DAFI,EAAS,EACL,EACF;UAQEA,4DALR,iBAA+B,iBAEI,iBACH,iBACE,mBAC4B;UACpDA,uDAAA,eAA4B;UAACA,oDAAA,mBAC/B;UAAAA,0DAAA,EAAQ;UACRA,4DAAA,oBAIuC;UAF/BA,8DAAA,2BAAAwtB,0DAAA1nB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAAkN,yBAAA,EAAAjI,MAAA,MAAAjF,GAAA,CAAAkN,yBAAA,GAAAjI,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAuC;UACvC9F,wDAAA,oBAAAytB,mDAAA;YAAAztB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAUa,GAAA,CAAAmlB,sBAAA,EAAwB;UAAA,EAAC;UAEzChmB,4DAAA,mBAAiB;UAAAA,oDAAA,yBAAgB;UAAAA,0DAAA,EAAS;UAC1CA,wDAAA,MAAA0tB,kCAAA,qBAA0E;UAI9E1tB,0DADE,EAAS,EACL;UAGJA,4DADF,iBAA4B,mBACyB;UACjDA,uDAAA,eAA+B;UAACA,oDAAA,gBAClC;UAAAA,0DAAA,EAAQ;UACRA,4DAAA,mBAKsC;UAF/BA,8DAAA,2BAAA2tB,yDAAA7nB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAAiN,uBAAA,EAAAhI,MAAA,MAAAjF,GAAA,CAAAiN,uBAAA,GAAAhI,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAqC;UACrC9F,wDAAA,oBAAA4tB,kDAAA;YAAA5tB,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAUa,GAAA,CAAA4mB,mBAAA,EAAqB;UAAA,EAAC;UAI7CznB,0DARM,EAKsC,EAClC,EACF,EACF;UA0NNA,wDAvNA,MAAA6tB,+BAAA,mBAAuD,MAAAC,+BAAA,qBAQoD,MAAAC,+BAAA,mBA+MzB;UAQpF/tB,0DAAA,EAAM;UAGNA,wDAAA,MAAAguB,+BAAA,mBAA6D;UAmBjEhuB,0DADE,EAAM,EACF;;;;;;;;;;UAr9BQA,uDAAA,GAAgC;UAAhCA,wDAAA,aAAAa,GAAA,CAAAkQ,mBAAA,CAAgC;UAE/B/Q,uDAAA,GAAyB;UAAzBA,wDAAA,SAAAa,GAAA,CAAAkQ,mBAAA,CAAyB;UAG+B/Q,uDAAA,EAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UAI9B5G,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UAY5C5G,uDAAA,GAAsB;UAAtBA,wDAAA,SAAAa,GAAA,CAAAyO,gBAAA,CAAsB;UAKlDtP,uDAAA,EAAwB;UAAxBA,8DAAA,YAAAa,GAAA,CAAA2O,UAAA,CAAwB;UACxBxP,wDAAA,aAAAa,GAAA,CAAAyO,gBAAA,CAA6B;UAODtP,uDAAA,GAAsB;UAAtBA,wDAAA,SAAAa,GAAA,CAAAyO,gBAAA,CAAsB;UAKlDtP,uDAAA,EAAwB;UAAxBA,8DAAA,YAAAa,GAAA,CAAA4O,UAAA,CAAwB;UACxBzP,wDAAA,aAAAa,GAAA,CAAAyO,gBAAA,CAA6B;UAODtP,uDAAA,GAAsB;UAAtBA,wDAAA,SAAAa,GAAA,CAAAyO,gBAAA,CAAsB;UAKjDtP,uDAAA,EAAkC;UAAlCA,8DAAA,YAAAa,GAAA,CAAAwO,oBAAA,CAAkC;UAClCrP,wDAAA,aAAAa,GAAA,CAAAyO,gBAAA,CAA6B;UAERtP,uDAAA,GAAU;UAAVA,wDAAA,YAAAa,GAAA,CAAAoO,OAAA,CAAU;UAK2BjP,uDAAA,GAA0C;UAA1CA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,IAAA/F,GAAA,CAAAyO,gBAAA,CAA0C;UACvEtP,uDAAA,EAAwB;UAAAA,wDAAxB,SAAAa,GAAA,CAAAyO,gBAAA,CAAwB,aAAA2e,cAAA,CAAe;UAE1EjuB,uDAAA,GACF;UADEA,gEAAA,MAAAa,GAAA,CAAAyO,gBAAA,mCACF;UACoEtP,uDAAA,EAA0C;UAA1CA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,IAAA/F,GAAA,CAAAyO,gBAAA,CAA0C;UACzEtP,uDAAA,EAAwB;UAAAA,wDAAxB,SAAAa,GAAA,CAAAyO,gBAAA,CAAwB,aAAA4e,cAAA,CAAe;UAE1EluB,uDAAA,GACF;UADEA,gEAAA,MAAAa,GAAA,CAAAyO,gBAAA,mCACF;UAS0EtP,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UAC3D5G,uDAAA,EAAiB;UAAAA,wDAAjB,SAAAa,GAAA,CAAA+F,SAAA,CAAiB,aAAAunB,aAAA,CAAc;UAIEnuB,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UACvD5G,uDAAA,EAAiB;UAAAA,wDAAjB,SAAAa,GAAA,CAAA+F,SAAA,CAAiB,aAAAwnB,WAAA,CAAY;UAiB1DpuB,uDAAA,IAAoC;UAApCA,gEAAA,OAAAa,GAAA,CAAAoX,eAAA,GAAA3U,OAAA,QAAoC;UAUpCtD,uDAAA,GAAmC;UAAnCA,gEAAA,OAAAa,GAAA,CAAAqX,cAAA,GAAA5U,OAAA,QAAmC;UAKRtD,uDAAA,GAAwC;UAACA,yDAAzC,aAAAa,GAAA,CAAA0X,eAAA,OAAwC,aAAA1X,GAAA,CAAA0X,eAAA,OAAyC;UAK5GvY,uDAAA,GAAoC;UAApCA,gEAAA,OAAAa,GAAA,CAAA0X,eAAA,GAAAjV,OAAA,QAAoC;UAUpCtD,uDAAA,GAAsB;UAAtBA,+DAAA,CAAAa,GAAA,CAAA2X,cAAA,GAAsB;UAOKxY,uDAAA,GAAuD;UAAvDA,wDAAA,SAAAa,GAAA,CAAA6C,iBAAA,IAAA7C,GAAA,CAAA6C,iBAAA,CAAAwE,MAAA,KAAuD;UAgDvDlI,uDAAA,GAAwB;UAAAA,wDAAxB,SAAAa,GAAA,CAAAqO,KAAA,CAAAhH,MAAA,KAAwB,aAAAmmB,mBAAA,CAAoB;UAoErDruB,uDAAA,GAAU;UAAVA,wDAAA,YAAAa,GAAA,CAAAoO,OAAA,CAAU;UA6DWjP,uDAAA,GAAkD;UAAlDA,yDAAA,YAAAa,GAAA,CAAA8O,aAAA,oBAAkD;UAA/E3P,yDAAA,SAAAa,GAAA,CAAA8O,aAAA,CAA4B;UAMd3P,uDAAA,GAC9B;UAD8BA,gEAAA,MAAAa,GAAA,CAAA+O,WAAA,2CAC9B;UAUW5P,uDAAA,IAAgC;UAAhCA,8DAAA,YAAAa,GAAA,CAAA4G,YAAA,CAAAuB,KAAA,CAAgC;UAOhChJ,uDAAA,GAAiC;UAAjCA,8DAAA,YAAAa,GAAA,CAAA4G,YAAA,CAAAwkB,MAAA,CAAiC;UAIjBjsB,uDAAA,EAAkB;UAAlBA,wDAAA,UAAAa,GAAA,CAAA+O,WAAA,CAAkB;UAUjC5P,uDAAA,GAA+B;UAA/BA,8DAAA,YAAAa,GAAA,CAAA4G,YAAA,CAAAoI,IAAA,CAA+B;UAMhB7P,uDAAA,GAAsC;UAAtCA,wDAAA,SAAAa,GAAA,CAAA4G,YAAA,CAAAoI,IAAA,gBAAsC;UASpC7P,uDAAA,GAAiC;UAAjCA,8DAAA,YAAAa,GAAA,CAAA4G,YAAA,CAAAqI,MAAA,CAAiC;UAYtD9P,uDAAA,GAAyC;UAAzCA,wDAAA,cAAAuuB,YAAA,CAAAC,KAAA,IAAA3tB,GAAA,CAAA+F,SAAA,CAAyC;UACnB5G,uDAAA,GAC9B;UAD8BA,gEAAA,MAAAa,GAAA,CAAA+O,WAAA,+BAC9B;UAQiD5P,uDAAA,EAAsD;UAAtDA,yDAAA,YAAAa,GAAA,CAAAsP,iBAAA,oBAAsD;UAAvFnQ,yDAAA,SAAAa,GAAA,CAAAsP,iBAAA,CAAgC;UAiBrCnQ,uDAAA,IAAyB;UAAzBA,8DAAA,YAAAa,GAAA,CAAAwP,WAAA,CAAyB;UAOzBrQ,uDAAA,GAA6B;UAA7BA,8DAAA,YAAAa,GAAA,CAAAyP,eAAA,CAA6B;UAUhCtQ,uDAAA,GAAgF;UAAhFA,wDAAA,cAAAyuB,gBAAA,CAAAD,KAAA,IAAA3tB,GAAA,CAAAwP,WAAA,KAAAxP,GAAA,CAAAyP,eAAA,IAAAzP,GAAA,CAAA+F,SAAA,CAAgF;UAS7E5G,uDAAA,GAAuD;UAAvDA,yDAAA,YAAAa,GAAA,CAAAkP,mBAAA,mBAAuD;UACrE/P,yDAAA,SAAAa,GAAA,CAAAkP,mBAAA,CAAkC;UAYR/P,uDAAA,GAA2B;UAA3BA,wDAAA,SAAAa,GAAA,CAAAyH,qBAAA,CAA2B;UA6D1CtI,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UAYV5G,uDAAA,GAAsB;UAAtBA,wDAAA,SAAAa,GAAA,CAAA4P,gBAAA,CAAsB;UAkFtBzQ,uDAAA,EAAsB;UAAtBA,wDAAA,SAAAa,GAAA,CAAAiQ,gBAAA,CAAsB;UA4E7C9Q,uDAAA,EAAkC;UAAlCA,yDAAA,SAAAa,GAAA,CAAAkQ,mBAAA,CAAkC;UAClC/Q,wDAAA,YAAAa,GAAA,CAAAkQ,mBAAA,CAA+B;UAGE/Q,uDAAA,EAAkC;UAAlCA,yDAAA,SAAAa,GAAA,CAAAkQ,mBAAA,CAAkC;UA8BpD/Q,uDAAA,IAAuC;UAAvCA,8DAAA,YAAAa,GAAA,CAAAkN,yBAAA,CAAuC;UAEvC/N,wDAAA,aAAAa,GAAA,CAAAqQ,iBAAA,CAA8B;UAEPlR,uDAAA,GAAwB;UAAxBA,wDAAA,YAAAa,GAAA,CAAAoQ,qBAAA,CAAwB;UAahDjR,uDAAA,GAAqC;UAArCA,8DAAA,YAAAa,GAAA,CAAAiN,uBAAA,CAAqC;UAErC9N,wDAAA,aAAAa,GAAA,CAAAqQ,iBAAA,CAA8B;UAMrClR,uDAAA,EAAuB;UAAvBA,wDAAA,SAAAa,GAAA,CAAAqQ,iBAAA,CAAuB;UAQvBlR,uDAAA,EAA4E;UAA5EA,wDAAA,UAAAa,GAAA,CAAAqQ,iBAAA,IAAArQ,GAAA,CAAAkN,yBAAA,IAAAlN,GAAA,CAAAmN,mBAAA,CAA4E;UA+M5EhO,uDAAA,EAAsD;UAAtDA,wDAAA,UAAAa,GAAA,CAAAkN,yBAAA,KAAAlN,GAAA,CAAAqQ,iBAAA,CAAsD;UAW5BlR,uDAAA,EAAyB;UAAzBA,wDAAA,SAAAa,GAAA,CAAAmN,mBAAA,CAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEt7B7DhO,4DAAA,cAA+C;IAC7CA,uDAAA,YAAsC;IACtCA,oDAAA,uCACF;IAAAA,0DAAA,EAAM;;;;;IAQAA,4DAFJ,cAA8C,cACnB,SACnB;IAAAA,oDAAA,mDAA6B;IACnCA,0DADmC,EAAK,EAClC;IAIAA,4DAHN,cAAuB,cACK,cACE,YACjB;IAAAA,oDAAA,kCAAiB;IAAAA,0DAAA,EAAQ;IAChCA,4DAAA,eAA8B;IAAAA,oDAAA,IAAoD;IACpFA,0DADoF,EAAO,EACrF;IAEJA,4DADF,eAA0B,aACjB;IAAAA,oDAAA,kCAAgB;IAAAA,0DAAA,EAAQ;IAC/BA,4DAAA,gBAA8B;IAAAA,oDAAA,IAAmD;IACnFA,0DADmF,EAAO,EACpF;IAEJA,4DADF,eAAoC,aAC3B;IAAAA,oDAAA,mCAAiB;IAAAA,0DAAA,EAAQ;IAChCA,4DAAA,gBAAqB;IAAAA,oDAAA,IAAiD;IACxEA,0DADwE,EAAO,EACzE;IAEJA,4DADF,eAA0B,aACjB;IAAAA,oDAAA,sCAAoB;IAAAA,0DAAA,EAAQ;IACnCA,4DAAA,gBAA8B;IAAAA,oDAAA,IAA0D;IAC1FA,0DAD0F,EAAO,EAC3F;IAEJA,4DADF,eAA0B,aACjB;IAAAA,oDAAA,qCAAmB;IAAAA,0DAAA,EAAQ;IAClCA,4DAAA,gBAA8B;IAAAA,oDAAA,IAAyD;IACzFA,0DADyF,EAAO,EAC1F;IAEJA,4DADF,eAAgC,aACvB;IAAAA,oDAAA,mCAAiB;IAAAA,0DAAA,EAAQ;IAChCA,4DAAA,gBAA6B;IAAAA,oDAAA,IAAoD;IAIzFA,0DAJyF,EAAO,EACpF,EACF,EACF,EACF;;;;IAxBgCA,uDAAA,IAAoD;IAApDA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA5H,WAAA,CAAA9b,aAAA,OAAoD;IAIpDhL,uDAAA,GAAmD;IAAnDA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA5H,WAAA,CAAA7b,YAAA,OAAmD;IAI5DjL,uDAAA,GAAiD;IAAjDA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA5H,WAAA,CAAA7Y,UAAA,OAAiD;IAIxCjO,uDAAA,GAA0D;IAA1DA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA5H,WAAA,CAAAS,mBAAA,OAA0D;IAI1DvnB,uDAAA,GAAyD;IAAzDA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA5H,WAAA,CAAAU,kBAAA,OAAyD;IAI1DxnB,uDAAA,GAAoD;IAApDA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA5H,WAAA,CAAA5Y,aAAA,OAAoD;;;;;;IA0CnFlO,4DAAA,iBAIoB;IAFlBA,wDAAA,mBAAA4uB,sEAAA;MAAA5uB,2DAAA,CAAA6uB,GAAA;MAAA,MAAAH,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAAI,oBAAA,EAAsB;IAAA,EAAC;IAGhC9uB,uDAAA,YAA+B;IAC/BA,oDAAA,0BACF;IAAAA,0DAAA,EAAS;;;;IAJPA,wDAAA,cAAA0uB,MAAA,CAAAK,SAAA,KAAAL,MAAA,CAAAzH,eAAA,CAA2C;;;;;;IAiCzCjnB,4DAFJ,cAAsE,cAC3C,SACnB;IAAAA,oDAAA,GAAiC;IAAAA,0DAAA,EAAK;IAExCA,4DADF,cAA4B,eACG;IAAAA,oDAAA,GAAsC;IAAAA,0DAAA,EAAO;IAC1EA,4DAAA,eAAgC;IAAAA,oDAAA,GAA+E;IAAAA,0DAAA,EAAO;IACtHA,4DAAA,eAAqB;IAAAA,oDAAA,IAA4C;IAAAA,0DAAA,EAAO;IAEtEA,4DADF,eAA6B,gBACL;IAAAA,oDAAA,IAAkL;IAG9MA,0DAH8M,EAAO,EAC3M,EACF,EACF;IACNA,4DAAA,kBAIsD;IADpDA,wDAAA,mBAAAgvB,0EAAA;MAAA,MAAAC,SAAA,GAAAjvB,2DAAA,CAAAkvB,GAAA,EAAAhpB,SAAA;MAAA,MAAAwoB,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAAS,oBAAA,CAAAF,SAAA,CAA4B;IAAA,EAAC;IAEtCjvB,uDAAA,YAA8F;IAC9FA,oDAAA,IACF;IACFA,0DADE,EAAS,EACL;;;;;IAlBEA,uDAAA,GAAiC;IAAjCA,+DAAA,CAAAivB,SAAA,CAAAhqB,MAAA,CAAAqH,WAAA,GAAiC;IAENtM,uDAAA,GAAsC;IAAtCA,gEAAA,+BAAAivB,SAAA,CAAAtrB,cAAA,KAAsC;IACnC3D,uDAAA,GAA+E;IAA/EA,gEAAA,4BAAA0uB,MAAA,CAAAC,cAAA,CAAAM,SAAA,CAAAtiB,gCAAA,WAA+E;IAC1F3M,uDAAA,GAA4C;IAA5CA,gEAAA,oBAAAivB,SAAA,CAAA7rB,oBAAA,MAA4C;IAEzCpD,uDAAA,GAAkL;IAAlLA,gEAAA,KAAA0uB,MAAA,CAAAC,cAAA,CAAAM,SAAA,CAAAtiB,gCAAA,oBAAAsiB,SAAA,CAAA7rB,oBAAA,SAAAsrB,MAAA,CAAAC,cAAA,CAAAM,SAAA,CAAAhjB,qBAAA,IAAAgjB,SAAA,CAAAhkB,YAAA,MAAkL;IAM5MjL,uDAAA,EAAuE;IAEvEA,wDAFA,YAAA0uB,MAAA,CAAAW,cAAA,CAAAJ,SAAA,CAAAjc,EAAA,oCAAuE,aAAA0b,MAAA,CAAAK,SAAA,IAAAL,MAAA,CAAAW,cAAA,CAAAJ,SAAA,CAAAjc,EAAA,EAEpB;IACpChT,uDAAA,EAA0E;IAA1EA,wDAAA,YAAA0uB,MAAA,CAAAW,cAAA,CAAAJ,SAAA,CAAAjc,EAAA,uCAA0E;IACzFhT,uDAAA,EACF;IADEA,gEAAA,MAAA0uB,MAAA,CAAAW,cAAA,CAAAJ,SAAA,CAAAjc,EAAA,sCACF;;;;;IAxBJhT,4DAFJ,cAAmE,cACxC,SACnB;IAAAA,oDAAA,8CAA6B;IAAAA,0DAAA,EAAK;IACtCA,4DAAA,eAAoB;IAAAA,oDAAA,GAAkC;IACxDA,0DADwD,EAAO,EACzD;IAEJA,4DADF,cAAuB,cACK;IACxBA,wDAAA,IAAAsvB,gDAAA,oBAAsE;IAuB5EtvB,0DAFI,EAAM,EACF,EACF;;;;IA3BkBA,uDAAA,GAAkC;IAAlCA,+DAAA,CAAA0uB,MAAA,CAAAa,qBAAA,CAAArnB,MAAA,CAAkC;IAI5BlI,uDAAA,GAAwB;IAAxBA,wDAAA,YAAA0uB,MAAA,CAAAa,qBAAA,CAAwB;;;;;IA4C1CvvB,4DADF,SAAiD,SAC3C;IAAAA,oDAAA,GAAqC;;IAAAA,0DAAA,EAAK;IAE5CA,4DADF,SAAI,eAC2E;IAC3EA,oDAAA,GACF;IACFA,0DADE,EAAO,EACJ;IACLA,4DAAA,SAAI;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAK;IAChCA,4DAAA,aAAwD;IACtDA,oDAAA,IACF;IACFA,0DADE,EAAK,EACF;;;;;IAVCA,uDAAA,GAAqC;IAArCA,+DAAA,CAAAA,yDAAA,OAAAwvB,aAAA,CAAAviB,KAAA,WAAqC;IAEdjN,uDAAA,GAAmD;IAAnDA,wDAAA,YAAA0uB,MAAA,CAAAe,sBAAA,CAAAD,aAAA,CAAAriB,IAAA,EAAmD;IAC1EnN,uDAAA,EACF;IADEA,gEAAA,MAAA0uB,MAAA,CAAAgB,sBAAA,CAAAF,aAAA,CAAAriB,IAAA,OACF;IAEEnN,uDAAA,GAAuB;IAAvBA,+DAAA,CAAAwvB,aAAA,CAAAniB,MAAA,CAAuB;IACvBrN,uDAAA,EAAmD;IAAnDA,wDAAA,YAAA0uB,MAAA,CAAAe,sBAAA,CAAAD,aAAA,CAAAriB,IAAA,EAAmD;IACrDnN,uDAAA,EACF;IADEA,gEAAA,MAAAwvB,aAAA,CAAAriB,IAAA,gCAAAuhB,MAAA,CAAAC,cAAA,CAAAa,aAAA,CAAA1nB,KAAA,OACF;;;;;IAzBR9H,4DAFJ,cAAmE,cACxC,SACnB;IAAAA,oDAAA,4CAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,eAAoB;IAAAA,oDAAA,GAA8B;IACpDA,0DADoD,EAAO,EACrD;IAMIA,4DALV,cAAuB,cACS,gBACK,YACxB,UACD,UACE;IAAAA,oDAAA,YAAI;IAAAA,0DAAA,EAAK;IACbA,4DAAA,UAAI;IAAAA,oDAAA,YAAI;IAAAA,0DAAA,EAAK;IACbA,4DAAA,UAAI;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAK;IACfA,4DAAA,UAAI;IAAAA,oDAAA,aAAK;IAEbA,0DAFa,EAAK,EACX,EACC;IACRA,4DAAA,aAAO;IACLA,wDAAA,KAAA2vB,gDAAA,mBAAiD;IAgB3D3vB,0DAJQ,EAAQ,EACF,EACJ,EACF,EACF;;;;IA9BkBA,uDAAA,GAA8B;IAA9BA,+DAAA,CAAA0uB,MAAA,CAAAkB,iBAAA,CAAA1nB,MAAA,CAA8B;IAcjBlI,uDAAA,IAAoB;IAApBA,wDAAA,YAAA0uB,MAAA,CAAAkB,iBAAA,CAAoB;;;;;;IAtJ3D5vB,4DAAA,cAA2C;IAGzCA,wDAAA,IAAA6vB,yCAAA,mBAA8C;IAsC1C7vB,4DAHJ,cAA0B,cAEC,SACnB;IAAAA,oDAAA,uCAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,QAAG;IAAAA,oDAAA,+CAAwC;IAAAA,0DAAA,EAAI;IAE7CA,4DADF,cAA4B,iBAID;IADvBA,wDAAA,mBAAA8vB,4DAAA;MAAA9vB,2DAAA,CAAA8pB,GAAA;MAAA,MAAA4E,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAAqB,oBAAA,CAAqB,SAAS,CAAC;IAAA,EAAC;IAEzC/vB,uDAAA,aAA2B;IAC3BA,oDAAA,iBACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAGyB;IADvBA,wDAAA,mBAAAgwB,6DAAA;MAAAhwB,2DAAA,CAAA8pB,GAAA;MAAA,MAAA4E,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAAqB,oBAAA,CAAqB,QAAQ,CAAC;IAAA,EAAC;IAExC/vB,uDAAA,aAA4B;IAC5BA,oDAAA,gBACF;IAEJA,0DAFI,EAAS,EACL,EACF;IAIJA,4DADF,eAAyB,UACnB;IAAAA,oDAAA,mCAAY;IAAAA,0DAAA,EAAK;IACrBA,4DAAA,SAAG;IAAAA,oDAAA,qDAAwC;IAAAA,0DAAA,EAAI;IAE7CA,4DADF,eAA4B,kBAIE;IAD1BA,wDAAA,mBAAAiwB,6DAAA;MAAAjwB,2DAAA,CAAA8pB,GAAA;MAAA,MAAA4E,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAAwB,mBAAA,EAAqB;IAAA,EAAC;IAE/BlwB,uDAAA,aAA4B;IAC5BA,oDAAA,IACF;IAAAA,0DAAA,EAAS;IACTA,wDAAA,KAAAmwB,6CAAA,qBAIoB;IAKxBnwB,0DADE,EAAM,EACF;IAKJA,4DAFF,eACkC,UAC5B;IAAAA,oDAAA,kCAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,SAAG;IAAAA,oDAAA,IAAuF;IAAAA,0DAAA,EAAI;IAC9FA,4DAAA,kBAGyB;IADvBA,wDAAA,mBAAAowB,6DAAA;MAAApwB,2DAAA,CAAA8pB,GAAA;MAAA,MAAA4E,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAA2B,gBAAA,EAAkB;IAAA,EAAC;IAE5BrwB,uDAAA,aAA2B;IAC3BA,oDAAA,IACF;IAEJA,0DAFI,EAAS,EACL,EACF;IAoCNA,wDAjCA,KAAAswB,0CAAA,kBAAmE,KAAAC,0CAAA,mBAiCA;IAkCrEvwB,0DAAA,EAAM;;;;IApKuBA,uDAAA,EAAiB;IAAjBA,wDAAA,SAAA0uB,MAAA,CAAA5H,WAAA,CAAiB;IA4CpC9mB,uDAAA,GAAsB;IAAtBA,wDAAA,aAAA0uB,MAAA,CAAAK,SAAA,CAAsB;IAOtB/uB,uDAAA,GAAsB;IAAtBA,wDAAA,aAAA0uB,MAAA,CAAAK,SAAA,CAAsB;IAetB/uB,uDAAA,GAAyB;IAAzBA,wDAAA,cAAA0uB,MAAA,CAAA5H,WAAA,CAAyB;IAEzB9mB,uDAAA,GACF;IADEA,gEAAA,MAAA0uB,MAAA,CAAAK,SAAA,kDACF;IAKG/uB,uDAAA,EAAe;IAAfA,wDAAA,SAAA0uB,MAAA,CAAAK,SAAA,CAAe;IASjB/uB,uDAAA,EAA4B;IAA5BA,yDAAA,aAAA0uB,MAAA,CAAAK,SAAA,CAA4B;IAE5B/uB,uDAAA,GAAuF;IAAvFA,+DAAA,CAAA0uB,MAAA,CAAAK,SAAA,8EAAuF;IAIxF/uB,uDAAA,EAAsB;IAAtBA,wDAAA,aAAA0uB,MAAA,CAAAK,SAAA,CAAsB;IAEtB/uB,uDAAA,GACF;IADEA,gEAAA,MAAA0uB,MAAA,CAAAK,SAAA,yCACF;IAKuB/uB,uDAAA,EAAsC;IAAtCA,wDAAA,SAAA0uB,MAAA,CAAAa,qBAAA,CAAArnB,MAAA,KAAsC;IAiClClI,uDAAA,EAAkC;IAAlCA,wDAAA,SAAA0uB,MAAA,CAAAkB,iBAAA,CAAA1nB,MAAA,KAAkC;;;;;IAqDrDlI,4DALV,cAA+C,cACZ,cACd,cACO,cACG,YACd;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAQ;IACtBA,4DAAA,WAAM;IAAAA,oDAAA,GAA6B;IACrCA,0DADqC,EAAO,EACtC;IAEJA,4DADF,cAAuB,aACd;IAAAA,oDAAA,4BAAe;IAAAA,0DAAA,EAAQ;IAC9BA,4DAAA,gBAA4B;IAAAA,oDAAA,IAAkC;IAChEA,0DADgE,EAAO,EACjE;IAEJA,4DADF,eAAuB,aACd;IAAAA,oDAAA,wBAAgB;IAAAA,0DAAA,EAAQ;IAC/BA,4DAAA,YAAM;IAAAA,oDAAA,IAA4B;IAEtCA,0DAFsC,EAAO,EACrC,EACF;IAGFA,4DAFJ,eAAsB,eACG,aACd;IAAAA,oDAAA,sBAAc;IAAAA,0DAAA,EAAQ;IAC7BA,4DAAA,YAAM;IAAAA,oDAAA,IAAiD;IACzDA,0DADyD,EAAO,EAC1D;IAEJA,4DADF,eAAuB,aACd;IAAAA,oDAAA,IAAsD;IAAAA,0DAAA,EAAQ;IACrEA,4DAAA,iBAA+B;IAAAA,oDAAA,IAAmD;IACpFA,0DADoF,EAAO,EACrF;IAEJA,4DADF,gBAA6B,aACpB;IAAAA,oDAAA,sBAAc;IAAAA,0DAAA,EAAQ;IAC7BA,4DAAA,iBAA0B;IAAAA,oDAAA,IAA+C;IAKnFA,0DALmF,EAAO,EAC5E,EACF,EACF,EACF,EACF;;;;IA3BUA,uDAAA,GAA6B;IAA7BA,+DAAA,CAAA0uB,MAAA,CAAA8B,cAAA,CAAA/c,QAAA,CAA6B;IAIPzT,uDAAA,GAAkC;IAAlCA,+DAAA,CAAA0uB,MAAA,CAAA8B,cAAA,CAAA/qB,aAAA,CAAkC;IAIxDzF,uDAAA,GAA4B;IAA5BA,gEAAA,KAAA0uB,MAAA,CAAA8B,cAAA,CAAAlY,MAAA,MAA4B;IAM5BtY,uDAAA,GAAiD;IAAjDA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA8B,cAAA,CAAAtsB,YAAA,EAAiD;IAGhDlE,uDAAA,GAAsD;IAAtDA,gEAAA,6BAAA0uB,MAAA,CAAA8B,cAAA,CAAA/qB,aAAA,MAAsD;IAC9BzF,uDAAA,GAAmD;IAAnDA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA8B,cAAA,CAAAC,cAAA,EAAmD;IAIxDzwB,uDAAA,GAA+C;IAA/CA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA8B,cAAA,CAAAE,UAAA,EAA+C;;;;;IA8D/E1wB,uDAAA,YAA6D;;;;;IAC7DA,uDAAA,aAAoD;;;;;IAwHlDA,4DAFJ,eAAoD,aACmC,aAC3E;IAAAA,oDAAA,GAAmD;IAAAA,0DAAA,EAAS;IACpEA,oDAAA,GACF;IACFA,0DADE,EAAM,EACF;;;;IAJeA,uDAAA,EAAiE;IAAjEA,wDAAA,YAAA0uB,MAAA,CAAAiC,cAAA,wCAAiE;IAC1E3wB,uDAAA,GAAmD;IAAnDA,gEAAA,KAAA0uB,MAAA,CAAAiC,cAAA,oCAAmD;IAC3D3wB,uDAAA,EACF;IADEA,gEAAA,MAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAAkC,gBAAA,SACF;;;;;;IAlCA5wB,4DAFJ,cAA4C,eACd,SACtB;IAAAA,oDAAA,2BAAe;IAAAA,0DAAA,EAAK;IAGpBA,4DAFJ,eAA2B,cACC,YACjB;IAAAA,oDAAA,qCAA8B;IAAAA,0DAAA,EAAQ;IAC7CA,4DAAA,eAAqB;IAAAA,oDAAA,GAA+C;IAG1EA,0DAH0E,EAAO,EACvE,EACF,EACF;IAGJA,4DADF,eAAwB,kBACS;IAAAA,oDAAA,qCAA6B;IAAAA,0DAAA,EAAQ;IAGhEA,4DAFJ,eAAyB,eACU,gBACA;IAAAA,oDAAA,SAAC;IAClCA,0DADkC,EAAO,EACnC;IACNA,4DAAA,kBAQW;IAJTA,8DAAA,2BAAA6wB,oEAAA/qB,MAAA;MAAA9F,2DAAA,CAAA8wB,GAAA;MAAA,MAAApC,MAAA,GAAA1uB,2DAAA;MAAAA,gEAAA,CAAA0uB,MAAA,CAAAqC,WAAA,CAAAxI,iBAAA,EAAAziB,MAAA,MAAA4oB,MAAA,CAAAqC,WAAA,CAAAxI,iBAAA,GAAAziB,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAA2C;IAC3C9F,wDAAA,2BAAA6wB,oEAAA;MAAA7wB,2DAAA,CAAA8wB,GAAA;MAAA,MAAApC,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0uB,MAAA,CAAAsC,iBAAA,EAAmB;IAAA,EAAC;IAIzChxB,0DATE,EAQW,EACP;IACNA,4DAAA,kBAAoC;IAClCA,oDAAA,oGACF;IACFA,0DADE,EAAQ,EACJ;IAENA,wDAAA,KAAAixB,0CAAA,mBAAoD;IAQlDjxB,4DADF,eAAwB,kBACH;IAAAA,oDAAA,0BAAkB;IAAAA,0DAAA,EAAQ;IAC7CA,4DAAA,qBAMyD;IAHvDA,8DAAA,2BAAAkxB,uEAAAprB,MAAA;MAAA9F,2DAAA,CAAA8wB,GAAA;MAAA,MAAApC,MAAA,GAAA1uB,2DAAA;MAAAA,gEAAA,CAAA0uB,MAAA,CAAAqC,WAAA,CAAA5H,KAAA,EAAArjB,MAAA,MAAA4oB,MAAA,CAAAqC,WAAA,CAAA5H,KAAA,GAAArjB,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAA+B;IAC/B9F,wDAAA,2BAAAkxB,uEAAA;MAAAlxB,2DAAA,CAAA8wB,GAAA;MAAA,MAAApC,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0uB,MAAA,CAAAsC,iBAAA,EAAmB;IAAA,EAAC;IAI3ChxB,0DAF6D,EAAW,EAChE,EACF;;;;IA3CuBA,uDAAA,GAA+C;IAA/CA,+DAAA,CAAA0uB,MAAA,CAAAC,cAAA,CAAAD,MAAA,CAAA5H,WAAA,CAAA5Y,aAAA,EAA+C;IAepElO,uDAAA,GAA2C;IAA3CA,8DAAA,YAAA0uB,MAAA,CAAAqC,WAAA,CAAAxI,iBAAA,CAA2C;IAW3CvoB,uDAAA,GAAmB;IAAnBA,wDAAA,SAAA0uB,MAAA,CAAAyC,aAAA,CAAmB;IAYrBnxB,uDAAA,GAA+B;IAA/BA,8DAAA,YAAA0uB,MAAA,CAAAqC,WAAA,CAAA5H,KAAA,CAA+B;;;;;IAejCnpB,uDAAA,YAAsD;;;;;IACtDA,uDAAA,YAA4C;;;AD7ahD,MAAO0B,mBAAmB;EA4C5BpC,YACYC,eAAgC,EAChCqP,mBAAwC,EACxCC,YAA0B,EAC1BE,GAAsB;IAHtB,KAAAxP,eAAe,GAAfA,eAAe;IACf,KAAAqP,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAE,GAAG,GAAHA,GAAG;IA/Cf,KAAAC,WAAW,GAAgB,IAAI;IAC/B,KAAAoiB,QAAQ,GAAS,IAAIpgB,IAAI,EAAE;IAE3B;IACA,KAAAiW,eAAe,GAAwB,IAAI;IAC3C,KAAA8H,SAAS,GAAG,KAAK;IAEjB;IACA,KAAAjI,WAAW,GAAQ,IAAI;IACvB,KAAAyI,qBAAqB,GAAU,EAAE;IACjC,KAAA8B,cAAc,GAAa,EAAE,CAAC,CAAC;IAC/B,KAAAzB,iBAAiB,GAAqB,EAAE;IAExC;IACA,KAAA0B,mBAAmB,GAAG,KAAK;IAC3B,KAAAC,mBAAmB,GAAG,KAAK;IAC3B,KAAAC,eAAe,GAAG,KAAK;IACvB,KAAAC,oBAAoB,GAAG,KAAK;IAE5B;IACA,KAAAjB,cAAc,GAAsB,IAAI;IACxC,KAAAkB,eAAe,GAA4B;MACvCvkB,IAAI,EAAE,SAAS;MACfE,MAAM,EAAE,EAAE;MACVvF,KAAK,EAAE;KACV;IACD,KAAA6pB,gBAAgB,GAAG;MACfC,cAAc,EAAE,EAAE;MAClBC,WAAW,EAAE;KAChB;IAED;IACA,KAAAd,WAAW,GAAG;MACVxI,iBAAiB,EAAE,CAAC;MACpBY,KAAK,EAAE;KACV;IAED;IACA,KAAA2I,OAAO,GAAG,KAAK;IACf,KAAAC,cAAc,GAAG,KAAK;IAEd,KAAAC,aAAa,GAAmB,EAAE;EAQtC;EAEEvyB,QAAQA,CAAA;IAAA,IAAAmT,KAAA;IAAA,OAAAC,4JAAA;MACV,IAAI;QACAD,KAAI,CAACkf,OAAO,GAAG,IAAI;QACnBlf,KAAI,CAAC5D,WAAW,SAAS4D,KAAI,CAACrT,eAAe,CAAC0yB,cAAc,EAAE;QAE9D,IAAI,CAACrf,KAAI,CAAC5D,WAAW,IAAI4D,KAAI,CAAC5D,WAAW,CAACa,IAAI,KAAK,UAAU,EAAE;UAC3D+C,KAAI,CAAChE,mBAAmB,CAACqE,SAAS,CAAC,4DAA4D,CAAC;UAChG;;QAGJ,MAAML,KAAI,CAACsf,iBAAiB,EAAE;OACjC,CAAC,OAAO9f,KAAK,EAAE;QACZ+C,OAAO,CAAC/C,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5DQ,KAAI,CAAChE,mBAAmB,CAACqE,SAAS,CAAC,mCAAmC,CAAC;OAC1E,SAAS;QACNL,KAAI,CAACkf,OAAO,GAAG,KAAK;;IACvB;EACL;EAEAK,WAAWA,CAAA;IACP,IAAI,CAACH,aAAa,CAACzU,OAAO,CAAC6U,GAAG,IAAIA,GAAG,CAACC,WAAW,EAAE,CAAC;EACxD;EAEcH,iBAAiBA,CAAA;IAAA,IAAAne,MAAA;IAAA,OAAAlB,4JAAA;MAC3B,IAAI,CAACkB,MAAI,CAAC/E,WAAW,EAAE9L,QAAQ,EAAE;MAEjC,IAAI;QACA;QACA6Q,MAAI,CAACkT,eAAe,SAASlT,MAAI,CAACxU,eAAe,CAAC+nB,mBAAmB,CACjEvT,MAAI,CAACqd,QAAQ,EACbrd,MAAI,CAAC/E,WAAW,CAAC9L,QAAQ,CAC5B;QACD6Q,MAAI,CAACgb,SAAS,GAAG,CAAC,CAAChb,MAAI,CAACkT,eAAe;QAEvC;QACAlT,MAAI,CAAC+S,WAAW,SAAS/S,MAAI,CAACxU,eAAe,CAAC4nB,yBAAyB,CACnEpT,MAAI,CAACqd,QAAQ,EACbrd,MAAI,CAAC/E,WAAW,CAAC9L,QAAQ,CAC5B;QAED;QACA6Q,MAAI,CAACwb,qBAAqB,SAASxb,MAAI,CAACxU,eAAe,CAAC6nB,4BAA4B,CAChFrT,MAAI,CAACqd,QAAQ,EACbrd,MAAI,CAAC/E,WAAW,CAAC9L,QAAQ,CAC5B;QAED;QACA6Q,MAAI,CAAC6b,iBAAiB,SAAS7b,MAAI,CAACxU,eAAe,CAAC8nB,sBAAsB,CACtEtT,MAAI,CAACqd,QAAQ,EACbrd,MAAI,CAAC/E,WAAW,CAAC9L,QAAQ,CAC5B;QAED;QACA6Q,MAAI,CAACue,yBAAyB,EAAE;QAEhC;QACAve,MAAI,CAAChF,GAAG,CAACwjB,YAAY,EAAE;OAE1B,CAAC,OAAOngB,KAAK,EAAE;QACZ+C,OAAO,CAAC/C,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtD,MAAMA,KAAK;;IACd;EACL;EAEA;EAEM+c,oBAAoBA,CAAClqB,MAAW;IAAA,IAAA6P,MAAA;IAAA,OAAAjC,4JAAA;MAClC,IAAI;QACA;QACA,IAAI4d,cAAc,GAAG,CAAC;QACtB,IAAIxrB,MAAM,CAACtB,cAAc,IAAImR,MAAI,CAAC9F,WAAW,EAAE9L,QAAQ,EAAE;UACrD,MAAMsvB,aAAa,SAAS1d,MAAI,CAACvV,eAAe,CAACkzB,oBAAoB,CACjE3d,MAAI,CAACsc,QAAQ,EACbtc,MAAI,CAAC9F,WAAW,CAAC9L,QAAQ,EACzB+B,MAAM,CAACA,MAAM,CAChB;UACDwrB,cAAc,GAAG+B,aAAa,EAAE/B,cAAc,IAAI,CAAC;;QAGvD3b,MAAI,CAAC0b,cAAc,GAAG;UAClB/c,QAAQ,EAAExO,MAAM,CAAC+N,EAAE;UACnBvN,aAAa,EAAER,MAAM,CAACtB,cAAc;UACpC2U,MAAM,EAAErT,MAAM,CAAC7B,oBAAoB;UACnCqtB,cAAc;UACdvsB,YAAY,EAAEe,MAAM,CAAC+F,aAAa;UAClC0lB,UAAU,EAAEzrB,MAAM,CAACgG,YAAY;UAC/BynB,SAAS,EAAEztB,MAAM,CAACiG,aAAa;UAC/BhI,QAAQ,EAAE4R,MAAI,CAAC9F,WAAY,CAAC9L;SAC/B;QACD4R,MAAI,CAACwc,mBAAmB,GAAG,IAAI;QAC/Bxc,MAAI,CAAC/F,GAAG,CAACwjB,YAAY,EAAE,CAAC,CAAC;OAC5B,CAAC,OAAOngB,KAAK,EAAE;QACZ+C,OAAO,CAAC/C,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzD0C,MAAI,CAAClG,mBAAmB,CAACqE,SAAS,CAAC,wCAAwC,CAAC;;IAC/E;EACL;EAEA0f,mBAAmBA,CAAA;IACf,IAAI,CAAC,IAAI,CAACnC,cAAc,EAAE;IAE1Brb,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAACob,cAAc,CAAC;IAC5D,IAAI,CAACmB,gBAAgB,CAACE,WAAW,GAAG,IAAI,CAACrB,cAAc,CAACE,UAAU;IAClE,IAAI,CAACY,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACG,oBAAoB,GAAG,IAAI;IAEhCtc,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACuc,gBAAgB,CAAC;IACzDxc,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAACqc,oBAAoB,CAAC;IAErE,IAAI,CAAC1iB,GAAG,CAACwjB,YAAY,EAAE,CAAC,CAAC;IAEzB;IACA/a,UAAU,CAAC,MAAK;MACZ,IAAI,CAACob,sBAAsB,EAAE;IACjC,CAAC,EAAE,GAAG,CAAC;EACX;EAEA;EACA,IAAIC,kBAAkBA,CAAA;IAClB,MAAMC,WAAW,GAAG,CAAC,EAAE,IAAI,CAACnB,gBAAgB,CAACE,WAAW,IAAI,IAAI,CAACF,gBAAgB,CAACE,WAAW,GAAG,CAAC,CAAC;IAClG,MAAMkB,YAAY,GAAG,CAAC,IAAI,CAAChB,cAAc;IAEzC,MAAMjR,MAAM,GAAGgS,WAAW,IAAIC,YAAY;IAE1C5d,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;MACnCyc,WAAW,EAAE,IAAI,CAACF,gBAAgB,CAACE,WAAW;MAC9CiB,WAAW;MACXf,cAAc,EAAE,IAAI,CAACA,cAAc;MACnCgB,YAAY;MACZC,SAAS,EAAElS;KACd,CAAC;IAEF,OAAOA,MAAM;EACjB;EAEMmS,kBAAkBA,CAAA;IAAA,IAAAle,MAAA;IAAA,OAAAlC,4JAAA;MACpB,IAAI,CAACkC,MAAI,CAACyb,cAAc,IAAI,CAACzb,MAAI,CAAC/F,WAAW,EAAE;MAE/C,IAAI;QACA+F,MAAI,CAACgd,cAAc,GAAG,IAAI;QAE1B;QACA,MAAMmB,UAAU,GAA4B;UACxC/lB,IAAI,EAAE,QAAQ;UACdE,MAAM,EAAE,sBAAsB0H,MAAI,CAACyb,cAAc,CAAC/c,QAAQ,sBAAsBsB,MAAI,CAACyb,cAAc,CAAC/qB,aAAa,EAAE;UACnHqC,KAAK,EAAEiN,MAAI,CAAC4c,gBAAgB,CAACE,WAAW;UACxCsB,SAAS,EAAEpe,MAAI,CAAC/F,WAAW,CAACgE,EAAE;UAC9BS,QAAQ,EAAEsB,MAAI,CAACyb,cAAc,CAAC/c,QAAQ;UACtCxG,KAAK,EAAE,IAAI+D,IAAI,EAAE;UACjB9N,QAAQ,EAAE6R,MAAI,CAAC/F,WAAW,CAAC9L,QAAS;UACpC0uB,cAAc,EAAE7c,MAAI,CAAC4c,gBAAgB,CAACC,cAAc,IAAI5Q;SAC3D;QAED,MAAMjM,MAAI,CAACxV,eAAe,CAAC6zB,uBAAuB,CAACF,UAAU,CAAC;QAE9D;QACAne,MAAI,CAACse,kBAAkB,CAACte,MAAI,CAACyb,cAAc,CAAC/c,QAAQ,CAAC;QAErDsB,MAAI,CAACnG,mBAAmB,CAAC8L,WAAW,CAChC,sBAAsB3F,MAAI,CAAC4c,gBAAgB,CAACE,WAAW,CAACvuB,OAAO,CAAC,CAAC,CAAC,EAAE,CACvE;QAED;QACAyR,MAAI,CAACue,sBAAsB,EAAE;QAC7B,MAAMve,MAAI,CAACmd,iBAAiB,EAAE;OAEjC,CAAC,OAAO9f,KAAK,EAAE;QACZ+C,OAAO,CAAC/C,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C2C,MAAI,CAACnG,mBAAmB,CAACqE,SAAS,CAAC,4BAA4B,CAAC;OACnE,SAAS;QACN8B,MAAI,CAACgd,cAAc,GAAG,KAAK;QAC3Bhd,MAAI,CAAChG,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;;IAC7B;EACL;EAEAqf,qBAAqBA,CAAA;IACjBpe,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCD,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACkc,mBAAmB,CAAC;IAC1D,IAAI,CAACA,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACd,cAAc,GAAG,IAAI;IACzB,IAAI,CAACzhB,GAAG,CAACmF,aAAa,EAAE;IACzBiB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAACkc,mBAAmB,CAAC;EACnE;EAEAgC,sBAAsBA,CAAA;IAClB,IAAI,CAAC7B,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACE,gBAAgB,GAAG;MACpBC,cAAc,EAAE,EAAE;MAClBC,WAAW,EAAE;KAChB;IACD,IAAI,CAAC9iB,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;EAC9B;EAEA;EAEA6b,oBAAoBA,CAAC5iB,IAA0B;IAC3CgI,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEjI,IAAI,CAAC;IAC/C,IAAI,CAACukB,eAAe,GAAG;MACnBvkB,IAAI;MACJE,MAAM,EAAE,EAAE;MACVvF,KAAK,EAAEkZ;KACV;IACD,IAAI,CAACuQ,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACxiB,GAAG,CAACwjB,YAAY,EAAE,CAAC,CAAC;IAEzB;IACA/a,UAAU,CAAC,MAAK;MACZ,IAAI,CAACob,sBAAsB,EAAE;IACjC,CAAC,EAAE,GAAG,CAAC;IAEPzd,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACmc,mBAAmB,CAAC;IACrDpc,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACsc,eAAe,CAAC;EAC1D;EAEA;EACA,IAAI8B,wBAAwBA,CAAA;IACxB,MAAMnmB,MAAM,GAAG,IAAI,CAACqkB,eAAe,CAACrkB,MAAM;IAC1C,MAAMvF,KAAK,GAAG,IAAI,CAAC4pB,eAAe,CAAC5pB,KAAK;IAExC;IACA,MAAM2rB,YAAY,GAAG,CAAC,EAAEpmB,MAAM,IAAIA,MAAM,CAACrJ,QAAQ,EAAE,CAAColB,IAAI,EAAE,CAAClhB,MAAM,GAAG,CAAC,CAAC;IAEtE;IACA,IAAI4qB,WAAW,GAAG,KAAK;IACvB,IAAIhrB,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKkZ,SAAS,EAAE;MACvC,MAAM0S,QAAQ,GAAG,OAAO5rB,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG2Y,UAAU,CAACkT,MAAM,CAAC7rB,KAAK,CAAC,CAAC;MAC9EgrB,WAAW,GAAG,CAACc,KAAK,CAACF,QAAQ,CAAC,IAAIA,QAAQ,GAAG,CAAC;;IAGlD,MAAM5S,MAAM,GAAG2S,YAAY,IAAIX,WAAW;IAE1C3d,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE;MAC3C/H,MAAM,EAAEA,MAAM;MACdvF,KAAK,EAAEA,KAAK;MACZ2rB,YAAY;MACZX,WAAW;MACXE,SAAS,EAAElS;KACd,CAAC;IAEF,OAAOA,MAAM;EACjB;EAGM+S,mBAAmBA,CAAA;IAAA,IAAApe,MAAA;IAAA,OAAA5C,4JAAA;MACrB,IAAI,CAAC4C,MAAI,CAACzG,WAAW,IAAI,CAACyG,MAAI,CAAC+d,wBAAwB,EAAE;QACrD/d,MAAI,CAAC7G,mBAAmB,CAACqE,SAAS,CAAC,sCAAsC,CAAC;QAC1E;;MAGJ,IAAI;QACA,MAAMigB,UAAU,GAA4B;UACxC,GAAGzd,MAAI,CAACic,eAAe;UACvByB,SAAS,EAAE1d,MAAI,CAACzG,WAAW,CAACgE,EAAE;UAC9B/F,KAAK,EAAE,IAAI+D,IAAI,EAAE;UACjB9N,QAAQ,EAAEuS,MAAI,CAACzG,WAAW,CAAC9L;SAC9B;QAED,MAAMuS,MAAI,CAAClW,eAAe,CAAC6zB,uBAAuB,CAACF,UAAU,CAAC;QAE9Dzd,MAAI,CAAC7G,mBAAmB,CAAC8L,WAAW,CAChC,GAAGjF,MAAI,CAACic,eAAe,CAACvkB,IAAI,KAAK,SAAS,GAAG,SAAS,GAAG,QAAQ,kBAAkBsI,MAAI,CAACic,eAAe,CAAC5pB,KAAK,EAAExE,OAAO,CAAC,CAAC,CAAC,EAAE,CAC9H;QAEDmS,MAAI,CAACqe,qBAAqB,EAAE;QAC5B,MAAMre,MAAI,CAACyc,iBAAiB,EAAE;OAEjC,CAAC,OAAO9f,KAAK,EAAE;QACZ+C,OAAO,CAAC/C,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDqD,MAAI,CAAC7G,mBAAmB,CAACqE,SAAS,CAAC,kCAAkC,CAAC;OACzE,SAAS;QACNwC,MAAI,CAAC1G,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;;IAC7B;EACL;EAEA4f,qBAAqBA,CAAA;IACjB3e,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,IAAI,CAACmc,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACG,eAAe,GAAG;MACnBvkB,IAAI,EAAE,SAAS;MACfE,MAAM,EAAE,EAAE;MACVvF,KAAK,EAAEkZ;KACV;IACD,IAAI,CAACjS,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;IAC1BiB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACmc,mBAAmB,CAAC;EAClE;EAEA;EAEAlB,gBAAgBA,CAAA;IACZ,IAAI,CAAC,IAAI,CAACvJ,WAAW,EAAE;IAEvB;IACA,IAAI,CAACiN,4BAA4B,EAAE;IACnC,IAAI,CAACvC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACziB,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;EAC9B;EAEA;EACQ6f,4BAA4BA,CAAA;IAChC,IAAI,CAAC,IAAI,CAACjN,WAAW,EAAE;IAEvB;IACA,IAAI,CAACiK,WAAW,CAACxI,iBAAiB,GAAG,IAAI,CAACzB,WAAW,CAAC5Y,aAAa,IAAI,CAAC;IAExEiH,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAE;MACxDlR,YAAY,EAAE,IAAI,CAAC4iB,WAAW,CAAC9b,aAAa;MAC5C0J,WAAW,EAAE,IAAI,CAACoS,WAAW,CAAC7b,YAAY;MAC1CynB,SAAS,EAAE,IAAI,CAAC5L,WAAW,CAAC7Y,UAAU;MACtC+lB,kBAAkB,EAAE,IAAI,CAAClN,WAAW,CAACS,mBAAmB;MACxD0M,iBAAiB,EAAE,IAAI,CAACnN,WAAW,CAACU,kBAAkB;MACtD0M,YAAY,EAAE,IAAI,CAACpN,WAAW,CAAC5Y,aAAa;MAC5Cqa,iBAAiB,EAAE,IAAI,CAACwI,WAAW,CAACxI;KACvC,CAAC;EACN;EAEA;EACA,IAAI4L,mBAAmBA,CAAA;IACnB,OAAO,CAAC,EAAE,IAAI,CAACpD,WAAW,CAACxI,iBAAiB,KAAKvH,SAAS,IACtD,IAAI,CAAC+P,WAAW,CAACxI,iBAAiB,KAAK,IAAI,IAC3C,CAACqL,KAAK,CAAC,IAAI,CAAC7C,WAAW,CAACxI,iBAAiB,CAAC,IAC1C,CAAC,IAAI,CAACuJ,OAAO,CAAC;EACtB;EAEMsC,oBAAoBA,CAAA;IAAA,IAAA9d,MAAA;IAAA,OAAAzD,4JAAA;MACtB,IAAI,CAACyD,MAAI,CAACtH,WAAW,IAAI,CAACsH,MAAI,CAACwQ,WAAW,EAAE;MAE5C,IAAI;QACAxQ,MAAI,CAACwb,OAAO,GAAG,IAAI;QAEnB,MAAM3lB,UAAU,GAAGmK,MAAI,CAACya,WAAW,CAACxI,iBAAiB,GAAGjS,MAAI,CAACwQ,WAAW,CAAC5Y,aAAa;QAEtF;QACA,MAAMwa,aAAa,SAASpS,MAAI,CAACmc,oBAAoB,CAAC,QAAQ,CAAC;QAC/D,MAAM9J,YAAY,SAASrS,MAAI,CAACmc,oBAAoB,CAAC,OAAO,CAAC;QAC7D,MAAM7J,YAAY,SAAStS,MAAI,CAACmc,oBAAoB,CAAC,OAAO,CAAC;QAE7D;QACA,MAAM9K,MAAM,GAA0B;UAClC1a,KAAK,EAAEqJ,MAAI,CAAC8a,QAAQ;UACpB+B,SAAS,EAAE7c,MAAI,CAACtH,WAAW,CAACgE,EAAE;UAC9B9P,QAAQ,EAAEoT,MAAI,CAACtH,WAAW,CAAC9L,QAAS;UACpCgB,YAAY,EAAEoS,MAAI,CAACwQ,WAAW,CAAC9b,aAAa;UAC5C0J,WAAW,EAAE4B,MAAI,CAACwQ,WAAW,CAAC7b,YAAY;UAC1Cqd,IAAI,EAAEhS,MAAI,CAACwQ,WAAW,CAAC7Y,UAAU;UACjCsa,iBAAiB,EAAEjS,MAAI,CAACya,WAAW,CAACxI,iBAAiB;UACrDpc,UAAU;UACVgd,KAAK,EAAE7S,MAAI,CAACya,WAAW,CAAC5H,KAAK;UAC7BT,aAAa;UACbC,YAAY;UACZC;SACH;QAEDzT,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEuS,MAAM,CAAC;QAEpD,MAAMrR,MAAI,CAAC/W,eAAe,CAAC80B,qBAAqB,CAAC1M,MAAM,CAAC;QAExDrR,MAAI,CAAC1H,mBAAmB,CAAC8L,WAAW,CAAC,uCAAuC,CAAC;QAE7EpE,MAAI,CAACge,iBAAiB,EAAE;QACxB,MAAMhe,MAAI,CAAC4b,iBAAiB,EAAE;OAEjC,CAAC,OAAO9f,KAAK,EAAE;QACZ+C,OAAO,CAAC/C,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDkE,MAAI,CAAC1H,mBAAmB,CAACqE,SAAS,CAAC,qCAAqC,CAAC;OAC5E,SAAS;QACNqD,MAAI,CAACwb,OAAO,GAAG,KAAK;QACpBxb,MAAI,CAACvH,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;;IAC7B;EACL;EAEcue,oBAAoBA,CAACxtB,MAAc;IAAA,IAAAyR,MAAA;IAAA,OAAA7D,4JAAA;MAC7C,IAAI,CAAC6D,MAAI,CAAC1H,WAAW,EAAE9L,QAAQ,EAAE,OAAO8d,SAAS;MAEjD,IAAI;QACA,MAAMmD,OAAO,SAASzN,MAAI,CAACnX,eAAe,CAACkzB,oBAAoB,CAC3D/b,MAAI,CAAC0a,QAAQ,EACb1a,MAAI,CAAC1H,WAAW,CAAC9L,QAAQ,EACzB+B,MAAM,CACT;QACD,OAAOkf,OAAO;OACjB,CAAC,OAAO/R,KAAK,EAAE;QACZ+C,OAAO,CAACof,IAAI,CAAC,yCAAyCtvB,MAAM,GAAG,EAAEmN,KAAK,CAAC;QACvE,OAAO4O,SAAS;;IACnB;EACL;EAEAsT,iBAAiBA,CAAA;IACb,IAAI,CAAC9C,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACT,WAAW,GAAG;MACfxI,iBAAiB,EAAE,CAAC;MACpBY,KAAK,EAAE;KACV;IACD,IAAI,CAACpa,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;EAC9B;EAEA;EAEMgc,mBAAmBA,CAAA;IAAA,IAAA9Y,MAAA;IAAA,OAAAvE,4JAAA;MACrB,IAAI,CAACuE,MAAI,CAACpI,WAAW,IAAI,CAACoI,MAAI,CAAC0P,WAAW,EAAE;MAE5C,IAAI;QACA,MAAMiB,SAAS,GAAG3Q,MAAI,CAACod,0BAA0B,EAAE;QACnD,MAAMpd,MAAI,CAACvI,YAAY,CAACoZ,YAAY,CAACF,SAAS,CAAC;QAC/C3Q,MAAI,CAACxI,mBAAmB,CAAC8L,WAAW,CAAC,qCAAqC,CAAC;OAC9E,CAAC,OAAOtI,KAAK,EAAE;QACZ+C,OAAO,CAAC/C,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1DgF,MAAI,CAACxI,mBAAmB,CAACqE,SAAS,CAAC,sCAAsC,CAAC;;IAC7E;EACL;EAEM6b,oBAAoBA,CAAA;IAAA,IAAAvX,MAAA;IAAA,OAAA1E,4JAAA;MACtB,IAAI,CAAC0E,MAAI,CAACvI,WAAW,IAAI,CAACuI,MAAI,CAAC0P,eAAe,EAAE;QAC5C1P,MAAI,CAAC3I,mBAAmB,CAACqE,SAAS,CAAC,sCAAsC,CAAC;QAC1E;;MAGJ,IAAI;QACA,MAAM8U,SAAS,GAAGxQ,MAAI,CAACkd,4BAA4B,EAAE;QACrD,MAAMld,MAAI,CAAC1I,YAAY,CAACoZ,YAAY,CAACF,SAAS,CAAC;QAC/CxQ,MAAI,CAAC3I,mBAAmB,CAAC8L,WAAW,CAAC,mCAAmC,CAAC;OAC5E,CAAC,OAAOtI,KAAK,EAAE;QACZ+C,OAAO,CAAC/C,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDmF,MAAI,CAAC3I,mBAAmB,CAACqE,SAAS,CAAC,oCAAoC,CAAC;;IAC3E;EACL;EAEA;EACQuhB,0BAA0BA,CAAA;IAC9B,MAAMvnB,KAAK,GAAG,IAAI,CAACmkB,QAAQ,CAACxM,kBAAkB,CAAC,OAAO,CAAC;IACvD,MAAM1hB,QAAQ,GAAG,IAAI,CAAC8L,WAAW,EAAE9L,QAAQ,IAAI,EAAE;IAEjD,IAAI6kB,SAAS,GAAG;;;;uCAIe9a,KAAK;0CACF/J,QAAQ;;;;;;iDAMD,IAAI,CAAC4jB,WAAW,CAAC9b,aAAa,EAAE1H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;gDACrD,IAAI,CAACwjB,WAAW,CAAC7b,YAAY,EAAE3H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;iDAClD,IAAI,CAACwjB,WAAW,CAAC7Y,UAAU,EAAE3K,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;;;;kDAKhD,IAAI,CAACwjB,WAAW,CAACS,mBAAmB,EAAEjkB,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;iDAC3D,IAAI,CAACwjB,WAAW,CAACU,kBAAkB,EAAElkB,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;gDAE1D,IAAI,CAACwjB,WAAW,CAAC5Y,aAAa,EAAE5K,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;;KAG/F;IAEG;IACA,IAAI,IAAI,CAACisB,qBAAqB,CAACrnB,MAAM,GAAG,CAAC,EAAE;MACvC6f,SAAS,IAAI;;;OAGlB;MAEK,IAAI,CAACwH,qBAAqB,CAAChS,OAAO,CAACtY,MAAM,IAAG;QACxC8iB,SAAS,IAAI;;sBAEP9iB,MAAM,CAACA,MAAM,CAACqH,WAAW,EAAE;uBAC1BrH,MAAM,CAACtB,cAAc;yBACnBsB,MAAM,CAACgG,YAAY,EAAE3H,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;SAEzD;MACG,CAAC,CAAC;MAEFykB,SAAS,IAAI,QAAQ;;IAGzBA,SAAS,IAAI;;;yBAGI,IAAI/W,IAAI,EAAE,CAAC6K,cAAc,CAAC,OAAO,CAAC;;;KAGtD;IAEG,OAAOkM,SAAS;EACpB;EAEA;EACQ0M,4BAA4BA,CAAA;IAChC,MAAMxnB,KAAK,GAAG,IAAI,CAACmkB,QAAQ,CAACxM,kBAAkB,CAAC,OAAO,CAAC;IACvD,MAAM1hB,QAAQ,GAAG,IAAI,CAAC8L,WAAW,EAAE9L,QAAQ,IAAI,EAAE;IACjD,MAAMykB,MAAM,GAAG,IAAI,CAACV,eAAgB;IAEpC,IAAIc,SAAS,GAAG;;;;uCAIe9a,KAAK;0CACF/J,QAAQ;4CACNykB,MAAM,CAACjf,SAAS,CAACmT,cAAc,CAAC,OAAO,CAAC;;;;;;iDAMnC8L,MAAM,CAACzjB,YAAY,EAAEZ,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;gDAC1CqkB,MAAM,CAACjT,WAAW,EAAEpR,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;iDACvCqkB,MAAM,CAACW,IAAI,EAAEhlB,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;;;;qDAK7B,CAACqkB,MAAM,CAACW,IAAI,IAAI,IAAI,CAACxB,WAAW,EAAES,mBAAmB,IAAI,CAAC,CAAC,IAAI,IAAI,CAACT,WAAW,EAAEU,kBAAkB,IAAI,CAAC,CAAC,GAAGlkB,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;sDAC/HqkB,MAAM,CAACY,iBAAiB,EAAEjlB,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;6BACvEmf,IAAI,CAACgG,GAAG,CAACd,MAAM,CAACxb,UAAU,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,OAAO,GAAG,KAAK;6CACzCwb,MAAM,CAACxb,UAAU,EAAE7I,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;;KAG/E;IAEG;IACA,IAAIqkB,MAAM,CAACe,aAAa,IAAIf,MAAM,CAACgB,YAAY,IAAIhB,MAAM,CAACiB,YAAY,EAAE;MACpEb,SAAS,IAAI;;;OAGlB;MAEK,IAAIJ,MAAM,CAACe,aAAa,EAAE;QACtBX,SAAS,IAAI;;;uBAGNJ,MAAM,CAACe,aAAa,CAACjjB,aAAa,IAAI,KAAK;yBACzCkiB,MAAM,CAACe,aAAa,CAACxkB,YAAY,EAAEZ,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;wBACxDqkB,MAAM,CAACe,aAAa,CAAChU,WAAW,EAAEpR,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;SAErE;;MAGG,IAAIqkB,MAAM,CAACgB,YAAY,EAAE;QACrBZ,SAAS,IAAI;;;uBAGNJ,MAAM,CAACgB,YAAY,CAACljB,aAAa,IAAI,KAAK;yBACxCkiB,MAAM,CAACgB,YAAY,CAACzkB,YAAY,EAAEZ,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;wBACvDqkB,MAAM,CAACgB,YAAY,CAACjU,WAAW,EAAEpR,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;SAEpE;;MAGG,IAAIqkB,MAAM,CAACiB,YAAY,EAAE;QACrBb,SAAS,IAAI;;;uBAGNJ,MAAM,CAACiB,YAAY,CAACnjB,aAAa,IAAI,KAAK;yBACxCkiB,MAAM,CAACiB,YAAY,CAAC1kB,YAAY,EAAEZ,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;wBACvDqkB,MAAM,CAACiB,YAAY,CAAClU,WAAW,EAAEpR,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;;SAEpE;;MAGGykB,SAAS,IAAI,QAAQ;;IAGzB;IACA,IAAIJ,MAAM,CAACwB,KAAK,IAAIxB,MAAM,CAACwB,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE,EAAE;MAC5CrB,SAAS,IAAI;;;2CAGkBJ,MAAM,CAACwB,KAAK;;OAEhD;;IAGCpB,SAAS,IAAI;;;;0BAIK,IAAI/W,IAAI,EAAE,CAAC6K,cAAc,CAAC,OAAO,CAAC;;;KAGvD;IAEG,OAAOkM,SAAS;EACpB;EAEA;EACQ2M,uBAAuBA,CAAA;IAC3B,OAAO,IAAI,CAACF,0BAA0B,EAAE;EAC5C;EAEA;EAEA;EACQlC,yBAAyBA,CAAA;IAC7B,IAAI,CAACjB,cAAc,GAAG,EAAE;IAExB;IACA,IAAI,CAACzB,iBAAiB,CAACrS,OAAO,CAAC2V,UAAU,IAAG;MACxC,IAAIA,UAAU,CAAC/lB,IAAI,KAAK,QAAQ,IAC5B+lB,UAAU,CAAC7lB,MAAM,IACjB6lB,UAAU,CAAC7lB,MAAM,CAACvN,QAAQ,CAAC,oBAAoB,CAAC,IAChDozB,UAAU,CAACzf,QAAQ,EAAE;QAErB,IAAI,CAAC,IAAI,CAAC4d,cAAc,CAACvxB,QAAQ,CAACozB,UAAU,CAACzf,QAAQ,CAAC,EAAE;UACpD,IAAI,CAAC4d,cAAc,CAACpQ,IAAI,CAACiS,UAAU,CAACzf,QAAQ,CAAC;;;IAGzD,CAAC,CAAC;IAEF0B,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE,IAAI,CAACic,cAAc,CAAC;EAC3E;EAEA;EACAhC,cAAcA,CAAC5b,QAAgB;IAC3B,OAAO,IAAI,CAAC4d,cAAc,CAACvxB,QAAQ,CAAC2T,QAAQ,CAAC;EACjD;EAEA;EACA4f,kBAAkBA,CAAC5f,QAAgB;IAC/B,IAAI,CAAC,IAAI,CAAC4d,cAAc,CAACvxB,QAAQ,CAAC2T,QAAQ,CAAC,EAAE;MACzC,IAAI,CAAC4d,cAAc,CAACpQ,IAAI,CAACxN,QAAQ,CAAC;MAClC0B,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE3B,QAAQ,CAAC;MACpD0B,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAACic,cAAc,CAAC;;EAErE;EAEA,IAAIV,cAAcA,CAAA;IACd,IAAI,CAAC,IAAI,CAAC7J,WAAW,EAAE,OAAO,CAAC;IAC/B,OAAO,IAAI,CAACiK,WAAW,CAACxI,iBAAiB,GAAG,IAAI,CAACzB,WAAW,CAAC5Y,aAAa;EAC9E;EAEA,IAAIijB,aAAaA,CAAA;IACb,OAAO1O,IAAI,CAACgG,GAAG,CAAC,IAAI,CAACkI,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;EACjD;EAEAC,gBAAgBA,CAAA;IACZ,OAAOnO,IAAI,CAACgG,GAAG,CAAC,IAAI,CAACkI,cAAc,CAAC;EACxC;EAEAhC,cAAcA,CAAC7mB,KAAa;IACxB,OAAO,KAAKA,KAAK,CAACxE,OAAO,CAAC,CAAC,CAAC,EAAE;EAClC;EAEAosB,sBAAsBA,CAACviB,IAAY;IAC/B,OAAOA,IAAI,KAAK,SAAS,GAAG,SAAS,GAAG,QAAQ;EACpD;EAEAsiB,sBAAsBA,CAACtiB,IAAY;IAC/B,OAAOA,IAAI,KAAK,SAAS,GAAG,cAAc,GAAG,aAAa;EAC9D;EAEA;EAEA;EACA6jB,iBAAiBA,CAAA;IACb7b,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC1D;IACA,IAAI,CAACrG,GAAG,CAACwjB,YAAY,EAAE;IACvB/a,UAAU,CAAC,MAAK;MACZ,IAAI,CAACzI,GAAG,CAACmF,aAAa,EAAE;IAC5B,CAAC,EAAE,CAAC,CAAC;EACT;EAEA;EACA0e,sBAAsBA,CAAA;IAClBzd,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjD;IACAoC,UAAU,CAAC,MAAK;MACZ,IAAI,CAACzI,GAAG,CAACwjB,YAAY,EAAE;MACvB,IAAI,CAACxjB,GAAG,CAACmF,aAAa,EAAE;IAC5B,CAAC,EAAE,EAAE,CAAC;EACV;EAEA;EACAygB,aAAaA,CAAA;IACTxf,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;MACrCkc,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;MAC7CC,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;MAC7CC,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCC,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;MAC/C+B,wBAAwB,EAAE,IAAI,CAACA,wBAAwB;MACvDX,kBAAkB,EAAE,IAAI,CAACA,kBAAkB;MAC3CsB,mBAAmB,EAAE,IAAI,CAACA,mBAAmB;MAC7CzC,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCZ,WAAW,EAAE,IAAI,CAACA;KACrB,CAAC;EACN;EAEA;EACA6D,gBAAgBA,CAAA;IACZzf,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxCD,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACsc,eAAe,CAAC;IACtDvc,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACoe,wBAAwB,CAAC;IAC9Dre,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACuc,gBAAgB,CAAC;IACzDxc,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACyd,kBAAkB,CAAC;IAC7D1d,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC2b,WAAW,CAAC;IAC9C5b,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC+e,mBAAmB,CAAC;IAC/Dhf,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACic,cAAc,CAAC;IACpDlc,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACma,qBAAqB,CAAC;IAC9D,IAAI,CAACA,qBAAqB,CAAChS,OAAO,CAACtY,MAAM,IAAG;MACxCkQ,OAAO,CAACC,GAAG,CAAC,UAAUnQ,MAAM,CAAC+N,EAAE,KAAK/N,MAAM,CAACA,MAAM,MAAM,IAAI,CAACoqB,cAAc,CAACpqB,MAAM,CAAC+N,EAAE,CAAC,GAAG,QAAQ,GAAG,WAAW,EAAE,CAAC;IACrH,CAAC,CAAC;IACFmC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EAC3C;;;uBArvBS1T,mBAAmB,EAAA1B,+DAAA,CAAAE,uEAAA,GAAAF,+DAAA,CAAAI,+EAAA,GAAAJ,+DAAA,CAAAspB,iEAAA,GAAAtpB,+DAAA,CAAAA,4DAAA;IAAA;EAAA;;;YAAnB0B,mBAAmB;MAAApB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAm0B,6BAAAj0B,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCd1BZ,4DAJN,aAAmC,aAER,aACE,gBACkD;UACvEA,uDAAA,WAAiC;UACjCA,oDAAA,0BACF;UACFA,0DADE,EAAS,EACL;UACNA,4DAAA,SAAI;UAAAA,oDAAA,kCAAiB;UAAAA,0DAAA,EAAK;UAExBA,4DADF,aAA4B,cACN;UAAAA,oDAAA,IAAqC;;UAAAA,0DAAA,EAAO;UAChEA,4DAAA,eAAuB;UAAAA,oDAAA,IAA8B;UAEzDA,0DAFyD,EAAO,EACxD,EACF;UAGNA,4DAAA,cAA0E;UACxEA,uDAAA,YAA0E;UAC1EA,oDAAA,IACF;UAAAA,0DAAA,EAAM;UASNA,wDANA,KAAA80B,mCAAA,kBAA+C,KAAAC,mCAAA,oBAMJ;UAwK7C/0B,0DAAA,EAAM;UAGNA,4DAAA,eAC0E;UAAlCA,wDAAA,mBAAAg1B,mDAAA;YAAA,OAASn0B,GAAA,CAAA0yB,qBAAA,EAAuB;UAAA,EAAC;UACvEvzB,4DAAA,eAAsE;UAAnCA,wDAAA,mBAAAi1B,mDAAAnvB,MAAA;YAAA,OAASA,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAG/DnK,4DAFJ,eAA2B,eACC,cACA;UAAAA,oDAAA,6CAA2B;UAAAA,0DAAA,EAAK;UACxDA,4DAAA,kBAAyF;UAArDA,wDAAA,mBAAAk1B,sDAAA;YAAA,OAASr0B,GAAA,CAAA0yB,qBAAA,EAAuB;UAAA,EAAC;UACnEvzB,4DAAA,gBAAyB;UAAAA,oDAAA,cAAO;UAEpCA,0DAFoC,EAAO,EAChC,EACL;UACNA,wDAAA,KAAAm1B,mCAAA,mBAA+C;UAmC7Cn1B,4DADF,eAA0B,kBAC0D;UAAlCA,wDAAA,mBAAAo1B,sDAAA;YAAA,OAASv0B,GAAA,CAAA0yB,qBAAA,EAAuB;UAAA,EAAC;UAC/EvzB,oDAAA,kBACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAA8E;UAAhCA,wDAAA,mBAAAq1B,sDAAA;YAAA,OAASx0B,GAAA,CAAA8xB,mBAAA,EAAqB;UAAA,EAAC;UAC3E3yB,uDAAA,aAAkC;UAClCA,oDAAA,4BACF;UAIRA,0DAJQ,EAAS,EACL,EACF,EACF,EACF;UAGNA,4DAAA,eAC4E;UAAnCA,wDAAA,mBAAAs1B,mDAAA;YAAA,OAASz0B,GAAA,CAAAyyB,sBAAA,EAAwB;UAAA,EAAC;UACzEtzB,4DAAA,eAA6D;UAAnCA,wDAAA,mBAAAu1B,mDAAAzvB,MAAA;YAAA,OAASA,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAGtDnK,4DAFJ,eAA2B,eACC,cACA;UAAAA,oDAAA,uCAA0B;UAAAA,0DAAA,EAAK;UACvDA,4DAAA,kBAA0F;UAAtDA,wDAAA,mBAAAw1B,sDAAA;YAAA,OAAS30B,GAAA,CAAAyyB,sBAAA,EAAwB;UAAA,EAAC;UACpEtzB,4DAAA,gBAAyB;UAAAA,oDAAA,cAAO;UAEpCA,0DAFoC,EAAO,EAChC,EACL;UAGFA,4DAFJ,eAAwB,eACE,iBACM;UAAAA,oDAAA,0CAAkC;UAAAA,0DAAA,EAAQ;UACtEA,4DAAA,iBAM4D;UAF1DA,8DAAA,2BAAAy1B,6DAAA3vB,MAAA;YAAA9F,gEAAA,CAAAa,GAAA,CAAA8wB,gBAAA,CAAAC,cAAA,EAAA9rB,MAAA,MAAAjF,GAAA,CAAA8wB,gBAAA,CAAAC,cAAA,GAAA9rB,MAAA;YAAA,OAAAA,MAAA;UAAA,EAA6C;UAC7C9F,wDAAA,2BAAAy1B,6DAAA;YAAA,OAAiB50B,GAAA,CAAAmwB,iBAAA,EAAmB;UAAA,EAAC;UAEzChxB,0DAPE,EAM4D,EACxD;UAEJA,4DADF,eAAwB,iBACG;UAAAA,oDAAA,qBAAa;UAAAA,0DAAA,EAAQ;UAC9CA,4DAAA,iBAOW;UAHTA,8DAAA,2BAAA01B,6DAAA5vB,MAAA;YAAA9F,gEAAA,CAAAa,GAAA,CAAA8wB,gBAAA,CAAAE,WAAA,EAAA/rB,MAAA,MAAAjF,GAAA,CAAA8wB,gBAAA,CAAAE,WAAA,GAAA/rB,MAAA;YAAA,OAAAA,MAAA;UAAA,EAA0C;UAC1C9F,wDAAA,2BAAA01B,6DAAA;YAAA,OAAiB70B,GAAA,CAAAmwB,iBAAA,EAAmB;UAAA,EAAC;UAI3ChxB,0DATI,EAOW,EACP,EACF;UAEJA,4DADF,eAA0B,kBAC2D;UAAnCA,wDAAA,mBAAA21B,sDAAA;YAAA,OAAS90B,GAAA,CAAAyyB,sBAAA,EAAwB;UAAA,EAAC;UAChFtzB,oDAAA,kBACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAI8B;UAD5BA,wDAAA,mBAAA41B,sDAAA;YAAA,OAAS/0B,GAAA,CAAAoyB,kBAAA,EAAoB;UAAA,EAAC;UAG9BjzB,wDADA,KAAA61B,iCAAA,gBAAyD,KAAAC,iCAAA,gBACT;UAChD91B,oDAAA,IACF;UAIRA,0DAJQ,EAAS,EACL,EACF,EACF,EACF;UAGNA,4DAAA,eAC0E;UAAlCA,wDAAA,mBAAA+1B,mDAAA;YAAA,OAASl1B,GAAA,CAAAizB,qBAAA,EAAuB;UAAA,EAAC;UACvE9zB,4DAAA,eAA6D;UAAnCA,wDAAA,mBAAAg2B,mDAAAlwB,MAAA;YAAA,OAASA,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAGtDnK,4DAFJ,eAA2B,eACC,cACA;UACtBA,uDAAA,YAAoH;UACpHA,oDAAA,IACF;UAAAA,0DAAA,EAAK;UACLA,4DAAA,kBAAyF;UAArDA,wDAAA,mBAAAi2B,sDAAA;YAAA,OAASp1B,GAAA,CAAAizB,qBAAA,EAAuB;UAAA,EAAC;UACnE9zB,4DAAA,gBAAyB;UAAAA,oDAAA,cAAO;UAEpCA,0DAFoC,EAAO,EAChC,EACL;UAIAA,4DAHN,eAAwB,YAChB,eACoB,iBACF;UAAAA,oDAAA,iBAAS;UAAAA,0DAAA,EAAQ;UACrCA,4DAAA,oBAQW;UALTA,8DAAA,2BAAAk2B,gEAAApwB,MAAA;YAAA9F,gEAAA,CAAAa,GAAA,CAAA6wB,eAAA,CAAArkB,MAAA,EAAAvH,MAAA,MAAAjF,GAAA,CAAA6wB,eAAA,CAAArkB,MAAA,GAAAvH,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAoC;UACpC9F,wDAAA,2BAAAk2B,gEAAA;YAAA,OAAiBr1B,GAAA,CAAAmwB,iBAAA,EAAmB;UAAA,EAAC;UAKzChxB,0DADa,EAAW,EAClB;UAEJA,4DADF,eAAwB,iBACH;UAAAA,oDAAA,gBAAQ;UAAAA,0DAAA,EAAQ;UAG/BA,4DAFJ,eAAyB,eACU,gBACA;UAAAA,oDAAA,SAAC;UAClCA,0DADkC,EAAO,EACnC;UACNA,4DAAA,iBAUW;UANTA,8DAAA,2BAAAm2B,6DAAArwB,MAAA;YAAA9F,gEAAA,CAAAa,GAAA,CAAA6wB,eAAA,CAAA5pB,KAAA,EAAAhC,MAAA,MAAAjF,GAAA,CAAA6wB,eAAA,CAAA5pB,KAAA,GAAAhC,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAmC;UACnC9F,wDAAA,2BAAAm2B,6DAAA;YAAA,OAAiBt1B,GAAA,CAAAmwB,iBAAA,EAAmB;UAAA,EAAC;UAS/ChxB,0DAdQ,EAUW,EACP,EACF,EACD,EACH;UAEJA,4DADF,eAA0B,kBAC0D;UAAlCA,wDAAA,mBAAAo2B,sDAAA;YAAA,OAASv1B,GAAA,CAAAizB,qBAAA,EAAuB;UAAA,EAAC;UAC/E9zB,oDAAA,kBACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAKyC;UADvCA,wDAAA,mBAAAq2B,sDAAA;YAAA,OAASx1B,GAAA,CAAAgzB,mBAAA,EAAqB;UAAA,EAAC;UAE/B7zB,uDAAA,YAA2F;UAC3FA,oDAAA,IACF;UAIRA,0DAJQ,EAAS,EACL,EACF,EACF,EACF;UAGNA,4DAAA,eACkE;UAA9BA,wDAAA,mBAAAs2B,mDAAA;YAAA,OAASz1B,GAAA,CAAAyzB,iBAAA,EAAmB;UAAA,EAAC;UAC/Dt0B,4DAAA,eAAsE;UAAnCA,wDAAA,mBAAAu2B,mDAAAzwB,MAAA;YAAA,OAASA,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAG/DnK,4DAFJ,eAA2B,eACC,cACA;UAAAA,oDAAA,2CAAyB;UAAAA,0DAAA,EAAK;UACtDA,4DAAA,kBAAqF;UAAjDA,wDAAA,mBAAAw2B,sDAAA;YAAA,OAAS31B,GAAA,CAAAyzB,iBAAA,EAAmB;UAAA,EAAC;UAC/Dt0B,4DAAA,gBAAyB;UAAAA,oDAAA,cAAO;UAEpCA,0DAFoC,EAAO,EAChC,EACL;UACNA,wDAAA,KAAAy2B,mCAAA,mBAA4C;UAmD1Cz2B,4DADF,gBAA0B,mBACsD;UAA9BA,wDAAA,mBAAA02B,uDAAA;YAAA,OAAS71B,GAAA,CAAAyzB,iBAAA,EAAmB;UAAA,EAAC;UAC3Et0B,oDAAA,mBACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,mBAIoC;UADlCA,wDAAA,mBAAA22B,uDAAA;YAAA,OAAS91B,GAAA,CAAAuzB,oBAAA,EAAsB;UAAA,EAAC;UAGhCp0B,wDADA,MAAA42B,kCAAA,gBAAkD,MAAAC,kCAAA,gBACV;UACxC72B,oDAAA,KACF;UAIRA,0DAJQ,EAAS,EACL,EACF,EACF,EACF;;;UAjcoDA,uDAAA,GAAoB;UAApBA,wDAAA,aAAAa,GAAA,CAAAixB,OAAA,CAAoB;UAOpD9xB,uDAAA,GAAqC;UAArCA,gEAAA,kBAAAA,yDAAA,SAAAa,GAAA,CAAAuwB,QAAA,oBAAqC;UAClCpxB,uDAAA,GAA8B;UAA9BA,gEAAA,kBAAAa,GAAA,CAAAmO,WAAA,kBAAAnO,GAAA,CAAAmO,WAAA,CAAA9L,QAAA,KAA8B;UAKtClD,uDAAA,EAAsD;UAAtDA,wDAAA,YAAAa,GAAA,CAAAkuB,SAAA,kCAAsD;UACxD/uB,uDAAA,EAAsD;UAAtDA,wDAAA,YAAAa,GAAA,CAAAkuB,SAAA,kCAAsD;UACrE/uB,uDAAA,EACF;UADEA,gEAAA,MAAAa,GAAA,CAAAkuB,SAAA,wEACF;UAGM/uB,uDAAA,EAAa;UAAbA,wDAAA,SAAAa,GAAA,CAAAixB,OAAA,CAAa;UAMb9xB,uDAAA,EAAc;UAAdA,wDAAA,UAAAa,GAAA,CAAAixB,OAAA,CAAc;UA2KH9xB,uDAAA,EAAuD;UAAvDA,yDAAA,YAAAa,GAAA,CAAAywB,mBAAA,mBAAuD;UACrEtxB,yDAAA,SAAAa,GAAA,CAAAywB,mBAAA,CAAkC;UASRtxB,uDAAA,GAAoB;UAApBA,wDAAA,SAAAa,GAAA,CAAA2vB,cAAA,CAAoB;UAgDhCxwB,uDAAA,GAAwD;UAAxDA,yDAAA,YAAAa,GAAA,CAAA4wB,oBAAA,mBAAwD;UACtEzxB,yDAAA,SAAAa,GAAA,CAAA4wB,oBAAA,CAAmC;UAgB5BzxB,uDAAA,IAA6C;UAA7CA,8DAAA,YAAAa,GAAA,CAAA8wB,gBAAA,CAAAC,cAAA,CAA6C;UAU7C5xB,uDAAA,GAA0C;UAA1CA,8DAAA,YAAAa,GAAA,CAAA8wB,gBAAA,CAAAE,WAAA,CAA0C;UAc5C7xB,uDAAA,GAA2B;UAA3BA,wDAAA,aAAAa,GAAA,CAAAkxB,cAAA,CAA2B;UACQ/xB,uDAAA,EAAoB;UAApBA,wDAAA,SAAAa,GAAA,CAAAkxB,cAAA,CAAoB;UAC9B/xB,uDAAA,EAAqB;UAArBA,wDAAA,UAAAa,GAAA,CAAAkxB,cAAA,CAAqB;UAC9C/xB,uDAAA,EACF;UADEA,gEAAA,MAAAa,GAAA,CAAAkxB,cAAA,qDACF;UAOW/xB,uDAAA,EAAuD;UAAvDA,yDAAA,YAAAa,GAAA,CAAA0wB,mBAAA,mBAAuD;UACrEvxB,yDAAA,SAAAa,GAAA,CAAA0wB,mBAAA,CAAkC;UAKdvxB,uDAAA,GAAgG;UAAhGA,wDAAA,YAAAa,GAAA,CAAA6wB,eAAA,CAAAvkB,IAAA,iEAAgG;UAC/GnN,uDAAA,EACF;UADEA,gEAAA,MAAAa,GAAA,CAAA6wB,eAAA,CAAAvkB,IAAA,uFACF;UAYMnN,uDAAA,GAAoC;UAApCA,8DAAA,YAAAa,GAAA,CAAA6wB,eAAA,CAAArkB,MAAA,CAAoC;UAiBlCrN,uDAAA,GAAmC;UAAnCA,8DAAA,YAAAa,GAAA,CAAA6wB,eAAA,CAAA5pB,KAAA,CAAmC;UAkBzC9H,uDAAA,GAA6E;UAE7EA,wDAFA,YAAAa,GAAA,CAAA6wB,eAAA,CAAAvkB,IAAA,8CAA6E,cAAAtM,GAAA,CAAA2yB,wBAAA,CAEvC;UACvBxzB,uDAAA,EAAuE;UAAvEA,wDAAA,YAAAa,GAAA,CAAA6wB,eAAA,CAAAvkB,IAAA,wCAAuE;UACtFnN,uDAAA,EACF;UADEA,gEAAA,gBAAAa,GAAA,CAAA6wB,eAAA,CAAAvkB,IAAA,2CACF;UAOWnN,uDAAA,EAAmD;UAAnDA,yDAAA,YAAAa,GAAA,CAAA2wB,eAAA,mBAAmD;UACjExxB,yDAAA,SAAAa,GAAA,CAAA2wB,eAAA,CAA8B;UASJxxB,uDAAA,GAAiB;UAAjBA,wDAAA,SAAAa,GAAA,CAAAimB,WAAA,CAAiB;UA0DtC9mB,uDAAA,GAAiC;UAAjCA,wDAAA,cAAAa,GAAA,CAAAszB,mBAAA,CAAiC;UACEn0B,uDAAA,EAAa;UAAbA,wDAAA,SAAAa,GAAA,CAAAixB,OAAA,CAAa;UACxB9xB,uDAAA,EAAc;UAAdA,wDAAA,UAAAa,GAAA,CAAAixB,OAAA,CAAc;UACtC9xB,uDAAA,EACF;UADEA,gEAAA,MAAAa,GAAA,CAAAixB,OAAA,oDACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC/ZE9xB,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,EACF;IADEA,gEAAA,MAAA0uB,MAAA,CAAAoI,YAAA,MACF;;;AAkBJ,MAAOz1B,cAAc;EAMzB/B,YACUC,eAAgC,EAChCqP,mBAAwC,EACxCpP,MAAc;IAFd,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAqP,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAApP,MAAM,GAANA,MAAM;IARhB,KAAAwJ,KAAK,GAAW,EAAE;IAClB,KAAAtB,QAAQ,GAAW,EAAE;IACrB,KAAAovB,YAAY,GAAW,EAAE;IACzB,KAAAlwB,SAAS,GAAY,KAAK;EAMtB;EAEJnH,QAAQA,CAAA;IACN;IACA,IAAI,CAACF,eAAe,CAACG,YAAY,CAACC,SAAS,CAACC,IAAI,IAAG;MACjD,IAAIA,IAAI,EAAE;QACR,IAAI,CAACm3B,YAAY,CAACn3B,IAAI,CAAC;;IAE3B,CAAC,CAAC;EACJ;EAEMo3B,OAAOA,CAAA;IAAA,IAAApkB,KAAA;IAAA,OAAAC,4JAAA;MACXD,KAAI,CAAChM,SAAS,GAAG,IAAI;MACrBgM,KAAI,CAACkkB,YAAY,GAAG,EAAE;MACtBlkB,KAAI,CAAChE,mBAAmB,CAACqoB,WAAW,CAAC,qBAAqB,CAAC;MAE3D,IAAI;QAEF;QACA,MAAM1Q,cAAc,GAAG,IAAIC,OAAO,CAAC,CAACC,CAAC,EAAEC,MAAM,KAAI;UAC/ClP,UAAU,CAAC,MAAMkP,MAAM,CAAC,IAAIC,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC;QAEF,MAAMuQ,YAAY,GAAGtkB,KAAI,CAACrT,eAAe,CAAC43B,KAAK,CAACvkB,KAAI,CAAC5J,KAAK,EAAE4J,KAAI,CAAClL,QAAQ,CAAC;QAE1E,MAAM9H,IAAI,SAAS4mB,OAAO,CAACI,IAAI,CAAC,CAACsQ,YAAY,EAAE3Q,cAAc,CAAC,CAAQ;QAGtE,IAAI3mB,IAAI,EAAE;UACRgT,KAAI,CAACmkB,YAAY,CAACn3B,IAAI,CAAC;SACxB,MAAM;UACLgT,KAAI,CAACkkB,YAAY,GAAG,wBAAwB;;OAE/C,CAAC,OAAO1kB,KAAU,EAAE;QACnBQ,KAAI,CAACkkB,YAAY,GAAGlkB,KAAI,CAACwkB,eAAe,CAAChlB,KAAK,CAAC;OAChD,SAAS;QACRQ,KAAI,CAAChM,SAAS,GAAG,KAAK;QACtBgM,KAAI,CAAChE,mBAAmB,CAACyoB,WAAW,EAAE;;IACvC;EACH;EAEQN,YAAYA,CAACn3B,IAAS;IAC5B,IAAIA,IAAI,CAACiQ,IAAI,KAAK,OAAO,EAAE;MACzB,IAAI,CAACrQ,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;KACjC,MAAM;MACL,IAAI,CAACP,MAAM,CAACO,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;;EAEvC;EAEQq3B,eAAeA,CAAChlB,KAAU;IAChC,QAAQA,KAAK,CAACgI,OAAO;MACnB,KAAK,2BAA2B;QAC9B,OAAO,wBAAwB;MACjC,KAAK,qBAAqB;QACxB,OAAO,qBAAqB;MAC9B,KAAK,mBAAmB;QACtB,OAAO,wCAAwC;MACjD,KAAK,eAAe;QAClB,OAAO,4CAA4C;MACrD;QACE,OAAO,8BAA8B;;EAE3C;;;uBAxEW/Y,cAAc,EAAArB,+DAAA,CAAAE,uEAAA,GAAAF,+DAAA,CAAAI,+EAAA,GAAAJ,+DAAA,CAAAspB,mDAAA;IAAA;EAAA;;;YAAdjoB,cAAc;MAAAf,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA42B,wBAAA12B,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UA5CnBZ,4DAFJ,aAAuB,aAC2C,YACjC;UAAAA,oDAAA,8BAAkB;UAAAA,0DAAA,EAAK;UACpDA,4DAAA,iBAAiD;UAA3CA,wDAAA,sBAAAu3B,iDAAA;YAAAv3B,2DAAA,CAAA8pB,GAAA;YAAA,OAAA9pB,yDAAA,CAAYa,GAAA,CAAAm2B,OAAA,EAAS;UAAA,EAAC;UAExBh3B,4DADF,aAAwB,eACH;UAAAA,oDAAA,aAAM;UAAAA,0DAAA,EAAQ;UACjCA,4DAAA,eAMW;UADTA,8DAAA,2BAAAw3B,uDAAA1xB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAAmI,KAAA,EAAAlD,MAAA,MAAAjF,GAAA,CAAAmI,KAAA,GAAAlD,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAmB;UAEvB9F,0DAPE,EAMW,EACP;UAGJA,4DADF,cAAwB,gBACA;UAAAA,oDAAA,wBAAW;UAAAA,0DAAA,EAAQ;UACzCA,4DAAA,gBAMW;UADTA,8DAAA,2BAAAy3B,wDAAA3xB,MAAA;YAAA9F,2DAAA,CAAA8pB,GAAA;YAAA9pB,gEAAA,CAAAa,GAAA,CAAA6G,QAAA,EAAA5B,MAAA,MAAAjF,GAAA,CAAA6G,QAAA,GAAA5B,MAAA;YAAA,OAAA9F,yDAAA,CAAA8F,MAAA;UAAA,EAAsB;UAE1B9F,0DAPE,EAMW,EACP;UAENA,wDAAA,KAAA03B,8BAAA,kBAAqD;UAIrD13B,4DAAA,kBAG6C;UAC3CA,oDAAA,IACF;UAGNA,0DAHM,EAAS,EACJ,EACH,EACF;;;;UA3BIA,uDAAA,GAAmB;UAAnBA,8DAAA,YAAAa,GAAA,CAAAmI,KAAA,CAAmB;UAWnBhJ,uDAAA,GAAsB;UAAtBA,8DAAA,YAAAa,GAAA,CAAA6G,QAAA,CAAsB;UAIO1H,uDAAA,EAAkB;UAAlBA,wDAAA,SAAAa,GAAA,CAAAi2B,YAAA,CAAkB;UAOjD92B,uDAAA,EAA0C;UAA1CA,wDAAA,cAAA23B,YAAA,CAAAnJ,KAAA,IAAA3tB,GAAA,CAAA+F,SAAA,CAA0C;UAC1C5G,uDAAA,EACF;UADEA,gEAAA,MAAAa,GAAA,CAAA+F,SAAA,2DACF;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CqC;AAG4B;;;;;;ICYvE5G,4DADF,aAA+C,aAChB;IAC3BA,uDAAA,YAAsC;IACtCA,4DAAA,WAAM;IAAAA,oDAAA,4CAAgC;IAE1CA,0DAF0C,EAAO,EACzC,EACF;;;;;IAIFA,4DADF,cAA4E,cACjD;IACvBA,uDAAA,YAAiC;IACjCA,4DAAA,SAAI;IAAAA,oDAAA,8BAAuB;IAAAA,0DAAA,EAAK;IAChCA,4DAAA,QAAG;IAAAA,oDAAA,iFAA2D;IAElEA,0DAFkE,EAAI,EAC9D,EACF;;;;;IAuEIA,4DADF,cAA8E,cACnB;IACvDA,uDAAA,YAA4B;IAC5BA,oDAAA,GACF;IAAAA,0DAAA,EAAM;IACNA,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;IACNA,4DAAA,cAAuD;IACrDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;IACNA,4DAAA,cAAqD;IACnDA,oDAAA,GACF;IAAAA,0DAAA,EAAM;IACNA,4DAAA,eAE0D;IACxDA,oDAAA,IACF;IACFA,0DADE,EAAM,EACF;;;;IAlBsBA,uDAAA,EAA8B;;IAEtDA,uDAAA,GACF;IADEA,gEAAA,MAAA43B,WAAA,CAAA10B,QAAA,MACF;IACwBlD,uDAAA,EAA4B;;IAClDA,uDAAA,EACF;IADEA,gEAAA,MAAA43B,WAAA,CAAAx0B,oBAAA,OACF;IACyBpD,uDAAA,EAA6B;;IACpDA,uDAAA,EACF;IADEA,gEAAA,SAAA43B,WAAA,CAAA5sB,aAAA,kBAAA4sB,WAAA,CAAA5sB,aAAA,CAAA1H,OAAA,oBACF;IACwBtD,uDAAA,EAA4B;;IAClDA,uDAAA,EACF;IADEA,gEAAA,SAAA43B,WAAA,CAAA3sB,YAAA,kBAAA2sB,WAAA,CAAA3sB,YAAA,CAAA3H,OAAA,oBACF;IAEKtD,uDAAA,EAAoD;IACpDA,yDADA,cAAA43B,WAAA,CAAA1sB,aAAA,WAAoD,cAAA0sB,WAAA,CAAA1sB,aAAA,WACA;;IACvDlL,uDAAA,EACF;IADEA,gEAAA,SAAA43B,WAAA,CAAA1sB,aAAA,kBAAA0sB,WAAA,CAAA1sB,aAAA,CAAA5H,OAAA,oBACF;;;;;IAqCEtD,4DADF,cAAuG,cACjF;IAAAA,oDAAA,GAAiB;IAAAA,0DAAA,EAAM;IAC3CA,4DAAA,cAAsB;IAAAA,oDAAA,GAA6B;IAAAA,0DAAA,EAAM;IACzDA,4DAAA,cAAsB;IAAAA,oDAAA,GAAY;IACpCA,0DADoC,EAAM,EACpC;;;;;IAHgBA,uDAAA,GAAiB;IAAjBA,+DAAA,CAAA63B,OAAA,CAAA9zB,MAAA,CAAiB;IACf/D,uDAAA,GAA6B;IAA7BA,gEAAA,OAAA63B,OAAA,CAAAlvB,KAAA,CAAArF,OAAA,QAA6B;IAC7BtD,uDAAA,GAAY;IAAZA,gEAAA,MAAA83B,IAAA,SAAY;;;;;IAgBlC93B,4DAJF,cAGoG,eACvE;IAAAA,oDAAA,GAAY;IAAAA,0DAAA,EAAO;IAC9CA,4DAAA,eAA2B;IAAAA,oDAAA,GAA8D;IAC3FA,0DAD2F,EAAO,EAC5F;;;;;;IAJDA,wDAAA,CAAA+3B,MAAA,CAAAC,kBAAA,CAAA/I,SAAA,CAAApsB,IAAA,EAAAo1B,SAAA,EAAiD;IACjDj4B,wDAAA,2BAAAi4B,SAAA,YAAAF,MAAA,CAAAG,sBAAA,CAAAjJ,SAAA,CAAApsB,IAAA,EAAAo1B,SAAA,EAAA30B,OAAA,IAA8F;IACtEtD,uDAAA,GAAY;IAAZA,+DAAA,CAAAi4B,SAAA,CAAY;IACZj4B,uDAAA,GAA8D;IAA9DA,gEAAA,OAAA+3B,MAAA,CAAAG,sBAAA,CAAAjJ,SAAA,CAAApsB,IAAA,EAAAo1B,SAAA,EAAA30B,OAAA,QAA8D;;;;;IAhC/FtD,4DADF,cAAuE,SACjE;IACFA,uDAAA,YAAyB;IACzBA,oDAAA,0CACF;IAAAA,0DAAA,EAAK;IAIHA,4DADF,cAAyB,SACnB;IACFA,uDAAA,YAA6B;IAC7BA,oDAAA,6CACF;IAAAA,0DAAA,EAAK;IACLA,4DAAA,cAA8B;IAC5BA,wDAAA,IAAAm4B,0DAAA,kBAAuG;IAM3Gn4B,0DADE,EAAM,EACF;IAIJA,4DADF,eAA6B,UACvB;IACFA,uDAAA,aAA+B;IAC/BA,oDAAA,kCACF;IAAAA,0DAAA,EAAK;IACLA,4DAAA,eAA0B;IACxBA,wDAAA,KAAAo4B,2DAAA,kBAGoG;IAKxGp4B,0DADE,EAAM,EACF;IAIJA,4DADF,eAAsC,UAChC;IACFA,uDAAA,YAAgC;IAChCA,oDAAA,qCACF;IAAAA,0DAAA,EAAK;IAGDA,4DAFJ,eAAoC,eACN,eACH;IACrBA,uDAAA,aAA8B;IAChCA,0DAAA,EAAM;IAEJA,4DADF,eAA0B,gBACC;IAAAA,oDAAA,wCAA2B;IAAAA,0DAAA,EAAO;IAC3DA,4DAAA,gBAAyB;IAAAA,oDAAA,IAA6C;IAE1EA,0DAF0E,EAAO,EACzE,EACF;IAGJA,4DADF,eAA4B,eACH;IACrBA,uDAAA,aAA4B;IAC9BA,0DAAA,EAAM;IAEJA,4DADF,eAA0B,gBACC;IAAAA,oDAAA,oCAAkB;IAAAA,0DAAA,EAAO;IAClDA,4DAAA,gBAAyB;IACvBA,oDAAA,IACF;IAEJA,0DAFI,EAAO,EACH,EACF;IAGJA,4DADF,eAA4B,eACH;IACrBA,uDAAA,aAAiC;IACnCA,0DAAA,EAAM;IAEJA,4DADF,eAA0B,gBACC;IAAAA,oDAAA,gCAAmB;IAAAA,0DAAA,EAAO;IACnDA,4DAAA,gBAAyB;IAAAA,oDAAA,IAAyD;IAEtFA,0DAFsF,EAAO,EACrF,EACF;IAGJA,4DADF,eAA4B,eACH;IACrBA,uDAAA,aAAiC;IACnCA,0DAAA,EAAM;IAEJA,4DADF,eAA0B,gBACC;IAAAA,oDAAA,yBAAY;IAAAA,0DAAA,EAAO;IAC5CA,4DAAA,gBAAyB;IAAAA,oDAAA,IAAoD;IAKvFA,0DALuF,EAAO,EAChF,EACF,EACF,EACF,EACF;;;;;IA3E8CA,uDAAA,GAA0C;IAA1CA,wDAAA,YAAA+3B,MAAA,CAAAM,qBAAA,CAAApJ,SAAA,CAAApsB,IAAA,KAA0C;IAgBhE7C,uDAAA,GAAe;IAAfA,wDAAA,YAAA+3B,MAAA,CAAAO,UAAA,GAAe;IAsBVt4B,uDAAA,IAA6C;IAA7CA,+DAAA,CAAA+3B,MAAA,CAAAQ,0BAAA,CAAAtJ,SAAA,CAAApsB,IAAA,EAA6C;IAWpE7C,uDAAA,GACF;IADEA,gEAAA,MAAA+3B,MAAA,CAAAM,qBAAA,CAAApJ,SAAA,CAAApsB,IAAA,KAAAqF,MAAA,OAAA6vB,MAAA,CAAAM,qBAAA,CAAApJ,SAAA,CAAApsB,IAAA,QAAAkB,MAAA,cACF;IAUyB/D,uDAAA,GAAyD;IAAzDA,gEAAA,OAAA+3B,MAAA,CAAAS,yBAAA,CAAAvJ,SAAA,CAAApsB,IAAA,EAAAS,OAAA,QAAyD;IAUzDtD,uDAAA,GAAoD;IAApDA,gEAAA,OAAA+3B,MAAA,CAAAU,oBAAA,CAAAxJ,SAAA,CAAApsB,IAAA,EAAAS,OAAA,QAAoD;;;;;IA5LrFtD,4DAHN,cAA+E,cACpD,cACE,SACnB;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAK;IAC3BA,4DAAA,eAA0B;IAAAA,oDAAA,GAAsB;IAClDA,0DADkD,EAAO,EACnD;IAEJA,4DADF,cAAyB,cACI;IACzBA,uDAAA,YAA6B;IAC7BA,4DAAA,YAAM;IAAAA,oDAAA,IAAmC;IAC3CA,0DAD2C,EAAO,EAC5C;IACNA,4DAAA,eAAyB;IAAAA,oDAAA,IAA8C;IAE3EA,0DAF2E,EAAM,EACzE,EACF;IAMAA,4DAJN,eAAuB,eAEO,eACK,eACN;IACrBA,uDAAA,aAA4B;IAC9BA,0DAAA,EAAM;IAEJA,4DADF,eAA0B,eACA;IAAAA,oDAAA,qBAAa;IAAAA,0DAAA,EAAM;IAC3CA,4DAAA,eAAwB;IAAAA,oDAAA,IAA0C;IAEtEA,0DAFsE,EAAM,EACpE,EACF;IAGJA,4DADF,eAA8B,eACL;IACrBA,uDAAA,aAAuC;IACzCA,0DAAA,EAAM;IAEJA,4DADF,eAA0B,eACA;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAM;IAC1CA,4DAAA,eAAwB;IAAAA,oDAAA,IAAyC;IAErEA,0DAFqE,EAAM,EACnE,EACF;IAKJA,4DAHF,eAEgE,eACvC;IACrBA,uDAAA,aAAiC;IACnCA,0DAAA,EAAM;IAEJA,4DADF,eAA0B,eACA;IAAAA,oDAAA,sBAAc;IAAAA,0DAAA,EAAM;IAC5CA,4DAAA,eAAwB;IAAAA,oDAAA,IAAsD;IAGpFA,0DAHoF,EAAM,EAChF,EACF,EACF;IAIJA,4DADF,eAAgC,UAC1B;IACFA,uDAAA,aAA+B;IAC/BA,oDAAA,gCACF;IAAAA,0DAAA,EAAK;IAIDA,4DAFJ,eAA2B,eACC,eACE;IAAAA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAM;IACxCA,4DAAA,eAAwB;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAM;IACpCA,4DAAA,eAAyB;IAAAA,oDAAA,eAAO;IAAAA,0DAAA,EAAM;IACtCA,4DAAA,eAAwB;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAM;IACpCA,4DAAA,eAA0B;IAAAA,oDAAA,gBAAQ;IACpCA,0DADoC,EAAM,EACpC;IAENA,wDAAA,KAAA04B,oDAAA,oBAA8E;IAuBlD14B,4DAD5B,eAA0B,eACE,cAAQ;IAAAA,oDAAA,qBAAa;IAASA,0DAAT,EAAS,EAAM;IAC9DA,4DAAA,eAAwB;IAAAA,oDAAA,SAAC;IAAAA,0DAAA,EAAM;IAE7BA,4DADF,eAAyB,cACf;IAAAA,oDAAA,IAA0C;IACpDA,0DADoD,EAAS,EACvD;IAEJA,4DADF,eAAwB,cACd;IAAAA,oDAAA,IAAyC;IACnDA,0DADmD,EAAS,EACtD;IAIJA,4DAHF,eAEgE,cACtD;IAAAA,oDAAA,IAAsD;IAItEA,0DAJsE,EAAS,EACnE,EACF,EACF,EACF;IAGNA,wDAAA,KAAA24B,oDAAA,mBAAuE;IA0F3E34B,0DADE,EAAM,EACF;;;;;IAnMIA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAivB,SAAA,CAAAjsB,KAAA,CAAkB;IACIhD,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAivB,SAAA,CAAA7nB,SAAA,CAAsB;IAKxCpH,uDAAA,GAAmC;IAAnCA,+DAAA,CAAA+3B,MAAA,CAAAa,gBAAA,CAAA3J,SAAA,CAAApsB,IAAA,EAAmC;IAElB7C,uDAAA,GAA8C;IAA9CA,gEAAA,aAAA+3B,MAAA,CAAAc,kBAAA,CAAA5J,SAAA,CAAApsB,IAAA,OAA8C;IAa3C7C,uDAAA,IAA0C;IAA1CA,gEAAA,OAAA+3B,MAAA,CAAAe,qBAAA,CAAA7J,SAAA,CAAApsB,IAAA,MAA0C;IAU1C7C,uDAAA,GAAyC;IAAzCA,gEAAA,OAAA+3B,MAAA,CAAAgB,oBAAA,CAAA9J,SAAA,CAAApsB,IAAA,MAAyC;IAKhE7C,uDAAA,EAA0D;IAC1DA,yDADA,aAAA+3B,MAAA,CAAAiB,sBAAA,CAAA/J,SAAA,CAAApsB,IAAA,MAA0D,aAAAk1B,MAAA,CAAAiB,sBAAA,CAAA/J,SAAA,CAAApsB,IAAA,MACA;IAMnC7C,uDAAA,GAAsD;IAAtDA,gEAAA,OAAA+3B,MAAA,CAAAiB,sBAAA,CAAA/J,SAAA,CAAApsB,IAAA,EAAAS,OAAA,QAAsD;IAqBpCtD,uDAAA,IAAgC;IAAhCA,wDAAA,YAAA+3B,MAAA,CAAAkB,gBAAA,CAAAhK,SAAA,CAAApsB,IAAA,EAAgC;IA0BhE7C,uDAAA,GAA0C;IAA1CA,gEAAA,OAAA+3B,MAAA,CAAAe,qBAAA,CAAA7J,SAAA,CAAApsB,IAAA,MAA0C;IAG1C7C,uDAAA,GAAyC;IAAzCA,gEAAA,OAAA+3B,MAAA,CAAAgB,oBAAA,CAAA9J,SAAA,CAAApsB,IAAA,MAAyC;IAG9C7C,uDAAA,EAA0D;IAC1DA,yDADA,aAAA+3B,MAAA,CAAAiB,sBAAA,CAAA/J,SAAA,CAAApsB,IAAA,MAA0D,aAAAk1B,MAAA,CAAAiB,sBAAA,CAAA/J,SAAA,CAAApsB,IAAA,MACA;IACrD7C,uDAAA,GAAsD;IAAtDA,gEAAA,OAAA+3B,MAAA,CAAAiB,sBAAA,CAAA/J,SAAA,CAAApsB,IAAA,EAAAS,OAAA,QAAsD;IAOtCtD,uDAAA,EAAqC;IAArCA,wDAAA,SAAA+3B,MAAA,CAAAmB,kBAAA,CAAAjK,SAAA,CAAApsB,IAAA,EAAqC;;;;;IAtH3E7C,4DAAA,cAA0D;IAUxDA,wDATA,IAAAm5B,6CAAA,kBAA4E,IAAAC,6CAAA,oBASG;IAuMjFp5B,0DAAA,EAAM;;;;IAhNEA,uDAAA,EAAyC;IAAzCA,wDAAA,SAAA+3B,MAAA,CAAAsB,oBAAA,GAAAnxB,MAAA,OAAyC;IASvBlI,uDAAA,EAAyB;IAAzBA,wDAAA,YAAA+3B,MAAA,CAAAsB,oBAAA,GAAyB;;;ADnB/C,MAAO53B,uBAAuB;EAOlCnC,YACUC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAPzB,KAAA0P,OAAO,GAAGxM,gEAAgB;IAC1B,KAAA62B,gBAAgB,GAAoC,EAAE;IACtD,KAAAC,eAAe,GAA2D,EAAE;IAC5E,KAAA3yB,SAAS,GAAY,KAAK;EAKtB;EAEJnH,QAAQA,CAAA;IACN,IAAI,CAAC+5B,oBAAoB,EAAE;IAE3B;IACA,IAAI,CAACC,YAAY,GAAG,IAAI,CAACl6B,eAAe,CAACm6B,oBAAoB,EAAE/5B,SAAS,CAAC,MAAK;MAC5E,IAAI,CAAC65B,oBAAoB,EAAE;IAC7B,CAAC,CAAC;EACJ;EAEArH,WAAWA,CAAA;IACT,IAAI,IAAI,CAACsH,YAAY,EAAE;MACrB,IAAI,CAACA,YAAY,CAACpH,WAAW,EAAE;;EAEnC;EAEMmH,oBAAoBA,CAAA;IAAA,IAAA5mB,KAAA;IAAA,OAAAC,4JAAA;MACxBD,KAAI,CAAChM,SAAS,GAAG,IAAI;MACrB,MAAMyK,aAAa,GAAGuB,KAAI,CAACrT,eAAe,CAAC+R,mBAAmB,EAAE;MAChE,MAAM6O,QAAQ,GAAG9O,aAAa,CAACsoB,WAAW,EAAE,CAACnoB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAE1D,IAAI;QACF,KAAK,MAAMvM,MAAM,IAAI2N,KAAI,CAAC3D,OAAO,EAAE;UACjC,MAAMwE,QAAQ,GAAG,GAAG0M,QAAQ,IAAIlb,MAAM,CAACpC,IAAI,EAAE;UAC7C,IAAI;YACF;YACA,MAAMshB,OAAO,SAASvR,KAAI,CAACrT,eAAe,CAAC+gB,2BAA2B,CAAC7M,QAAQ,CAAC;YAChF,IAAI0Q,OAAO,IAAIA,OAAO,CAACjc,MAAM,GAAG,CAAC,EAAE;cACjC0K,KAAI,CAAC0mB,gBAAgB,CAACr0B,MAAM,CAACpC,IAAI,CAAC,GAAGshB,OAAO;;YAG9C;YACA,MAAMvR,KAAI,CAACgnB,mBAAmB,CAAC30B,MAAM,CAACpC,IAAI,EAAEsd,QAAQ,CAAC;WACtD,CAAC,OAAO/N,KAAK,EAAE;YACd+C,OAAO,CAAC/C,KAAK,CAAC,+BAA+BnN,MAAM,CAACpC,IAAI,GAAG,EAAEuP,KAAK,CAAC;;;OAGxE,SAAS;QACRQ,KAAI,CAAChM,SAAS,GAAG,KAAK;;IACvB;EACH;EAEA;EACMgzB,mBAAmBA,CAAC3lB,UAAkB,EAAEhH,KAAa;IAAA,IAAA8G,MAAA;IAAA,OAAAlB,4JAAA;MACzD,IAAI;QACF,MAAM0mB,eAAe,SAASxlB,MAAI,CAACxU,eAAe,CAACs6B,kBAAkB,CAAC5lB,UAAU,EAAEhH,KAAK,CAAC;QACxF8G,MAAI,CAACwlB,eAAe,CAACtlB,UAAU,CAAC,GAAGslB,eAAe;OACnD,CAAC,OAAOnnB,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,yCAAyC6B,UAAU,GAAG,EAAE7B,KAAK,CAAC;QAC5E2B,MAAI,CAACwlB,eAAe,CAACtlB,UAAU,CAAC,GAAG,EAAE;;IACtC;EACH;EAEA;EACAglB,gBAAgBA,CAAChlB,UAAkB;IACjC,OAAO,IAAI,CAACqlB,gBAAgB,CAACrlB,UAAU,CAAC,IAAI,EAAE;EAChD;EAEA;EACA6lB,gBAAgBA,CAAC7lB,UAAkB;IACjC,OAAO,IAAI,CAACqlB,gBAAgB,CAACrlB,UAAU,CAAC,IAAI,IAAI,CAACqlB,gBAAgB,CAACrlB,UAAU,CAAC,CAAC/L,MAAM,GAAG,CAAC;EAC1F;EAEA;EACA4wB,qBAAqBA,CAAC7kB,UAAkB;IACtC,MAAMkQ,OAAO,GAAG,IAAI,CAAC8U,gBAAgB,CAAChlB,UAAU,CAAC;IACjD,MAAMtL,KAAK,GAAGwb,OAAO,CAACzM,MAAM,CAAC,CAACoK,GAAG,EAAEzJ,CAAC,KAAKyJ,GAAG,IAAIzJ,CAAC,CAACrN,aAAa,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IACzE,OAAOrC,KAAK,CAACrF,OAAO,CAAC,CAAC,CAAC;EACzB;EAEAy1B,oBAAoBA,CAAC9kB,UAAkB;IACrC,MAAMkQ,OAAO,GAAG,IAAI,CAAC8U,gBAAgB,CAAChlB,UAAU,CAAC;IACjD,MAAMtL,KAAK,GAAGwb,OAAO,CAACzM,MAAM,CAAC,CAACoK,GAAG,EAAEzJ,CAAC,KAAKyJ,GAAG,IAAIzJ,CAAC,CAACpN,YAAY,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IACxE,OAAOtC,KAAK,CAACrF,OAAO,CAAC,CAAC,CAAC;EACzB;EAEA01B,sBAAsBA,CAAC/kB,UAAkB;IACvC,MAAMkQ,OAAO,GAAG,IAAI,CAAC8U,gBAAgB,CAAChlB,UAAU,CAAC;IACjD,OAAOkQ,OAAO,CAACzM,MAAM,CAAC,CAACoK,GAAG,EAAEzJ,CAAC,KAAKyJ,GAAG,IAAIzJ,CAAC,CAACnN,aAAa,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACpE;EAEA;EACA0tB,gBAAgBA,CAAC3kB,UAAkB;IACjC,MAAMkQ,OAAO,GAAG,IAAI,CAAC8U,gBAAgB,CAAChlB,UAAU,CAAC;IACjD,OAAOkQ,OAAO,CAACjc,MAAM,GAAG,CAAC,GAAGic,OAAO,CAAC,CAAC,CAAC,CAACxgB,cAAc,IAAI,KAAK,GAAG,KAAK;EACxE;EAEA;EACAk1B,kBAAkBA,CAAC5kB,UAAkB;IACnC,MAAMkQ,OAAO,GAAG,IAAI,CAAC8U,gBAAgB,CAAChlB,UAAU,CAAC;IACjD,OAAOkQ,OAAO,CAACjc,MAAM,GAAG,CAAC,GAAGic,OAAO,CAAC,CAAC,CAAC,CAAC/gB,oBAAoB,IAAI,EAAE,GAAG,EAAE;EACxE;EAEA;EACM22B,WAAWA,CAAA;IAAA,IAAAjlB,MAAA;IAAA,OAAAjC,4JAAA;MACf,MAAMiC,MAAI,CAAC0kB,oBAAoB,EAAE;IAAC;EACpC;EAEA;EACAH,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACpqB,OAAO,CAACyR,MAAM,CAACzb,MAAM,IAAI,IAAI,CAAC60B,gBAAgB,CAAC70B,MAAM,CAACpC,IAAI,CAAC,CAAC;EAC1E;EAEA;EACAg3B,kBAAkBA,CAAC5lB,UAAkB;IACnC,OAAO,IAAI,CAACslB,eAAe,CAACtlB,UAAU,CAAC,IAAI,EAAE;EAC/C;EAEAilB,kBAAkBA,CAACjlB,UAAkB;IACnC,MAAMuB,MAAM,GAAG,IAAI,CAACqkB,kBAAkB,CAAC5lB,UAAU,CAAC;IAClD,OAAO6D,MAAM,CAAC4J,IAAI,CAAClM,MAAM,CAAC,CAACtN,MAAM,GAAG,CAAC;EACvC;EAEAmwB,qBAAqBA,CAACpkB,UAAkB,EAAE+lB,GAAA,GAAc,CAAC;IACvD,MAAMxkB,MAAM,GAAG,IAAI,CAACqkB,kBAAkB,CAAC5lB,UAAU,CAAC;IAClD,OAAO6D,MAAM,CAACC,OAAO,CAACvC,MAAM,CAAC,CAC1BwC,GAAG,CAAC,CAAC,CAACjU,MAAM,EAAE4E,KAAK,CAAC,MAAM;MAAE5E,MAAM;MAAE4E;IAAK,CAAE,CAAC,CAAC,CAC7CyY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC3Y,KAAK,GAAG0Y,CAAC,CAAC1Y,KAAK,CAAC,CACjC9D,KAAK,CAAC,CAAC,EAAEm1B,GAAG,CAAC;EAClB;EAEA9B,sBAAsBA,CAACjkB,UAAkB,EAAElQ,MAAc;IACvD,MAAMyR,MAAM,GAAG,IAAI,CAACqkB,kBAAkB,CAAC5lB,UAAU,CAAC;IAClD,OAAOuB,MAAM,CAACzR,MAAM,CAAC,IAAI,CAAC;EAC5B;EAEA00B,oBAAoBA,CAACxkB,UAAkB;IACrC,MAAMuB,MAAM,GAAG,IAAI,CAACqkB,kBAAkB,CAAC5lB,UAAU,CAAC;IAClD,MAAMgmB,OAAO,GAAGniB,MAAM,CAAC+J,MAAM,CAACrM,MAAM,CAAC;IACrC,OAAOykB,OAAO,CAAC/xB,MAAM,GAAG,CAAC,GAAGua,IAAI,CAACC,GAAG,CAAC,GAAGuX,OAAO,CAAC,GAAG,CAAC;EACtD;EAEA;EACAzB,yBAAyBA,CAACvkB,UAAkB;IAC1C,MAAMuB,MAAM,GAAG,IAAI,CAACqkB,kBAAkB,CAAC5lB,UAAU,CAAC;IAClD,MAAMgmB,OAAO,GAAGniB,MAAM,CAAC+J,MAAM,CAACrM,MAAM,CAAC;IACrC,IAAIykB,OAAO,CAAC/xB,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;IAClC,MAAMgyB,IAAI,GAAGD,OAAO,CAACviB,MAAM,CAAC,CAACyiB,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC;IACvD,OAAOF,IAAI,GAAGD,OAAO,CAAC/xB,MAAM;EAC9B;EAEA;EACAqwB,0BAA0BA,CAACtkB,UAAkB;IAC3C,OAAO6D,MAAM,CAAC4J,IAAI,CAAC,IAAI,CAACmY,kBAAkB,CAAC5lB,UAAU,CAAC,CAAC,CAAC/L,MAAM;EAChE;EAEA;EACAowB,UAAUA,CAAA;IACR,MAAM1zB,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,KAAK,IAAIwd,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC5Bxd,OAAO,CAACqc,IAAI,CAACmB,CAAC,CAACpe,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;;IAE7C,OAAOW,OAAO;EAChB;EAEA;EACAozB,kBAAkBA,CAAC/jB,UAAkB,EAAElQ,MAAc;IACnD,MAAMwe,KAAK,GAAG,IAAI,CAAC2V,sBAAsB,CAACjkB,UAAU,EAAElQ,MAAM,CAAC;IAC7D,MAAMye,QAAQ,GAAG,IAAI,CAACiW,oBAAoB,CAACxkB,UAAU,CAAC;IAEtD,IAAIsO,KAAK,KAAK,CAAC,IAAIC,QAAQ,KAAK,CAAC,EAAE,OAAO,EAAE;IAE5C,MAAMG,UAAU,GAAGJ,KAAK,GAAGC,QAAQ;IACnC,IAAIG,UAAU,GAAG,GAAG,EAAE,OAAO,iBAAiB;IAC9C,IAAIA,UAAU,GAAG,GAAG,EAAE,OAAO,kBAAkB;IAC/C,IAAIA,UAAU,GAAG,GAAG,EAAE,OAAO,iBAAiB;IAC9C,OAAO,mBAAmB;EAC5B;;;uBAjLWlhB,uBAAuB,EAAAzB,+DAAA,CAAAE,uEAAA;IAAA;EAAA;;;YAAvBuB,uBAAuB;MAAAnB,SAAA;MAAA+5B,UAAA;MAAAC,QAAA,GAAAt6B,iEAAA;MAAAO,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA85B,iCAAA55B,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVhCZ,4DAFJ,aAAqC,aACP,SACtB;UACFA,uDAAA,WAAgC;UAChCA,oDAAA,iDACF;UAAAA,0DAAA,EAAK;UAEHA,4DADF,aAA6B,gBACyD;UAAxDA,wDAAA,mBAAAy6B,yDAAA;YAAA,OAAS55B,GAAA,CAAA24B,oBAAA,EAAsB;UAAA,EAAC;UAC1Dx5B,uDAAA,WAA2D;UAC3DA,oDAAA,mBACF;UAEJA,0DAFI,EAAS,EACL,EACF;UASNA,wDAPA,IAAA06B,sCAAA,iBAA+C,KAAAC,uCAAA,iBAOW;UAkN5D36B,0DAAA,EAAM;;;UAhO6DA,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UACtD5G,uDAAA,EAA2B;UAA3BA,yDAAA,YAAAa,GAAA,CAAA+F,SAAA,CAA2B;UAM9B5G,uDAAA,GAAe;UAAfA,wDAAA,SAAAa,GAAA,CAAA+F,SAAA,CAAe;UAOL5G,uDAAA,EAAgB;UAAhBA,wDAAA,UAAAa,GAAA,CAAA+F,SAAA,CAAgB;;;qBDb9CxF,yDAAY,EAAAhB,oDAAA,EAAAA,iDAAA;MAAA06B,MAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IGgCd96B,4DAAA,eAAgD;IAC9CA,oDAAA,GACF;IAAAA,0DAAA,EAAO;;;;IADLA,uDAAA,EACF;IADEA,gEAAA,sBAAA0uB,MAAA,CAAAqM,cAAA,OACF;;;;;IACA/6B,4DAAA,eAAgD;IAC9CA,oDAAA,gBACF;IAAAA,0DAAA,EAAO;;;;;IANPA,4DAFJ,cAA+C,cACf,aACpB;IAAAA,oDAAA,GAAyB;IAAAA,0DAAA,EAAS;IAACA,oDAAA,UAC3C;IAGAA,wDAHA,IAAAg7B,8CAAA,mBAAgD,IAAAC,8CAAA,mBAGA;IAIpDj7B,0DADE,EAAM,EACF;;;;IARMA,uDAAA,GAAyB;IAAzBA,+DAAA,CAAA0uB,MAAA,CAAAwM,aAAA,CAAAl4B,KAAA,CAAyB;IAC1BhD,uDAAA,GAAkB;IAAlBA,wDAAA,SAAA0uB,MAAA,CAAA3nB,YAAA,CAAkB;IAGlB/G,uDAAA,EAAmB;IAAnBA,wDAAA,UAAA0uB,MAAA,CAAA3nB,YAAA,CAAmB;;;;;IAc1B/G,4DADF,cAA+C,QAC1C;IAAAA,oDAAA,GAAiB;IACtBA,0DADsB,EAAI,EACpB;;;;IADDA,uDAAA,GAAiB;IAAjBA,+DAAA,CAAA0uB,MAAA,CAAAyM,WAAA,CAAiB;;;;;IAehBn7B,4DADF,cAAoD,eAC9B;IAAAA,oDAAA,uBAAgB;IAAAA,0DAAA,EAAO;IAC3CA,4DAAA,eAA6B;IAAAA,oDAAA,GAA0B;IACzDA,0DADyD,EAAO,EAC1D;;;;IADyBA,uDAAA,GAA0B;IAA1BA,+DAAA,CAAA0uB,MAAA,CAAA0M,oBAAA,CAA0B;;;;;IAVzDp7B,4DAFJ,cAA2E,cAC3C,cACH;IACvBA,uDAAA,YAA4B;IAC5BA,4DAAA,WAAM;IAAAA,oDAAA,GAAoB;IAC5BA,0DAD4B,EAAO,EAC7B;IAEJA,4DADF,cAA0B,eACJ;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAO;IACtCA,4DAAA,eAAmB;IAAAA,oDAAA,IAAwB;IAC7CA,0DAD6C,EAAO,EAC9C;IACNA,wDAAA,KAAAq7B,oDAAA,kBAAoD;IAKxDr7B,0DADE,EAAM,EACF;;;;IAXMA,uDAAA,GAAoB;IAApBA,+DAAA,CAAA0uB,MAAA,CAAA4M,cAAA,CAAoB;IAIPt7B,uDAAA,GAAwB;IAAxBA,+DAAA,CAAA0uB,MAAA,CAAA6M,kBAAA,CAAwB;IAErBv7B,uDAAA,EAA0B;IAA1BA,wDAAA,SAAA0uB,MAAA,CAAA0M,oBAAA,CAA0B;;;;;IAQtDp7B,4DAAA,cAAwF;IACtFA,uDAAA,YAA2C;IAC3CA,4DAAA,WAAM;IAAAA,oDAAA,oCAAwB;IAChCA,0DADgC,EAAO,EACjC;;;;;IA/BNA,4DADF,cAA6D,cACjC;IACxBA,uDAAA,YAA2B;IAC3BA,4DAAA,aAAQ;IAAAA,oDAAA,GAAkB;IAC5BA,0DAD4B,EAAS,EAC/B;IAyBNA,wDAvBA,IAAAw7B,6CAAA,kBAA+C,IAAAC,6CAAA,mBAK4B,IAAAC,6CAAA,kBAkBa;IAI1F17B,0DAAA,EAAM;;;;IA9BMA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAA0uB,MAAA,CAAAiN,YAAA,CAAkB;IAGA37B,uDAAA,EAAiB;IAAjBA,wDAAA,SAAA0uB,MAAA,CAAAyM,WAAA,CAAiB;IAKvCn7B,uDAAA,EAA0C;IAA1CA,wDAAA,SAAA0uB,MAAA,CAAA4M,cAAA,IAAA5M,MAAA,CAAA6M,kBAAA,CAA0C;IAkB1Cv7B,uDAAA,EAAwD;IAAxDA,wDAAA,UAAA0uB,MAAA,CAAA4M,cAAA,IAAA5M,MAAA,CAAAyM,WAAA,CAAAr7B,QAAA,YAAwD;;;;;;IAlD9DE,4DAFJ,cAA+D,cACzB,iBAG2B;IADrDA,wDAAA,mBAAA47B,0DAAA;MAAA57B,2DAAA,CAAA8pB,GAAA;MAAA,MAAA4E,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAAmN,eAAA,EAAiB;IAAA,EAAC;IAEjC77B,oDAAA,cACF;IACFA,0DADE,EAAS,EACL;IAgBNA,wDAbA,IAAA87B,uCAAA,kBAA+C,IAAAC,uCAAA,kBAac;IAkC/D/7B,0DAAA,EAAM;;;;IArDMA,uDAAA,GAAoD;IAApDA,wDAAA,aAAA0uB,MAAA,CAAA9nB,SAAA,IAAA8nB,MAAA,CAAAsN,SAAA,KAAAtN,MAAA,CAAA3nB,YAAA,CAAoD;IAMpC/G,uDAAA,GAAmB;IAAnBA,wDAAA,SAAA0uB,MAAA,CAAAwM,aAAA,CAAmB;IAavCl7B,uDAAA,EAAe;IAAfA,wDAAA,SAAA0uB,MAAA,CAAAsN,SAAA,CAAe;;;;;;IAkDfh8B,4DAFF,eACuB,cACG;IAAAA,oDAAA,GAA6C;IAAAA,0DAAA,EAAM;IAC3EA,4DAAA,cAAuB;IAAAA,oDAAA,GAA6B;IAAAA,0DAAA,EAAM;IAExDA,4DADF,cAAwB,kBACsD;IAAjDA,wDAAA,mBAAAi8B,gEAAA;MAAA,MAAAC,IAAA,GAAAl8B,2DAAA,CAAAkvB,GAAA,EAAArS,KAAA;MAAA,MAAA6R,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAAyN,YAAA,CAAAD,IAAA,CAAe;IAAA,EAAC;IAClDl8B,oDAAA,eACF;IAEJA,0DAFI,EAAS,EACL,EACF;;;;;IAPoBA,uDAAA,GAA6C;IAA7CA,+DAAA,CAAAo8B,OAAA,CAAAr4B,MAAA,CAAAC,QAAA,GAAAC,QAAA,SAA6C;IAC9CjE,uDAAA,GAA6B;IAA7BA,gEAAA,OAAAo8B,OAAA,CAAAt0B,KAAA,CAAAxE,OAAA,QAA6B;IAEGtD,uDAAA,GAAsB;IAAtBA,wDAAA,aAAA0uB,MAAA,CAAA9nB,SAAA,CAAsB;;;;;;IAX/E5G,4DALN,cAA+D,cAGlC,cACC,cACA;IAAAA,oDAAA,QAAC;IAAAA,0DAAA,EAAM;IAC/BA,4DAAA,cAAuB;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAM;IAClCA,uDAAA,cAA8B;IAChCA,0DAAA,EAAM;IAENA,4DAAA,eAAwB;IACtBA,wDAAA,IAAAq8B,uCAAA,mBACuB;IAU3Br8B,0DADE,EAAM,EACF;IAKFA,4DAFJ,gBAA6B,gBACH,gBACG;IAAAA,oDAAA,sBAAc;IAAAA,0DAAA,EAAM;IAC7CA,4DAAA,gBAA0B;IAAAA,oDAAA,IAA6B;IAE3DA,0DAF2D,EAAM,EACzD,EACF;IAIJA,4DADF,gBAAgC,mBAGc;IADpCA,wDAAA,mBAAAs8B,2DAAA;MAAAt8B,2DAAA,CAAA6uB,GAAA;MAAA,MAAAH,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAAmN,eAAA,EAAiB;IAAA,EAAC;IAEjC77B,oDAAA,+BACF;IACFA,0DADE,EAAS,EACL;IAIJA,4DADF,gBAA6B,mBAGiD;IADpEA,wDAAA,mBAAAu8B,2DAAA;MAAAv8B,2DAAA,CAAA6uB,GAAA;MAAA,MAAAH,MAAA,GAAA1uB,2DAAA;MAAA,OAAAA,yDAAA,CAAS0uB,MAAA,CAAA8N,WAAA,EAAa;IAAA,EAAC;IAE7Bx8B,oDAAA,eACF;IAEJA,0DAFI,EAAS,EACL,EACF;;;;IAtCsBA,uDAAA,GAAoB;IAAeA,wDAAnC,YAAA0uB,MAAA,CAAA+N,eAAA,CAAoB,iBAAA/N,MAAA,CAAAgO,YAAA,CAAoC;IAiBpD18B,uDAAA,GAA6B;IAA7BA,gEAAA,OAAA0uB,MAAA,CAAAiO,QAAA,GAAAr5B,OAAA,QAA6B;IAQjDtD,uDAAA,GAAmC;IAAnCA,wDAAA,aAAA0uB,MAAA,CAAA9nB,SAAA,IAAA8nB,MAAA,CAAAsN,SAAA,CAAmC;IASnCh8B,uDAAA,GAAmE;IAAnEA,wDAAA,aAAA0uB,MAAA,CAAA+N,eAAA,CAAAv0B,MAAA,UAAAwmB,MAAA,CAAA9nB,SAAA,IAAA8nB,MAAA,CAAAsN,SAAA,CAAmE;;;;;IAqCvEh8B,4DADF,eAA4E,eAC/C;IAAAA,oDAAA,0BAAc;IAAAA,0DAAA,EAAM;IAC/CA,4DAAA,eAAyC;IAAAA,oDAAA,GAAmE;IAC9GA,0DAD8G,EAAM,EAC9G;;;;IADqCA,uDAAA,GAAmE;IAAnEA,+DAAA,CAAA0uB,MAAA,CAAAkO,sBAAA,gBAAA54B,QAAA,GAAAC,QAAA,SAAmE;;;;;IAG5GjE,4DADF,eAAoE,eACvC;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAM;IAC9CA,4DAAA,eAAkC;IAAAA,oDAAA,GAAgD;IACpFA,0DADoF,EAAM,EACpF;;;;IAD8BA,uDAAA,GAAgD;IAAhDA,gEAAA,OAAA0uB,MAAA,CAAAmO,mBAAA,gBAAAv5B,OAAA,QAAgD;;;;;IAQhFtD,4DADF,eAA2F,gBACpE;IAAAA,oDAAA,GAA+C;IAAAA,0DAAA,EAAO;IAC3EA,4DAAA,gBAAoB;IAAAA,oDAAA,GAA+B;IACrDA,0DADqD,EAAO,EACtD;;;;IAFiBA,uDAAA,GAA+C;IAA/CA,+DAAA,CAAA88B,SAAA,CAAA/4B,MAAA,CAAAC,QAAA,GAAAC,QAAA,SAA+C;IAChDjE,uDAAA,GAA+B;IAA/BA,gEAAA,OAAA88B,SAAA,CAAAn0B,KAAA,CAAArF,OAAA,QAA+B;;;;;IAHvDtD,4DAAA,eAAgF;IAC9EA,wDAAA,IAAA+8B,8CAAA,mBAA2F;IAI7F/8B,0DAAA,EAAM;;;;IAJoBA,uDAAA,EAAqC;IAArCA,wDAAA,YAAA0uB,MAAA,CAAAsO,wBAAA,gBAAqC;;;;;IAM7Dh9B,4DADF,eAA6E,QACxE;IAAAA,oDAAA,oDAAwC;IAC7CA,0DAD6C,EAAI,EAC3C;;;;;IAvBJA,4DAHN,eAAsD,eACxB,eACA,eACG;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAM;IAC9CA,4DAAA,eAA2B;IAAAA,oDAAA,GAAkD;IAC/EA,0DAD+E,EAAM,EAC/E;IAKNA,wDAJA,IAAAi9B,uCAAA,mBAA4E,IAAAC,uCAAA,mBAIR;IAItEl9B,0DAAA,EAAM;IAGJA,4DADF,eAA8B,UACxB;IAAAA,oDAAA,6BAAgB;IAAAA,0DAAA,EAAK;IAOzBA,wDANA,KAAAm9B,wCAAA,mBAAgF,KAAAC,wCAAA,mBAMH;IAIjFp9B,0DADE,EAAM,EACF;;;;IAxB2BA,uDAAA,GAAkD;IAAlDA,gEAAA,OAAA0uB,MAAA,CAAA2O,qBAAA,gBAAA/5B,OAAA,QAAkD;IAEpDtD,uDAAA,EAA+C;IAA/CA,wDAAA,SAAA0uB,MAAA,CAAAkO,sBAAA,yBAA+C;IAI/C58B,uDAAA,EAAuC;IAAvCA,wDAAA,SAAA0uB,MAAA,CAAAmO,mBAAA,oBAAuC;IAQ5D78B,uDAAA,GAAmD;IAAnDA,wDAAA,SAAA0uB,MAAA,CAAAsO,wBAAA,gBAAA90B,MAAA,KAAmD;IAMnDlI,uDAAA,EAAqD;IAArDA,wDAAA,SAAA0uB,MAAA,CAAAsO,wBAAA,gBAAA90B,MAAA,OAAqD;;;;;IAczDlI,4DADF,eAA2E,eAC9C;IAAAA,oDAAA,0BAAc;IAAAA,0DAAA,EAAM;IAC/CA,4DAAA,eAAyC;IAAAA,oDAAA,GAAkE;IAC7GA,0DAD6G,EAAM,EAC7G;;;;IADqCA,uDAAA,GAAkE;IAAlEA,+DAAA,CAAA0uB,MAAA,CAAAkO,sBAAA,UAAA54B,QAAA,GAAAC,QAAA,SAAkE;;;;;IAG3GjE,4DADF,eAAmE,eACtC;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAM;IAC9CA,4DAAA,eAAkC;IAAAA,oDAAA,GAA+C;IACnFA,0DADmF,EAAM,EACnF;;;;IAD8BA,uDAAA,GAA+C;IAA/CA,gEAAA,OAAA0uB,MAAA,CAAAmO,mBAAA,UAAAv5B,OAAA,QAA+C;;;;;IAQ/EtD,4DADF,eAA0F,gBACnE;IAAAA,oDAAA,GAA+C;IAAAA,0DAAA,EAAO;IAC3EA,4DAAA,gBAAoB;IAAAA,oDAAA,GAA+B;IACrDA,0DADqD,EAAO,EACtD;;;;IAFiBA,uDAAA,GAA+C;IAA/CA,+DAAA,CAAAs9B,SAAA,CAAAv5B,MAAA,CAAAC,QAAA,GAAAC,QAAA,SAA+C;IAChDjE,uDAAA,GAA+B;IAA/BA,gEAAA,OAAAs9B,SAAA,CAAA30B,KAAA,CAAArF,OAAA,QAA+B;;;;;IAHvDtD,4DAAA,eAA+E;IAC7EA,wDAAA,IAAAu9B,8CAAA,mBAA0F;IAI5Fv9B,0DAAA,EAAM;;;;IAJoBA,uDAAA,EAAoC;IAApCA,wDAAA,YAAA0uB,MAAA,CAAAsO,wBAAA,UAAoC;;;;;IAM5Dh9B,4DADF,eAA4E,QACvE;IAAAA,oDAAA,oDAAwC;IAC7CA,0DAD6C,EAAI,EAC3C;;;;;IAvBJA,4DAHN,eAAqD,eACvB,eACA,eACG;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAM;IAC9CA,4DAAA,eAA2B;IAAAA,oDAAA,GAAiD;IAC9EA,0DAD8E,EAAM,EAC9E;IAKNA,wDAJA,IAAAw9B,uCAAA,mBAA2E,IAAAC,uCAAA,mBAIR;IAIrEz9B,0DAAA,EAAM;IAGJA,4DADF,eAA8B,UACxB;IAAAA,oDAAA,6BAAgB;IAAAA,0DAAA,EAAK;IAOzBA,wDANA,KAAA09B,wCAAA,mBAA+E,KAAAC,wCAAA,mBAMH;IAIhF39B,0DADE,EAAM,EACF;;;;IAxB2BA,uDAAA,GAAiD;IAAjDA,gEAAA,OAAA0uB,MAAA,CAAA2O,qBAAA,UAAA/5B,OAAA,QAAiD;IAEnDtD,uDAAA,EAA8C;IAA9CA,wDAAA,SAAA0uB,MAAA,CAAAkO,sBAAA,mBAA8C;IAI9C58B,uDAAA,EAAsC;IAAtCA,wDAAA,SAAA0uB,MAAA,CAAAmO,mBAAA,cAAsC;IAQ3D78B,uDAAA,GAAkD;IAAlDA,wDAAA,SAAA0uB,MAAA,CAAAsO,wBAAA,UAAA90B,MAAA,KAAkD;IAMlDlI,uDAAA,EAAoD;IAApDA,wDAAA,SAAA0uB,MAAA,CAAAsO,wBAAA,UAAA90B,MAAA,OAAoD;;;;;IAcxDlI,4DADF,eAA2E,eAC9C;IAAAA,oDAAA,0BAAc;IAAAA,0DAAA,EAAM;IAC/CA,4DAAA,eAAyC;IAAAA,oDAAA,GAAkE;IAC7GA,0DAD6G,EAAM,EAC7G;;;;IADqCA,uDAAA,GAAkE;IAAlEA,+DAAA,CAAA0uB,MAAA,CAAAkO,sBAAA,UAAA54B,QAAA,GAAAC,QAAA,SAAkE;;;;;IAG3GjE,4DADF,eAAmE,eACtC;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAM;IAC9CA,4DAAA,eAAkC;IAAAA,oDAAA,GAA+C;IACnFA,0DADmF,EAAM,EACnF;;;;IAD8BA,uDAAA,GAA+C;IAA/CA,gEAAA,OAAA0uB,MAAA,CAAAmO,mBAAA,UAAAv5B,OAAA,QAA+C;;;;;IAQ/EtD,4DADF,eAA0F,gBACnE;IAAAA,oDAAA,GAA+C;IAAAA,0DAAA,EAAO;IAC3EA,4DAAA,gBAAoB;IAAAA,oDAAA,GAA+B;IACrDA,0DADqD,EAAO,EACtD;;;;IAFiBA,uDAAA,GAA+C;IAA/CA,+DAAA,CAAA49B,SAAA,CAAA75B,MAAA,CAAAC,QAAA,GAAAC,QAAA,SAA+C;IAChDjE,uDAAA,GAA+B;IAA/BA,gEAAA,OAAA49B,SAAA,CAAAj1B,KAAA,CAAArF,OAAA,QAA+B;;;;;IAHvDtD,4DAAA,eAA+E;IAC7EA,wDAAA,IAAA69B,8CAAA,mBAA0F;IAI5F79B,0DAAA,EAAM;;;;IAJoBA,uDAAA,EAAoC;IAApCA,wDAAA,YAAA0uB,MAAA,CAAAsO,wBAAA,UAAoC;;;;;IAM5Dh9B,4DADF,eAA4E,QACvE;IAAAA,oDAAA,oDAAwC;IAC7CA,0DAD6C,EAAI,EAC3C;;;;;IAvBJA,4DAHN,eAAqD,eACvB,eACA,eACG;IAAAA,oDAAA,oBAAa;IAAAA,0DAAA,EAAM;IAC9CA,4DAAA,eAA2B;IAAAA,oDAAA,GAAiD;IAC9EA,0DAD8E,EAAM,EAC9E;IAKNA,wDAJA,IAAA89B,uCAAA,mBAA2E,IAAAC,uCAAA,mBAIR;IAIrE/9B,0DAAA,EAAM;IAGJA,4DADF,eAA8B,UACxB;IAAAA,oDAAA,6BAAgB;IAAAA,0DAAA,EAAK;IAOzBA,wDANA,KAAAg+B,wCAAA,mBAA+E,KAAAC,wCAAA,mBAMH;IAIhFj+B,0DADE,EAAM,EACF;;;;IAxB2BA,uDAAA,GAAiD;IAAjDA,gEAAA,OAAA0uB,MAAA,CAAA2O,qBAAA,UAAA/5B,OAAA,QAAiD;IAEnDtD,uDAAA,EAA8C;IAA9CA,wDAAA,SAAA0uB,MAAA,CAAAkO,sBAAA,mBAA8C;IAI9C58B,uDAAA,EAAsC;IAAtCA,wDAAA,SAAA0uB,MAAA,CAAAmO,mBAAA,cAAsC;IAQ3D78B,uDAAA,GAAkD;IAAlDA,wDAAA,SAAA0uB,MAAA,CAAAsO,wBAAA,UAAA90B,MAAA,KAAkD;IAMlDlI,uDAAA,EAAoD;IAApDA,wDAAA,SAAA0uB,MAAA,CAAAsO,wBAAA,UAAA90B,MAAA,OAAoD;;;AD3O9D,MAAO5G,iBAAiB;EA8D5BhC,YACUC,eAAgC,EAChC2+B,aAA4B,EAC5BtvB,mBAAwC,EACzCC,YAA0B,EACzBrP,MAAc,EACduP,GAAsB;IALtB,KAAAxP,eAAe,GAAfA,eAAe;IACf,KAAA2+B,aAAa,GAAbA,aAAa;IACb,KAAAtvB,mBAAmB,GAAnBA,mBAAmB;IACpB,KAAAC,YAAY,GAAZA,YAAY;IACX,KAAArP,MAAM,GAANA,MAAM;IACN,KAAAuP,GAAG,GAAHA,GAAG;IAnEb,KAAAC,WAAW,GAAQ,IAAI;IACvB,KAAAksB,aAAa,GAA0B,IAAI;IAC3C,KAAAH,cAAc,GAAW,EAAE;IAC3B,KAAAh0B,YAAY,GAAY,KAAK;IAE7B,KAAAo3B,cAAc,GAAkB,IAAI;IACpC,KAAAC,cAAc,GAAkB,IAAI;IACpC,KAAA3B,eAAe,GAAwC,EAAE;IAEzD;IACA,KAAA14B,MAAM,GAAkB,IAAI;IAC5B,KAAA+D,KAAK,GAAkB,IAAI;IAE3B,KAAAu2B,UAAU,GAAW,EAAE;IACvB,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAnvB,WAAW,GAAuC,EAAE;IACpD,KAAAovB,aAAa,GAAW,EAAE;IAC1B,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAA53B,SAAS,GAAY,KAAK;IAE1B;IACA,KAAA63B,WAAW,GAAW,EAAE;IACxB,KAAAC,UAAU,GAAY,KAAK;IAC3B,KAAA1C,SAAS,GAAY,KAAK;IAC1B,KAAA2C,YAAY,GAAuB,QAAQ;IAE3C;IACA,KAAAC,eAAe,GAAY,KAAK;IAChC,KAAAC,eAAe,GAAY,KAAK;IAChC,KAAAC,gBAAgB,GAAY,KAAK;IACjC,KAAAC,UAAU,GAAkB,IAAI;IAChC,KAAAC,UAAU,GAAkB,IAAI;IAChC,KAAAC,gBAAgB,GAAW,EAAE;IAC7B,KAAAC,gBAAgB,GAAW,EAAE;IAE7B;IACA,KAAAC,aAAa,GAAW,CAAC,CAAC,CAAC;IAC3B,KAAAC,SAAS,GAAW,IAAI,CAAC,CAAC;IAC1B,KAAAC,aAAa,GAAW,CAAC,CAAC,CAAC;IAE3B;IACA,KAAAC,SAAS,GAAiC,QAAQ;IAClD,KAAA3rB,UAAU,GAA2B,EAAE;IAEvC;IACA,KAAA4rB,mBAAmB,GAAW,EAAE;IAEhC;IACA,KAAA5D,YAAY,GAAW,EAAE;IACzB,KAAAR,WAAW,GAAW,EAAE;IACxB,KAAAG,cAAc,GAAW,EAAE;IAC3B,KAAAC,kBAAkB,GAAW,EAAE;IAC/B,KAAAH,oBAAoB,GAAW,EAAE;IAOzB,KAAAoE,iBAAiB,GAAY,KAAK;EAStC;EAEJ//B,QAAQA,CAAA;IAEN,IAAI,CAACggC,gBAAgB,GAAG,IAAI,CAAClgC,eAAe,CAACG,YAAY,CAACC,SAAS,CAACC,IAAI,IAAG;MACzE,IAAI,CAACoP,WAAW,GAAGpP,IAAI;MACvBuV,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACpG,WAAW,EAAE9L,QAAQ,CAAC;MACrE,IAAI,CAACtD,IAAI,IAAIA,IAAI,CAACiQ,IAAI,KAAK,UAAU,EAAE;QACrC,IAAI,CAACrQ,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,CAAC;IAEF,IAAI,CAAC2/B,mBAAmB,EAAE;IAC1B,IAAI,CAACC,qBAAqB,EAAE;IAC5B,IAAI,CAACC,kBAAkB,EAAE;IAEzB;IACA,IAAI,CAACC,iBAAiB,GAAGC,WAAW,CAAC,MAAK;MACxC,IAAI,CAACH,qBAAqB,EAAE;IAC9B,CAAC,EAAE,GAAG,CAAC;IAEP;IACA,IAAI,CAACI,oBAAoB,GAAGD,WAAW,CAAC,MAAK;MAC3C,IAAI,CAACF,kBAAkB,EAAE;IAC3B,CAAC,EAAE,IAAI,CAAC;EAEV;EAEAzN,WAAWA,CAAA;IAET;IACA,IAAI,IAAI,CAACsN,gBAAgB,EAAE;MACzB,IAAI,CAACA,gBAAgB,CAACpN,WAAW,EAAE;;IAErC,IAAI,IAAI,CAAC2N,oBAAoB,EAAE;MAC7BC,aAAa,CAAC,IAAI,CAACD,oBAAoB,CAAC;;IAE1C,IAAI,IAAI,CAACH,iBAAiB,EAAE;MAC1BI,aAAa,CAAC,IAAI,CAACJ,iBAAiB,CAAC;;IAEvC,IAAI,IAAI,CAACE,oBAAoB,EAAE;MAC7BE,aAAa,CAAC,IAAI,CAACF,oBAAoB,CAAC;;EAG5C;EAEQH,kBAAkBA,CAAA;IACxB,MAAM9c,YAAY,GAAG,IAAI,CAACvjB,eAAe,CAAC2gC,kBAAkB,EAAE;IAC9D,MAAMC,aAAa,GAAG,IAAI,CAAC5gC,eAAe,CAAC6gC,qBAAqB,CAACtd,YAAY,CAAC;IAE9E,MAAMud,KAAK,GAAGF,aAAa,CAAC3uB,KAAK,CAAC,GAAG,CAAC;IACtC,IAAI,CAAC+tB,mBAAmB,GAAG,GAAGc,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACxD;EAEcX,mBAAmBA,CAAA;IAAA,IAAA9sB,KAAA;IAAA,OAAAC,4JAAA;MAC/B,IAAI;QACFD,KAAI,CAAChM,SAAS,GAAG,IAAI;QACrBgM,KAAI,CAAChE,mBAAmB,CAACqoB,WAAW,CAAC,mBAAmB,CAAC;QAEzD;QACA,MAAMrkB,KAAI,CAACsrB,aAAa,CAACoC,sBAAsB,EAAE;QAEjD,MAAM1tB,KAAI,CAAC2tB,gBAAgB,EAAE;QAC7B3tB,KAAI,CAAC4tB,aAAa,EAAE;QAEpB;QACA,IAAI5tB,KAAI,CAACotB,oBAAoB,EAAE;UAC7BC,aAAa,CAACrtB,KAAI,CAACotB,oBAAoB,CAAC;;QAG1C;QACAptB,KAAI,CAACotB,oBAAoB,GAAGF,WAAW,cAAAjtB,4JAAA,CAAC,aAAW;UACjD,MAAMD,KAAI,CAAC2tB,gBAAgB,EAAE;QAC/B,CAAC,GAAE,GAAG,CAAC;QAEP;QACA,MAAM3tB,KAAI,CAAC6tB,iBAAiB,EAAE;OAE/B,CAAC,OAAOruB,KAAK,EAAE;QACdQ,KAAI,CAAChE,mBAAmB,CAACqE,SAAS,CAAC,2BAA2B,CAAC;OAChE,SAAS;QACRL,KAAI,CAAChM,SAAS,GAAG,KAAK;QACtBgM,KAAI,CAAChE,mBAAmB,CAACyoB,WAAW,EAAE;;IACvC;EACH;EAEAmJ,aAAaA,CAAA;IACX;IACA,MAAME,WAAW,GAAG,IAAI,CAACnhC,eAAe,CAAC+R,mBAAmB,EAAE;IAC9D;IACA,MAAMqvB,SAAS,GAAG,IAAI,CAACphC,eAAe,CAACqhC,0BAA0B,CAACF,WAAW,CAAC;IAC9E,IAAI,CAAClC,UAAU,GAAGmC,SAAS,CAACnvB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C;EAGAqvB,kBAAkBA,CAAA;IAChB,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACtC,UAAU,EAAE;MACpB,IAAI,CAACD,aAAa,GAAG,IAAI,CAACF,UAAU;MACpC;;IAGF,MAAM0C,aAAa,GAAG,IAAI/vB,IAAI,CAAC,IAAI,CAACwtB,UAAU,CAAC;IAC/C,IAAI,CAACD,aAAa,GAAG,IAAI,CAACF,UAAU,CAAC3d,MAAM,CAAC5J,IAAI,IAAG;MACjD,MAAMkqB,QAAQ,GAAG,IAAIhwB,IAAI,CAAC8F,IAAI,CAAC7J,KAAK,CAAC;MACrC,OAAO+zB,QAAQ,CAACC,YAAY,EAAE,KAAKF,aAAa,CAACE,YAAY,EAAE;IACjE,CAAC,CAAC;EACJ;EAEMV,gBAAgBA,CAAA;IAAA,IAAAxsB,MAAA;IAAA,OAAAlB,4JAAA;MACpB,IAAI;QAEF;QACA,MAAMkB,MAAI,CAACmqB,aAAa,CAACoC,sBAAsB,EAAE;QAEjDvsB,MAAI,CAACmnB,aAAa,GAAGnnB,MAAI,CAACmqB,aAAa,CAACgD,gBAAgB,EAAE;QAG1D,IAAIntB,MAAI,CAACmnB,aAAa,EAAE;UACtBnnB,MAAI,CAAChN,YAAY,GAAGgN,MAAI,CAACmqB,aAAa,CAACn3B,YAAY,CAACgN,MAAI,CAACmnB,aAAa,CAAC;UACvEnnB,MAAI,CAACgnB,cAAc,GAAGhnB,MAAI,CAACmqB,aAAa,CAACiD,iBAAiB,CAACptB,MAAI,CAACmnB,aAAa,CAAC;SAE/E,MAAM;UACLnnB,MAAI,CAAChN,YAAY,GAAG,KAAK;UACzBgN,MAAI,CAACgnB,cAAc,GAAG,EAAE;;OAE3B,CAAC,OAAO3oB,KAAK,EAAE,C;IACf;EACH;EAEAgvB,SAASA,CAAA;IACP,IAAI,IAAI,CAACr9B,MAAM,IAAI,IAAI,CAAC+D,KAAK,IAC3B,IAAI,CAAC/D,MAAM,IAAI,CAAC,IAAI,IAAI,CAACA,MAAM,IAAI,EAAE,EAAE;MAEvC;MACA,MAAMs9B,aAAa,GAAG,IAAI,CAAC5E,eAAe,CAAC6E,SAAS,CAAChf,CAAC,IAAIA,CAAC,CAACve,MAAM,KAAK,IAAI,CAACA,MAAM,CAAC;MACnF,IAAIs9B,aAAa,IAAI,CAAC,EAAE;QACtB;QACA,IAAI,CAAC5E,eAAe,CAAC4E,aAAa,CAAC,CAACv5B,KAAK,IAAI,IAAI,CAACA,KAAM;OACzD,MAAM;QACL;QACA,IAAI,CAAC20B,eAAe,CAACxb,IAAI,CAAC;UACxBld,MAAM,EAAE,IAAI,CAACA,MAAM;UACnB+D,KAAK,EAAE,IAAI,CAACA;SACb,CAAC;;MAGJ,IAAI,CAAC/D,MAAM,GAAG,IAAI;MAClB,IAAI,CAAC+D,KAAK,GAAG,IAAI;MACjB,IAAI,CAAC22B,WAAW,GAAG,EAAE;MACrB,IAAI,CAACE,YAAY,GAAG,QAAQ;MAC5B,IAAI,CAAC/vB,mBAAmB,CAAC8L,WAAW,CAAC,iBAAiB,EAAE,yCAAyC,CAAC;;EAEtG;EAEAyhB,YAAYA,CAACtf,KAAa;IAExB,IAAI,CAAC4f,eAAe,CAAC8E,MAAM,CAAC1kB,KAAK,EAAE,CAAC,CAAC;IAErC,IAAI,CAAC9N,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;EAC5B;EAEA;EACQstB,qBAAqBA,CAACh5B,WAAmB,EAAEtF,QAAgB;IACjE;IACA,MAAM4f,YAAY,GAAG,IAAI,CAACvjB,eAAe,CAAC+R,mBAAmB,EAAE;IAC/D;IACA,MAAMqvB,SAAS,GAAG,IAAI,CAACphC,eAAe,CAACqhC,0BAA0B,CAAC9d,YAAY,CAAC;IAC/E;IACA,MAAM2e,QAAQ,GAAGd,SAAS,CAACnvB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,MAAM,CAACkwB,QAAQ,EAAE3lB,KAAK,EAAEC,GAAG,CAAC,GAAGylB,QAAQ,CAACjwB,KAAK,CAAC,GAAG,CAAC;IAClD,MAAMsK,IAAI,GAAG4lB,QAAQ,CAAC78B,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEjC,MAAM88B,YAAY,GAAGz+B,QAAQ,CAAC0+B,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACt1B,WAAW,EAAE,CAACu1B,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/E,MAAMC,oBAAoB,GAAGt5B,WAAW,CAACxE,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAEpEkR,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,GAAGusB,YAAY,QAAQ7lB,IAAI,GAAGC,KAAK,GAAGC,GAAG,IAAI8lB,oBAAoB,EAAE,CAAC;IAC7F,OAAO,GAAGH,YAAY,QAAQ7lB,IAAI,GAAGC,KAAK,GAAGC,GAAG,IAAI8lB,oBAAoB,EAAE;EAC5E;EAEAnF,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,eAAe,CAAC/kB,MAAM,CAAC,CAAC/O,KAAK,EAAEo5B,IAAI,KAAKp5B,KAAK,GAAGo5B,IAAI,CAACj6B,KAAK,EAAE,CAAC,CAAC;EAC5E;EAEM00B,WAAWA,CAAA;IAAA,IAAA1nB,MAAA;IAAA,OAAAjC,4JAAA;MACf,IAAI,CAACiC,MAAI,CAAComB,aAAa,IAAI,CAACpmB,MAAI,CAAC9F,WAAW,IAAI8F,MAAI,CAAC2nB,eAAe,CAACv0B,MAAM,KAAK,CAAC,EAAE;QACjF;;MAGF;MACA,IAAI,CAAC4M,MAAI,CAAC9F,WAAW,CAAC9L,QAAQ,EAAE;QAC9B,MAAM4R,MAAI,CAAClG,mBAAmB,CAACqE,SAAS,CACtC,8EAA8E,CAC/E;QACD;;MAGF;MACA,MAAMiI,SAAS,SAASpG,MAAI,CAAClG,mBAAmB,CAACuM,gBAAgB,CAC/D,iBAAiB,EACjB,0BAA0BrG,MAAI,CAAC6nB,QAAQ,EAAE,CAACr5B,OAAO,CAAC,CAAC,CAAC,GAAG,CACxD;MAED,IAAI,CAAC4X,SAAS,EAAE;MAEhBpG,MAAI,CAAClO,SAAS,GAAG,IAAI;MACrBkO,MAAI,CAAClG,mBAAmB,CAACqoB,WAAW,CAAC,qBAAqB,CAAC;MAE3D,IAAI;QACF;QAEA,MAAMzuB,WAAW,SAASsM,MAAI,CAACvV,eAAe,CAACyiC,kBAAkB,CAACltB,MAAI,CAAC9F,WAAW,CAAC9L,QAAQ,CAAC;QAE5F;QACA,MAAMqF,YAAY,GAAGuM,MAAI,CAAC0sB,qBAAqB,CAACh5B,WAAW,EAAEsM,MAAI,CAAC9F,WAAW,CAAC9L,QAAQ,CAAC;QAEvF,MAAM4T,IAAI,GAAQ;UAChBkE,MAAM,EAAElG,MAAI,CAAC9F,WAAW,CAACgE,EAAE;UAC3B9P,QAAQ,EAAE4R,MAAI,CAAC9F,WAAW,CAAC9L,QAAQ;UACnC+B,MAAM,EAAE6P,MAAI,CAAComB,aAAa,CAACr4B,IAAI;UAC/BoK,KAAK,EAAE6H,MAAI,CAACvV,eAAe,CAAC+R,mBAAmB,EAAE;UACjD3I,KAAK,EAAEmM,MAAI,CAAC6nB,QAAQ,EAAE;UACtBp0B,YAAY,EAAEA,YAAY;UAC1BC,WAAW,EAAEA;SACd;QAGD,MAAM4N,MAAM,SAAStB,MAAI,CAACvV,eAAe,CAAC0iC,UAAU,CAACnrB,IAAI,CAAC;QAE1D;QACA,MAAM3H,WAAW,GAAiB,EAAE;QACpC,KAAK,MAAM4yB,IAAI,IAAIjtB,MAAI,CAAC2nB,eAAe,EAAE;UACvC,MAAMyF,QAAQ,SAASptB,MAAI,CAACvV,eAAe,CAAC4iC,gBAAgB,CAAC;YAC3D/rB,MAAM;YACNrS,MAAM,EAAEg+B,IAAI,CAACh+B,MAAM;YACnB+D,KAAK,EAAEi6B,IAAI,CAACj6B;WACb,CAAC;UACFqH,WAAW,CAAC8R,IAAI,CAAC;YACfjO,EAAE,EAAEkvB,QAAQ;YACZ9rB,MAAM;YACNrS,MAAM,EAAEg+B,IAAI,CAACh+B,MAAM;YACnB+D,KAAK,EAAEi6B,IAAI,CAACj6B;WACb,CAAC;;QAGJ;QACA,MAAMs6B,UAAU,GAAG;UAAE,GAAGtrB,IAAI;UAAE9D,EAAE,EAAEoD;QAAM,CAAE;QAE1C;QACA,IAAIjH,WAAW,CAACjH,MAAM,KAAK,CAAC,EAAE;UAC5B;UACA,KAAK,MAAM65B,IAAI,IAAIjtB,MAAI,CAAC2nB,eAAe,EAAE;YACvCttB,WAAW,CAAC8R,IAAI,CAAC;cACfjO,EAAE,EAAE,QAAQhC,IAAI,CAACkC,GAAG,EAAE,IAAI6uB,IAAI,CAACh+B,MAAM,EAAE;cACvCqS,MAAM;cACNrS,MAAM,EAAEg+B,IAAI,CAACh+B,MAAM;cACnB+D,KAAK,EAAEi6B,IAAI,CAACj6B;aACb,CAAC;;;QAINgN,MAAI,CAACjG,YAAY,CAAC2M,sBAAsB,CAAC4mB,UAAU,EAAEjzB,WAAW,CAAC;QAEjE;QACAqI,UAAU,cAAA3E,4JAAA,CAAC,aAAW;UACpB;UACAiC,MAAI,CAAC2nB,eAAe,GAAG,EAAE;UAEzB;UACA3nB,MAAI,CAAC8pB,eAAe,GAAG,KAAK;UAC5B9pB,MAAI,CAAC+pB,eAAe,GAAG,KAAK;UAC5B/pB,MAAI,CAACgqB,gBAAgB,GAAG,KAAK;UAC7BhqB,MAAI,CAACmqB,gBAAgB,GAAG,EAAE;UAC1BnqB,MAAI,CAACoqB,gBAAgB,GAAG,EAAE;UAC1BpqB,MAAI,CAACiqB,UAAU,GAAG,IAAI;UACtBjqB,MAAI,CAACkqB,UAAU,GAAG,IAAI;UAEtBlqB,MAAI,CAAC/F,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;UAE1B;UACA,MAAMY,MAAI,CAAC2rB,iBAAiB,EAAE;UAE9B3rB,MAAI,CAAC/F,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;QAC5B,CAAC,GAAE,GAAG,CAAC,CAAC,CAAC;QAETY,MAAI,CAAClG,mBAAmB,CAAC8L,WAAW,CAAC,wCAAwC,CAAC;OAC/E,CAAC,OAAOtI,KAAK,EAAE;QACd0C,MAAI,CAAClG,mBAAmB,CAACqE,SAAS,CAAC,4BAA4B,CAAC;OACjE,SAAS;QACR6B,MAAI,CAAClO,SAAS,GAAG,KAAK;QACtBkO,MAAI,CAAClG,mBAAmB,CAACyoB,WAAW,EAAE;;IACvC;EACH;EAIAlhB,cAAcA,CAACC,MAAc;IAC3B,OAAO,IAAI,CAACjH,WAAW,CAACiH,MAAM,CAAC,IAAI,EAAE;EACvC;EAEMqF,MAAMA,CAAA;IAAA,IAAA1G,MAAA;IAAA,OAAAlC,4JAAA;MACV,MAAMqI,SAAS,SAASnG,MAAI,CAACnG,mBAAmB,CAACuM,gBAAgB,CAC/D,eAAe,EACf,uCAAuC,CACxC;MAED,IAAID,SAAS,EAAE;QACbnG,MAAI,CAACnG,mBAAmB,CAACqoB,WAAW,CAAC,oBAAoB,CAAC;QAC1D,IAAI;UACF,MAAMliB,MAAI,CAACxV,eAAe,CAACkc,MAAM,EAAE;UACnC1G,MAAI,CAACvV,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;SACjC,CAAC,OAAOqS,KAAK,EAAE;UACd2C,MAAI,CAACnG,mBAAmB,CAACqE,SAAS,CAAC,wBAAwB,CAAC;SAC7D,SAAS;UACR8B,MAAI,CAACnG,mBAAmB,CAACyoB,WAAW,EAAE;;;IAEzC;EACH;EAEA;EACAgL,WAAWA,CAACC,GAAW;IACrB,IAAI,IAAI,CAACtG,SAAS,EAAE;MAClB,IAAI,CAACptB,mBAAmB,CAACqE,SAAS,CAAC,mBAAmB,EAAE,wEAAwE,CAAC;MACjI;;IAGF,IAAI,IAAI,CAACwrB,WAAW,CAACv2B,MAAM,GAAG,CAAC,EAAE;MAAE;MACjC,IAAI,CAACu2B,WAAW,IAAI6D,GAAG,CAACt+B,QAAQ,EAAE;;EAEtC;EAEAu+B,WAAWA,CAAA;IACT,IAAI,CAAC9D,WAAW,GAAG,EAAE;EACvB;EAEA+D,YAAYA,CAAA;IACV,IAAI,CAAC,IAAI,CAAC/D,WAAW,EAAE;IAEvB,IAAI,IAAI,CAACE,YAAY,KAAK,QAAQ,EAAE;MAClC,MAAM56B,MAAM,GAAGuP,QAAQ,CAAC,IAAI,CAACmrB,WAAW,CAAC;MACzC,IAAI16B,MAAM,IAAI,CAAC,IAAIA,MAAM,IAAI,EAAE,EAAE;QAC/B,IAAI,CAACA,MAAM,GAAGA,MAAM;QACpB,IAAI,CAAC06B,WAAW,GAAG,EAAE;QACrB,IAAI,CAACE,YAAY,GAAG,OAAO;QAC3B,IAAI,CAAC/vB,mBAAmB,CAACoL,QAAQ,CAAC,qBAAqB,EAAE,kCAAkC,CAAC;OAC7F,MAAM;QACL,IAAI,CAACpL,mBAAmB,CAACqE,SAAS,CAAC,iBAAiB,EAAE,oCAAoC,CAAC;;KAE9F,MAAM;MACL,MAAMnL,KAAK,GAAG2Y,UAAU,CAAC,IAAI,CAACge,WAAW,CAAC;MAC1C,IAAI32B,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI,GAAG,EAAE;QAC7B,IAAI,CAACA,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACs5B,SAAS,EAAE;QAChB,IAAI,CAAC3C,WAAW,GAAG,EAAE;QACrB,IAAI,CAACE,YAAY,GAAG,QAAQ;OAC7B,MAAM;QACL,IAAI,CAAC/vB,mBAAmB,CAACqE,SAAS,CAAC,gBAAgB,EAAE,sDAAsD,CAAC;;;EAGlH;EAEA;EACA4oB,eAAeA,CAAA;IAEb,IAAI,IAAI,CAAC2D,iBAAiB,IAAI,IAAI,CAACxD,SAAS,EAAE;MAC5C,IAAI,IAAI,CAACA,SAAS,EAAE;QAClB,IAAI,CAACptB,mBAAmB,CAACqE,SAAS,CAAC,mBAAmB,EAAE,wEAAwE,CAAC;;MAEnI;;IAGF,IAAI,CAACusB,iBAAiB,GAAG,IAAI;IAE7B;IACA,IAAI,CAACiD,cAAc,EAAE;IAErB;IACA,IAAI,CAAC7D,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACK,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAAClwB,GAAG,CAACmF,aAAa,EAAE;IACxB,IAAI,CAACsrB,iBAAiB,GAAG,KAAK;EAChC;EAEAiD,cAAcA,CAAA;IACZ,IAAI,CAAC7D,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAACG,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACH,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACQ,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACzwB,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;EAC5B;EAEA;EACAwuB,gBAAgBA,CAACJ,GAAW;IAC1B,IAAI,IAAI,CAACrD,gBAAgB,CAAC/2B,MAAM,GAAG,CAAC,EAAE;MACpC,IAAI,CAAC+2B,gBAAgB,IAAIqD,GAAG,CAACt+B,QAAQ,EAAE;MACvC,IAAI,CAAC+K,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;;EAE9B;EAEAyuB,gBAAgBA,CAAA;IACd,IAAI,CAAC1D,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAAClwB,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;EAC5B;EAEA0uB,iBAAiBA,CAAA;IAEf;IACA,IAAI,CAAC,IAAI,CAAC3D,gBAAgB,IAAI,IAAI,CAACO,iBAAiB,EAAE;MACpD,IAAI,CAAC,IAAI,CAACP,gBAAgB,EAAE;QAC1B,IAAI,CAACrwB,mBAAmB,CAACqE,SAAS,CAAC,kBAAkB,EAAE,yBAAyB,CAAC;;MAEnF;;IAGF,IAAI,CAACusB,iBAAiB,GAAG,IAAI;IAE7B;IACA,IAAIqD,eAAe,GAAG,IAAI,CAAC5D,gBAAgB,CAACh7B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC5D,MAAMF,MAAM,GAAGuP,QAAQ,CAACuvB,eAAe,CAAC;IAExC,IAAI9+B,MAAM,IAAI,CAAC,IAAIA,MAAM,IAAI,EAAE,EAAE;MAC/B,IAAI,CAACg7B,UAAU,GAAGh7B,MAAM;MAExB;MACA,IAAI,CAAC66B,eAAe,GAAG,KAAK;MAC5B,IAAI,CAACC,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACK,gBAAgB,GAAG,EAAE;MAC1B,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC,CAAC;MACxB,IAAI,CAACK,iBAAiB,GAAG,KAAK;MAC9B,IAAI,CAACzwB,GAAG,CAACmF,aAAa,EAAE;KAEzB,MAAM;MACL,IAAI,CAACsrB,iBAAiB,GAAG,KAAK;MAC9B,IAAI,CAAC5wB,mBAAmB,CAACqE,SAAS,CAAC,iBAAiB,EAAE,oCAAoC,CAAC;;EAE/F;EAEA;EACA6vB,cAAcA,CAAA;IACZ,IAAI,IAAI,CAAC3D,aAAa,GAAG,IAAI,CAACC,SAAS,EAAE;MACvC,IAAI,CAACD,aAAa,IAAI,IAAI,CAACE,aAAa;MACxC,IAAI,CAACtwB,GAAG,CAACmF,aAAa,EAAE;;EAE5B;EAEA6uB,cAAcA,CAAA;IACZ,IAAI,IAAI,CAAC5D,aAAa,GAAG,CAAC,EAAE;MAAE;MAC5B,IAAI,CAACA,aAAa,IAAI,IAAI,CAACE,aAAa;MACxC,IAAI,CAACtwB,GAAG,CAACmF,aAAa,EAAE;;EAE5B;EAEA8uB,WAAWA,CAAA;IACT,IAAI,CAAC7D,aAAa,GAAG,CAAC,CAAC,CAAC;IACxB,IAAI,CAACpwB,GAAG,CAACmF,aAAa,EAAE;EAC1B;EAEA+uB,mBAAmBA,CAAA;IACjB,IAAI,IAAI,CAACzD,iBAAiB,EAAE;MAC1B;;IAGF,IAAI,CAACA,iBAAiB,GAAG,IAAI;IAE7B,IAAI,IAAI,CAACL,aAAa,IAAI,CAAC,IAAI,IAAI,CAACA,aAAa,IAAI,IAAI,CAACC,SAAS,EAAE;MACnE,IAAI,CAACJ,UAAU,GAAG,IAAI,CAACG,aAAa;MAEpC;MACA,IAAI,CAACN,eAAe,GAAG,KAAK;MAC5B,IAAI,CAACC,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACU,iBAAiB,GAAG,KAAK;MAC9B,IAAI,CAACzwB,GAAG,CAACmF,aAAa,EAAE;KACzB,MAAM;MACL,IAAI,CAACsrB,iBAAiB,GAAG,KAAK;MAC9B,IAAI,CAAC5wB,mBAAmB,CAACqE,SAAS,CAAC,gBAAgB,EAAE,qCAAqC,IAAI,CAACmsB,SAAS,EAAE,CAAC;;EAE/G;EAEA;EACA8D,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACnE,UAAU,KAAK,IAAI,IAAI,IAAI,CAACC,UAAU,KAAK,IAAI,EAAE;MACxD;MACA,MAAMqC,aAAa,GAAG,IAAI,CAAC5E,eAAe,CAAC6E,SAAS,CAAChf,CAAC,IAAIA,CAAC,CAACve,MAAM,KAAK,IAAI,CAACg7B,UAAU,CAAC;MACvF,IAAIsC,aAAa,IAAI,CAAC,EAAE;QACtB;QACA,IAAI,CAAC5E,eAAe,CAAC4E,aAAa,CAAC,CAACv5B,KAAK,IAAI,IAAI,CAACk3B,UAAW;OAC9D,MAAM;QACL;QACA,IAAI,CAACvC,eAAe,CAACxb,IAAI,CAAC;UACxBld,MAAM,EAAE,IAAI,CAACg7B,UAAU;UACvBj3B,KAAK,EAAE,IAAI,CAACk3B;SACb,CAAC;;MAGJ;MACA,IAAI,CAACyD,cAAc,EAAE;MACrB,IAAI,CAAC1zB,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;;EAE9B;EAEAivB,eAAeA,CAAA;IACb,IAAI,CAACV,cAAc,EAAE;EACvB;EAEA;EACQ9C,qBAAqBA,CAAA;IAC3B;IACA,MAAMyD,WAAW,GAAG,IAAI,CAAC7jC,eAAe,CAACqhC,0BAA0B,CACjE,IAAI,CAACrhC,eAAe,CAAC+R,mBAAmB,EAAE,CAC3C;IACD,MAAM,GAAG+xB,QAAQ,CAAC,GAAGD,WAAW,CAAC5xB,KAAK,CAAC,GAAG,CAAC;IAC3C,MAAM,CAAC8xB,OAAO,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC7xB,KAAK,CAAC,GAAG,CAAC;IAChD,MAAMgyB,mBAAmB,GAAGlwB,QAAQ,CAACgwB,OAAO,EAAE,EAAE,CAAC,GAAG,EAAE,GAAGhwB,QAAQ,CAACiwB,SAAS,EAAE,EAAE,CAAC;IAEhF;IACA,MAAMt0B,OAAO,GAAG,IAAI,CAACivB,aAAa,CAACuF,aAAa,EAAE;IAClD,IAAIC,gBAAgB,GAAG,KAAK;IAC5B,IAAIC,YAAY,GAAQ,IAAI;IAE5B;IACA,KAAK,MAAM1+B,MAAM,IAAIgK,OAAO,EAAE;MAC5B,MAAM,CAAC20B,QAAQ,EAAEC,UAAU,CAAC,GAAG5+B,MAAM,CAAC6+B,QAAQ,CAACtyB,KAAK,CAAC,GAAG,CAAC,CAACwG,GAAG,CAAC+rB,MAAM,CAAC;MACrE,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGh/B,MAAM,CAACmC,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC,CAACwG,GAAG,CAAC+rB,MAAM,CAAC;MAExE,MAAMG,iBAAiB,GAAGN,QAAQ,GAAG,EAAE,GAAGC,UAAU;MACpD,MAAMM,kBAAkB,GAAGH,SAAS,GAAG,EAAE,GAAGC,WAAW;MAEvD;MACA,IAAIh/B,MAAM,CAACpC,IAAI,KAAK,OAAO,EAAE;QAC3B,IAAIshC,kBAAkB,GAAGD,iBAAiB,EAAE;UAC1C;UACA,IAAIV,mBAAmB,IAAIU,iBAAiB,IAAIV,mBAAmB,IAAIW,kBAAkB,EAAE;YACzFT,gBAAgB,GAAG,IAAI;YACvBC,YAAY,GAAG1+B,MAAM;YACrB;;SAEH,MAAM;UACL;UACA,IAAIu+B,mBAAmB,IAAIU,iBAAiB,IAAIV,mBAAmB,IAAIW,kBAAkB,EAAE;YACzFT,gBAAgB,GAAG,IAAI;YACvBC,YAAY,GAAG1+B,MAAM;YACrB;;;OAGL,MAAM;QACL;QACA,IAAIu+B,mBAAmB,IAAIU,iBAAiB,IAAIV,mBAAmB,IAAIW,kBAAkB,EAAE;UACzFT,gBAAgB,GAAG,IAAI;UACvBC,YAAY,GAAG1+B,MAAM;UACrB;;;;IAKN;IACA,IAAI,CAACy+B,gBAAgB,EAAE;MACrB;MACA,MAAMU,UAAU,GAAG,IAAI,CAACC,oBAAoB,CAACb,mBAAmB,CAAC;MAEjE,IAAIY,UAAU,EAAE;QACd,IAAI,CAACzI,YAAY,GAAG,iBAAiB;QACrC,IAAI,CAACR,WAAW,GAAG,qBAAqBiJ,UAAU,CAACphC,KAAK,eAAeohC,UAAU,CAACN,QAAQ,EAAE;QAC5F,IAAI,CAACxI,cAAc,GAAG8I,UAAU,CAACphC,KAAK;QACtC,IAAI,CAACu4B,kBAAkB,GAAG6I,UAAU,CAACN,QAAQ;QAC7C,IAAI,CAAC1I,oBAAoB,GAAG,IAAI,CAACkJ,yBAAyB,CAACd,mBAAmB,EAAEY,UAAU,CAAC;QAE3F;QACA,IAAI,CAAC,IAAI,CAACpI,SAAS,EAAE;UACnB,IAAI,CAACptB,mBAAmB,CAAC21B,WAAW,CAAC,IAAI,CAAC5I,YAAY,EAAE,IAAI,CAACR,WAAW,CAAC;;OAE5E,MAAM;QACL,IAAI,CAACQ,YAAY,GAAG,iBAAiB;QACrC,IAAI,CAACR,WAAW,GAAG,4CAA4C;QAC/D,IAAI,CAACG,cAAc,GAAG,EAAE;QACxB,IAAI,CAACC,kBAAkB,GAAG,EAAE;QAC5B,IAAI,CAACH,oBAAoB,GAAG,EAAE;QAE9B,IAAI,CAAC,IAAI,CAACY,SAAS,EAAE;UACnB,IAAI,CAACptB,mBAAmB,CAAC21B,WAAW,CAAC,IAAI,CAAC5I,YAAY,EAAE,IAAI,CAACR,WAAW,CAAC;;;MAI7E,IAAI,CAACa,SAAS,GAAG,IAAI;MACrB,IAAI,CAACjtB,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;MAC1B;;IAGF;IACA,IAAI,CAAC,IAAI,CAACgnB,aAAa,IAAI,CAACyI,YAAY,EAAE;MACxC,IAAI,CAAC3H,SAAS,GAAG,KAAK;MACtB;;IAGF;IACA,MAAM,CAACwI,YAAY,EAAEC,cAAc,CAAC,GAAGd,YAAY,CAACv8B,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC;IACxE,MAAMkzB,iBAAiB,GAAGpxB,QAAQ,CAACkxB,YAAY,EAAE,EAAE,CAAC,GAAG,EAAE,GAAGlxB,QAAQ,CAACmxB,cAAc,EAAE,EAAE,CAAC;IAExF;IACA,IAAIE,WAAW,GAAGD,iBAAiB,GAAGlB,mBAAmB;IACzD,IAAIG,YAAY,CAAC9gC,IAAI,KAAK,OAAO,IAAI6hC,iBAAiB,GAAGlB,mBAAmB,EAAE;MAC5E;MACAmB,WAAW,GAAI,EAAE,GAAG,EAAE,GAAGD,iBAAiB,GAAIlB,mBAAmB;;IAGnE;IACA,IAAImB,WAAW,IAAI,CAAC,IAAIA,WAAW,IAAI,CAAC,EAAE;MACxC,IAAI,CAAC,IAAI,CAAC3I,SAAS,EAAE;QACnB,IAAI2I,WAAW,IAAI,CAAC,EAAE;UACpB,IAAI,CAAChJ,YAAY,GAAG,gBAAgB;UACpC,IAAI,CAACR,WAAW,GAAG,8DAA8D;UACjF,IAAI,CAACvsB,mBAAmB,CAAC21B,WAAW,CAAC,IAAI,CAAC5I,YAAY,EAAE,IAAI,CAACR,WAAW,CAAC;SAC1E,MAAM;UACL,IAAI,CAACQ,YAAY,GAAG,mBAAmB;UACvC,IAAI,CAACR,WAAW,GAAG,UAAUwJ,WAAW,6CAA6C;UACrF,IAAI,CAAC/1B,mBAAmB,CAAC21B,WAAW,CAAC,IAAI,CAAC5I,YAAY,EAAE,IAAI,CAACR,WAAW,CAAC;;QAE3E,IAAI,CAACG,cAAc,GAAG,EAAE;QACxB,IAAI,CAACC,kBAAkB,GAAG,EAAE;QAC5B,IAAI,CAACH,oBAAoB,GAAG,EAAE;;MAEhC,IAAI,CAACY,SAAS,GAAG,IAAI;KACtB,MAAM;MACL;MACA,IAAI,IAAI,CAACA,SAAS,EAAE;QAClB,IAAI,CAACL,YAAY,GAAG,EAAE;QACtB,IAAI,CAACR,WAAW,GAAG,EAAE;QACrB,IAAI,CAACG,cAAc,GAAG,EAAE;QACxB,IAAI,CAACC,kBAAkB,GAAG,EAAE;QAC5B,IAAI,CAACH,oBAAoB,GAAG,EAAE;;MAEhC,IAAI,CAACY,SAAS,GAAG,KAAK;;IAGxB,IAAI,CAACjtB,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;EAC5B;EAEA;EACQmwB,oBAAoBA,CAACb,mBAA2B;IACtD,MAAMv0B,OAAO,GAAG,IAAI,CAACivB,aAAa,CAACuF,aAAa,EAAE;IAElD;IACA,KAAK,MAAMx+B,MAAM,IAAIgK,OAAO,EAAE;MAC5B,MAAM,CAAC20B,QAAQ,EAAEC,UAAU,CAAC,GAAG5+B,MAAM,CAAC6+B,QAAQ,CAACtyB,KAAK,CAAC,GAAG,CAAC,CAACwG,GAAG,CAAC+rB,MAAM,CAAC;MACrE,MAAMG,iBAAiB,GAAGN,QAAQ,GAAG,EAAE,GAAGC,UAAU;MAEpD,IAAIK,iBAAiB,GAAGV,mBAAmB,EAAE;QAC3C,OAAOv+B,MAAM;;;IAIjB;IACA,OAAOgK,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI;EAC3B;EAEA;EACQq1B,yBAAyBA,CAACd,mBAA2B,EAAEY,UAAe;IAC5E,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;IAE1B,MAAM,CAACR,QAAQ,EAAEC,UAAU,CAAC,GAAGO,UAAU,CAACN,QAAQ,CAACtyB,KAAK,CAAC,GAAG,CAAC,CAACwG,GAAG,CAAC+rB,MAAM,CAAC;IACzE,MAAMG,iBAAiB,GAAGN,QAAQ,GAAG,EAAE,GAAGC,UAAU;IAEpD,IAAIe,mBAA2B;IAE/B,IAAIV,iBAAiB,GAAGV,mBAAmB,EAAE;MAC3C;MACAoB,mBAAmB,GAAGV,iBAAiB,GAAGV,mBAAmB;KAC9D,MAAM;MACL;MACAoB,mBAAmB,GAAI,EAAE,GAAG,EAAE,GAAIpB,mBAAmB,GAAGU,iBAAiB;;IAG3E,MAAM/wB,KAAK,GAAGsP,IAAI,CAACoiB,KAAK,CAACD,mBAAmB,GAAG,EAAE,CAAC;IAClD,MAAMxxB,OAAO,GAAGwxB,mBAAmB,GAAG,EAAE;IAExC,IAAIzxB,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,GAAGA,KAAK,KAAKC,OAAO,GAAG;KAC/B,MAAM;MACL,OAAO,GAAGA,OAAO,GAAG;;EAExB;EACA;EACA0xB,YAAYA,CAAA;IACV,MAAMzzB,aAAa,GAAG,IAAI,CAAC9R,eAAe,CAAC+R,mBAAmB,EAAE;IAChE,OAAOD,aAAa,CAACuT,kBAAkB,CAAC,OAAO,EAAE;MAC/CmgB,OAAO,EAAE,MAAM;MACfjpB,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE;KACN,CAAC;EACJ;EAEA;EACMV,cAAcA,CAACxE,IAAU;IAAA,IAAArB,MAAA;IAAA,OAAA5C,4JAAA;MAC7B,IAAI;QAEF4C,MAAI,CAAC7G,mBAAmB,CAACqoB,WAAW,CAAC,yBAAyB,CAAC;QAE/D;QACA,MAAMlgB,OAAO,SAAStB,MAAI,CAAClW,eAAe,CAAC4W,cAAc,CAACW,IAAI,CAAC9D,EAAE,CAAC;QAElE,IAAI+D,OAAO,CAAC7O,MAAM,KAAK,CAAC,EAAE;UACxBuN,MAAI,CAAC7G,mBAAmB,CAACqE,SAAS,CAAC,cAAc,EAAE,+EAA+E,CAAC;UACnI;;QAGF;QACAwC,MAAI,CAAC5G,YAAY,CAAC2M,sBAAsB,CAAC1E,IAAI,EAAEC,OAAO,CAAC;QAEvDtB,MAAI,CAAC7G,mBAAmB,CAAC8L,WAAW,CAAC,kBAAkB,EAAE,WAAW5D,IAAI,CAACvO,YAAY,IAAIuO,IAAI,CAAC9D,EAAE,sBAAsB,CAAC;OAExH,CAAC,OAAOZ,KAAK,EAAE;QACdqD,MAAI,CAAC7G,mBAAmB,CAACqE,SAAS,CAAC,sBAAsB,EAAE,8DAA8D,CAAC;OAC3H,SAAS;QACRwC,MAAI,CAAC7G,mBAAmB,CAACyoB,WAAW,EAAE;;IACvC;EACH;EAEA;EACAqF,YAAYA,CAAC7f,KAAa,EAAEklB,IAAS;IACnC,OAAOllB,KAAK;EACd;EAEAmoB,aAAaA,CAACnoB,KAAa,EAAE/F,IAAU;IACrC,OAAOA,IAAI,CAAC9D,EAAE;EAChB;EAEAiyB,eAAeA,CAACpoB,KAAa,EAAE7F,MAAkB;IAC/C,OAAOA,MAAM,CAAChE,EAAE;EAClB;EAEA;EACAkyB,eAAeA,CAAA;IAEb;IACA,IAAI,CAACzC,cAAc,EAAE;IAErB0C,KAAK,CAAC;qBACW,IAAI,CAACvG,eAAe;qBACpB,IAAI,CAACC,eAAe;sBACnB,IAAI,CAACC,gBAAgB;uBACpB,IAAI,CAACU,iBAAiB;eAC9B,IAAI,CAACxD,SAAS;qCACQ,CAAC;EACpC;EAEA;EACAoJ,aAAaA,CAAA;IACX,IAAI,CAACpJ,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;IAChC,MAAMqJ,MAAM,GAAG,IAAI,CAACrJ,SAAS,GAAG,YAAY,GAAG,aAAa;IAC5D,IAAI,CAACptB,mBAAmB,CAACoL,QAAQ,CAAC,oBAAoB,EAAE,UAAUqrB,MAAM,cAAc,CAAC;EACzF;EAGA;EAEM5E,iBAAiBA,CAAA;IAAA,IAAAnqB,MAAA;IAAA,OAAAzD,4JAAA;MACrB,IAAI;QACFsC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;QAC/D;QACA,MAAMnI,KAAK,GAAG,IAAI+D,IAAI,CAACsF,MAAI,CAACkoB,UAAU,GAAG,WAAW,CAAC;QACrD,MAAMt7B,QAAQ,GAAGoT,MAAI,CAACtH,WAAW,EAAE9L,QAAQ,IAAI,YAAY;QAE3D;QACAoT,MAAI,CAAC3C,UAAU,GAAG;UAChB2xB,MAAM,EAAE;YAAEphC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAChGktB,KAAK,EAAE;YAAEthC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAC/FmtB,KAAK,EAAE;YAAEvhC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE;SAC9F;QAED;QACA,MAAMhC,MAAI,CAACovB,uBAAuB,CAACz4B,KAAK,EAAE/J,QAAQ,CAAC;QAEnD;QACAoT,MAAI,CAACgpB,SAAS,GAAGhpB,MAAI,CAACqvB,mBAAmB,EAAE;QAC3CxwB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEkB,MAAI,CAAC3C,UAAU,CAAC;QAC1D2C,MAAI,CAACvH,GAAG,CAACmF,aAAa,EAAE;OACzB,CAAC,OAAO9B,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;;IACzD;EACH;EAGA;EAEcszB,uBAAuBA,CAACz4B,KAAW,EAAE/J,QAAgB;IAAA,IAAAwT,MAAA;IAAA,OAAA7D,4JAAA;MACjE,IAAI;QACFsC,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAEnI,KAAK,EAAE,aAAa,EAAE/J,QAAQ,CAAC;QAChG;QACA,MAAM0iC,UAAU,GAAG,IAAI50B,IAAI,CAAC/D,KAAK,CAAC;QAClC24B,UAAU,CAACvyB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/B,MAAMwyB,QAAQ,GAAG,IAAI70B,IAAI,CAAC/D,KAAK,CAAC;QAChC44B,QAAQ,CAACxyB,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QAElC;QACA,MAAMyyB,QAAQ,GAAGpvB,MAAI,CAACnX,eAAe,CAACqhC,0BAA0B,CAACgF,UAAU,CAAC;QAC5E,MAAMG,MAAM,GAAGrvB,MAAI,CAACnX,eAAe,CAACqhC,0BAA0B,CAACiF,QAAQ,CAAC;QACxE1wB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE0wB,QAAQ,EAAE,IAAI,EAAEC,MAAM,CAAC;QAEtE;QACA,MAAM;UAAExxB,IAAI;UAAEnC;QAAK,CAAE,SAASsE,MAAI,CAACnX,eAAe,CAACymC,MAAM,CACtDrhB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC;;;OAGT,CAAC,CACCC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBijC,GAAG,CAAC,OAAO,EAAEL,QAAQ,CAAC,CACtBM,GAAG,CAAC,OAAO,EAAEL,MAAM,CAAC;QACvB5wB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE;UAAEb,IAAI;UAAEnC;QAAK,CAAE,CAAC;QAE9D,IAAIA,KAAK,EAAE;UACT+C,OAAO,CAAC/C,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD;;QAGF+C,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEb,IAAI,CAAC;QAE5D;QACA,IAAIA,IAAI,EAAErM,MAAM,EAAE;UAChBqM,IAAI,CAACgJ,OAAO,CAAEzG,IAAS,IAAI;YACzB,MAAMuvB,KAAK,GAAGvvB,IAAI,CAAC7R,MAAM,EAAEqhC,WAAW,EAAkC;YACxE,IAAIC,MAAM,GAAiCF,KAAK;YAChD,IAAIvvB,IAAI,CAAC7R,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,IAAIxvB,IAAI,CAAC7R,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,EAAE;cACtFC,MAAM,GAAG,QAAQ;;YAGnB,MAAM98B,MAAM,GAAGiN,MAAI,CAAC/C,UAAU,CAAC4yB,MAAM,CAAC;YACtC,IAAI98B,MAAM,IAAIqN,IAAI,CAAC0vB,YAAY,EAAE;cAC/B1vB,IAAI,CAAC0vB,YAAY,CAACjpB,OAAO,CAAEvG,MAAW,IAAI;gBACxCvN,MAAM,CAACvF,YAAY,IAAI8S,MAAM,CAAClP,KAAK;gBACnC,MAAM2+B,MAAM,GAAGzvB,MAAM,CAACjT,MAAM,CAACC,QAAQ,EAAE;gBACvC,IAAI,CAACyF,MAAM,CAAC87B,eAAe,CAACkB,MAAM,CAAC,EAAE;kBACnCh9B,MAAM,CAAC87B,eAAe,CAACkB,MAAM,CAAC,GAAG,CAAC;;gBAEpCh9B,MAAM,CAAC87B,eAAe,CAACkB,MAAM,CAAC,IAAIzvB,MAAM,CAAClP,KAAK;cAChD,CAAC,CAAC;;UAEN,CAAC,CAAC;;QAGJqN,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEsB,MAAI,CAAC/C,UAAU,CAAC;OAC9D,CAAC,OAAOvB,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;;IAC1D;EACH;EAIA;EACQuzB,mBAAmBA,CAAA;IACzBxwB,OAAO,CAACC,GAAG,CAAC,kFAAkF,CAAC;IAE/F;IACA,MAAMsrB,WAAW,GAAG,IAAI,CAACnhC,eAAe,CAAC+R,mBAAmB,EAAE;IAC9D,MAAM,GAAGo1B,OAAO,CAAC,GAAG,IAAI,CAACnnC,eAAe,CACrCqhC,0BAA0B,CAACF,WAAW,CAAC,CACvClvB,KAAK,CAAC,GAAG,CAAC;IACb,MAAM,CAAC8xB,OAAO,EAAEC,SAAS,CAAC,GAAGmD,OAAO,CAACl1B,KAAK,CAAC,GAAG,CAAC;IAC/C,MAAMm1B,WAAW,GAAGrzB,QAAQ,CAACgwB,OAAO,EAAE,EAAE,CAAC;IACzC,MAAMsD,aAAa,GAAGtzB,QAAQ,CAACiwB,SAAS,EAAE,EAAE,CAAC;IAC7C,MAAMsD,oBAAoB,GAAGF,WAAW,GAAG,EAAE,GAAGC,aAAa;IAE7DzxB,OAAO,CAACC,GAAG,CAAC,4BAA4BkuB,OAAO,CAACr/B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIs/B,SAAS,CAACt/B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;IAEjG;IACA,MAAMgL,OAAO,GAAG,IAAI,CAACivB,aAAa,CAACuF,aAAa,EAAE;IAElD;IACA,KAAK,MAAMx+B,MAAM,IAAIgK,OAAO,EAAE;MAC5B,MAAM,CAAC20B,QAAQ,EAAEC,UAAU,CAAC,GAAG5+B,MAAM,CAAC6+B,QAAQ,CAACtyB,KAAK,CAAC,GAAG,CAAC,CAACwG,GAAG,CAAC+rB,MAAM,CAAC;MACrE,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGh/B,MAAM,CAACmC,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC,CAACwG,GAAG,CAAC+rB,MAAM,CAAC;MAExE,MAAMG,iBAAiB,GAAGN,QAAQ,GAAG,EAAE,GAAGC,UAAU;MACpD,MAAMM,kBAAkB,GAAGH,SAAS,GAAG,EAAE,GAAGC,WAAW;MAEvD9uB,OAAO,CAACC,GAAG,CAAC,sBAAsBnQ,MAAM,CAACpC,IAAI,KAAKoC,MAAM,CAAC6+B,QAAQ,MAAM7+B,MAAM,CAACmC,SAAS,EAAE,CAAC;MAE1F;MACA,IAAInC,MAAM,CAACpC,IAAI,KAAK,OAAO,EAAE;QAC3B;QACA,IAAIshC,kBAAkB,GAAGD,iBAAiB,EAAE;UAC1C;UACA;UACA,IAAI2C,oBAAoB,IAAI3C,iBAAiB,IAAI2C,oBAAoB,IAAI1C,kBAAkB,EAAE;YAC3FhvB,OAAO,CAACC,GAAG,CAAC,qBAAqBnQ,MAAM,CAACpC,IAAI,qBAAqB,CAAC;YAClE,OAAOoC,MAAM,CAACpC,IAAI;;SAErB,MAAM;UACL;UACA,IAAIgkC,oBAAoB,IAAI3C,iBAAiB,IAAI2C,oBAAoB,IAAI1C,kBAAkB,EAAE;YAC3FhvB,OAAO,CAACC,GAAG,CAAC,qBAAqBnQ,MAAM,CAACpC,IAAI,cAAc,CAAC;YAC3D,OAAOoC,MAAM,CAACpC,IAAI;;;OAGvB,MAAM;QACL;QACA,IAAIgkC,oBAAoB,IAAI3C,iBAAiB,IAAI2C,oBAAoB,IAAI1C,kBAAkB,EAAE;UAC3FhvB,OAAO,CAACC,GAAG,CAAC,qBAAqBnQ,MAAM,CAACpC,IAAI,KAAKoC,MAAM,CAAC6+B,QAAQ,MAAM7+B,MAAM,CAACmC,SAAS,GAAG,CAAC;UAC1F,OAAOnC,MAAM,CAACpC,IAAI;;;;IAKxB;IACAsS,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;IAE3E;IACA,MAAMgvB,UAAU,GAAG,IAAI,CAACC,oBAAoB,CAACwC,oBAAoB,CAAC;IAClE,IAAIzC,UAAU,EAAE;MACdjvB,OAAO,CAACC,GAAG,CAAC,mBAAmBgvB,UAAU,CAACvhC,IAAI,eAAeuhC,UAAU,CAACN,QAAQ,EAAE,CAAC;MACnF,OAAOM,UAAU,CAACvhC,IAAI;;IAGxB;IACA,MAAMikC,oBAAoB,GAAG,IAAI,CAACC,uBAAuB,CAACF,oBAAoB,CAAC;IAC/E,IAAIC,oBAAoB,EAAE;MACxB3xB,OAAO,CAACC,GAAG,CAAC,0BAA0B0xB,oBAAoB,CAACjkC,IAAI,EAAE,CAAC;MAClE,OAAOikC,oBAAoB,CAACjkC,IAAI;;IAGlC;IACAsS,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IACzD,OAAO,QAAQ;EACjB;EAEA;EACQ2xB,uBAAuBA,CAACvD,mBAA2B;IACzD,MAAMv0B,OAAO,GAAG,IAAI,CAACivB,aAAa,CAACuF,aAAa,EAAE;IAClD,IAAIqD,oBAAoB,GAAQ,IAAI;IACpC,IAAIE,mBAAmB,GAAGC,QAAQ;IAElC,KAAK,MAAMhiC,MAAM,IAAIgK,OAAO,EAAE;MAC5B,MAAM,CAAC+0B,SAAS,EAAEC,WAAW,CAAC,GAAGh/B,MAAM,CAACmC,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC,CAACwG,GAAG,CAAC+rB,MAAM,CAAC;MACxE,MAAMI,kBAAkB,GAAGH,SAAS,GAAG,EAAE,GAAGC,WAAW;MAEvD,IAAIiD,gBAAwB;MAE5B,IAAIjiC,MAAM,CAACpC,IAAI,KAAK,OAAO,IAAIshC,kBAAkB,GAAGX,mBAAmB,EAAE;QACvE;QACA0D,gBAAgB,GAAG1D,mBAAmB,GAAGW,kBAAkB;OAC5D,MAAM,IAAIA,kBAAkB,GAAGX,mBAAmB,EAAE;QACnD;QACA0D,gBAAgB,GAAG1D,mBAAmB,GAAGW,kBAAkB;OAC5D,MAAM;QACL;QACA+C,gBAAgB,GAAI,EAAE,GAAG,EAAE,IAAK/C,kBAAkB,GAAGX,mBAAmB,CAAC;;MAG3E,IAAI0D,gBAAgB,GAAGF,mBAAmB,IAAIE,gBAAgB,GAAG,CAAC,EAAE;QAClEF,mBAAmB,GAAGE,gBAAgB;QACtCJ,oBAAoB,GAAG7hC,MAAM;;;IAIjC,OAAO6hC,oBAAoB;EAC7B;EAGMK,YAAYA,CAACC,GAAiC;IAAA,IAAAhwB,MAAA;IAAA,OAAAvE,4JAAA;MAClDuE,MAAI,CAACkoB,SAAS,GAAG8H,GAAG;MACpB;MACAhwB,MAAI,CAACrI,GAAG,CAACmF,aAAa,EAAE;IAAC;EAC3B;EAEA;EACA;EAEMmzB,cAAcA,CAACpiC,MAAc;IAAA,OAAA4N,4JAAA;MACjC;MACA;MACA;IAAO;EACT;EAEAwqB,qBAAqBA,CAACp4B,MAAc;IAClC,OAAO,IAAI,CAAC0O,UAAU,CAAC1O,MAAM,CAAC,EAAEf,YAAY,IAAI,CAAC;EACnD;EAEA04B,sBAAsBA,CAAC33B,MAAc;IACnC,OAAO,IAAI,CAAC0O,UAAU,CAAC1O,MAAM,CAAC,EAAEQ,aAAa,IAAI,IAAI;EACvD;EAEAo3B,mBAAmBA,CAAC53B,MAAc;IAChC,OAAO,IAAI,CAAC0O,UAAU,CAAC1O,MAAM,CAAC,EAAEyrB,UAAU,IAAI,CAAC;EACjD;EAEAsM,wBAAwBA,CAAC/3B,MAAc;IACrC,MAAMsgC,eAAe,GAAG,IAAI,CAAC5xB,UAAU,CAAC1O,MAAM,CAAC,EAAEsgC,eAAe,IAAI,EAAE;IACtE,OAAOztB,MAAM,CAAC4J,IAAI,CAAC6jB,eAAe,CAAC,CAACvtB,GAAG,CAACjU,MAAM,KAAK;MACjDA,MAAM,EAAEuP,QAAQ,CAACvP,MAAM,CAAC;MACxB4E,KAAK,EAAE48B,eAAe,CAACxhC,MAAM;KAC9B,CAAC,CAAC,CAACqd,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACtd,MAAM,GAAGud,CAAC,CAACvd,MAAM,CAAC,CAAC,CAAC;EAC3C;EAEQujC,oBAAoBA,CAACriC,MAAc,EAAEQ,aAAqB,EAAE6S,MAAc;IAChF,MAAMitB,eAAe,GAAG,IAAI,CAAC5xB,UAAU,CAAC1O,MAAM,CAAC,EAAEsgC,eAAe,IAAI,EAAE;IACtE,IAAIA,eAAe,CAAC9/B,aAAa,CAAC,EAAE;MAClC,OAAO8/B,eAAe,CAAC9/B,aAAa,CAAC,GAAG6S,MAAM;;IAEhD,OAAO,CAAC;EACV;;;uBAnjCWhX,iBAAiB,EAAAtB,+DAAA,CAAAE,uEAAA,GAAAF,+DAAA,CAAAI,mEAAA,GAAAJ,+DAAA,CAAAspB,+EAAA,GAAAtpB,+DAAA,CAAAwpB,iEAAA,GAAAxpB,+DAAA,CAAA0pB,mDAAA,GAAA1pB,+DAAA,CAAAA,4DAAA;IAAA;EAAA;;;YAAjBsB,iBAAiB;MAAAhB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA8mC,2BAAA5mC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTxBZ,4DAJN,aAA+B,aAEL,aACI,cACC;UAAAA,oDAAA,qBAAc;UAAAA,0DAAA,EAAO;UAC9CA,4DAAA,cAAyB;UAAAA,oDAAA,GAAyB;UACpDA,0DADoD,EAAO,EACrD;UAGJA,4DADF,aAA4B,SACtB;UAAAA,oDAAA,GAA2C;UACjDA,0DADiD,EAAK,EAChD;UAGJA,4DADF,cAA4B,iBAC6D;UACrFA,oDAAA,qCACF;UAAAA,0DAAA,EAAS;UAETA,4DAAA,iBAAgF;UAA1CA,wDAAA,mBAAAynC,oDAAA;YAAA,OAAS5mC,GAAA,CAAA4a,MAAA,EAAQ;UAAA,EAAC;UACtDzb,oDAAA,4BACF;UAEJA,0DAFI,EAAS,EACL,EACF;UAGNA,4DAAA,cAA0B;UA+DxBA,wDA5DA,KAAA0nC,iCAAA,kBAA+D,KAAAC,iCAAA,mBA4DA;UAmDjE3nC,0DAAA,EAAM;UAKFA,4DAFJ,eAAkC,eACP,kBAGkB;UAAjCA,wDAAA,mBAAA4nC,oDAAA;YAAA,OAAS/mC,GAAA,CAAAsmC,YAAA,CAAa,aAAQ,CAAC;UAAA,EAAC;UACtCnnC,uDAAA,aAA0B;UAACA,oDAAA,qBAC7B;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAEwC;UAAhCA,wDAAA,mBAAA6nC,oDAAA;YAAA,OAAShnC,GAAA,CAAAsmC,YAAA,CAAa,OAAO,CAAC;UAAA,EAAC;UACrCnnC,uDAAA,aAAgC;UAACA,oDAAA,eACnC;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAEwC;UAAhCA,wDAAA,mBAAA8nC,oDAAA;YAAA,OAASjnC,GAAA,CAAAsmC,YAAA,CAAa,OAAO,CAAC;UAAA,EAAC;UACrCnnC,uDAAA,aAA2B;UAACA,oDAAA,eAC9B;UACFA,0DADE,EAAS,EACL;UAENA,4DAAA,eAAyB;UAgEvBA,wDA9DA,KAAA+nC,iCAAA,mBAAsD,KAAAC,iCAAA,mBA+BD,KAAAC,iCAAA,mBA+BA;UAgC3DjoC,0DAHI,EAAM,EACF,EAEF;UAGNA,4DAAA,eAC+D;UAA3BA,wDAAA,mBAAAkoC,iDAAA;YAAA,OAASrnC,GAAA,CAAA4hC,cAAA,EAAgB;UAAA,EAAC;UAC5DziC,4DAAA,eAAmF;UAAnCA,wDAAA,mBAAAmoC,iDAAAriC,MAAA;YAAA,OAASA,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAG5EnK,4DAFJ,eAA2B,eACC,cACA;UACtBA,uDAAA,aAA8B;UAACA,oDAAA,iCACjC;UAAAA,0DAAA,EAAK;UACLA,4DAAA,kBAA+D;UAA3BA,wDAAA,mBAAAooC,oDAAA;YAAA,OAASvnC,GAAA,CAAA4hC,cAAA,EAAgB;UAAA,EAAC;UAC5DziC,4DAAA,YAAM;UAAAA,oDAAA,cAAO;UAEjBA,0DAFiB,EAAO,EACb,EACL;UAKAA,4DAJN,eAAwB,eACY,eAEA,gBACF;UAAAA,oDAAA,cAAM;UAAAA,0DAAA,EAAO;UACzCA,4DAAA,eAA2B;UAAAA,oDAAA,IAAiD;UAC9EA,0DAD8E,EAAM,EAC9E;UAKFA,4DAFJ,eAA+B,eACL,kBAC2E;UAAxDA,wDAAA,mBAAAqoC,oDAAAviC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UAAAA,0DAAA,EAAS;UAC3GA,4DAAA,kBAAiG;UAAxDA,wDAAA,mBAAAsoC,oDAAAxiC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UAAAA,0DAAA,EAAS;UAC3GA,4DAAA,kBAAiG;UAAxDA,wDAAA,mBAAAuoC,oDAAAziC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UACpGA,0DADoG,EAAS,EACvG;UAEJA,4DADF,eAAwB,kBAC2E;UAAxDA,wDAAA,mBAAAwoC,oDAAA1iC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UAAAA,0DAAA,EAAS;UAC3GA,4DAAA,kBAAiG;UAAxDA,wDAAA,mBAAAyoC,oDAAA3iC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UAAAA,0DAAA,EAAS;UAC3GA,4DAAA,kBAAiG;UAAxDA,wDAAA,mBAAA0oC,oDAAA5iC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UACpGA,0DADoG,EAAS,EACvG;UAEJA,4DADF,eAAwB,kBAC2E;UAAxDA,wDAAA,mBAAA2oC,oDAAA7iC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UAAAA,0DAAA,EAAS;UAC3GA,4DAAA,kBAAiG;UAAxDA,wDAAA,mBAAA4oC,oDAAA9iC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UAAAA,0DAAA,EAAS;UAC3GA,4DAAA,kBAAiG;UAAxDA,wDAAA,mBAAA6oC,oDAAA/iC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UACpGA,0DADoG,EAAS,EACvG;UAEJA,4DADF,eAAwB,kBAC2E;UAAxDA,wDAAA,mBAAA8oC,oDAAAhjC,MAAA;YAASjF,GAAA,CAAA6hC,gBAAA,CAAiB,CAAC,CAAC;YAAA,OAAE58B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAACnK,oDAAA,SAAC;UAAAA,0DAAA,EAAS;UAC3GA,4DAAA,kBAA6G;UAAvDA,wDAAA,mBAAA+oC,oDAAAjjC,MAAA;YAASjF,GAAA,CAAA8hC,gBAAA,EAAkB;YAAA,OAAE78B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAC1GnK,oDAAA,WACF;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBACuC;UADgBA,wDAAA,mBAAAgpC,oDAAAljC,MAAA;YAASjF,GAAA,CAAA+hC,iBAAA,EAAmB;YAAA,OAAE98B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAE5GnK,oDAAA,iBACF;UAOdA,0DAPc,EAAS,EACL,EACF,EACF,EACF,EACF,EACF,EACF;UAGNA,4DAAA,eAC+D;UAA3BA,wDAAA,mBAAAipC,iDAAA;YAAA,OAASpoC,GAAA,CAAA4hC,cAAA,EAAgB;UAAA,EAAC;UAC5DziC,4DAAA,eAAmF;UAAnCA,wDAAA,mBAAAkpC,iDAAApjC,MAAA;YAAA,OAASA,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAG5EnK,4DAFJ,eAA2B,eACC,cACA;UACtBA,uDAAA,aAAkC;UAACA,oDAAA,0BACrC;UAAAA,0DAAA,EAAK;UACLA,4DAAA,kBAA+D;UAA3BA,wDAAA,mBAAAmpC,oDAAA;YAAA,OAAStoC,GAAA,CAAA4hC,cAAA,EAAgB;UAAA,EAAC;UAC5DziC,4DAAA,YAAM;UAAAA,oDAAA,cAAO;UAEjBA,0DAFiB,EAAO,EACb,EACL;UAMAA,4DALN,eAAwB,eACS,eAGC,kBAIY;UADhCA,wDAAA,mBAAAopC,oDAAAtjC,MAAA;YAASjF,GAAA,CAAAkiC,cAAA,EAAgB;YAAA,OAAEj9B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAE1DnK,uDAAA,aAA4B;UAC9BA,0DAAA,EAAS;UAGPA,4DADF,eAA2B,gBACE;UAAAA,oDAAA,IAAmB;UAAAA,0DAAA,EAAO;UACrDA,4DAAA,gBAAuB;UAAAA,oDAAA,gBAAQ;UACjCA,0DADiC,EAAO,EAClC;UAENA,4DAAA,kBAGgD;UADxCA,wDAAA,mBAAAqpC,oDAAAvjC,MAAA;YAASjF,GAAA,CAAAiiC,cAAA,EAAgB;YAAA,OAAEh9B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAE1DnK,uDAAA,cAA2B;UAE/BA,0DADE,EAAS,EACL;UAIJA,4DADF,gBAA6B,mBAG+B;UAAlDA,wDAAA,mBAAAspC,qDAAAxjC,MAAA;YAASjF,GAAA,CAAAmiC,WAAA,EAAa;YAAA,OAAEl9B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UACvDnK,uDAAA,cAA2B;UAACA,oDAAA,oBAC9B;UAAAA,0DAAA,EAAS;UAETA,4DAAA,mBAGuC;UAD/BA,wDAAA,mBAAAupC,qDAAAzjC,MAAA;YAASjF,GAAA,CAAAoiC,mBAAA,EAAqB;YAAA,OAAEn9B,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAE/DnK,uDAAA,cAA4B;UAACA,oDAAA,kBAC/B;UACFA,0DADE,EAAS,EACL;UAIJA,4DADF,gBAA0B,kBACE;UACxBA,uDAAA,cAAkC;UAClCA,oDAAA,gEACF;UAMZA,0DANY,EAAQ,EACJ,EACF,EACF,EACF,EACF,EACF;UAGNA,4DAAA,gBACgE;UAA3BA,wDAAA,mBAAAwpC,kDAAA;YAAA,OAAS3oC,GAAA,CAAA4hC,cAAA,EAAgB;UAAA,EAAC;UAC7DziC,4DAAA,gBAAmF;UAAnCA,wDAAA,mBAAAypC,kDAAA3jC,MAAA;YAAA,OAASA,MAAA,CAAAqE,eAAA,EAAwB;UAAA,EAAC;UAG5EnK,4DAFJ,gBAA2B,gBACC,eACA;UACtBA,uDAAA,cAAmC;UAACA,oDAAA,4BACtC;UAAAA,0DAAA,EAAK;UACLA,4DAAA,mBAA+D;UAA3BA,wDAAA,mBAAA0pC,qDAAA;YAAA,OAAS7oC,GAAA,CAAA4hC,cAAA,EAAgB;UAAA,EAAC;UAC5DziC,4DAAA,aAAM;UAAAA,oDAAA,eAAO;UAEjBA,0DAFiB,EAAO,EACb,EACL;UAIAA,4DAHN,gBAAwB,gBACc,gBACH,gBACK;UAChCA,oDAAA,KACF;UAAAA,0DAAA,EAAM;UACNA,4DAAA,gBAA4B;UAC1BA,oDAAA,KACF;UAAAA,0DAAA,EAAM;UAEJA,4DADF,gBAAkC,mBACmD;UAA5BA,wDAAA,mBAAA2pC,qDAAA;YAAA,OAAS9oC,GAAA,CAAAsiC,eAAA,EAAiB;UAAA,EAAC;UAChFnjC,uDAAA,cAA4B;UAACA,oDAAA,mBAC/B;UAAAA,0DAAA,EAAS;UACRA,4DAAA,mBAAkF;UAA7BA,wDAAA,mBAAA4pC,qDAAA;YAAA,OAAS/oC,GAAA,CAAAqiC,gBAAA,EAAkB;UAAA,EAAC;UAChFljC,uDAAA,cAA4B;UAACA,oDAAA,oBAC/B;UAOdA,0DAPc,EAAS,EACL,EACF,EACF,EACF,EACF,EACF,EACF;;;UA1ZyBA,uDAAA,GAAyB;UAAzBA,+DAAA,CAAAa,GAAA,CAAA0+B,mBAAA,CAAyB;UAI9Cv/B,uDAAA,GAA2C;UAA3CA,+DAAA,EAAAa,GAAA,CAAAmO,WAAA,kBAAAnO,GAAA,CAAAmO,WAAA,CAAA9L,QAAA,kBAA2C;UAIiBlD,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UAI7B5G,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UAU3E5G,uDAAA,GAAkC;UAAlCA,wDAAA,SAAAa,GAAA,CAAA47B,eAAA,CAAAv0B,MAAA,OAAkC;UA4DlClI,uDAAA,EAAgC;UAAhCA,wDAAA,SAAAa,GAAA,CAAA47B,eAAA,CAAAv0B,MAAA,KAAgC;UAyD5BlI,uDAAA,GAAuC;UAAvCA,yDAAA,WAAAa,GAAA,CAAAy+B,SAAA,mBAAuC;UAKvCt/B,uDAAA,GAAsC;UAAtCA,yDAAA,WAAAa,GAAA,CAAAy+B,SAAA,aAAsC;UAKtCt/B,uDAAA,GAAsC;UAAtCA,yDAAA,WAAAa,GAAA,CAAAy+B,SAAA,aAAsC;UAQxCt/B,uDAAA,GAA4B;UAA5BA,wDAAA,SAAAa,GAAA,CAAAy+B,SAAA,mBAA4B;UA+B5Bt/B,uDAAA,EAA2B;UAA3BA,wDAAA,SAAAa,GAAA,CAAAy+B,SAAA,aAA2B;UA+B3Bt/B,uDAAA,EAA2B;UAA3BA,wDAAA,SAAAa,GAAA,CAAAy+B,SAAA,aAA2B;UAmCpBt/B,uDAAA,EAAmD;UAAnDA,yDAAA,YAAAa,GAAA,CAAA+9B,eAAA,mBAAmD;UACjE5+B,yDAAA,SAAAa,GAAA,CAAA+9B,eAAA,CAA8B;UAgBI5+B,uDAAA,IAAiD;UAAjDA,+DAAA,EAAAa,GAAA,CAAAo+B,gBAAA,UAAAh7B,QAAA,SAAiD;UA0BlEjE,uDAAA,IAA8B;UAA9BA,wDAAA,cAAAa,GAAA,CAAAo+B,gBAAA,CAA8B;UAYjCj/B,uDAAA,GAAmD;UAAnDA,yDAAA,YAAAa,GAAA,CAAAg+B,eAAA,mBAAmD;UACjE7+B,yDAAA,SAAAa,GAAA,CAAAg+B,eAAA,CAA8B;UAmBf7+B,uDAAA,IAA+B;UAA/BA,wDAAA,aAAAa,GAAA,CAAAs+B,aAAA,MAA+B;UAKVn/B,uDAAA,GAAmB;UAAnBA,+DAAA,CAAAa,GAAA,CAAAs+B,aAAA,CAAmB;UAOxCn/B,uDAAA,GAAuC;UAAvCA,wDAAA,aAAAa,GAAA,CAAAs+B,aAAA,IAAAt+B,GAAA,CAAAu+B,SAAA,CAAuC;UAgBvCp/B,uDAAA,GAA8B;UAA9BA,wDAAA,aAAAa,GAAA,CAAAs+B,aAAA,KAA8B;UAmB/Bn/B,uDAAA,GAAoD;UAApDA,yDAAA,YAAAa,GAAA,CAAAi+B,gBAAA,mBAAoD;UAClE9+B,yDAAA,SAAAa,GAAA,CAAAi+B,gBAAA,CAA+B;UAetB9+B,uDAAA,IACF;UADEA,gEAAA,QAAAa,GAAA,CAAAk+B,UAAA,YAAAl+B,GAAA,CAAAk+B,UAAA,CAAA/6B,QAAA,GAAAC,QAAA,qBACF;UAEEjE,uDAAA,GACF;UADEA,gEAAA,iBAAAa,GAAA,CAAAm+B,UAAA,WACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEhXFh/B,4DADF,SAAuD,SACjD;IAAAA,oDAAA,GAAgB;IAAAA,0DAAA,EAAK;IAEvBA,4DADF,SAAI,eACqD;IACrDA,oDAAA,GACF;IACFA,0DADE,EAAO,EACJ;IACLA,4DAAA,SAAI;IAAAA,oDAAA,GAA0B;IAAAA,0DAAA,EAAK;IAEjCA,4DADF,SAAI,eAC+D;IAC/DA,oDAAA,IACF;IACFA,0DADE,EAAO,EACJ;IACLA,4DAAA,UAAI;IAAAA,oDAAA,IAAyC;;IAAAA,0DAAA,EAAK;IAEhDA,4DADF,cAAyB,kBAIQ;IAFvBA,wDAAA,mBAAA6pC,yEAAA;MAAA,MAAAC,OAAA,GAAA9pC,2DAAA,CAAA8pB,GAAA,EAAA5jB,SAAA;MAAA,MAAA6jC,MAAA,GAAA/pC,2DAAA;MAAA,OAAAA,yDAAA,CAAS+pC,MAAA,CAAAC,iBAAA,CAAAF,OAAA,CAAuB;IAAA,EAAC;IAGvC9pC,uDAAA,aAA2B;IAC7BA,0DAAA,EAAS;IACTA,4DAAA,kBAGyE;IAFjEA,wDAAA,mBAAAiqC,yEAAA;MAAA,MAAAH,OAAA,GAAA9pC,2DAAA,CAAA8pB,GAAA,EAAA5jB,SAAA;MAAA,MAAA6jC,MAAA,GAAA/pC,2DAAA;MAAA,OAAAA,yDAAA,CAAS+pC,MAAA,CAAAnvB,gBAAA,CAAAkvB,OAAA,CAAsB;IAAA,EAAC;IAGtC9pC,uDAAA,aAAqE;IACvEA,0DAAA,EAAS;IACTA,4DAAA,kBAGiC;IAFzBA,wDAAA,mBAAAkqC,yEAAA;MAAA,MAAAJ,OAAA,GAAA9pC,2DAAA,CAAA8pB,GAAA,EAAA5jB,SAAA;MAAA,MAAA6jC,MAAA,GAAA/pC,2DAAA;MAAA,OAAAA,yDAAA,CAAS+pC,MAAA,CAAAhvB,UAAA,CAAA+uB,OAAA,CAAgB;IAAA,EAAC;IAGhC9pC,uDAAA,aAA4B;IAGlCA,0DAFI,EAAS,EACN,EACF;;;;;IAjCCA,uDAAA,GAAgB;IAAhBA,+DAAA,CAAA8pC,OAAA,CAAA9gC,KAAA,CAAgB;IAEOhJ,uDAAA,GAA6B;IAA7BA,wDAAA,WAAA8pC,OAAA,CAAAj6B,IAAA,CAA6B;IACpD7P,uDAAA,EACF;IADEA,gEAAA,MAAA+pC,MAAA,CAAAI,YAAA,CAAAL,OAAA,CAAAj6B,IAAA,OACF;IAEE7P,uDAAA,GAA0B;IAA1BA,+DAAA,CAAA8pC,OAAA,CAAA5mC,QAAA,QAA0B;IAEDlD,uDAAA,GAAqC;IAArCA,wDAAA,CAAA+pC,MAAA,CAAAK,cAAA,CAAAN,OAAA,CAAAh6B,MAAA,EAAqC;IAC9D9P,uDAAA,EACF;IADEA,gEAAA,MAAA+pC,MAAA,CAAAM,cAAA,CAAAP,OAAA,CAAAh6B,MAAA,OACF;IAEE9P,uDAAA,GAAyC;IAAzCA,+DAAA,CAAAA,yDAAA,SAAA8pC,OAAA,CAAAjiB,UAAA,gBAAyC;IAInC7nB,uDAAA,GAAsB;IAAtBA,wDAAA,aAAA+pC,MAAA,CAAAnjC,SAAA,CAAsB;IAMtB5G,uDAAA,GAAsB;IACtBA,wDADA,aAAA+pC,MAAA,CAAAnjC,SAAA,CAAsB,UAAAkjC,OAAA,CAAAh6B,MAAA,4CAC0C;IACvD9P,uDAAA,EAAiD;IAAjDA,wDAAA,CAAA8pC,OAAA,CAAAh6B,MAAA,6BAAiD;IAI1D9P,uDAAA,EAAsB;IAAtBA,wDAAA,aAAA+pC,MAAA,CAAAnjC,SAAA,CAAsB;;;;;IAtChC5G,4DAHN,gBAAkE,YACzD,SACD,SACE;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAK;IACdA,4DAAA,SAAI;IAAAA,oDAAA,UAAG;IAAAA,0DAAA,EAAK;IACZA,4DAAA,SAAI;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAK;IACjBA,4DAAA,SAAI;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAK;IACfA,4DAAA,UAAI;IAAAA,oDAAA,2BAAc;IAAAA,0DAAA,EAAK;IACvBA,4DAAA,UAAI;IAAAA,oDAAA,gBAAQ;IAEhBA,0DAFgB,EAAK,EACd,EACC;IACRA,4DAAA,aAAO;IACLA,wDAAA,KAAAsqC,+CAAA,mBAAuD;IAoC3DtqC,0DADE,EAAQ,EACF;;;;IApCiBA,uDAAA,IAAU;IAAAA,wDAAV,YAAA+pC,MAAA,CAAAr6B,KAAA,CAAU,iBAAAq6B,MAAA,CAAAQ,aAAA,CAAsB;;;;;IAuCzDvqC,4DAAA,cAA6C;IAC3CA,uDAAA,YAAsC;IACtCA,4DAAA,QAAG;IAAAA,oDAAA,2BAAoB;IACzBA,0DADyB,EAAI,EACvB;;;;;;IAGNA,4DAAA,cAAkE;IAChEA,uDAAA,YAA4B;IAC5BA,4DAAA,SAAI;IAAAA,oDAAA,kCAA2B;IAAAA,0DAAA,EAAK;IACpCA,4DAAA,QAAG;IAAAA,oDAAA,qDAA8C;IAAAA,0DAAA,EAAI;IACrDA,4DAAA,iBAA4D;IAAhCA,wDAAA,mBAAAwqC,gEAAA;MAAAxqC,2DAAA,CAAAkvB,GAAA;MAAA,MAAA6a,MAAA,GAAA/pC,2DAAA;MAAA,OAAAA,yDAAA,CAAS+pC,MAAA,CAAApqB,mBAAA,EAAqB;IAAA,EAAC;IACzD3f,uDAAA,WAA2B;IAACA,oDAAA,6BAC9B;IACFA,0DADE,EAAS,EACL;;;;;;IA2CAA,4DADF,cAAiE,gBAClC;IAAAA,oDAAA,kCAAsB;IAAAA,0DAAA,EAAQ;IAC3DA,4DAAA,gBAKqD;IAH9CA,8DAAA,2BAAAyqC,8EAAA3kC,MAAA;MAAA9F,2DAAA,CAAA0qC,GAAA;MAAA,MAAAX,MAAA,GAAA/pC,2DAAA;MAAAA,gEAAA,CAAA+pC,MAAA,CAAAY,QAAA,CAAAr6B,eAAA,EAAAxK,MAAA,MAAAikC,MAAA,CAAAY,QAAA,CAAAr6B,eAAA,GAAAxK,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAAsC;IAI/C9F,0DANE,EAKqD,EACjD;;;;IAJGA,uDAAA,GAAsC;IAAtCA,8DAAA,YAAA+pC,MAAA,CAAAY,QAAA,CAAAr6B,eAAA,CAAsC;IAGtCtQ,wDAAA,cAAA+pC,MAAA,CAAAa,UAAA,IAAAb,MAAA,CAAAY,QAAA,CAAAjjC,QAAA,CAA6C;;;;;IA0BlD1H,uDAAA,iBAAwE;;;;IAAnBA,wDAAA,UAAA6qC,WAAA,CAAkB;;;;;;IATzE7qC,4DADF,cAA6D,gBACrC;IAAAA,oDAAA,iBAAU;IAAAA,0DAAA,EAAQ;IACxCA,4DAAA,gBAMgB;IAJTA,8DAAA,2BAAA8qC,8EAAAhlC,MAAA;MAAA9F,2DAAA,CAAA8wB,GAAA;MAAA,MAAAiZ,MAAA,GAAA/pC,2DAAA;MAAAA,gEAAA,CAAA+pC,MAAA,CAAAY,QAAA,CAAAznC,QAAA,EAAA4C,MAAA,MAAAikC,MAAA,CAAAY,QAAA,CAAAznC,QAAA,GAAA4C,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAA+B;IAFtC9F,0DAAA,EAMgB;IAChBA,4DAAA,mBAA+B;IAC7BA,wDAAA,IAAA+qC,uDAAA,qBAAwE;IAC1E/qC,0DAAA,EAAW;IACXA,4DAAA,gBAAyB;IAAAA,oDAAA,qEAAyD;IACpFA,0DADoF,EAAQ,EACtF;;;;IATGA,uDAAA,GAA+B;IAA/BA,8DAAA,YAAA+pC,MAAA,CAAAY,QAAA,CAAAznC,QAAA,CAA+B;IAMPlD,uDAAA,GAAsB;IAAtBA,wDAAA,YAAA+pC,MAAA,CAAAiB,mBAAA,CAAsB;;;;;IAuBvDhrC,uDAAA,YAAwD;;;;;;IA7FhEA,4DAAA,cAA4E;IAA3BA,wDAAA,mBAAAirC,6DAAA;MAAAjrC,2DAAA,CAAAkrC,GAAA;MAAA,MAAAnB,MAAA,GAAA/pC,2DAAA;MAAA,OAAAA,yDAAA,CAAS+pC,MAAA,CAAA1vB,cAAA,EAAgB;IAAA,EAAC;IACzEra,4DAAA,cAAgE;IAAnCA,wDAAA,mBAAAmrC,6DAAArlC,MAAA;MAAA9F,2DAAA,CAAAkrC,GAAA;MAAA,OAAAlrC,yDAAA,CAAS8F,MAAA,CAAAqE,eAAA,EAAwB;IAAA,EAAC;IAE3DnK,4DADF,cAA0B,SACpB;IAAAA,oDAAA,GAAqD;IAAAA,0DAAA,EAAK;IAC9DA,4DAAA,iBAAqD;IAA3BA,wDAAA,mBAAAorC,gEAAA;MAAAprC,2DAAA,CAAAkrC,GAAA;MAAA,MAAAnB,MAAA,GAAA/pC,2DAAA;MAAA,OAAAA,yDAAA,CAAS+pC,MAAA,CAAA1vB,cAAA,EAAgB;IAAA,EAAC;IAClDra,uDAAA,YAA4B;IAEhCA,0DADE,EAAS,EACL;IAMAA,4DAJN,cAAwB,eACE,cAEE,iBACH;IAAAA,oDAAA,eAAO;IAAAA,0DAAA,EAAQ;IAClCA,4DAAA,iBAMgB;IAJTA,8DAAA,2BAAAqrC,wEAAAvlC,MAAA;MAAA9F,2DAAA,CAAAkrC,GAAA;MAAA,MAAAnB,MAAA,GAAA/pC,2DAAA;MAAAA,gEAAA,CAAA+pC,MAAA,CAAAY,QAAA,CAAA3hC,KAAA,EAAAlD,MAAA,MAAAikC,MAAA,CAAAY,QAAA,CAAA3hC,KAAA,GAAAlD,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAA4B;IAKrC9F,0DAPE,EAMgB,EACZ;IAIJA,4DADF,eAAwB,iBACA;IACpBA,oDAAA,IACF;IAAAA,0DAAA,EAAQ;IACRA,4DAAA,iBAKgC;IAHzBA,8DAAA,2BAAAsrC,wEAAAxlC,MAAA;MAAA9F,2DAAA,CAAAkrC,GAAA;MAAA,MAAAnB,MAAA,GAAA/pC,2DAAA;MAAAA,gEAAA,CAAA+pC,MAAA,CAAAY,QAAA,CAAAjjC,QAAA,EAAA5B,MAAA,MAAAikC,MAAA,CAAAY,QAAA,CAAAjjC,QAAA,GAAA5B,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAA+B;IAIxC9F,0DANE,EAKgC,EAC5B;IAGNA,wDAAA,KAAAurC,8CAAA,kBAAiE;IAY/DvrC,4DADF,eAAwB,iBACJ;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAQ;IAC/BA,4DAAA,kBAGiB;IAFTA,8DAAA,2BAAAwrC,yEAAA1lC,MAAA;MAAA9F,2DAAA,CAAAkrC,GAAA;MAAA,MAAAnB,MAAA,GAAA/pC,2DAAA;MAAAA,gEAAA,CAAA+pC,MAAA,CAAAY,QAAA,CAAA96B,IAAA,EAAA/J,MAAA,MAAAikC,MAAA,CAAAY,QAAA,CAAA96B,IAAA,GAAA/J,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAA2B;IAGjC9F,4DAAA,kBAAsB;IAAAA,oDAAA,qBAAa;IAAAA,0DAAA,EAAS;IAC5CA,4DAAA,kBAAyB;IAAAA,oDAAA,gBAAQ;IAErCA,0DAFqC,EAAS,EACnC,EACL;IAGNA,wDAAA,KAAAyrC,8CAAA,kBAA6D;IAkBzDzrC,4DAFJ,eAAuC,iBACP,iBAGP;IADdA,8DAAA,2BAAA0rC,wEAAA5lC,MAAA;MAAA9F,2DAAA,CAAAkrC,GAAA;MAAA,MAAAnB,MAAA,GAAA/pC,2DAAA;MAAAA,gEAAA,CAAA+pC,MAAA,CAAAY,QAAA,CAAA76B,MAAA,EAAAhK,MAAA,MAAAikC,MAAA,CAAAY,QAAA,CAAA76B,MAAA,GAAAhK,MAAA;MAAA,OAAA9F,yDAAA,CAAA8F,MAAA;IAAA,EAA6B;IADpC9F,0DAAA,EAEqB;IACrBA,uDAAA,gBAA+B;IAC/BA,oDAAA,wBACF;IAGNA,0DAHM,EAAQ,EACJ,EACD,EACH;IAGJA,4DADF,eAA0B,kBACwD;IAAlDA,wDAAA,mBAAA2rC,iEAAA;MAAA3rC,2DAAA,CAAAkrC,GAAA;MAAA,MAAAnB,MAAA,GAAA/pC,2DAAA;MAAA,OAAAA,yDAAA,CAAS+pC,MAAA,CAAA1vB,cAAA,EAAgB;IAAA,EAAC;IACtDra,oDAAA,kBACF;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAAwE;IAA5CA,wDAAA,mBAAA4rC,iEAAA;MAAA5rC,2DAAA,CAAAkrC,GAAA;MAAA,MAAAnB,MAAA,GAAA/pC,2DAAA;MAAA,OAAAA,yDAAA,CAAS+pC,MAAA,CAAAxvB,QAAA,EAAU;IAAA,EAAC;IAC9Cva,wDAAA,KAAA6rC,4CAAA,gBAAoD;IACpD7rC,oDAAA,IACF;IAGNA,0DAHM,EAAS,EACL,EACF,EACF;;;;IA/FIA,uDAAA,GAAqD;IAArDA,+DAAA,CAAA+pC,MAAA,CAAAa,UAAA,sCAAqD;IAa9C5qC,uDAAA,GAA4B;IAA5BA,8DAAA,YAAA+pC,MAAA,CAAAY,QAAA,CAAA3hC,KAAA,CAA4B;IAE5BhJ,wDAAA,aAAA+pC,MAAA,CAAAa,UAAA,CAAuB;IAQ5B5qC,uDAAA,GACF;IADEA,gEAAA,sBAAA+pC,MAAA,CAAAa,UAAA,wDACF;IAGO5qC,uDAAA,EAA+B;IAA/BA,8DAAA,YAAA+pC,MAAA,CAAAY,QAAA,CAAAjjC,QAAA,CAA+B;IAG/B1H,wDAAA,cAAA+pC,MAAA,CAAAa,UAAA,CAAwB;IAIR5qC,uDAAA,EAAsC;IAAtCA,wDAAA,UAAA+pC,MAAA,CAAAa,UAAA,IAAAb,MAAA,CAAAY,QAAA,CAAAjjC,QAAA,CAAsC;IAcrD1H,uDAAA,GAA2B;IAA3BA,8DAAA,YAAA+pC,MAAA,CAAAY,QAAA,CAAA96B,IAAA,CAA2B;IASZ7P,uDAAA,GAAkC;IAAlCA,wDAAA,SAAA+pC,MAAA,CAAAY,QAAA,CAAA96B,IAAA,gBAAkC;IAmBhD7P,uDAAA,GAA6B;IAA7BA,8DAAA,YAAA+pC,MAAA,CAAAY,QAAA,CAAA76B,MAAA,CAA6B;IAUe9P,uDAAA,GAAsB;IAAtBA,wDAAA,aAAA+pC,MAAA,CAAAnjC,SAAA,CAAsB;IAG9B5G,uDAAA,GAAsB;IAAtBA,wDAAA,aAAA+pC,MAAA,CAAAnjC,SAAA,CAAsB;IAClC5G,uDAAA,EAAe;IAAfA,wDAAA,SAAA+pC,MAAA,CAAAnjC,SAAA,CAAe;IAClD5G,uDAAA,EACF;IADEA,gEAAA,MAAA+pC,MAAA,CAAAa,UAAA,uCACF;;;AD7KA,MAAOppC,uBAAuB;EA+BlClC,YACUC,eAAgC,EAChCqP,mBAAwC,EACxCpP,MAAc,EACduP,GAAsB;IAHtB,KAAAxP,eAAe,GAAfA,eAAe;IACf,KAAAqP,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAApP,MAAM,GAANA,MAAM;IACN,KAAAuP,GAAG,GAAHA,GAAG;IAlCb,KAAAC,WAAW,GAAQ,IAAI;IACvB,KAAAU,KAAK,GAAqB,EAAE;IAC5B,KAAA9I,SAAS,GAAY,KAAK;IAE1B;IACA,KAAA+I,aAAa,GAAY,KAAK;IAC9B,KAAAi7B,UAAU,GAAY,KAAK;IAC3B,KAAAkB,YAAY,GAA0B,IAAI;IAE1C;IACA,KAAAnB,QAAQ,GAAG;MACT3hC,KAAK,EAAE,EAAE;MACTtB,QAAQ,EAAE,EAAE;MACZ4I,eAAe,EAAE,EAAE;MACnBT,IAAI,EAAE,UAAkC;MACxC3M,QAAQ,EAAE,EAAE;MACZ4M,MAAM,EAAE;KACT;IAED;IACA,KAAAk7B,mBAAmB,GAAa,CAC9B,kBAAkB,EAClB,gBAAgB,EAChB,cAAc,EACd,eAAe,EACf,gBAAgB,CACjB;EASG;EAEJvrC,QAAQA,CAAA;IACN,IAAI,CAACggC,gBAAgB,GAAG,IAAI,CAAClgC,eAAe,CAACG,YAAY,CAACC,SAAS,CAACC,IAAI,IAAG;MACzE,IAAI,CAACoP,WAAW,GAAGpP,IAAI;MACvB,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACiQ,IAAI,KAAK,OAAO,EAAE;QAClC,IAAI,CAACrQ,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC;;IAEJ,CAAC,CAAC;IAEF,IAAI,CAACgT,SAAS,EAAE;EAClB;EAEAof,WAAWA,CAAA;IACT,IAAI,IAAI,CAACsN,gBAAgB,EAAE;MACzB,IAAI,CAACA,gBAAgB,CAACpN,WAAW,EAAE;;EAEvC;EAEMtf,SAASA,CAAA;IAAA,IAAAH,KAAA;IAAA,OAAAC,4JAAA;MACbsC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAExC,KAAI,CAAChM,SAAS,CAAC;MAC7DgM,KAAI,CAAChM,SAAS,GAAG,IAAI;MACrB,IAAI;QACFuO,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtCxC,KAAI,CAAClD,KAAK,SAASkD,KAAI,CAACrT,eAAe,CAAC4a,WAAW,EAAE;QACrDhF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAExC,KAAI,CAAClD,KAAK,CAAC;OAC9C,CAAC,OAAO0C,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDQ,KAAI,CAAChE,mBAAmB,CAACqE,SAAS,CAAC,0BAA0B,CAAC;OAC/D,SAAS;QACRL,KAAI,CAAChM,SAAS,GAAG,KAAK;QACtBuO,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAExC,KAAI,CAAChM,SAAS,CAAC;;IAC/D;EACH;EAEA+Y,mBAAmBA,CAAA;IACjB,IAAI,CAACirB,UAAU,GAAG,KAAK;IACvB,IAAI,CAACkB,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACp8B,aAAa,GAAG,IAAI;IACzB,IAAI,CAACZ,GAAG,CAACmF,aAAa,EAAE;EAC1B;EAEA81B,iBAAiBA,CAACpqC,IAAoB;IACpC,IAAI,CAACgrC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACkB,YAAY,GAAGlsC,IAAI;IACxB,IAAI,CAAC+qC,QAAQ,GAAG;MACd3hC,KAAK,EAAEpJ,IAAI,CAACoJ,KAAK;MACjBtB,QAAQ,EAAE,EAAE;MACZ4I,eAAe,EAAE,EAAE;MACnBT,IAAI,EAAEjQ,IAAI,CAACiQ,IAAI;MACf3M,QAAQ,EAAEtD,IAAI,CAACsD,QAAQ,IAAI,EAAE;MAC7B4M,MAAM,EAAElQ,IAAI,CAACkQ;KACd;IACD,IAAI,CAACH,aAAa,GAAG,IAAI;IACzB,IAAI,CAACZ,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;EAC5B;EAEAmG,cAAcA,CAAA;IACZ,IAAI,CAAC1K,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACo8B,SAAS,EAAE;IAChB,IAAI,CAACD,YAAY,GAAG,IAAI;IACxB,IAAI,CAAC/8B,GAAG,CAACmF,aAAa,EAAE,CAAC,CAAC;EAC5B;EAEA83B,YAAYA,CAAA;IACV,IAAI,CAACxsC,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAgsC,SAASA,CAAA;IACP,IAAI,CAACpB,QAAQ,GAAG;MACd3hC,KAAK,EAAE,EAAE;MACTtB,QAAQ,EAAE,EAAE;MACZ4I,eAAe,EAAE,EAAE;MACnBT,IAAI,EAAE,UAAU;MAChB3M,QAAQ,EAAE,EAAE;MACZ4M,MAAM,EAAE;KACT;EACH;EAEMyK,QAAQA,CAAA;IAAA,IAAAxG,MAAA;IAAA,OAAAlB,4JAAA;MACZ,IAAI,CAACkB,MAAI,CAACk4B,YAAY,EAAE,EAAE;QACxB;;MAGFl4B,MAAI,CAACnN,SAAS,GAAG,IAAI;MACrB,IAAI;QACF,IAAImN,MAAI,CAAC62B,UAAU,IAAI72B,MAAI,CAAC+3B,YAAY,EAAE;UACxC;UACA,MAAM/3B,MAAI,CAACxU,eAAe,CAACkb,kBAAkB,CAAC1G,MAAI,CAAC+3B,YAAY,CAAC94B,EAAE,EAAE;YAClEhK,KAAK,EAAE+K,MAAI,CAAC42B,QAAQ,CAAC3hC,KAAK;YAC1B6G,IAAI,EAAEkE,MAAI,CAAC42B,QAAQ,CAAC96B,IAA4B;YAChD3M,QAAQ,EAAE6Q,MAAI,CAAC42B,QAAQ,CAACznC,QAAQ;YAChC4M,MAAM,EAAEiE,MAAI,CAAC42B,QAAQ,CAAC76B;WACvB,CAAC;UAEF;UACA,IAAIiE,MAAI,CAAC42B,QAAQ,CAACjjC,QAAQ,IAAIqM,MAAI,CAAC42B,QAAQ,CAACjjC,QAAQ,CAAC0hB,IAAI,EAAE,KAAK,EAAE,EAAE;YAClE,MAAMrV,MAAI,CAACxU,eAAe,CAAC4e,kBAAkB,CAACpK,MAAI,CAAC+3B,YAAY,CAAC94B,EAAE,EAAEe,MAAI,CAAC42B,QAAQ,CAACjjC,QAAQ,CAAC;YAC3FqM,MAAI,CAACnF,mBAAmB,CAAC8L,WAAW,CAAC,gDAAgD,CAAC;WACvF,MAAM;YACL3G,MAAI,CAACnF,mBAAmB,CAAC8L,WAAW,CAAC,kCAAkC,CAAC;;SAE3E,MAAM;UACL;UACA,MAAM3G,MAAI,CAACxU,eAAe,CAACob,aAAa,CAAC;YACvC3R,KAAK,EAAE+K,MAAI,CAAC42B,QAAQ,CAAC3hC,KAAK;YAC1B6G,IAAI,EAAEkE,MAAI,CAAC42B,QAAQ,CAAC96B,IAA4B;YAChD3M,QAAQ,EAAE6Q,MAAI,CAAC42B,QAAQ,CAACznC,QAAQ;YAChC4M,MAAM,EAAEiE,MAAI,CAAC42B,QAAQ,CAAC76B;WACvB,CAAC;UACFiE,MAAI,CAACnF,mBAAmB,CAAC8L,WAAW,CAAC,0EAA0E,CAAC;;QAGlH3G,MAAI,CAACsG,cAAc,EAAE;QACrB,MAAMtG,MAAI,CAAChB,SAAS,EAAE;OACvB,CAAC,OAAOX,KAAU,EAAE;QACnB2B,MAAI,CAACnF,mBAAmB,CAACqE,SAAS,CAACb,KAAK,CAACgI,OAAO,IAAI,0BAA0B,CAAC;OAChF,SAAS;QACRrG,MAAI,CAACnN,SAAS,GAAG,KAAK;;IACvB;EACH;EAEMmU,UAAUA,CAACnb,IAAoB;IAAA,IAAAkV,MAAA;IAAA,OAAAjC,4JAAA;MACnC,MAAMqI,SAAS,SAASpG,MAAI,CAAClG,mBAAmB,CAACuM,gBAAgB,CAC/D,kBAAkB,EAClB,8CAA8Cvb,IAAI,CAACoJ,KAAK,GAAG,CAC5D;MAED,IAAI,CAACkS,SAAS,EAAE;MAEhBpG,MAAI,CAAClO,SAAS,GAAG,IAAI;MACrB,IAAI;QACF,MAAMkO,MAAI,CAACvV,eAAe,CAAC2sC,kBAAkB,CAACtsC,IAAI,CAACoT,EAAE,CAAC;QACtD8B,MAAI,CAAClG,mBAAmB,CAAC8L,WAAW,CAAC,gCAAgC,CAAC;QACtE,MAAM5F,MAAI,CAAC/B,SAAS,EAAE;OACvB,CAAC,OAAOX,KAAU,EAAE;QACnB0C,MAAI,CAAClG,mBAAmB,CAACqE,SAAS,CAACb,KAAK,CAACgI,OAAO,IAAI,2BAA2B,CAAC;OACjF,SAAS;QACRtF,MAAI,CAAClO,SAAS,GAAG,KAAK;;IACvB;EACH;EAEMgU,gBAAgBA,CAAChb,IAAoB;IAAA,IAAAmV,MAAA;IAAA,OAAAlC,4JAAA;MACzC,MAAMs5B,SAAS,GAAG,CAACvsC,IAAI,CAACkQ,MAAM;MAC9B,MAAMs8B,MAAM,GAAGD,SAAS,GAAG,SAAS,GAAG,YAAY;MAEnD,MAAMjxB,SAAS,SAASnG,MAAI,CAACnG,mBAAmB,CAACuM,gBAAgB,CAC/D,GAAGixB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC//B,WAAW,EAAE,GAAG8/B,MAAM,CAACvnC,KAAK,CAAC,CAAC,CAAC,UAAU,EAC7D,0BAA0BunC,MAAM,eAAexsC,IAAI,CAACoJ,KAAK,GAAG,CAC7D;MAED,IAAI,CAACkS,SAAS,EAAE;MAEhBnG,MAAI,CAACnO,SAAS,GAAG,IAAI;MACrB,IAAI;QACF,MAAMmO,MAAI,CAACxV,eAAe,CAACub,wBAAwB,CAAClb,IAAI,CAACoT,EAAE,CAAC;QAC5D+B,MAAI,CAACnG,mBAAmB,CAAC8L,WAAW,CAAC,WAAW0xB,MAAM,kBAAkB,CAAC;QACzE,MAAMr3B,MAAI,CAAChC,SAAS,EAAE;OACvB,CAAC,OAAOX,KAAU,EAAE;QACnB2C,MAAI,CAACnG,mBAAmB,CAACqE,SAAS,CAACb,KAAK,CAACgI,OAAO,IAAI,YAAYgyB,MAAM,UAAU,CAAC;OAClF,SAAS;QACRr3B,MAAI,CAACnO,SAAS,GAAG,KAAK;;IACvB;EACH;EAEQqlC,YAAYA,CAAA;IAClB,IAAI,CAAC,IAAI,CAACtB,QAAQ,CAAC3hC,KAAK,EAAE;MACxB,IAAI,CAAC4F,mBAAmB,CAACqE,SAAS,CAAC,uBAAuB,CAAC;MAC3D,OAAO,KAAK;;IAGd,IAAI,CAAC,IAAI,CAAC23B,UAAU,IAAI,CAAC,IAAI,CAACD,QAAQ,CAACjjC,QAAQ,EAAE;MAC/C,IAAI,CAACkH,mBAAmB,CAACqE,SAAS,CAAC,iDAAiD,CAAC;MACrF,OAAO,KAAK;;IAGd,IAAI,IAAI,CAAC03B,QAAQ,CAACjjC,QAAQ,IAAI,IAAI,CAACijC,QAAQ,CAACjjC,QAAQ,CAACQ,MAAM,GAAG,CAAC,EAAE;MAC/D,IAAI,CAAC0G,mBAAmB,CAACqE,SAAS,CAAC,gDAAgD,CAAC;MACpF,OAAO,KAAK;;IAGd,IAAI,IAAI,CAAC03B,QAAQ,CAACjjC,QAAQ,IAAI,IAAI,CAACijC,QAAQ,CAACjjC,QAAQ,KAAK,IAAI,CAACijC,QAAQ,CAACr6B,eAAe,EAAE;MACtF,IAAI,CAAC1B,mBAAmB,CAACqE,SAAS,CAAC,8BAA8B,CAAC;MAClE,OAAO,KAAK;;IAGd,IAAI,IAAI,CAAC03B,QAAQ,CAAC96B,IAAI,KAAK,UAAU,IAAI,CAAC,IAAI,CAAC86B,QAAQ,CAACznC,QAAQ,CAACkmB,IAAI,EAAE,EAAE;MACvE,IAAI,CAACxa,mBAAmB,CAACqE,SAAS,CAAC,yDAAyD,CAAC;MAC7F,OAAO,KAAK;;IAGd,OAAO,IAAI;EACb;EAEAk3B,YAAYA,CAACt6B,IAAY;IACvB,OAAOA,IAAI,KAAK,OAAO,GAAG,eAAe,GAAG,UAAU;EACxD;EAEAw6B,cAAcA,CAACv6B,MAAe;IAC5B,OAAOA,MAAM,GAAG,QAAQ,GAAG,UAAU;EACvC;EAEAs6B,cAAcA,CAACt6B,MAAe;IAC5B,OAAOA,MAAM,GAAG,eAAe,GAAG,iBAAiB;EACrD;EAEA;EACAy6B,aAAaA,CAAC1tB,KAAa,EAAEjd,IAAoB;IAC/C,OAAOA,IAAI,CAACoT,EAAE;EAChB;;;uBAvPWxR,uBAAuB,EAAAxB,+DAAA,CAAAE,uEAAA,GAAAF,+DAAA,CAAAI,+EAAA,GAAAJ,+DAAA,CAAAspB,mDAAA,GAAAtpB,+DAAA,CAAAA,4DAAA;IAAA;EAAA;;;YAAvBwB,uBAAuB;MAAAlB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA4rC,iCAAA1rC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCT9BZ,4DAHN,aAAuC,aACjB,aACO,gBAIoB;UAFnCA,wDAAA,mBAAAusC,yDAAA;YAAA,OAAS1rC,GAAA,CAAAmrC,YAAA,EAAc;UAAA,EAAC;UAG9BhsC,uDAAA,WAAiC;UAACA,oDAAA,4BACpC;UAAAA,0DAAA,EAAS;UACTA,4DAAA,SAAI;UAAAA,oDAAA,+BAAmB;UACzBA,0DADyB,EAAK,EACxB;UACNA,4DAAA,gBAGoC;UAF5BA,wDAAA,mBAAAwsC,yDAAA;YAAA,OAAS3rC,GAAA,CAAA8e,mBAAA,EAAqB;UAAA,EAAC;UAGrC3f,uDAAA,WAA2B;UAACA,oDAAA,uBAC9B;UACFA,0DADE,EAAS,EACL;UAGNA,4DAAA,cAAmC;UA0DjCA,wDAzDA,KAAAysC,yCAAA,oBAAkE,KAAAC,uCAAA,iBAmDrB,KAAAC,uCAAA,kBAMqB;UAStE3sC,0DADE,EAAM,EACF;UAGNA,wDAAA,KAAA4sC,uCAAA,oBAA4E;;;UArF9D5sC,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UAQxB5G,uDAAA,GAAsB;UAAtBA,wDAAA,aAAAa,GAAA,CAAA+F,SAAA,CAAsB;UAQF5G,uDAAA,GAAoC;UAApCA,wDAAA,UAAAa,GAAA,CAAA+F,SAAA,IAAA/F,GAAA,CAAA6O,KAAA,CAAAxH,MAAA,KAAoC;UAmDpClI,uDAAA,EAAe;UAAfA,wDAAA,SAAAa,GAAA,CAAA+F,SAAA,CAAe;UAMjB5G,uDAAA,EAAsC;UAAtCA,wDAAA,UAAAa,GAAA,CAAA+F,SAAA,IAAA/F,GAAA,CAAA6O,KAAA,CAAAxH,MAAA,OAAsC;UAYxClI,uDAAA,EAAmB;UAAnBA,wDAAA,SAAAa,GAAA,CAAA8O,aAAA,CAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFgB;AACrC;;;;AAMpB,MAAO/N,UAAU;EACrBtC,YACUC,eAAgC,EAChCC,MAAc;IADd,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;EACb;EAEH2C,WAAWA,CAAA;IACT,OAAO,IAAI,CAAC5C,eAAe,CAACG,YAAY,CAACutC,IAAI,CAC3CH,uDAAO,CAAC,IAAI,CAAC;IAAE;IACf90B,mDAAG,CAACpY,IAAI,IAAG;MACT,MAAMstC,OAAO,GAAGttC,IAAI,EAAEiQ,IAAI,KAAK,OAAO;MACtC,OAAOq9B,OAAO;IAChB,CAAC,CAAC,EACFL,mDAAG,CAACK,OAAO,IAAG;MACZ,IAAI,CAACA,OAAO,EAAE;QACZ,IAAI,CAAC1tC,MAAM,CAACO,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;;IAEvC,CAAC,CAAC,EACFgtC,0DAAU,CAAC36B,KAAK,IAAG;MACjB,IAAI,CAAC5S,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAOitC,wCAAE,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC,CACH;EACH;;;uBAvBWprC,UAAU,EAAA5B,sDAAA,CAAAE,uEAAA,GAAAF,sDAAA,CAAAI,mDAAA;IAAA;EAAA;;;aAAVwB,UAAU;MAAAwrC,OAAA,EAAVxrC,UAAU,CAAAyrC,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;;ACL2C;AACrC;;;;AAMpB,MAAO3rC,SAAS;EACpBrC,YACUC,eAAgC,EAChCC,MAAc;IADd,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;EACb;EAEH2C,WAAWA,CAAA;IACT,OAAO,IAAI,CAAC5C,eAAe,CAACG,YAAY,CAACutC,IAAI,CAC3CH,uDAAO,CAAC,IAAI,CAAC;IAAE;IACf90B,mDAAG,CAACpY,IAAI,IAAG;MACT,OAAO,CAAC,CAACA,IAAI;IACf,CAAC,CAAC,EACFitC,mDAAG,CAACU,eAAe,IAAG;MACpB,IAAI,CAACA,eAAe,EAAE;QACpB,IAAI,CAAC/tC,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,CAAC,EACFgtC,0DAAU,CAAC36B,KAAK,IAAG;MACjB;MACA,IAAI,CAAC5S,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAOitC,wCAAE,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC,CACH;EACH;;;uBAvBWrrC,SAAS,EAAA3B,sDAAA,CAAAE,uEAAA,GAAAF,sDAAA,CAAAI,mDAAA;IAAA;EAAA;;;aAATuB,SAAS;MAAAyrC,OAAA,EAATzrC,SAAS,CAAA0rC,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA;;;;;;;;;;;;;;;;;;;ACJ4B;;;;AAK1C,MAAOzrC,aAAa;EAExBvC,YACUC,eAAgC,EAChCC,MAAc;IADd,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;EACb;EAEH2C,WAAWA,CAAA;IACT,OAAO,IAAI,CAAC5C,eAAe,CAACG,YAAY,CAACutC,IAAI,CAC3Cj1B,mDAAG,CAACpY,IAAI,IAAG;MACT,IAAI,CAACA,IAAI,EAAE;QACT,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,KAAK;;MAGd,IAAIH,IAAI,CAACiQ,IAAI,KAAK,UAAU,EAAE;QAC5B,IAAI,CAACrQ,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,KAAK;;MAGd,OAAO,IAAI;IACb,CAAC,CAAC,CACH;EACH;;;uBAvBW8B,aAAa,EAAA7B,sDAAA,CAAAE,uEAAA,GAAAF,sDAAA,CAAAI,mDAAA;IAAA;EAAA;;;aAAbyB,aAAa;MAAAurC,OAAA,EAAbvrC,aAAa,CAAAwrC,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA;;;;;;;;;;;;;;;AC6Db,MAAM7qC,gBAAgB,GAAqB,CAChD;EAAEI,IAAI,EAAE,QAAQ;EAAEG,KAAK,EAAE,QAAQ;EAAEoE,SAAS,EAAE,MAAM;EAAG08B,QAAQ,EAAE;AAAO,CAAE,EAC1E;EAAEjhC,IAAI,EAAE,OAAO;EAAEG,KAAK,EAAE,OAAO;EAAEoE,SAAS,EAAE,OAAO;EAAE08B,QAAQ,EAAE;AAAO,CAAE,EACxE;EAAEjhC,IAAI,EAAE,OAAO;EAAEG,KAAK,EAAE,OAAO;EAAEoE,SAAS,EAAE,OAAO;EAAE08B,QAAQ,EAAE;AAAO,CAAE,CACzE,C;;;;;;;;;;;;;;;;;;;;;;;ACvE4B;AACH;AACc;AACJ;;;AAwE9B,MAAOra,aAAa;EAExBnqB,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;EAAqB;EAElDquC,aAAaA,CAAAp3B,EAAA,EAA+C;IAAA,IAAA5D,KAAA;IAAA,OAAAC,4JAAA,YAA9C0B,IAAS,EAAEs5B,QAAA,GAAmB,gBAAgB;MAChE,IAAI;QACF;QACA,MAAMC,QAAQ,GAAGN,uCAAU,CAACQ,QAAQ,EAAE;QAEtC;QACA,MAAMC,WAAW,GAAG,CAClB,CAAC,qCAAqC,CAAC,EACvC,CAAC,QAAQ,EAAE15B,IAAI,CAAC25B,cAAc,CAACrrB,YAAY,CAAC,EAC5C,CAAC,OAAO,EAAEtO,IAAI,CAAC25B,cAAc,CAACzqB,WAAW,CAAC,EAC1C,CAAC,oBAAoB,EAAElP,IAAI,CAAC25B,cAAc,CAAChrB,cAAc,CAAC,EAC1D,CAAC,EAAE,CAAC,EACJ,CAAC,iBAAiB,CAAC,EACnB,CAAC,WAAW,EAAE,OAAO,CAAC,EACtB,CAAC,eAAe,EAAE3O,IAAI,CAAC25B,cAAc,CAAChqC,YAAY,CAAC,EACnD,CAAC,cAAc,EAAEqQ,IAAI,CAAC25B,cAAc,CAACx5B,WAAW,CAAC,EACjD,CAAC,eAAe,EAAEH,IAAI,CAAC25B,cAAc,CAACv5B,YAAY,CAAC,EACnD,CAAC,gBAAgB,EAAEJ,IAAI,CAAC25B,cAAc,CAAC/qB,aAAa,CAAC,CACtD;QACD,MAAMgrB,SAAS,GAAGX,uCAAU,CAACY,YAAY,CAACH,WAAW,CAAC;QAEtD;QACAE,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC;UAAEE,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,CAAC;QACnDb,uCAAU,CAACc,iBAAiB,CAACR,QAAQ,EAAEK,SAAS,EAAE,iBAAiB,CAAC;QAEpE;QACA,MAAMI,aAAa,GAAG,CAAC,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,QAAQ,CAAC;QAC/H,MAAMC,UAAU,GAAGj6B,IAAI,CAAC+kB,gBAAgB,CAACpxB,MAAM,GAAG,CAAC,GAC/CqM,IAAI,CAAC+kB,gBAAgB,CAACthB,GAAG,CAAEK,CAAM,IAAK,CACpCA,CAAC,CAACpT,MAAM,EACRoT,CAAC,CAACnU,YAAY,EACdmU,CAAC,CAAC3D,WAAW,EACb2D,CAAC,CAAC1D,YAAY,EACd0D,CAAC,CAAC8K,aAAa,EACf9K,CAAC,CAACgtB,MAAM,EACRhtB,CAAC,CAAC5S,aAAa,EACf4S,CAAC,CAACC,MAAM,CACT,CAAC,GACF,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAE1C,MAAM3E,UAAU,GAAG,CACjB,CAAC,oBAAoB,CAAC,EACtB,CAAC,EAAE,CAAC,EACJ46B,aAAa,EACb,GAAGC,UAAU,CACd;QACD,MAAMC,QAAQ,GAAGjB,uCAAU,CAACY,YAAY,CAACz6B,UAAU,CAAC;QACpD86B,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;UAAEJ,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAC,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAC,CAAE,CAAC;QAC1Ib,uCAAU,CAACc,iBAAiB,CAACR,QAAQ,EAAEW,QAAQ,EAAE,oBAAoB,CAAC;QAEtE;QACA,MAAMC,eAAe,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,eAAe,EAAE,QAAQ,CAAC;QAC1G,MAAMC,YAAY,GAAGp6B,IAAI,CAACq6B,kBAAkB,CAAC1mC,MAAM,GAAG,CAAC,GACnDqM,IAAI,CAACq6B,kBAAkB,CAAC52B,GAAG,CAAEK,CAAM,IAAK,CACtCA,CAAC,CAACnV,QAAQ,EACVmV,CAAC,CAACC,MAAM,EACRD,CAAC,CAACnU,YAAY,EACdmU,CAAC,CAAC3D,WAAW,EACb2D,CAAC,CAAC1D,YAAY,EACd0D,CAAC,CAAC8K,aAAa,CAChB,CAAC,GACF,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAElC,MAAMxB,YAAY,GAAG,CACnB,CAAC,sBAAsB,CAAC,EACxB,CAAC,EAAE,CAAC,EACJ+sB,eAAe,EACf,GAAGC,YAAY,CAChB;QACD,MAAME,UAAU,GAAGrB,uCAAU,CAACY,YAAY,CAACzsB,YAAY,CAAC;QACxDktB,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC;UAAER,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAC,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAC,CAAE,CAAC;QAC9Gb,uCAAU,CAACc,iBAAiB,CAACR,QAAQ,EAAEe,UAAU,EAAE,sBAAsB,CAAC;QAE1E;QACA,MAAMC,WAAW,GAAG,CAAC,CAAC,6BAA6B,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAE3D,IAAIv6B,IAAI,CAACyB,gBAAgB,CAAC9N,MAAM,GAAG,CAAC,EAAE;UACpCqM,IAAI,CAACyB,gBAAgB,CAACuH,OAAO,CAAEwxB,KAAU,IAAI;YAC3C;YACAD,WAAW,CAAC7tB,IAAI,CAAC,CAAC,GAAG8tB,KAAK,CAAC9pC,MAAM,MAAM8pC,KAAK,CAAC7rC,QAAQ,cAAc6rC,KAAK,CAACC,mBAAmB,CAAC1rC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC5GwrC,WAAW,CAAC7tB,IAAI,CAAC,CAAC,QAAQ,EAAE,eAAe,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC;YAE9E;YACA8tB,KAAK,CAACnqC,OAAO,CAAC2Y,OAAO,CAAE+kB,GAAQ,IAAI;cACjCwM,WAAW,CAAC7tB,IAAI,CAAC,CACfqhB,GAAG,CAACv+B,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACtCq+B,GAAG,CAACp+B,YAAY,EAChBo+B,GAAG,CAACphB,cAAc,EAClBohB,GAAG,CAACnhB,UAAU,CACf,CAAC;YACJ,CAAC,CAAC;YAEF2tB,WAAW,CAAC7tB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAC1B,CAAC,CAAC;SACH,MAAM;UACL6tB,WAAW,CAAC7tB,IAAI,CAAC,CAAC,+BAA+B,CAAC,CAAC;;QAGrD,MAAMguB,SAAS,GAAGzB,uCAAU,CAACY,YAAY,CAACU,WAAW,CAAC;QACtDG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC;UAAEZ,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,CAAC;QACjFb,uCAAU,CAACc,iBAAiB,CAACR,QAAQ,EAAEmB,SAAS,EAAE,oBAAoB,CAAC;QAEvE;QACA,MAAMC,aAAa,GAAG,CAAC,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC;QACzG,MAAMC,UAAU,GAAG56B,IAAI,CAAC66B,aAAa,CAAClnC,MAAM,GAAG,CAAC,GAC5CqM,IAAI,CAAC66B,aAAa,CAACp3B,GAAG,CAAEq3B,CAAM,IAAK,CACjCA,CAAC,CAAC9mC,YAAY,EACd8mC,CAAC,CAACpiC,KAAK,EACPoiC,CAAC,CAACrsB,IAAI,EACNqsB,CAAC,CAACpqC,MAAM,EACRoqC,CAAC,CAACnsC,QAAQ,EACVmsC,CAAC,CAACzqC,OAAO,EACTyqC,CAAC,CAAC1mC,KAAK,EACP0mC,CAAC,CAAChK,MAAM,CACT,CAAC,GACF,CAAC,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAE9C,MAAMiK,UAAU,GAAG,CACjB,CAAC,4BAA4B,CAAC,EAC9B,CAAC,EAAE,CAAC,EACJJ,aAAa,EACb,GAAGC,UAAU,EACb,CAAC,EAAE,CAAC,EACJ,CAAC,UAAU,CAAC,EACZ,CAAC,kBAAkB,EAAE56B,IAAI,CAAC66B,aAAa,CAAClnC,MAAM,CAAC,EAC/C,CAAC,cAAc,EAAEqM,IAAI,CAAC25B,cAAc,CAAChqC,YAAY,CAAC,CACnD;QACD,MAAMqrC,QAAQ,GAAG/B,uCAAU,CAACY,YAAY,CAACkB,UAAU,CAAC;QACpDC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;UAAElB,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,CAAC;QAC5Ib,uCAAU,CAACc,iBAAiB,CAACR,QAAQ,EAAEyB,QAAQ,EAAE,mBAAmB,CAAC;QAErE;QACA,MAAMC,WAAW,GAAGhC,uCAAU,CAACM,QAAQ,EAAE;UAAE4B,QAAQ,EAAE,MAAM;UAAEjxB,IAAI,EAAE;QAAO,CAAE,CAAC;QAC7E,MAAMF,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACgxB,WAAW,CAAC,EAAE;UAAE/wB,IAAI,EAAE;QAAmE,CAAE,CAAC;QAEnH,MAAMkxB,YAAY,GAAG/8B,KAAI,CAACrT,eAAe,CAACgS,2BAA2B,CAACqB,KAAI,CAACrT,eAAe,CAAC+R,mBAAmB,EAAE,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/Hm8B,kDAAM,CAACpvB,IAAI,EAAE,GAAGsvB,QAAQ,IAAI8B,YAAY,OAAO,CAAC;OAEjD,CAAC,OAAOv9B,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,MAAMA,KAAK;;IACZ,GAAA8E,KAAA,OAAAC,SAAA;EACH;EAEA;EACM+N,mBAAmBA,CAAAzO,GAAA,EAAqD;IAAA,IAAA1C,MAAA;IAAA,OAAAlB,4JAAA,YAApD0B,IAAS,EAAEs5B,QAAA,GAAmB,sBAAsB;MAC5E,IAAI;QACF;QACA,MAAMC,QAAQ,GAAGN,uCAAU,CAACQ,QAAQ,EAAE;QAEtC;QACA,MAAMz4B,aAAa,GAAG,CACpB,CAAC,4CAA4C,CAAC,EAC9C,CAAC,QAAQ,EAAEhB,IAAI,CAACsO,YAAY,CAAC,EAC7B,CAAC,OAAO,EAAEtO,IAAI,CAACkP,WAAW,CAAC,EAC3B,CAAC,oBAAoB,EAAElP,IAAI,CAAC2O,cAAc,CAAC,EAC3C,CAAC,EAAE,CAAC,EACJ,CAAC,qBAAqB,CAAC,EACvB,CAAC,WAAW,EAAE,OAAO,CAAC,EACtB,CAAC,eAAe,EAAE,KAAK3O,IAAI,CAACmP,SAAS,CAACxf,YAAY,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAChE,CAAC,cAAc,EAAE,KAAKiR,IAAI,CAACmP,SAAS,CAAChP,WAAW,CAACpR,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAC9D,CAAC,eAAe,EAAE,KAAKiR,IAAI,CAACmP,SAAS,CAAC/O,YAAY,CAACrR,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAChE,CAAC,gBAAgB,EAAEiR,IAAI,CAACmP,SAAS,CAACP,aAAa,CAAC,CACjD;QACD,MAAMysB,WAAW,GAAGpC,uCAAU,CAACY,YAAY,CAAC74B,aAAa,CAAC;QAE1D;QACAq6B,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC;UAAEvB,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,CAAC;QACrDb,uCAAU,CAACc,iBAAiB,CAACR,QAAQ,EAAE8B,WAAW,EAAE,WAAW,CAAC;QAEhE;QACA,MAAMjuB,YAAY,GAAG,CACnB,CAAC,wBAAwB,CAAC,EAC1B,CAAC,EAAE,CAAC,EACJpN,IAAI,CAAC6O,oBAAoB,CAACC,OAAO,EACjC,GAAG9O,IAAI,CAAC6O,oBAAoB,CAACE,KAAK,CAACtL,GAAG,CAAE63B,IAAS,IAAI;UACnD;UACA,IAAInrB,KAAK,CAACorB,OAAO,CAACD,IAAI,CAAC,EAAE;YACvB,OAAOA,IAAI;;UAEb;UACA,OAAO,CACLA,IAAI,CAAC3sC,QAAQ,EACb2sC,IAAI,CAACv3B,MAAM,EACXu3B,IAAI,CAAC3rC,YAAY,EACjB2rC,IAAI,CAACn7B,WAAW,EAChBm7B,IAAI,CAACl7B,YAAY,CAClB;QACH,CAAC,CAAC,EACF,CAAC,EAAE,CAAC,EACJ,CAAC,eAAe,CAAC;QACjB;QACA+P,KAAK,CAACorB,OAAO,CAACv7B,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAAC,GAC5CjP,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,GACjC,CACEjP,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAACtgB,QAAQ,EAC1CqR,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAAClL,MAAM,EACxC/D,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAACtf,YAAY,EAC9CqQ,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAAC9O,WAAW,EAC7CH,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAAC7O,YAAY,CAC/C,CACN;QACD,MAAMo7B,YAAY,GAAGvC,uCAAU,CAACY,YAAY,CAACzsB,YAAY,CAAC;QAC1DouB,YAAY,CAAC,OAAO,CAAC,GAAG,CACtB;UAAE1B,KAAK,EAAE;QAAE,CAAE,EACb;UAAEA,KAAK,EAAE;QAAE,CAAE,EACb;UAAEA,KAAK,EAAE;QAAE,CAAE,EACb;UAAEA,KAAK,EAAE;QAAE,CAAE,EACb;UAAEA,KAAK,EAAE;QAAE,CAAE,CACd;QACDb,uCAAU,CAACc,iBAAiB,CAACR,QAAQ,EAAEiC,YAAY,EAAE,oBAAoB,CAAC;QAE1E;QACA,MAAMjB,WAAW,GAAG,CAAC,CAAC,6BAA6B,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAE3D,IAAIv6B,IAAI,CAACyB,gBAAgB,CAAC9N,MAAM,GAAG,CAAC,EAAE;UACpCqM,IAAI,CAACyB,gBAAgB,CAACuH,OAAO,CAAEyE,WAAgB,IAAI;YACjDA,WAAW,CAAC7c,UAAU,CAACoY,OAAO,CAAE2E,aAAkB,IAAI;cACpD;cACA4sB,WAAW,CAAC7tB,IAAI,CAAC,CAAC,GAAGe,WAAW,CAAC/c,MAAM,MAAMid,aAAa,CAAChf,QAAQ,EAAE,CAAC,CAAC;cAEvE;cACA,IAAIgf,aAAa,CAAC8tB,UAAU,IAAI9tB,aAAa,CAAC8tB,UAAU,CAAC9nC,MAAM,GAAG,CAAC,EAAE;gBACnE4mC,WAAW,CAAC7tB,IAAI,CAAC,CAAC,6BAA6B,CAAC,CAAC;gBACjD6tB,WAAW,CAAC7tB,IAAI,CAAC,CAAC,UAAU,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;gBAEzD,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,IAAI,CAACwtB,GAAG,CAAC,CAAC,EAAE/tB,aAAa,CAAC8tB,UAAU,CAAC9nC,MAAM,CAAC,EAAEka,CAAC,EAAE,EAAE;kBACrE,MAAMkgB,GAAG,GAAGpgB,aAAa,CAAC8tB,UAAU,CAAC5tB,CAAC,CAAC;kBACvC0sB,WAAW,CAAC7tB,IAAI,CAAC,CACf,IAAImB,CAAC,GAAG,CAAC,EAAE,EACXkgB,GAAG,CAACv+B,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACtCq+B,GAAG,CAACp+B,YAAY,CACjB,CAAC;;;cAIN;cACA,IAAIge,aAAa,CAACtd,OAAO,IAAIsd,aAAa,CAACtd,OAAO,CAACsD,MAAM,GAAG,CAAC,EAAE;gBAC7D4mC,WAAW,CAAC7tB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBACtB6tB,WAAW,CAAC7tB,IAAI,CAAC,CAAC,2BAA2B,CAAC,CAAC;gBAC/C6tB,WAAW,CAAC7tB,IAAI,CAAC,CAAC,QAAQ,EAAE,eAAe,EAAE,iBAAiB,CAAC,CAAC;gBAEhEiB,aAAa,CAACtd,OAAO,CAAC2Y,OAAO,CAAE+kB,GAAQ,IAAI;kBACzCwM,WAAW,CAAC7tB,IAAI,CAAC,CACfqhB,GAAG,CAACv+B,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACtCq+B,GAAG,CAACp+B,YAAY,EAChBo+B,GAAG,CAACphB,cAAc,CACnB,CAAC;gBACJ,CAAC,CAAC;;cAGJ4tB,WAAW,CAAC7tB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1B,CAAC,CAAC;UACJ,CAAC,CAAC;SACH,MAAM;UACL6tB,WAAW,CAAC7tB,IAAI,CAAC,CAAC,+BAA+B,CAAC,CAAC;;QAGrD,MAAMguB,SAAS,GAAGzB,uCAAU,CAACY,YAAY,CAACU,WAAW,CAAC;QACtDG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC;UAAEZ,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,EAAE;UAAEA,KAAK,EAAE;QAAE,CAAE,CAAC;QAClEb,uCAAU,CAACc,iBAAiB,CAACR,QAAQ,EAAEmB,SAAS,EAAE,oBAAoB,CAAC;QAEvE;QACA,MAAMO,WAAW,GAAGhC,uCAAU,CAACM,QAAQ,EAAE;UAAE4B,QAAQ,EAAE,MAAM;UAAEjxB,IAAI,EAAE;QAAO,CAAE,CAAC;QAC7E,MAAMF,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACgxB,WAAW,CAAC,EAAE;UAAE/wB,IAAI,EAAE;QAAmE,CAAE,CAAC;QAEnH,MAAMkxB,YAAY,GAAG57B,MAAI,CAACxU,eAAe,CAACgS,2BAA2B,CAACwC,MAAI,CAACxU,eAAe,CAAC+R,mBAAmB,EAAE,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/Hm8B,kDAAM,CAACpvB,IAAI,EAAE,GAAGsvB,QAAQ,IAAI8B,YAAY,OAAO,CAAC;OAEjD,CAAC,OAAOv9B,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtD,MAAMA,KAAK;;IACZ,GAAA8E,KAAA,OAAAC,SAAA;EACH;EAEM+4B,WAAWA,CAAAC,GAAA,EAA+C;IAAA,IAAAr7B,MAAA;IAAA,OAAAjC,4JAAA,YAA9C0B,IAAS,EAAEs5B,QAAA,GAAmB,gBAAgB;MAC9D,IAAI;QACF,MAAMuC,GAAG,GAAG,IAAI3C,6CAAK,EAAE;QACvB,MAAM4C,UAAU,GAAGD,GAAG,CAACE,QAAQ,CAACC,QAAQ,CAACC,MAAM;QAC/C,IAAIC,SAAS,GAAG,EAAE;QAElB;QACA,MAAMC,YAAY,GAAGA,CAACC,aAAA,GAAwB,EAAE,KAAI;UAClD,IAAIF,SAAS,GAAGE,aAAa,GAAGN,UAAU,GAAG,EAAE,EAAE;YAC/CD,GAAG,CAACQ,OAAO,EAAE;YACbH,SAAS,GAAG,EAAE;;QAElB,CAAC;QAED;QACAL,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QAChCV,GAAG,CAACW,IAAI,CAAC,qCAAqC,EAAE,EAAE,EAAEN,SAAS,CAAC;QAC9DA,SAAS,IAAI,EAAE;QAEfL,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;QAClCV,GAAG,CAACW,IAAI,CAAC,UAAUx8B,IAAI,CAAC25B,cAAc,CAACrrB,YAAY,EAAE,EAAE,EAAE,EAAE4tB,SAAS,CAAC;QACrEL,GAAG,CAACW,IAAI,CAAC,SAASx8B,IAAI,CAAC25B,cAAc,CAACzqB,WAAW,EAAE,EAAE,GAAG,EAAEgtB,SAAS,CAAC;QACpEA,SAAS,IAAI,CAAC;QAEdL,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACW,IAAI,CAAC,YAAYx8B,IAAI,CAAC25B,cAAc,CAAChrB,cAAc,EAAE,EAAE,EAAE,EAAEutB,SAAS,CAAC;QACzEA,SAAS,IAAI,EAAE;QAEf;QACAC,YAAY,CAAC,EAAE,CAAC;QAChBN,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QAChCV,GAAG,CAACW,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAEN,SAAS,CAAC;QAC7CA,SAAS,IAAI,EAAE;QAEf,MAAMO,YAAY,GAAG,CACnB,CAAC,WAAW,EAAE,OAAO,CAAC,EACtB,CAAC,eAAe,EAAE,KAAKz8B,IAAI,CAAC25B,cAAc,CAAChqC,YAAY,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EACrE,CAAC,cAAc,EAAE,KAAKiR,IAAI,CAAC25B,cAAc,CAACx5B,WAAW,CAACpR,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EACnE,CAAC,eAAe,EAAE,KAAKiR,IAAI,CAAC25B,cAAc,CAACv5B,YAAY,CAACrR,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EACrE,CAAC,gBAAgB,EAAEiR,IAAI,CAAC25B,cAAc,CAAC/qB,aAAa,CAACnf,QAAQ,EAAE,CAAC,CACjE;QAED0pC,2DAAS,CAAC0C,GAAG,EAAE;UACba,IAAI,EAAE,CAACD,YAAY,CAAC,CAAC,CAAC,CAAC;UACvBrzB,IAAI,EAAEqzB,YAAY,CAACnsC,KAAK,CAAC,CAAC,CAAC;UAC3BqsC,MAAM,EAAET,SAAS;UACjBU,KAAK,EAAE,SAAS;UAChBC,UAAU,EAAE;YAAEC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;YAAEC,SAAS,EAAE;UAAG,CAAE;UACzDxW,MAAM,EAAE;YAAEyW,QAAQ,EAAE,EAAE;YAAEC,WAAW,EAAE;UAAC,CAAE;UACxCC,YAAY,EAAE;YACZ,CAAC,EAAE;cAAEC,SAAS,EAAE;YAAE,CAAE;YACpB,CAAC,EAAE;cAAEA,SAAS,EAAE,EAAE;cAAEC,MAAM,EAAE;YAAO;;SAEtC,CAAC;QAEFlB,SAAS,GAAIL,GAAW,CAACwB,aAAa,CAACC,MAAM,GAAG,EAAE;QAElD;QACAnB,YAAY,CAAC,GAAG,CAAC;QACjBN,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QAChCV,GAAG,CAACW,IAAI,CAAC,uBAAuB,EAAE,EAAE,EAAEN,SAAS,CAAC;QAChDA,SAAS,IAAI,EAAE;QAEf,IAAIl8B,IAAI,CAAC+kB,gBAAgB,CAACpxB,MAAM,GAAG,CAAC,EAAE;UACpC,MAAM4pC,eAAe,GAAG,CACtB,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,EACpF,GAAGv9B,IAAI,CAAC+kB,gBAAgB,CAACthB,GAAG,CAAEK,CAAM,IAAK,CACvCA,CAAC,CAACpT,MAAM,EACR,KAAKoT,CAAC,CAACnU,YAAY,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAE,EAChC,KAAK+U,CAAC,CAAC3D,WAAW,CAACpR,OAAO,CAAC,CAAC,CAAC,EAAE,EAC/B,KAAK+U,CAAC,CAAC1D,YAAY,CAACrR,OAAO,CAAC,CAAC,CAAC,EAAE,EAChC+U,CAAC,CAAC8K,aAAa,CAACnf,QAAQ,EAAE,EAC1BqU,CAAC,CAACgtB,MAAM,EACRhtB,CAAC,CAAC5S,aAAa,EACf4S,CAAC,CAACC,MAAM,CAACtU,QAAQ,EAAE,CACpB,CAAC,CACH;UAED0pC,2DAAS,CAAC0C,GAAG,EAAE;YACba,IAAI,EAAE,CAACa,eAAe,CAAC,CAAC,CAAC,CAAC;YAC1Bn0B,IAAI,EAAEm0B,eAAe,CAACjtC,KAAK,CAAC,CAAC,CAAC;YAC9BqsC,MAAM,EAAET,SAAS;YACjBU,KAAK,EAAE,SAAS;YAChBC,UAAU,EAAE;cAAEC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;cAAEC,SAAS,EAAE;YAAG,CAAE;YACzDxW,MAAM,EAAE;cAAEyW,QAAQ,EAAE,CAAC;cAAEC,WAAW,EAAE;YAAC,CAAE;YACvCC,YAAY,EAAE;cACZ,CAAC,EAAE;gBAAEC,SAAS,EAAE;cAAE,CAAE;cACpB,CAAC,EAAE;gBAAEA,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAQ,CAAE;cACtC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAQ,CAAE;cACtC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAQ,CAAE;cACtC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAQ;;WAEvC,CAAC;UAEFlB,SAAS,GAAIL,GAAW,CAACwB,aAAa,CAACC,MAAM,GAAG,EAAE;;QAGpD;QACAnB,YAAY,CAAC,GAAG,CAAC;QACjBN,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QAChCV,GAAG,CAACW,IAAI,CAAC,yBAAyB,EAAE,EAAE,EAAEN,SAAS,CAAC;QAClDA,SAAS,IAAI,EAAE;QAEf,IAAIl8B,IAAI,CAACq6B,kBAAkB,CAAC1mC,MAAM,GAAG,CAAC,EAAE;UACtC,MAAM6pC,iBAAiB,GAAG,CACxB,CAAC,UAAU,EAAE,QAAQ,EAAE,eAAe,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,CAAC,EAC7E,GAAGx9B,IAAI,CAACq6B,kBAAkB,CAAC52B,GAAG,CAAEK,CAAM,IAAK,CACzCA,CAAC,CAACnV,QAAQ,EACV,GAAGmV,CAAC,CAACC,MAAM,GAAG,EACd,KAAKD,CAAC,CAACnU,YAAY,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAE,EAChC,KAAK+U,CAAC,CAAC3D,WAAW,CAACpR,OAAO,CAAC,CAAC,CAAC,EAAE,EAC/B,KAAK+U,CAAC,CAAC1D,YAAY,CAACrR,OAAO,CAAC,CAAC,CAAC,EAAE,EAChC+U,CAAC,CAAC8K,aAAa,CAACnf,QAAQ,EAAE,CAC3B,CAAC,CACH;UAED0pC,2DAAS,CAAC0C,GAAG,EAAE;YACba,IAAI,EAAE,CAACc,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC5Bp0B,IAAI,EAAEo0B,iBAAiB,CAACltC,KAAK,CAAC,CAAC,CAAC;YAChCqsC,MAAM,EAAET,SAAS;YACjBU,KAAK,EAAE,SAAS;YAChBC,UAAU,EAAE;cAAEC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;cAAEC,SAAS,EAAE;YAAG,CAAE;YACzDxW,MAAM,EAAE;cAAEyW,QAAQ,EAAE,EAAE;cAAEC,WAAW,EAAE;YAAC,CAAE;YACxCC,YAAY,EAAE;cACZ,CAAC,EAAE;gBAAEC,SAAS,EAAE;cAAE,CAAE;cACpB,CAAC,EAAE;gBAAEA,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAQ,CAAE;cACtC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAQ;;WAEvC,CAAC;UAEFlB,SAAS,GAAIL,GAAW,CAACwB,aAAa,CAACC,MAAM,GAAG,EAAE;;QAGpD;QACAzB,GAAG,CAACQ,OAAO,EAAE;QACbH,SAAS,GAAG,EAAE;QAEdL,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QAChCV,GAAG,CAACW,IAAI,CAAC,gCAAgC,EAAE,EAAE,EAAEN,SAAS,CAAC;QACzDA,SAAS,IAAI,EAAE;QAEf,IAAIl8B,IAAI,CAACyB,gBAAgB,CAAC9N,MAAM,GAAG,CAAC,EAAE;UACpCqM,IAAI,CAACyB,gBAAgB,CAACuH,OAAO,CAAEwxB,KAAU,IAAI;YAC3C2B,YAAY,CAAC,EAAE,CAAC;YAEhB;YACAN,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;YACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;YAChCV,GAAG,CAACW,IAAI,CAAC,GAAGhC,KAAK,CAAC9pC,MAAM,MAAM8pC,KAAK,CAAC7rC,QAAQ,cAAc6rC,KAAK,CAACC,mBAAmB,CAAC1rC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,EAAEmtC,SAAS,CAAC;YACjHA,SAAS,IAAI,EAAE;YAEf;YACA,IAAI1B,KAAK,CAACnqC,OAAO,CAACsD,MAAM,GAAG,CAAC,EAAE;cAC5B;cACA,MAAM8pC,IAAI,GAAG,EAAE;cACf,KAAK,IAAI5vB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2sB,KAAK,CAACnqC,OAAO,CAACsD,MAAM,EAAEka,CAAC,IAAI,CAAC,EAAE;gBAChD,MAAM6vB,GAAG,GAAGlD,KAAK,CAACnqC,OAAO,CAACC,KAAK,CAACud,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAACpK,GAAG,CAAEsK,CAAM,IACnD,GAAGA,CAAC,CAACve,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,MAAMqe,CAAC,CAACpe,YAAY,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAE,CACzE;gBACD;gBACA,OAAO2uC,GAAG,CAAC/pC,MAAM,GAAG,CAAC,EAAE+pC,GAAG,CAAChxB,IAAI,CAAC,EAAE,CAAC;gBACnC+wB,IAAI,CAAC/wB,IAAI,CAACgxB,GAAG,CAAC;;cAGhBvE,2DAAS,CAAC0C,GAAG,EAAE;gBACbzyB,IAAI,EAAEq0B,IAAI;gBACVd,MAAM,EAAET,SAAS;gBACjBU,KAAK,EAAE,MAAM;gBACbrW,MAAM,EAAE;kBACNyW,QAAQ,EAAE,CAAC;kBACXC,WAAW,EAAE,CAAC;kBACdG,MAAM,EAAE,QAAQ;kBAChBO,MAAM,EAAE;iBACT;gBACDT,YAAY,EAAE;kBACZ,CAAC,EAAE;oBAAEC,SAAS,EAAE;kBAAE,CAAE;kBACpB,CAAC,EAAE;oBAAEA,SAAS,EAAE;kBAAE,CAAE;kBACpB,CAAC,EAAE;oBAAEA,SAAS,EAAE;kBAAE,CAAE;kBACpB,CAAC,EAAE;oBAAEA,SAAS,EAAE;kBAAE,CAAE;kBACpB,CAAC,EAAE;oBAAEA,SAAS,EAAE;kBAAE;;eAErB,CAAC;cAEFjB,SAAS,GAAIL,GAAW,CAACwB,aAAa,CAACC,MAAM,GAAG,EAAE;;UAEtD,CAAC,CAAC;SACH,MAAM;UACLzB,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;UACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;UAClCV,GAAG,CAACW,IAAI,CAAC,+CAA+C,EAAE,EAAE,EAAEN,SAAS,CAAC;UACxEA,SAAS,IAAI,EAAE;;QAGjB;QACAL,GAAG,CAACQ,OAAO,EAAE;QACbH,SAAS,GAAG,EAAE;QAEdL,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QAChCV,GAAG,CAACW,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAEN,SAAS,CAAC;QACxDA,SAAS,IAAI,EAAE;QAEf,IAAIl8B,IAAI,CAAC66B,aAAa,CAAClnC,MAAM,GAAG,CAAC,EAAE;UACjC,MAAMiqC,eAAe,GAAG,CACtB,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,EACrE,GAAG59B,IAAI,CAAC66B,aAAa,CAACp3B,GAAG,CAAEq3B,CAAM,IAAK,CACpCA,CAAC,CAAC9mC,YAAY,EACd8mC,CAAC,CAACpiC,KAAK,EACPoiC,CAAC,CAACrsB,IAAI,EACNqsB,CAAC,CAACpqC,MAAM,EACRoqC,CAAC,CAACnsC,QAAQ,EACVmsC,CAAC,CAACzqC,OAAO,CAACsD,MAAM,GAAG,EAAE,GAAGmnC,CAAC,CAACzqC,OAAO,CAACi9B,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAGwN,CAAC,CAACzqC,OAAO,EACtE,KAAKyqC,CAAC,CAAC1mC,KAAK,CAACrF,OAAO,CAAC,CAAC,CAAC,EAAE,CAC1B,CAAC,CACH;UAEDoqC,2DAAS,CAAC0C,GAAG,EAAE;YACba,IAAI,EAAE,CAACkB,eAAe,CAAC,CAAC,CAAC,CAAC;YAC1Bx0B,IAAI,EAAEw0B,eAAe,CAACttC,KAAK,CAAC,CAAC,CAAC;YAC9BqsC,MAAM,EAAET,SAAS;YACjBU,KAAK,EAAE,SAAS;YAChBC,UAAU,EAAE;cAAEC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;cAAEC,SAAS,EAAE;YAAG,CAAE;YACzDxW,MAAM,EAAE;cAAEyW,QAAQ,EAAE,CAAC;cAAEC,WAAW,EAAE;YAAC,CAAE;YACvCC,YAAY,EAAE;cACZ,CAAC,EAAE;gBAAEC,SAAS,EAAE;cAAE,CAAE;cACpB,CAAC,EAAE;gBAAEA,SAAS,EAAE;cAAE,CAAE;cACpB,CAAC,EAAE;gBAAEA,SAAS,EAAE;cAAE,CAAE;cACpB,CAAC,EAAE;gBAAEA,SAAS,EAAE;cAAE,CAAE;cACpB,CAAC,EAAE;gBAAEA,SAAS,EAAE;cAAE,CAAE;cACpB,CAAC,EAAE;gBAAEA,SAAS,EAAE;cAAE,CAAE;cACpB,CAAC,EAAE;gBAAEA,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO;;WAEtC,CAAC;UAEF;UACAlB,SAAS,GAAIL,GAAW,CAACwB,aAAa,CAACC,MAAM,GAAG,EAAE;UAClDnB,YAAY,CAAC,EAAE,CAAC;UAEhBN,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;UACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;UAChCV,GAAG,CAACW,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAEN,SAAS,CAAC;UAC3CA,SAAS,IAAI,CAAC;UAEdL,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;UACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;UAClCV,GAAG,CAACW,IAAI,CAAC,oBAAoBx8B,IAAI,CAAC66B,aAAa,CAAClnC,MAAM,EAAE,EAAE,EAAE,EAAEuoC,SAAS,CAAC;UACxEA,SAAS,IAAI,CAAC;UACdL,GAAG,CAACW,IAAI,CAAC,0BAA0Bx8B,IAAI,CAAC25B,cAAc,CAAChqC,YAAY,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAEmtC,SAAS,CAAC;UAChGA,SAAS,IAAI,CAAC;UACdL,GAAG,CAACW,IAAI,CAAC,yBAAyBx8B,IAAI,CAAC25B,cAAc,CAACx5B,WAAW,CAACpR,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAEmtC,SAAS,CAAC;UAC9FA,SAAS,IAAI,CAAC;UACdL,GAAG,CAACW,IAAI,CAAC,oBAAoBx8B,IAAI,CAAC25B,cAAc,CAACv5B,YAAY,CAACrR,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAEmtC,SAAS,CAAC;;QAG5F;QACA,MAAMd,YAAY,GAAG76B,MAAI,CAACvV,eAAe,CAACgS,2BAA2B,CAACuD,MAAI,CAACvV,eAAe,CAAC+R,mBAAmB,EAAE,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/H4+B,GAAG,CAACgC,IAAI,CAAC,GAAGvE,QAAQ,IAAI8B,YAAY,MAAM,CAAC;OAE5C,CAAC,OAAOv9B,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,MAAMA,KAAK;;IACZ,GAAA8E,KAAA,OAAAC,SAAA;EACH;EAEA;EACMkO,iBAAiBA,CAAAgtB,GAAA,EAAqD;IAAA,OAAAx/B,4JAAA,YAApD0B,IAAS,EAAEs5B,QAAA,GAAmB,sBAAsB;MAC1E,IAAI;QACF,MAAMuC,GAAG,GAAG,IAAI3C,6CAAK,CAAC;UACpB6E,WAAW,EAAE,WAAW;UACxBC,IAAI,EAAE,IAAI;UACVC,MAAM,EAAE;SACT,CAAC;QAEF;QACApC,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QAChCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACW,IAAI,CAAC,4CAA4C,EAAE,EAAE,EAAE,EAAE,CAAC;QAE9D;QACAX,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;QAClCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACW,IAAI,CAAC,UAAUx8B,IAAI,CAACtH,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACxCmjC,GAAG,CAACW,IAAI,CAAC,SAASx8B,IAAI,CAACyO,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;QACvCotB,GAAG,CAACW,IAAI,CAAC,YAAYx8B,IAAI,CAACuQ,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAE5C,IAAI2rB,SAAS,GAAG,EAAE;QAElB;QACAL,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QAChCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACW,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAEN,SAAS,CAAC;QAC7CA,SAAS,IAAI,EAAE;QAEf;QACA,MAAMl7B,aAAa,GAAG,CACpB,CAAC,SAAS,EAAE,OAAO,CAAC,EACpB,CAAC,eAAe,EAAE,KAAKhB,IAAI,CAACmP,SAAS,CAACxf,YAAY,CAAC2X,cAAc,CAAC,OAAO,EAAE;UAACuI,qBAAqB,EAAE;QAAC,CAAC,CAAC,EAAE,CAAC,EACzG,CAAC,cAAc,EAAE,KAAK7P,IAAI,CAACmP,SAAS,CAAChP,WAAW,CAACmH,cAAc,CAAC,OAAO,EAAE;UAACuI,qBAAqB,EAAE;QAAC,CAAC,CAAC,EAAE,CAAC,EACvG,CAAC,gBAAgB,EAAE,KAAK7P,IAAI,CAACmP,SAAS,CAAC/O,YAAY,CAACkH,cAAc,CAAC,OAAO,EAAE;UAACuI,qBAAqB,EAAE;QAAC,CAAC,CAAC,EAAE,CAAC,EAC1G,CAAC,gBAAgB,EAAE7P,IAAI,CAACmP,SAAS,CAACP,aAAa,CAACnf,QAAQ,EAAE,CAAC,CAC5D;QAED0pC,2DAAS,CAAC0C,GAAG,EAAE;UACba,IAAI,EAAE,CAAC17B,aAAa,CAAC,CAAC,CAAC,CAAC;UACxBoI,IAAI,EAAEpI,aAAa,CAAC1Q,KAAK,CAAC,CAAC,CAAC;UAC5BqsC,MAAM,EAAET,SAAS;UACjBU,KAAK,EAAE,MAAM;UACbC,UAAU,EAAE;YACVC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACvBC,SAAS,EAAE,GAAG;YACdC,QAAQ,EAAE,EAAE;YACZkB,SAAS,EAAE;WACZ;UACD3X,MAAM,EAAE;YACNyW,QAAQ,EAAE,EAAE;YACZC,WAAW,EAAE;WACd;UACDC,YAAY,EAAE;YACZ,CAAC,EAAE;cAAEgB,SAAS,EAAE,MAAM;cAAEpB,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;YAAC,CAAE;YACpD,CAAC,EAAE;cAAEM,MAAM,EAAE,OAAO;cAAEc,SAAS,EAAE;YAAM;WACxC;UACDC,MAAM,EAAE;YAAEC,IAAI,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAE;SAC9B,CAAC;QAEFnC,SAAS,GAAIL,GAAW,CAACwB,aAAa,CAACC,MAAM,GAAG,EAAE;QAElD;QACAzB,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;QAChCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;QACnBT,GAAG,CAACW,IAAI,CAAC,2BAA2B,EAAE,EAAE,EAAEN,SAAS,CAAC;QACpDA,SAAS,IAAI,EAAE;QAEf,IAAIl8B,IAAI,CAAC6O,oBAAoB,CAACE,KAAK,CAACpb,MAAM,GAAG,CAAC,EAAE;UAC9C,MAAM6pC,iBAAiB,GAAG,CACxBx9B,IAAI,CAAC6O,oBAAoB,CAACC,OAAO,EACjC,GAAG9O,IAAI,CAAC6O,oBAAoB,CAACE,KAAK,CAACtL,GAAG,CAAE63B,IAAS,IAAI;YACnD;YACA,IAAInrB,KAAK,CAACorB,OAAO,CAACD,IAAI,CAAC,EAAE;cACvB,OAAOA,IAAI;;YAEb;YACA,OAAO,CACLA,IAAI,CAAC3sC,QAAQ,EACb2sC,IAAI,CAACv3B,MAAM,EACX,KAAKu3B,IAAI,CAAC3rC,YAAY,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAE,EACnC,KAAKusC,IAAI,CAACn7B,WAAW,CAACpR,OAAO,CAAC,CAAC,CAAC,EAAE,EAClC,KAAKusC,IAAI,CAACl7B,YAAY,CAACrR,OAAO,CAAC,CAAC,CAAC,EAAE,CACpC;UACH,CAAC,CAAC,CACH;UAEDoqC,2DAAS,CAAC0C,GAAG,EAAE;YACba,IAAI,EAAE,CAACc,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC5Bp0B,IAAI,EAAEo0B,iBAAiB,CAACltC,KAAK,CAAC,CAAC,CAAC;YAChCqsC,MAAM,EAAET,SAAS;YACjBU,KAAK,EAAE,SAAS;YAChBC,UAAU,EAAE;cACVC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;cACvBC,SAAS,EAAE,GAAG;cACdC,QAAQ,EAAE,EAAE;cACZkB,SAAS,EAAE;aACZ;YACD3X,MAAM,EAAE;cACNyW,QAAQ,EAAE,EAAE;cACZC,WAAW,EAAE,CAAC;cACdqB,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;cAC1BC,SAAS,EAAE;aACZ;YACDrB,YAAY,EAAE;cACZ,CAAC,EAAE;gBAAEC,SAAS,EAAE,EAAE;gBAAEe,SAAS,EAAE;cAAM,CAAE;cACvC,CAAC,EAAE;gBAAEf,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAQ,CAAE;cACtC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE,CAAG;aACzC;YACDoB,kBAAkB,EAAE;cAAE1B,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;YAAC,CAAE;YAClDqB,MAAM,EAAE;cAAEC,IAAI,EAAE,EAAE;cAAEC,KAAK,EAAE;YAAE;WAC9B,CAAC;UAEFnC,SAAS,GAAIL,GAAW,CAACwB,aAAa,CAACC,MAAM,GAAG,EAAE;UAElD;UACA,MAAMmB,UAAU,GAAGtuB,KAAK,CAACorB,OAAO,CAACv7B,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAAC,GAC/DjP,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,GACjC,CACEjP,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAACtgB,QAAQ,EAC1CqR,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAAClL,MAAM,EACxC,KAAK/D,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAACtf,YAAY,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAE,EAChE,KAAKiR,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAAC9O,WAAW,CAACpR,OAAO,CAAC,CAAC,CAAC,EAAE,EAC/D,KAAKiR,IAAI,CAAC6O,oBAAoB,CAACI,OAAO,CAAC7O,YAAY,CAACrR,OAAO,CAAC,CAAC,CAAC,EAAE,CACjE;UAEL,MAAM2vC,WAAW,GAAG,CAACD,UAAU,CAAC;UAEhCtF,2DAAS,CAAC0C,GAAG,EAAE;YACbzyB,IAAI,EAAEs1B,WAAW;YACjB/B,MAAM,EAAET,SAAS;YACjBU,KAAK,EAAE,MAAM;YACbrW,MAAM,EAAE;cACNyW,QAAQ,EAAE,EAAE;cACZkB,SAAS,EAAE,MAAM;cACjBpB,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;cACxBC,SAAS,EAAE,GAAG;cACdE,WAAW,EAAE;aACd;YACDC,YAAY,EAAE;cACZ,CAAC,EAAE;gBAAEC,SAAS,EAAE;cAAE,CAAE;cACpB,CAAC,EAAE;gBAAEA,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAQ,CAAE;cACtC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE;cACrC,CAAC,EAAE;gBAAED,SAAS,EAAE,EAAE;gBAAEC,MAAM,EAAE;cAAO,CAAE,CAAG;aACzC;YACDe,MAAM,EAAE;cAAEC,IAAI,EAAE,EAAE;cAAEC,KAAK,EAAE;YAAE;WAC9B,CAAC;UAEFnC,SAAS,GAAIL,GAAW,CAACwB,aAAa,CAACC,MAAM,GAAG,EAAE;;QAGpD;QACA,IAAIt9B,IAAI,CAACyB,gBAAgB,IAAIzB,IAAI,CAACyB,gBAAgB,CAAC9N,MAAM,GAAG,CAAC,EAAE;UAC7D;UACA,IAAIuoC,SAAS,GAAG,GAAG,EAAE;YACnBL,GAAG,CAACQ,OAAO,EAAE;YACbH,SAAS,GAAG,EAAE;;UAGhBL,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;UAChCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;UACnBT,GAAG,CAACW,IAAI,CAAC,kCAAkC,EAAE,EAAE,EAAEN,SAAS,CAAC;UAC3DA,SAAS,IAAI,EAAE;UAEfl8B,IAAI,CAACyB,gBAAgB,CAACuH,OAAO,CAAC,CAACyE,WAAgB,EAAEnF,KAAa,KAAI;YAChE,IAAI4zB,SAAS,GAAG,GAAG,EAAE;cACnBL,GAAG,CAACQ,OAAO,EAAE;cACbH,SAAS,GAAG,EAAE;;YAGhBL,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;YAChCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;YACnBT,GAAG,CAACW,IAAI,CAAC,WAAW/uB,WAAW,CAAC/c,MAAM,EAAE,EAAE,EAAE,EAAEwrC,SAAS,CAAC;YACxDA,SAAS,IAAI,EAAE;YAEfzuB,WAAW,CAAC7c,UAAU,CAACoY,OAAO,CAAE2E,aAAkB,IAAI;cACpD,IAAIuuB,SAAS,GAAG,GAAG,EAAE;gBACnBL,GAAG,CAACQ,OAAO,EAAE;gBACbH,SAAS,GAAG,EAAE;;cAGhBL,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;cAClCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;cACnBT,GAAG,CAACW,IAAI,CAAC,aAAa7uB,aAAa,CAAChf,QAAQ,EAAE,EAAE,EAAE,EAAEutC,SAAS,CAAC;cAC9DA,SAAS,IAAI,CAAC;cAEd;cACA,MAAMT,UAAU,GAAG9tB,aAAa,CAACtd,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;cACrD,MAAMiqC,WAAW,GAAG,CAClB,CAAC,QAAQ,EAAE,eAAe,EAAE,UAAU,EAAE,GAAG,CAAC,EAC5C,GAAGkB,UAAU,CAACh4B,GAAG,CAAEsqB,GAAQ,IAAK,CAC9BA,GAAG,CAACv+B,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EACtC,KAAKq+B,GAAG,CAACp+B,YAAY,CAACZ,OAAO,CAAC,CAAC,CAAC,EAAE,EAClCg/B,GAAG,CAACphB,cAAc,CAACld,QAAQ,EAAE,EAC7B,GAAGs+B,GAAG,CAACnhB,UAAU,CAAC7d,OAAO,CAAC,CAAC,CAAC,GAAG,CAChC,CAAC,CACH;cAEDoqC,2DAAS,CAAC0C,GAAG,EAAE;gBACba,IAAI,EAAE,CAACnC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACtBnxB,IAAI,EAAEmxB,WAAW,CAACjqC,KAAK,CAAC,CAAC,CAAC;gBAC1BqsC,MAAM,EAAET,SAAS;gBACjBU,KAAK,EAAE,MAAM;gBACbrW,MAAM,EAAE;kBAAEyW,QAAQ,EAAE,CAAC;kBAAEC,WAAW,EAAE;gBAAC,CAAE;gBACvCJ,UAAU,EAAE;kBAAEC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;kBAAEC,SAAS,EAAE;gBAAG,CAAE;gBACvDG,YAAY,EAAE;kBACZ,CAAC,EAAE;oBAAEC,SAAS,EAAE,EAAE;oBAAEC,MAAM,EAAE;kBAAQ,CAAE;kBACtC,CAAC,EAAE;oBAAED,SAAS,EAAE,EAAE;oBAAEC,MAAM,EAAE;kBAAO,CAAE;kBACrC,CAAC,EAAE;oBAAED,SAAS,EAAE,EAAE;oBAAEC,MAAM,EAAE;kBAAQ,CAAE;kBACtC,CAAC,EAAE;oBAAED,SAAS,EAAE,EAAE;oBAAEC,MAAM,EAAE;kBAAO;iBACpC;gBACDe,MAAM,EAAE;kBAAEC,IAAI,EAAE,EAAE;kBAAEC,KAAK,EAAE;gBAAE;eAC9B,CAAC;cAEFnC,SAAS,GAAIL,GAAW,CAACwB,aAAa,CAACC,MAAM,GAAG,EAAE;YACpD,CAAC,CAAC;UACJ,CAAC,CAAC;;QAGJ;QACA,MAAMqB,SAAS,GAAG9C,GAAG,CAAC+C,gBAAgB,EAAE;QACxC,KAAK,IAAI/wB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI8wB,SAAS,EAAE9wB,CAAC,EAAE,EAAE;UACnCguB,GAAG,CAACgD,OAAO,CAAChxB,CAAC,CAAC;UACdguB,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;UAClCV,GAAG,CAACS,WAAW,CAAC,CAAC,CAAC;UAClBT,GAAG,CAACW,IAAI,CAAC,UAAU3uB,CAAC,OAAO8wB,SAAS,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;UACjD9C,GAAG,CAACW,IAAI,CAAC,aAAa,IAAI//B,IAAI,EAAE,CAAC6K,cAAc,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;;QAGtE;QACAu0B,GAAG,CAACgC,IAAI,CAAC,GAAGvE,QAAQ,MAAM,CAAC;OAE5B,CAAC,OAAOz7B,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,MAAMA,KAAK;;IACZ,GAAA8E,KAAA,OAAAC,SAAA;EACH;;;uBA1xBWsS,aAAa,EAAAzpB,sDAAA,CAAAE,8DAAA;IAAA;EAAA;;;aAAbupB,aAAa;MAAA2jB,OAAA,EAAb3jB,aAAa,CAAA4jB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;ACzEW;;AAKzB,MAAOjkB,mBAAmB;EAG9B/pB,YAAA;IAFQ,KAAAg0C,eAAe,GAAQ,IAAI;EAEnB;EAEhB;EACM54B,WAAWA,CAAC64B,KAAa,EAAExC,IAAa;IAAA,OAAAl+B,4JAAA;MAC5C,MAAMwgC,uDAAS,CAAC;QACdE,KAAK;QACLxC,IAAI;QACJ0C,IAAI,EAAE,SAAS;QACfC,iBAAiB,EAAE,IAAI;QACvBC,kBAAkB,EAAE;OACrB,CAAC;IAAC;EACL;EAEA;EACM1gC,SAASA,CAACsgC,KAAa,EAAExC,IAAa;IAAA,OAAAl+B,4JAAA;MAC1C,MAAMwgC,uDAAS,CAAC;QACdE,KAAK;QACLxC,IAAI;QACJ0C,IAAI,EAAE,OAAO;QACbC,iBAAiB,EAAE,IAAI;QACvBC,kBAAkB,EAAE;OACrB,CAAC;IAAC;EACL;EAEA;EACM35B,QAAQA,CAACu5B,KAAa,EAAExC,IAAa;IAAA,OAAAl+B,4JAAA;MACzC,MAAMwgC,uDAAS,CAAC;QACdE,KAAK;QACLxC,IAAI;QACJ0C,IAAI,EAAE,MAAM;QACZC,iBAAiB,EAAE,IAAI;QACvBC,kBAAkB,EAAE;OACrB,CAAC;IAAC;EACL;EAEA;EACMpP,WAAWA,CAACgP,KAAa,EAAExC,IAAa;IAAA,OAAAl+B,4JAAA;MAC5C,MAAMwgC,uDAAS,CAAC;QACdE,KAAK;QACLxC,IAAI;QACJ0C,IAAI,EAAE,SAAS;QACfC,iBAAiB,EAAE,IAAI;QACvBC,kBAAkB,EAAE;OACrB,CAAC;IAAC;EACL;EAEA;EACMx4B,gBAAgBA,CAAA3E,EAAA,EAAAC,GAAA,EAIiB;IAAA,OAAA5D,4JAAA,YAHrC0gC,KAAa,EACbxC,IAAa,EACb2C,iBAAA,GAA4B,eAAe,EAC3CE,gBAAA,GAA2B,UAAU;MAErC,MAAM9yB,MAAM,SAASuyB,uDAAS,CAAC;QAC7BE,KAAK;QACLxC,IAAI;QACJ0C,IAAI,EAAE,UAAU;QAChBI,gBAAgB,EAAE,IAAI;QACtBH,iBAAiB;QACjBE,gBAAgB;QAChBD,kBAAkB,EAAE,SAAS;QAC7BG,iBAAiB,EAAE;OACpB,CAAC;MAEF,OAAOhzB,MAAM,CAACizB,WAAW;IAAC,GAAA78B,KAAA,OAAAC,SAAA;EAC5B;EAEA;EACA8f,WAAWA,CAACsc,KAAA,GAAgB,aAAa;IACvC,IAAI,CAAClc,WAAW,EAAE,CAAC,CAAC;IAEpB,IAAI,CAACic,eAAe,GAAGD,uDAAS,CAAC;MAC/BE,KAAK;MACLS,iBAAiB,EAAE,KAAK;MACxBC,cAAc,EAAE,KAAK;MACrBC,iBAAiB,EAAE,KAAK;MACxBC,OAAO,EAAEA,CAAA,KAAK;QACZd,8DAAgB,EAAE;MACpB;KACD,CAAC;EACJ;EAEA;EACAhc,WAAWA,CAAA;IACT,IAAI,IAAI,CAACic,eAAe,EAAE;MACxBD,wDAAU,EAAE;MACZ,IAAI,CAACC,eAAe,GAAG,IAAI;;EAE/B;;;uBA3FWjqB,mBAAmB;IAAA;EAAA;;;aAAnBA,mBAAmB;MAAA+jB,OAAA,EAAnB/jB,mBAAmB,CAAAgkB,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;ACHM;AACc;;AAMlC,MAAO/jB,YAAY;EAEvBjqB,YAAA,GAAgB;EAEhB;EACAkc,sBAAsBA,CAAC1E,IAAU,EAAEC,OAAqB;IAEtD;IACA,IAAI,CAACA,OAAO,IAAIA,OAAO,CAAC7O,MAAM,KAAK,CAAC,EAAE;MACpC6O,OAAO,GAAG,CACR;QAAE/D,EAAE,EAAE,OAAO;QAAEoD,MAAM,EAAEU,IAAI,CAAC9D,EAAE;QAAEjP,MAAM,EAAE,EAAE;QAAE+D,KAAK,EAAE;MAAE,CAAE,EACvD;QAAEkL,EAAE,EAAE,OAAO;QAAEoD,MAAM,EAAEU,IAAI,CAAC9D,EAAE;QAAEjP,MAAM,EAAE,EAAE;QAAE+D,KAAK,EAAE;MAAE,CAAE,CACxD;;IAGH,IAAI;MACF;MACA,MAAMusC,GAAG,GAAG,IAAI5G,6CAAK,CAAC;QACpB6E,WAAW,EAAE,UAAU;QACvBC,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG;OACjB,CAAC;MAGF;MACA,IAAI8B,CAAC,GAAG,EAAE;MACV,MAAMC,UAAU,GAAG,CAAC;MAEpB;MAEAF,GAAG,CAACxD,WAAW,CAAC,EAAE,CAAC;MACnBwD,GAAG,CAACtD,IAAI,CAAC,iBAAiB,EAAE,EAAE,EAAEuD,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE,CAAC;MACvDF,CAAC,IAAIC,UAAU,GAAG,CAAC;MAEnB;MACAF,GAAG,CAACxD,WAAW,CAAC,CAAC,CAAC;MAClBwD,GAAG,CAACtD,IAAI,CAAC,aAAaj6B,IAAI,CAACvO,YAAY,IAAI,KAAK,EAAE,EAAE,EAAE,EAAE+rC,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE,CAAC;MAC/EF,CAAC,IAAIC,UAAU;MAEf;MACAF,GAAG,CAACI,IAAI,CAAC,CAAC,EAAEH,CAAC,EAAE,EAAE,EAAEA,CAAC,CAAC;MACrBA,CAAC,IAAIC,UAAU;MAEf;MACAF,GAAG,CAACxD,WAAW,CAAC,EAAE,CAAC;MACnBwD,GAAG,CAACtD,IAAI,CAACj6B,IAAI,CAAC5T,QAAQ,IAAI,YAAY,EAAE,EAAE,EAAEoxC,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE,CAAC;MACnEF,CAAC,IAAIC,UAAU;MAEf;MACAF,GAAG,CAACxD,WAAW,CAAC,CAAC,CAAC;MAClBwD,GAAG,CAACtD,IAAI,CAAC,WAAWj6B,IAAI,CAAC7R,MAAM,EAAE,EAAE,EAAE,EAAEqvC,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE,CAAC;MAC9DF,CAAC,IAAIC,UAAU;MAEf;MACA,MAAMtnC,KAAK,GAAG,IAAI+D,IAAI,CAAC8F,IAAI,CAAC7J,KAAK,CAAC,CAAC4O,cAAc,EAAE;MACnDw4B,GAAG,CAACtD,IAAI,CAAC,UAAU9jC,KAAK,EAAE,EAAE,EAAE,EAAEqnC,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE,CAAC;MACvDF,CAAC,IAAIC,UAAU,GAAG,CAAC;MAEnB;MACAF,GAAG,CAACxD,WAAW,CAAC,EAAE,CAAC;MACnBwD,GAAG,CAACtD,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAEuD,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE,CAAC;MAC9CH,GAAG,CAACtD,IAAI,CAAC,OAAO,EAAE,EAAE,EAAEuD,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE,CAAC;MAC7CF,CAAC,IAAIC,UAAU;MAEf;MACAF,GAAG,CAACI,IAAI,CAAC,CAAC,EAAEH,CAAC,EAAE,EAAE,EAAEA,CAAC,CAAC;MACrBA,CAAC,IAAIC,UAAU;MAEf;MACA,IAAI5rC,KAAK,GAAG,CAAC;MACb,KAAK,MAAMqO,MAAM,IAAID,OAAO,EAAE;QAC5Bs9B,GAAG,CAACtD,IAAI,CAAC/5B,MAAM,CAACjT,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,EAAEqwC,CAAC,EAAE;UAAEE,KAAK,EAAE;QAAQ,CAAE,CAAC;QAC/EH,GAAG,CAACtD,IAAI,CAAC,KAAK/5B,MAAM,CAAClP,KAAK,EAAE,EAAE,EAAE,EAAEwsC,CAAC,EAAE;UAAEE,KAAK,EAAE;QAAQ,CAAE,CAAC;QACzD7rC,KAAK,IAAIqO,MAAM,CAAClP,KAAK;QACrBwsC,CAAC,IAAIC,UAAU;;MAGjB;MACAD,CAAC,IAAI,CAAC;MACND,GAAG,CAACI,IAAI,CAAC,CAAC,EAAEH,CAAC,EAAE,EAAE,EAAEA,CAAC,CAAC;MACrBA,CAAC,IAAIC,UAAU;MAEf;MACAF,GAAG,CAACxD,WAAW,CAAC,EAAE,CAAC;MACnBwD,GAAG,CAACtD,IAAI,CAAC,gBAAgB,EAAE,EAAE,EAAEuD,CAAC,CAAC;MACjCD,GAAG,CAACtD,IAAI,CAAC,KAAKpoC,KAAK,EAAE,EAAE,EAAE,EAAE2rC,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAO,CAAE,CAAC;MACjDF,CAAC,IAAIC,UAAU,GAAG,CAAC;MAEnB;MACAF,GAAG,CAACxD,WAAW,CAAC,CAAC,CAAC;MAClBwD,GAAG,CAACtD,IAAI,CAAC,wBAAwB,EAAE,EAAE,EAAEuD,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE,CAAC;MAC9DF,CAAC,IAAIC,UAAU;MACfF,GAAG,CAACtD,IAAI,CAAC,eAAe,EAAE,EAAE,EAAEuD,CAAC,EAAE;QAAEE,KAAK,EAAE;MAAQ,CAAE,CAAC;MAGrD;MACA;MACA,MAAME,OAAO,GAAGL,GAAG,CAACM,MAAM,CAAC,aAAa,CAAC;MACzC,MAAMp2B,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACk2B,OAAO,CAAC,EAAE;QAAEj2B,IAAI,EAAE;MAAiB,CAAE,CAAC;MAC7D,MAAM5e,GAAG,GAAG+e,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;MAGrC;MACA,MAAMq2B,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACj1C,GAAG,EAAE,QAAQ,EAAE,mDAAmD,CAAC;MAEnG,IAAI+0C,WAAW,EAAE;QACfA,WAAW,CAACG,MAAM,GAAG,MAAK;UACxB;UACAH,WAAW,CAACI,KAAK,EAAE;UAEnB;UACAx9B,UAAU,CAAC,MAAK;YACd,IAAI;cACFo9B,WAAW,CAACK,KAAK,EAAE;aACpB,CAAC,OAAOC,UAAU,EAAE,C;UAEvB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;UAEV;UACA,MAAMC,WAAW,GAAGrV,WAAW,CAAC,MAAK;YACnC,IAAI8U,WAAW,CAACQ,MAAM,EAAE;cACtBnV,aAAa,CAACkV,WAAW,CAAC;cAC1Bv2B,GAAG,CAACy2B,eAAe,CAACx1C,GAAG,CAAC;;UAE5B,CAAC,EAAE,IAAI,CAAC;QACV,CAAC;OACF,MAAM;QAEL;QACA,MAAMy1C,UAAU,GAAGj4B,QAAQ,CAACsB,aAAa,CAAC,QAAQ,CAAC;QACnD22B,UAAU,CAACv2B,KAAK,CAACw2B,OAAO,GAAG,MAAM;QACjCD,UAAU,CAACE,GAAG,GAAG31C,GAAG;QAEpBwd,QAAQ,CAACM,IAAI,CAACsB,WAAW,CAACq2B,UAAU,CAAC;QAErCA,UAAU,CAACP,MAAM,GAAG,MAAK;UACvB,IAAI;YACFO,UAAU,CAACG,aAAa,EAAET,KAAK,EAAE;YACjCM,UAAU,CAACG,aAAa,EAAER,KAAK,EAAE;YAEjC;YACAz9B,UAAU,CAAC,MAAK;cACd6F,QAAQ,CAACM,IAAI,CAACD,WAAW,CAAC43B,UAAU,CAAC;cACrC12B,GAAG,CAACy2B,eAAe,CAACx1C,GAAG,CAAC;YAC1B,CAAC,EAAE,IAAI,CAAC;WAET,CAAC,OAAOq1C,UAAU,EAAE,C;QAEvB,CAAC;;KAGJ,CAAC,OAAO9iC,KAAU,EAAE;MACnB+yB,KAAK,CAAC,8BAA8B,IAAI/yB,KAAK,EAAEgI,OAAO,IAAIhI,KAAK,CAAC,CAAC;;EAErE;EAEA;EACAsjC,mBAAmBA,CAAA;IAEjB,MAAMC,QAAQ,GAAS;MACrB3iC,EAAE,EAAE,UAAU;MACdgI,MAAM,EAAE,OAAO;MACf9X,QAAQ,EAAE,YAAY;MACtB+B,MAAM,EAAE,QAAQ;MAChBgI,KAAK,EAAE,IAAI+D,IAAI,EAAE;MACjBrI,KAAK,EAAE,EAAE;MACTJ,YAAY,EAAE,qBAAqB;MACnCC,WAAW,EAAE,CAAC;MACdE,SAAS,EAAE,IAAIsI,IAAI;KACpB;IAED,MAAM4kC,WAAW,GAAiB,CAChC;MAAE5iC,EAAE,EAAE,SAAS;MAAEoD,MAAM,EAAE,UAAU;MAAErS,MAAM,EAAE,EAAE;MAAE+D,KAAK,EAAE;IAAE,CAAE,EAC5D;MAAEkL,EAAE,EAAE,SAAS;MAAEoD,MAAM,EAAE,UAAU;MAAErS,MAAM,EAAE,EAAE;MAAE+D,KAAK,EAAE;IAAE,CAAE,CAC7D;IAED,IAAI,CAAC0T,sBAAsB,CAACm6B,QAAQ,EAAEC,WAAW,CAAC;EACpD;EAEA;EACAx6B,mBAAmBA,CAAClM,KAAa,EAAEjC,KAAW;IAC5C,MAAMonC,GAAG,GAAG,IAAI5G,6CAAK,EAAE;IAEvB4G,GAAG,CAACxD,WAAW,CAAC,EAAE,CAAC;IACnBwD,GAAG,CAACtD,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE,EAAE,EAAE;MAAEyD,KAAK,EAAE;IAAQ,CAAE,CAAC;IAElEH,GAAG,CAACxD,WAAW,CAAC,EAAE,CAAC;IACnBwD,GAAG,CAACtD,IAAI,CAAC,UAAU9jC,KAAK,CAAC2X,kBAAkB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAExD;IACA,IAAIixB,IAAI,GAAG,EAAE;IAEb;IACA,MAAMC,aAAa,GAAG,IAAI,CAACC,sBAAsB,CAAC7mC,KAAK,CAAC;IAExDmlC,GAAG,CAACxD,WAAW,CAAC,EAAE,CAAC;IACnBwD,GAAG,CAACtD,IAAI,CAAC,qBAAqB,EAAE,EAAE,EAAE8E,IAAI,CAAC;IACzCA,IAAI,IAAI,EAAE;IAEVxB,GAAG,CAACxD,WAAW,CAAC,EAAE,CAAC;IACnB,KAAK,MAAM,CAAC5rC,MAAM,EAAEsP,IAAI,CAAC,IAAIuD,MAAM,CAACC,OAAO,CAAC+9B,aAAa,CAAC,EAAE;MAC1DzB,GAAG,CAACtD,IAAI,CAAC,GAAG9rC,MAAM,CAACqH,WAAW,EAAE,QAAQiI,IAAI,CAAC5L,KAAK,CAACrF,OAAO,CAAC,CAAC,CAAC,KAAKiR,IAAI,CAACsD,KAAK,UAAU,EAAE,EAAE,EAAEg+B,IAAI,CAAC;MACjGA,IAAI,IAAI,CAAC;;IAGX;IACA,MAAMj1B,YAAY,GAAG1R,KAAK,CAACwI,MAAM,CAAC,CAACoK,GAAG,EAAEhL,IAAI,KAAKgL,GAAG,GAAGhL,IAAI,CAACnO,KAAK,EAAE,CAAC,CAAC;IACrEktC,IAAI,IAAI,EAAE;IACVxB,GAAG,CAACxD,WAAW,CAAC,EAAE,CAAC;IACnBwD,GAAG,CAACtD,IAAI,CAAC,qBAAqBnwB,YAAY,CAACtd,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAEuyC,IAAI,CAAC;IAElExB,GAAG,CAACjC,IAAI,CAAC,kBAAkBnlC,KAAK,CAAC0sB,WAAW,EAAE,CAACnoB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;EACrE;EAEQukC,sBAAsBA,CAAC7mC,KAAa;IAC1C,MAAM0I,OAAO,GAAwD,EAAE;IAEvE,KAAK,MAAMd,IAAI,IAAI5H,KAAK,EAAE;MACxB,IAAI,CAAC0I,OAAO,CAACd,IAAI,CAAC7R,MAAM,CAAC,EAAE;QACzB2S,OAAO,CAACd,IAAI,CAAC7R,MAAM,CAAC,GAAG;UAAE0D,KAAK,EAAE,CAAC;UAAEkP,KAAK,EAAE;QAAC,CAAE;;MAE/CD,OAAO,CAACd,IAAI,CAAC7R,MAAM,CAAC,CAAC0D,KAAK,IAAImO,IAAI,CAACnO,KAAK;MACxCiP,OAAO,CAACd,IAAI,CAAC7R,MAAM,CAAC,CAAC4S,KAAK,IAAI,CAAC;;IAGjC,OAAOD,OAAO;EAChB;EAEA;EACA+E,uBAAuBA,CAACzN,KAAa,EAAEC,WAA4C,EAAE8C,OAAY;IAC/F,IAAI;MACF,MAAMm+B,GAAG,GAAG,IAAI3C,6CAAK,EAAE;MAEvB;MACA2C,GAAG,CAAC4F,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;MAC9B5F,GAAG,CAAC6F,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAE9B7F,GAAG,CAAC8F,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;MACjC9F,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;MACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;MAChCV,GAAG,CAACW,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE,EAAE,EAAE;QAAEyD,KAAK,EAAE;MAAQ,CAAE,CAAC;MAE5DpE,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;MACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;MAClCV,GAAG,CAACW,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE,EAAE,EAAE;QAAEyD,KAAK,EAAE;MAAQ,CAAE,CAAC;MAE3D;MACApE,GAAG,CAAC8F,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAEzB;MACA,IAAIL,IAAI,GAAG,EAAE;MACbzF,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;MACnBT,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;MAEhC;MACAV,GAAG,CAAC4F,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC/B5F,GAAG,CAAC6F,IAAI,CAAC,EAAE,EAAEJ,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MACpCzF,GAAG,CAAC+F,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC/B/F,GAAG,CAAC6F,IAAI,CAAC,EAAE,EAAEJ,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAEpCA,IAAI,IAAI,CAAC;MACTzF,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;MAChCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;MACnBT,GAAG,CAACW,IAAI,CAAC,yBAAyB,EAAE,EAAE,EAAE8E,IAAI,CAAC;MAC7CA,IAAI,IAAI,CAAC;MAETzF,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;MAClCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;MAEnB,IAAI5+B,OAAO,CAACzC,UAAU,IAAIyC,OAAO,CAACxC,UAAU,EAAE;QAC5C,MAAM2mC,UAAU,GAAGnkC,OAAO,CAACzC,UAAU,IAAIyC,OAAO,CAACxC,UAAU,GACvD,YAAY,IAAIuB,IAAI,CAACiB,OAAO,CAACzC,UAAU,CAAC,CAACoV,kBAAkB,EAAE,MAAM,IAAI5T,IAAI,CAACiB,OAAO,CAACxC,UAAU,CAAC,CAACmV,kBAAkB,EAAE,EAAE,GACtH3S,OAAO,CAACzC,UAAU,GAChB,UAAU,IAAIwB,IAAI,CAACiB,OAAO,CAACzC,UAAU,CAAC,CAACoV,kBAAkB,EAAE,EAAE,GAC7D,UAAU,IAAI5T,IAAI,CAACiB,OAAO,CAACxC,UAAU,CAAC,CAACmV,kBAAkB,EAAE,EAAE;QACnEwrB,GAAG,CAACW,IAAI,CAACqF,UAAU,EAAE,EAAE,EAAEP,IAAI,CAAC;QAC9BA,IAAI,IAAI,CAAC;;MAGX,IAAI5jC,OAAO,CAACkN,YAAY,EAAE;QACxBixB,GAAG,CAACW,IAAI,CAAC,WAAW9+B,OAAO,CAACkN,YAAY,EAAE,EAAE,EAAE,EAAE02B,IAAI,CAAC;QACrDA,IAAI,IAAI,CAAC;;MAGX,MAAM3iC,GAAG,GAAG,IAAIlC,IAAI,EAAE;MACtBo/B,GAAG,CAACW,IAAI,CAAC,wBAAwB79B,GAAG,CAAC0R,kBAAkB,EAAE,MAAM1R,GAAG,CAAC2R,kBAAkB,EAAE,EAAE,EAAE,EAAE,EAAEgxB,IAAI,CAAC;MACpGA,IAAI,IAAI,CAAC;MAETzF,GAAG,CAACW,IAAI,CAAC,2BAA2B7hC,KAAK,CAAChH,MAAM,EAAE,EAAE,EAAE,EAAE2tC,IAAI,CAAC;MAC7DA,IAAI,IAAI,EAAE;MAEV;MACA,MAAMQ,cAAc,GAAwD,EAAE;MAC9EnnC,KAAK,CAACqO,OAAO,CAACzG,IAAI,IAAG;QACnB,IAAI,CAACu/B,cAAc,CAACv/B,IAAI,CAAC5T,QAAQ,CAAC,EAAE;UAClCmzC,cAAc,CAACv/B,IAAI,CAAC5T,QAAQ,CAAC,GAAG;YAAEyF,KAAK,EAAE,CAAC;YAAEkP,KAAK,EAAE;UAAC,CAAE;;QAExDw+B,cAAc,CAACv/B,IAAI,CAAC5T,QAAQ,CAAC,CAACyF,KAAK,IAAImO,IAAI,CAACnO,KAAK;QACjD0tC,cAAc,CAACv/B,IAAI,CAAC5T,QAAQ,CAAC,CAAC2U,KAAK,IAAI,CAAC;MAC1C,CAAC,CAAC;MAEF;MACAu4B,GAAG,CAAC4F,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC5B5F,GAAG,CAAC8F,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC/B9F,GAAG,CAAC6F,IAAI,CAAC,EAAE,EAAEJ,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MACpCzF,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;MAChCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;MACnBT,GAAG,CAACW,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE8E,IAAI,GAAG,CAAC,EAAE;QAAErB,KAAK,EAAE;MAAQ,CAAE,CAAC;MACpEqB,IAAI,IAAI,EAAE;MAEV;MACAzF,GAAG,CAAC8F,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzB9F,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;MAClCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;MAEnB;MACA/4B,MAAM,CAACC,OAAO,CAACs+B,cAAc,CAAC,CAAC94B,OAAO,CAAC,CAAC,CAACra,QAAQ,EAAEqR,IAAI,CAAC,EAAEsI,KAAK,KAAI;QACjE,MAAMw0B,SAAS,GAAGx0B,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QACrEuzB,GAAG,CAAC4F,YAAY,CAAC3E,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;QAC1DjB,GAAG,CAAC6F,IAAI,CAAC,EAAE,EAAEJ,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;QAEnCzF,GAAG,CAACW,IAAI,CAAC,GAAG7tC,QAAQ,GAAG,EAAE,EAAE,EAAE2yC,IAAI,GAAG,CAAC,CAAC;QACtCzF,GAAG,CAACW,IAAI,CAAC,GAAGx8B,IAAI,CAACsD,KAAK,SAAS,EAAE,GAAG,EAAEg+B,IAAI,GAAG,CAAC,EAAE;UAAErB,KAAK,EAAE;QAAQ,CAAE,CAAC;QACpEpE,GAAG,CAACW,IAAI,CAAC,KAAKx8B,IAAI,CAAC5L,KAAK,CAACrF,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAEuyC,IAAI,GAAG,CAAC,EAAE;UAAErB,KAAK,EAAE;QAAO,CAAE,CAAC;QACzEqB,IAAI,IAAI,CAAC;MACX,CAAC,CAAC;MAEFA,IAAI,IAAI,CAAC;MAET;MACA,MAAMj1B,YAAY,GAAG1R,KAAK,CAACwI,MAAM,CAAC,CAACoK,GAAG,EAAEhL,IAAI,KAAKgL,GAAG,GAAGhL,IAAI,CAACnO,KAAK,EAAE,CAAC,CAAC;MACrEynC,GAAG,CAAC4F,YAAY,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;MAChC5F,GAAG,CAAC6F,IAAI,CAAC,EAAE,EAAEJ,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MACpCzF,GAAG,CAAC8F,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC/B9F,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;MAChCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;MACnBT,GAAG,CAACW,IAAI,CAAC,oBAAoBnwB,YAAY,CAACtd,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAEuyC,IAAI,GAAG,CAAC,EAAE;QAAErB,KAAK,EAAE;MAAQ,CAAE,CAAC;MAC3FqB,IAAI,IAAI,EAAE;MAEV;MACAzF,GAAG,CAAC8F,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzB9F,GAAG,CAACU,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC;MAChCV,GAAG,CAACS,WAAW,CAAC,EAAE,CAAC;MACnBT,GAAG,CAACW,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE8E,IAAI,CAAC;MACxCA,IAAI,IAAI,EAAE;MAEV;MACA,MAAMS,SAAS,GAAGpnC,KAAK,CAAC8I,GAAG,CAAClB,IAAI,IAAG;QACjC,MAAMC,OAAO,GAAG5H,WAAW,CAAC2H,IAAI,CAAC9D,EAAE,CAAC,IAAI,EAAE;QAC1C,MAAMujC,WAAW,GAAGx/B,OAAO,CAACiB,GAAG,CAACqG,CAAC,IAAI,GAAGA,CAAC,CAACta,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAKoa,CAAC,CAACvW,KAAK,EAAE,CAAC,CAACwW,IAAI,CAAC,IAAI,CAAC;QAEtG;QACA,MAAM0iB,QAAQ,GAAG,IAAIhwB,IAAI,CAAC8F,IAAI,CAACpO,SAAS,CAAC;QACzC,MAAM8tC,YAAY,GAAG,GAAGxV,QAAQ,CAACpc,kBAAkB,EAAE,IAAIoc,QAAQ,CAACnc,kBAAkB,CAAC,OAAO,EAAE;UAC5F5I,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE;SACT,CAAC,EAAE;QAEJ,OAAO,CACLs6B,YAAY,EACZ1/B,IAAI,CAACvO,YAAY,IAAIuO,IAAI,CAAC9D,EAAE,CAACnO,KAAK,CAAC,CAAC,CAAC,CAAC,EACtCiS,IAAI,CAAC5T,QAAQ,EACb4T,IAAI,CAAC7R,MAAM,EACXsxC,WAAW,EACX,KAAKz/B,IAAI,CAACnO,KAAK,CAACrF,OAAO,CAAC,CAAC,CAAC,EAAE,CAC7B;MACH,CAAC,CAAC;MAEF;MACAoqC,2DAAS,CAAC0C,GAAG,EAAE;QACbc,MAAM,EAAE2E,IAAI;QACZ5E,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QAC1EtzB,IAAI,EAAE24B,SAAS;QACfnF,KAAK,EAAE,MAAM;QACbC,UAAU,EAAE;UACVC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;UACzBC,SAAS,EAAE,GAAG;UACdC,QAAQ,EAAE,EAAE;UACZkB,SAAS,EAAE,MAAM;UACjBd,MAAM,EAAE;SACT;QACD8E,UAAU,EAAE;UACVlF,QAAQ,EAAE,CAAC;UACXC,WAAW,EAAE;SACd;QACDC,YAAY,EAAE;UACZ,CAAC,EAAE;YAAEC,SAAS,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAQ,CAAE;UACtC,CAAC,EAAE;YAAED,SAAS,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAQ,CAAE;UACtC,CAAC,EAAE;YAAED,SAAS,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAQ,CAAE;UACtC,CAAC,EAAE;YAAED,SAAS,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAQ,CAAE;UACtC,CAAC,EAAE;YAAED,SAAS,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAM,CAAE;UACpC,CAAC,EAAE;YAAED,SAAS,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAO,CAAE,CAAG;SACzC;QACDoB,kBAAkB,EAAE;UAClB1B,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;SAC1B;QACDqB,MAAM,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAE,CAAE;QAC/B8D,WAAW,EAAE,SAAAA,CAASniC,IAAS;UAC7B;UACA67B,GAAG,CAACS,WAAW,CAAC,CAAC,CAAC;UAClBT,GAAG,CAACW,IAAI,CAAC,UAAUx8B,IAAI,CAACoiC,UAAU,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;UAC/CvG,GAAG,CAACW,IAAI,CAAC,eAAe,IAAI//B,IAAI,EAAE,CAAC6K,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACjE;OACD,CAAC;MAEF;MACA,MAAM+6B,QAAQ,GAAG,kBAAkB,IAAI5lC,IAAI,EAAE,CAAC2oB,WAAW,EAAE,CAACnoB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;MAC/E4+B,GAAG,CAACgC,IAAI,CAACwE,QAAQ,CAAC;KAEnB,CAAC,OAAOxkC,KAAK,EAAE;MACd,MAAMA,KAAK;;EAEf;EAEA;EACM6V,YAAYA,CAAC4uB,WAAmB;IAAA,OAAAhkC,4JAAA;MACpC,IAAI;QACF;QACA,MAAM+hC,WAAW,GAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,sBAAsB,CAAC;QAErE,IAAI,CAACF,WAAW,EAAE;UAChB,MAAM,IAAIjuB,KAAK,CAAC,6FAA6F,CAAC;;QAGhH;QACAiuB,WAAW,CAACv3B,QAAQ,CAACoyB,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAsCrBoH,WAAW;;;;;;;OAOhB,CAAC;QAEFjC,WAAW,CAACv3B,QAAQ,CAAC+2B,KAAK,EAAE;QAE5B;QACAQ,WAAW,CAACI,KAAK,EAAE;QAEnB;QACAx9B,UAAU,CAAC,MAAK;UACdo9B,WAAW,CAACK,KAAK,EAAE;QACrB,CAAC,EAAE,GAAG,CAAC;OAER,CAAC,OAAO7iC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,MAAMA,KAAK;;IACZ;EACH;;;uBAteWmX,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAA6jB,OAAA,EAAZ7jB,YAAY,CAAA8jB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;ACLoD;;;AAMlE,MAAO/F,aAAa;EAGxBjoC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAF3B,KAAA2Q,eAAe,GAAqB,CAAC,GAAGzN,gEAAgB,CAAC;IAG/D,IAAI,CAACkQ,mBAAmB,EAAE;EAC5B;EAEcA,mBAAmBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,4JAAA;MAC/B,IAAI;QACF;QACAD,KAAI,CAAC1C,eAAe,GAAG,CAAC,GAAGzN,gEAAgB,CAAC;QAE5C;QACA;;;;;;;;;;;OAWD,CAAC,OAAO2P,KAAK,EAAE;QACd;QACAQ,KAAI,CAAC1C,eAAe,GAAG,CAAC,GAAGzN,gEAAgB,CAAC;;IAC7C;EACH;EAEM69B,sBAAsBA,CAAA;IAAA,IAAAvsB,MAAA;IAAA,OAAAlB,4JAAA;MAC1B,MAAMkB,MAAI,CAACpB,mBAAmB,EAAE;IAAC;EACnC;EAEAuuB,gBAAgBA,CAAA;IACd,MAAMpe,YAAY,GAAG,IAAI,CAACvjB,eAAe,CAAC+R,mBAAmB,EAAE;IAC/D,MAAMq1B,WAAW,GAAG7jB,YAAY,CAACg0B,QAAQ,EAAE;IAC3C,MAAMlQ,aAAa,GAAG9jB,YAAY,CAACi0B,UAAU,EAAE;IAC/C,MAAMlQ,oBAAoB,GAAGF,WAAW,GAAG,EAAE,GAAGC,aAAa;IAE7D,KAAK,MAAM3hC,MAAM,IAAI,IAAI,CAACiL,eAAe,EAAE;MACzC,MAAM,CAAC8zB,SAAS,EAAEC,WAAW,CAAC,GAAGh/B,MAAM,CAACmC,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC,CAACwG,GAAG,CAAC+rB,MAAM,CAAC;MACxE,MAAMI,kBAAkB,GAAGH,SAAS,GAAG,EAAE,GAAGC,WAAW;MAEvD,IAAI4C,oBAAoB,GAAG1C,kBAAkB,EAAE;QAC7C,OAAOl/B,MAAM;;;IAIjB;IACA,OAAO,IAAI;EACb;EAEA+xC,aAAaA,CAAA;IACX,MAAMl0B,YAAY,GAAG,IAAI,CAACvjB,eAAe,CAAC+R,mBAAmB,EAAE;IAC/D,MAAMq1B,WAAW,GAAG7jB,YAAY,CAACg0B,QAAQ,EAAE;IAC3C,MAAMlQ,aAAa,GAAG9jB,YAAY,CAACi0B,UAAU,EAAE;IAC/C,MAAMlQ,oBAAoB,GAAGF,WAAW,GAAG,EAAE,GAAGC,aAAa;IAE7D,KAAK,MAAM3hC,MAAM,IAAI,IAAI,CAACiL,eAAe,EAAE;MACzC,MAAM,CAAC8zB,SAAS,EAAEC,WAAW,CAAC,GAAGh/B,MAAM,CAACmC,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC,CAACwG,GAAG,CAAC+rB,MAAM,CAAC;MACxE,MAAMI,kBAAkB,GAAGH,SAAS,GAAG,EAAE,GAAGC,WAAW;MAEvD,IAAI4C,oBAAoB,GAAG1C,kBAAkB,EAAE;QAC7C,OAAOl/B,MAAM;;;IAIjB;IACA,OAAO,IAAI,CAACiL,eAAe,CAAC,CAAC,CAAC,IAAI,IAAI;EACxC;EAEAnJ,YAAYA,CAAC9B,MAAsB;IACjC;IACA,MAAMm+B,WAAW,GAAG,IAAI,CAAC7jC,eAAe,CAACqhC,0BAA0B,CACjE,IAAI,CAACrhC,eAAe,CAAC+R,mBAAmB,EAAE,CAC3C;IACD,MAAM,GAAG+xB,QAAQ,CAAC,GAAGD,WAAW,CAAC5xB,KAAK,CAAC,GAAG,CAAC;IAC3C,MAAM,CAAC8xB,OAAO,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC7xB,KAAK,CAAC,GAAG,CAAC;IAChD,MAAMgyB,mBAAmB,GAAGlwB,QAAQ,CAACgwB,OAAO,EAAE,EAAE,CAAC,GAAG,EAAE,GAAGhwB,QAAQ,CAACiwB,SAAS,EAAE,EAAE,CAAC;IAEhF;IACA,MAAM,CAACiB,YAAY,EAAEC,cAAc,CAAC,GAAGx/B,MAAM,CAACmC,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC;IAClE,MAAMkzB,iBAAiB,GACrBpxB,QAAQ,CAACkxB,YAAY,EAAE,EAAE,CAAC,GAAG,EAAE,GAAGlxB,QAAQ,CAACmxB,cAAc,EAAE,EAAE,CAAC;IAEhE,OAAOjB,mBAAmB,GAAGkB,iBAAiB;EAChD;EAEAvD,iBAAiBA,CAACl8B,MAAsB;IACtC;IACA,MAAMm+B,WAAW,GAAG,IAAI,CAAC7jC,eAAe,CAACqhC,0BAA0B,CACjE,IAAI,CAACrhC,eAAe,CAAC+R,mBAAmB,EAAE,CAC3C;IACD,MAAM,GAAG+xB,QAAQ,CAAC,GAAGD,WAAW,CAAC5xB,KAAK,CAAC,GAAG,CAAC;IAC3C,MAAM,CAAC8xB,OAAO,EAAEC,SAAS,CAAC,GAAGF,QAAQ,CAAC7xB,KAAK,CAAC,GAAG,CAAC;IAChD,MAAMgyB,mBAAmB,GAAGlwB,QAAQ,CAACgwB,OAAO,EAAE,EAAE,CAAC,GAAG,EAAE,GAAGhwB,QAAQ,CAACiwB,SAAS,EAAE,EAAE,CAAC;IAEhF;IACA,MAAM,CAACiB,YAAY,EAAEC,cAAc,CAAC,GAAGx/B,MAAM,CAACmC,SAAS,CAACoK,KAAK,CAAC,GAAG,CAAC;IAClE,MAAMkzB,iBAAiB,GACrBpxB,QAAQ,CAACkxB,YAAY,EAAE,EAAE,CAAC,GAAG,EAAE,GAAGlxB,QAAQ,CAACmxB,cAAc,EAAE,EAAE,CAAC;IAEhE,IAAIwS,IAAI,GAAGvS,iBAAiB,GAAGlB,mBAAmB;IAClD,IAAIyT,IAAI,IAAI,CAAC,EAAE;MACb,OAAO,OAAO;;IAEhB,MAAMC,SAAS,GAAGz0B,IAAI,CAACoiB,KAAK,CAACoS,IAAI,GAAG,EAAE,CAAC;IACvC,MAAMtS,WAAW,GAAGsS,IAAI,GAAG,EAAE;IAC7B,OAAO,GAAGC,SAAS,CAAClzC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI0gC,WAAW,CAC3D3gC,QAAQ,EAAE,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACvB;EAEAw/B,aAAaA,CAAA;IACX,OAAO,IAAI,CAACvzB,eAAe;EAC7B;;;uBApHWq3B,aAAa,EAAAvnC,sDAAA,CAAAE,8DAAA;IAAA;EAAA;;;aAAbqnC,aAAa;MAAA6F,OAAA,EAAb7F,aAAa,CAAA8F,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACJuE;AAC9B;AAC2D;AAC5D;AAChB;AAC+B;AACtC;;AAK/B,MAAOntC,eAAe;EAQ1B;EACA,IAAI6lC,MAAMA,CAAA;IACR,OAAO,IAAI,CAAC4R,QAAQ;EACtB;EAIAt4C,YAAA;IAAA,IAAAsT,KAAA;IAbQ,KAAAilC,kBAAkB,GAAG,IAAIR,iDAAe,CAAc,IAAI,CAAC;IAC5D,KAAA33C,YAAY,GAAG,IAAI,CAACm4C,kBAAkB,CAACC,YAAY,EAAE;IAE5D;IACO,KAAApe,oBAAoB,GAAG,IAAI4d,yCAAO,EAAQ;IAi5CjD;IACiB,KAAAS,iBAAiB,GAAG,qBAAqB;IAx4CxD,IAAI,CAACH,QAAQ,GAAGT,mEAAY,CAACC,kEAAW,CAACQ,QAAQ,CAAC/3C,GAAG,EAAEu3C,kEAAW,CAACQ,QAAQ,CAAC72B,GAAG,CAAC;IAEhF;IACA,IAAI,CAACi3B,iBAAiB,EAAE;IAExB;IACA,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAACC,iBAAiB;MAAA,IAAAC,IAAA,GAAAtlC,4JAAA,CAAC,WAAOyM,KAAK,EAAE84B,OAAO,EAAI;QAC5D,IAAIA,OAAO,EAAEx4C,IAAI,IAAIw4C,OAAO,CAACx4C,IAAI,CAACoJ,KAAK,EAAE;UACvC;UACA,MAAMqvC,YAAY,GAAID,OAAO,CAACx4C,IAAY,CAAC04C,aAAa,IAAI,EAAE;UAC9D,MAAMC,WAAW,GAAIH,OAAO,CAACx4C,IAAY,CAAC44C,kBAAkB,IAAI,EAAE;UAClE,MAAMC,YAAY,GAAGJ,YAAY,CAACn1C,QAAQ,IAAIq1C,WAAW,CAACr1C,QAAQ;UAClE,MAAMw1C,QAAQ,GAAGL,YAAY,CAACxoC,IAAI,IAAI0oC,WAAW,CAAC1oC,IAAI;UAEtD,MAAM8oC,QAAQ,GAAS;YACrB3lC,EAAE,EAAEolC,OAAO,CAACx4C,IAAI,CAACoT,EAAE;YACnBhK,KAAK,EAAEovC,OAAO,CAACx4C,IAAI,CAACoJ,KAAK;YACzB6G,IAAI,EAAE6oC,QAAQ,KAAKN,OAAO,CAACx4C,IAAI,CAACoJ,KAAK,KAAK,sBAAsB,GAAG,OAAO,GAAG,UAAU,CAAC;YACxF9F,QAAQ,EAAEu1C,YAAY,IAAI7lC,KAAI,CAACgmC,oBAAoB,CAACR,OAAO,CAACx4C,IAAI,CAACoJ,KAAK,CAAC;YACvE8G,MAAM,EAAE,IAAI;YACZpH,SAAS,EAAE,IAAIsI,IAAI;WACpB;UAED4B,KAAI,CAACilC,kBAAkB,CAACgB,IAAI,CAACF,QAAQ,CAAC;SACvC,MAAM;UACL/lC,KAAI,CAACilC,kBAAkB,CAACgB,IAAI,CAAC,IAAI,CAAC;;MAEtC,CAAC;MAAA,iBAAAriC,EAAA,EAAAC,GAAA;QAAA,OAAA0hC,IAAA,CAAAjhC,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EACJ;EAEA;EACc6gC,iBAAiBA,CAAA;IAAA,IAAAjkC,MAAA;IAAA,OAAAlB,4JAAA;MAC7B,IAAI;QACF,MAAM;UAAE0B,IAAI,EAAE;YAAE6jC;UAAO,CAAE;UAAEhmC;QAAK,CAAE,SAAS2B,MAAI,CAAC6jC,QAAQ,CAACK,IAAI,CAACa,UAAU,EAAE;QAE1E,IAAI1mC,KAAK,EAAE;UACT2B,MAAI,CAAC8jC,kBAAkB,CAACgB,IAAI,CAAC,IAAI,CAAC;UAClC;;QAGF,IAAIT,OAAO,EAAEx4C,IAAI,IAAIw4C,OAAO,CAACx4C,IAAI,CAACoJ,KAAK,EAAE;UACvC;UACA,MAAMqvC,YAAY,GAAID,OAAO,CAACx4C,IAAY,CAAC04C,aAAa,IAAI,EAAE;UAC9D,MAAMC,WAAW,GAAIH,OAAO,CAACx4C,IAAY,CAAC44C,kBAAkB,IAAI,EAAE;UAClE,MAAMC,YAAY,GAAGJ,YAAY,CAACn1C,QAAQ,IAAIq1C,WAAW,CAACr1C,QAAQ;UAClE,MAAMw1C,QAAQ,GAAGL,YAAY,CAACxoC,IAAI,IAAI0oC,WAAW,CAAC1oC,IAAI;UAEtD,MAAM8oC,QAAQ,GAAS;YACrB3lC,EAAE,EAAEolC,OAAO,CAACx4C,IAAI,CAACoT,EAAE;YACnBhK,KAAK,EAAEovC,OAAO,CAACx4C,IAAI,CAACoJ,KAAK;YACzB6G,IAAI,EAAE6oC,QAAQ,KAAKN,OAAO,CAACx4C,IAAI,CAACoJ,KAAK,KAAK,sBAAsB,GAAG,OAAO,GAAG,UAAU,CAAC;YACxF9F,QAAQ,EAAEu1C,YAAY,IAAI1kC,MAAI,CAAC6kC,oBAAoB,CAACR,OAAO,CAACx4C,IAAI,CAACoJ,KAAK,CAAC;YACvE8G,MAAM,EAAE,IAAI;YACZpH,SAAS,EAAE,IAAIsI,IAAI;WACpB;UAED+C,MAAI,CAAC8jC,kBAAkB,CAACgB,IAAI,CAACF,QAAQ,CAAC;SACvC,MAAM;UACL5kC,MAAI,CAAC8jC,kBAAkB,CAACgB,IAAI,CAAC,IAAI,CAAC;;OAErC,CAAC,OAAOzmC,KAAK,EAAE;QACd2B,MAAI,CAAC8jC,kBAAkB,CAACgB,IAAI,CAAC,IAAI,CAAC;;IACnC;EACH;EAEA;EACcE,wBAAwBA,CAACC,GAAW;IAAA,IAAAlkC,MAAA;IAAA,OAAAjC,4JAAA;MAChD,IAAI;QACF,MAAM0T,cAAc,GAAG,IAAIC,OAAO,CAAC,CAACC,CAAC,EAAEC,MAAM,KAAI;UAC/ClP,UAAU,CAAC,MAAMkP,MAAM,CAAC,IAAIC,KAAK,CAAC,yBAAyB,CAAC,CAAC,EAAE,IAAI,CAAC;QACtE,CAAC,CAAC;QAEF,MAAMsyB,YAAY,GAAGnkC,MAAI,CAAC8iC,QAAQ,CAC/BjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAE8S,GAAG,CAAC,CACbE,MAAM,EAAE;QAEX,MAAM;UAAE3kC,IAAI;UAAEnC;QAAK,CAAE,SAASoU,OAAO,CAACI,IAAI,CAAC,CAACqyB,YAAY,EAAE1yB,cAAc,CAAC,CAAQ;QAEjF,IAAIhS,IAAI,IAAI,CAACnC,KAAK,EAAE;UAClB,MAAM+mC,WAAW,GAAS;YACxBnmC,EAAE,EAAEuB,IAAI,CAACvB,EAAE;YACXhK,KAAK,EAAEuL,IAAI,CAACvL,KAAK;YACjB6G,IAAI,EAAE0E,IAAI,CAAC1E,IAAI;YACf3M,QAAQ,EAAEqR,IAAI,CAACrR,QAAQ;YACvB4M,MAAM,EAAEyE,IAAI,CAACzE,MAAM;YACnBpH,SAAS,EAAE,IAAIsI,IAAI,CAACuD,IAAI,CAACsT,UAAU;WACpC;UACD/S,MAAI,CAAC+iC,kBAAkB,CAACgB,IAAI,CAACM,WAAW,CAAC;;OAE5C,CAAC,OAAO/mC,KAAK,EAAE;QACd;MAAA;IACD;EACH;EAEA;EACM+kB,KAAKA,CAACnuB,KAAa,EAAEtB,QAAgB;IAAA,IAAAqN,MAAA;IAAA,OAAAlC,4JAAA;MACzC,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAAS2C,MAAI,CAAC6iC,QAAQ,CAACK,IAAI,CAACmB,kBAAkB,CAAC;UAClEpwC,KAAK;UACLtB;SACD,CAAC;QAEF,IAAI0K,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,IAAImC,IAAI,CAAC3U,IAAI,IAAI2U,IAAI,CAAC3U,IAAI,CAACoJ,KAAK,EAAE;UAChC;UACA,MAAMqvC,YAAY,GAAI9jC,IAAI,CAAC3U,IAAY,CAAC04C,aAAa,IAAI,EAAE;UAC3D,MAAMC,WAAW,GAAIhkC,IAAI,CAAC3U,IAAY,CAAC44C,kBAAkB,IAAI,EAAE;UAC/D,MAAMC,YAAY,GAAGJ,YAAY,CAACn1C,QAAQ,IAAIq1C,WAAW,CAACr1C,QAAQ;UAClE,MAAMw1C,QAAQ,GAAGL,YAAY,CAACxoC,IAAI,IAAI0oC,WAAW,CAAC1oC,IAAI;UAEtD,MAAM8oC,QAAQ,GAAS;YACrB3lC,EAAE,EAAEuB,IAAI,CAAC3U,IAAI,CAACoT,EAAE;YAChBhK,KAAK,EAAEuL,IAAI,CAAC3U,IAAI,CAACoJ,KAAK;YACtB6G,IAAI,EAAE6oC,QAAQ,KAAKnkC,IAAI,CAAC3U,IAAI,CAACoJ,KAAK,KAAK,sBAAsB,GAAG,OAAO,GAAG,UAAU,CAAC;YACrF9F,QAAQ,EAAEu1C,YAAY,IAAI1jC,MAAI,CAAC6jC,oBAAoB,CAACrkC,IAAI,CAAC3U,IAAI,CAACoJ,KAAK,CAAC;YACpE8G,MAAM,EAAE,IAAI;YACZpH,SAAS,EAAE,IAAIsI,IAAI;WACpB;UAED+D,MAAI,CAAC8iC,kBAAkB,CAACgB,IAAI,CAACF,QAAQ,CAAC;UACtC,OAAOA,QAAQ;;QAGjB,OAAO,IAAI;OACZ,CAAC,OAAOvmC,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEQwmC,oBAAoBA,CAAC5vC,KAAa;IACxC,IAAIA,KAAK,KAAK,sBAAsB,EAAE,OAAO,EAAE;IAC/C,IAAIA,KAAK,CAAClJ,QAAQ,CAAC,QAAQ,CAAC,EAAE,OAAO,YAAY;IACjD,IAAIkJ,KAAK,CAAClJ,QAAQ,CAAC,QAAQ,CAAC,EAAE,OAAO,YAAY;IACjD,IAAIkJ,KAAK,CAAClJ,QAAQ,CAAC,QAAQ,CAAC,EAAE,OAAO,YAAY;IACjD,IAAIkJ,KAAK,CAAClJ,QAAQ,CAAC,QAAQ,CAAC,EAAE,OAAO,YAAY;IACjD,OAAO,WAAW;EACpB;EAEM2b,MAAMA,CAAA;IAAA,IAAAhG,MAAA;IAAA,OAAA5C,4JAAA;MACV,MAAM;QAAET;MAAK,CAAE,SAASqD,MAAI,CAACmiC,QAAQ,CAACK,IAAI,CAACoB,OAAO,EAAE;MACpD,IAAIjnC,KAAK,EAAE,MAAMA,KAAK;IAAC;EACzB;EAEA;EACMknC,cAAcA,CAAA;IAAA,IAAAhjC,MAAA;IAAA,OAAAzD,4JAAA;MAClB,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASkE,MAAI,CAACshC,QAAQ,CACxCjzB,IAAI,CAAC,UAAU,CAAC,CAChBshB,MAAM,CAAC,OAAO,CAAC,CACfsT,KAAK,CAAC,CAAC,CAAC;QAEX,OAAO,CAACnnC,KAAK;OACd,CAAC,OAAOA,KAAK,EAAE;QACd,OAAO,KAAK;;IACb;EACH;EAEA;EACMonC,WAAWA,CAACR,GAAW;IAAA,IAAAtiC,MAAA;IAAA,OAAA7D,4JAAA;MAC3B,IAAI;QACF;QACA,MAAM;UAAE0B,IAAI,EAAEklC,QAAQ;UAAErnC,KAAK,EAAEsnC;QAAS,CAAE,SAAShjC,MAAI,CAACkhC,QAAQ,CAACK,IAAI,CAAC0B,OAAO,EAAE;QAE/E,IAAID,SAAS,IAAI,CAACD,QAAQ,CAAC75C,IAAI,EAAE;UAC/B,OAAO,IAAI;;QAGb;QACA,MAAMg6C,eAAe,GAAS;UAC5B5mC,EAAE,EAAEymC,QAAQ,CAAC75C,IAAI,CAACoT,EAAE;UACpBhK,KAAK,EAAEywC,QAAQ,CAAC75C,IAAI,CAACoJ,KAAK,IAAI,EAAE;UAChC6G,IAAI,EAAE,UAAmB;UACzB3M,QAAQ,EAAE,WAAW;UACrB4M,MAAM,EAAE,IAAI;UACZpH,SAAS,EAAE,IAAIsI,IAAI;SACpB;QAED;QACA,IAAI;UACF,MAAMuV,cAAc,GAAG,IAAIC,OAAO,CAAC,CAACC,CAAC,EAAEC,MAAM,KAAI;YAC/ClP,UAAU,CAAC,MAAMkP,MAAM,CAAC,IAAIC,KAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;UACjE,CAAC,CAAC;UAEF,MAAMsyB,YAAY,GAAGviC,MAAI,CAACkhC,QAAQ,CAC/BjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAE8S,GAAG,CAAC,CACbE,MAAM,EAAE;UAEX,MAAM;YAAE3kC,IAAI;YAAEnC;UAAK,CAAE,SAASoU,OAAO,CAACI,IAAI,CAAC,CAACqyB,YAAY,EAAE1yB,cAAc,CAAC,CAAQ;UAEjF,IAAIhS,IAAI,IAAI,CAACnC,KAAK,EAAE;YAClB,OAAO;cACLY,EAAE,EAAEuB,IAAI,CAACvB,EAAE;cACXhK,KAAK,EAAEuL,IAAI,CAACvL,KAAK;cACjB6G,IAAI,EAAE0E,IAAI,CAAC1E,IAAI;cACf3M,QAAQ,EAAEqR,IAAI,CAACrR,QAAQ;cACvB4M,MAAM,EAAEyE,IAAI,CAACzE,MAAM;cACnBpH,SAAS,EAAE,IAAIsI,IAAI,CAACuD,IAAI,CAACsT,UAAU;aAC5B;;SAEZ,CAAC,OAAOgyB,OAAO,EAAE;UAChB;QAAA;QAGF,OAAOD,eAAe;OAEvB,CAAC,OAAOxnC,KAAK,EAAE;QACd,OAAO,IAAI;;IACZ;EACH;EAEA;EACM4vB,kBAAkBA,CAAC9+B,QAAgB;IAAA,IAAAkU,MAAA;IAAA,OAAAvE,4JAAA;MACvC,IAAI;QACF;QACA,MAAMinC,KAAK,GAAG,IAAI9oC,IAAI,EAAE;QACxB,MAAM40B,UAAU,GAAG,IAAI50B,IAAI,CAAC8oC,KAAK,CAAC;QAClC,MAAMjU,QAAQ,GAAG,IAAI70B,IAAI,CAAC8oC,KAAK,CAAC;QAEhClU,UAAU,CAACvyB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/BwyB,QAAQ,CAACxyB,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QAElC,MAAMyyB,QAAQ,GAAG1uB,MAAI,CAACwpB,0BAA0B,CAACgF,UAAU,CAAC;QAC5D,MAAMG,MAAM,GAAG3uB,MAAI,CAACwpB,0BAA0B,CAACiF,QAAQ,CAAC;QAIxD1wB,OAAO;QACP;QACA,MAAM;UAAEZ,IAAI;UAAEnC;QAAK,CAAE,SAASgF,MAAI,CAACwgC,QAAQ,CACxCjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,gCAAgC,CAAC,CACxCC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBijC,GAAG,CAAC,OAAO,EAAEL,QAAQ,CAAC,CACtBM,GAAG,CAAC,OAAO,EAAEL,MAAM,CAAC,CACpBgU,KAAK,CAAC,aAAa,EAAE;UAAEC,SAAS,EAAE;QAAK,CAAE,CAAC,CAC1CT,KAAK,CAAC,CAAC,CAAC;QAEX,IAAInnC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,MAAM6nC,eAAe,GAAG1lC,IAAI,IAAIA,IAAI,CAACrM,MAAM,GAAG,CAAC,GAAG,CAACqM,IAAI,CAAC,CAAC,CAAC,CAAC/L,WAAW,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAEpF,OAAOyxC,eAAe;OACvB,CAAC,OAAO7nC,KAAK,EAAE;QACd;QACA,OAAO,CAAC;;IACT;EACH;EAEM6vB,UAAUA,CAACnrB,IAAoC;IAAA,IAAAS,MAAA;IAAA,OAAA1E,4JAAA;MACnD,IAAI;QACF;QAEA,MAAM8tB,SAAS,GAAGppB,MAAI,CAACqpB,0BAA0B,CAAC,IAAI5vB,IAAI,EAAE,CAAC;QAE7D,MAAMkpC,QAAQ,GAAG;UACfC,OAAO,EAAErjC,IAAI,CAACkE,MAAM;UACpB9X,QAAQ,EAAE4T,IAAI,CAAC5T,QAAQ;UACvB+B,MAAM,EAAE6R,IAAI,CAAC7R,MAAM;UACnBgI,KAAK,EAAE0zB,SAAS;UAChBh4B,KAAK,EAAEmO,IAAI,CAACnO,KAAK;UACjByxC,aAAa,EAAEtjC,IAAI,CAACvO,YAAY;UAChCC,WAAW,EAAEsO,IAAI,CAACtO,WAAW;UAC7Bqf,UAAU,EAAE8Y;SACb;QAED,MAAM;UAAEpsB,IAAI;UAAEnC;QAAK,CAAE,SAASmF,MAAI,CAACqgC,QAAQ,CACxCjzB,IAAI,CAAC,OAAO,CAAC,CACb01B,MAAM,CAAC,CAACH,QAAQ,CAAC,CAAC,CAClBjU,MAAM,EAAE,CACRiT,MAAM,EAAE;QAEX,IAAI9mC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,OAAOmC,IAAI,CAACvB,EAAE;OACf,CAAC,OAAOZ,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEM+vB,gBAAgBA,CAACnrB,MAA8B;IAAA,IAAA0B,MAAA;IAAA,OAAA7F,4JAAA;MACnD,IAAI;QACF;QACA,IAAImE,MAAM,CAACjT,MAAM,KAAK,IAAI,IAAIiT,MAAM,CAACjT,MAAM,KAAKid,SAAS,EAAE;UACzD,MAAM,IAAI2F,KAAK,CAAC,sCAAsC,CAAC;;QAGzD,IAAI3P,MAAM,CAAClP,KAAK,KAAK,IAAI,IAAIkP,MAAM,CAAClP,KAAK,KAAKkZ,SAAS,IAAIhK,MAAM,CAAClP,KAAK,IAAI,CAAC,EAAE;UAC5E,MAAM,IAAI6e,KAAK,CAAC,0BAA0B,CAAC;;QAG7C;QACA,MAAM2zB,YAAY,GAAGtjC,MAAM,CAACjT,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAE9D,MAAMs2C,UAAU,GAAG;UACjBC,OAAO,EAAExjC,MAAM,CAACZ,MAAM;UACtBrS,MAAM,EAAEu2C,YAAY;UACpBxyC,KAAK,EAAEi8B,MAAM,CAAC/sB,MAAM,CAAClP,KAAK;SAC3B;QAED,MAAM;UAAEyM,IAAI;UAAEnC;QAAK,CAAE,SAASsG,MAAI,CAACk/B,QAAQ,CACxCjzB,IAAI,CAAC,cAAc,CAAC,CACpB01B,MAAM,CAAC,CAACE,UAAU,CAAC,CAAC,CACpBtU,MAAM,EAAE,CACRiT,MAAM,EAAE;QAEX,IAAI9mC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,OAAOmC,IAAI,CAACvB,EAAE;OACf,CAAC,OAAOZ,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAIMyE,uBAAuBA,CAAC5J,KAAW,EAAEhI,MAAc;IAAA,IAAA2T,MAAA;IAAA,OAAA/F,4JAAA;MACvD,IAAI;QACF;QACA,MAAM4nC,aAAa,GAAG7hC,MAAI,CAACgoB,0BAA0B,CAAChoB,MAAI,CAACjH,qBAAqB,CAAC1E,KAAK,CAAC,CAAC;QACxF,MAAMytC,WAAW,GAAG9hC,MAAI,CAACgoB,0BAA0B,CAAChoB,MAAI,CAAC/G,mBAAmB,CAAC5E,KAAK,CAAC,CAAC;QAEpF,IAAI0tC,KAAK,GAAG/hC,MAAI,CAACg/B,QAAQ,CACtBjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,GAAG,CAAC,CACXE,GAAG,CAAC,OAAO,EAAEsU,aAAa,CAAC,CAC3BrU,GAAG,CAAC,OAAO,EAAEsU,WAAW,CAAC,CACzBX,KAAK,CAAC,YAAY,EAAE;UAAEC,SAAS,EAAE;QAAK,CAAE,CAAC;QAE5C,IAAI/0C,MAAM,IAAIA,MAAM,CAACmkB,IAAI,EAAE,KAAK,EAAE,EAAE;UAClCuxB,KAAK,GAAGA,KAAK,CAACzU,EAAE,CAAC,QAAQ,EAAEjhC,MAAM,CAAC;;QAGpC,MAAM;UAAEsP,IAAI;UAAEnC;QAAK,CAAE,SAASuoC,KAAK;QAEnC,IAAIvoC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,IAAI,CAACmC,IAAI,IAAIA,IAAI,CAACrM,MAAM,KAAK,CAAC,EAAE;UAC9B,OAAO,EAAE;;QAGX,MAAM0yC,WAAW,GAAGrmC,IAAI,CAACyD,GAAG,CAAClB,IAAI,KAAK;UACpC9D,EAAE,EAAE8D,IAAI,CAAC9D,EAAE;UACXgI,MAAM,EAAElE,IAAI,CAACqjC,OAAO;UACpBj3C,QAAQ,EAAE4T,IAAI,CAAC5T,QAAQ;UACvB+B,MAAM,EAAE6R,IAAI,CAAC7R,MAAM;UACnBgI,KAAK,EAAE2L,MAAI,CAACiiC,qBAAqB,CAAC/jC,IAAI,CAAC7J,KAAK,CAAC;UAC7CtE,KAAK,EAAEmO,IAAI,CAACnO,KAAK;UACjBJ,YAAY,EAAEuO,IAAI,CAACsjC,aAAa,IAAItjC,IAAI,CAAC9D,EAAE,CAACnO,KAAK,CAAC,CAAC,CAAC,CAAC;UACrD2D,WAAW,EAAEsO,IAAI,CAACtO,WAAW,IAAI,CAAC;UAClCE,SAAS,EAAEkQ,MAAI,CAACiiC,qBAAqB,CAAC/jC,IAAI,CAAC+Q,UAAU,CAAC,CAAC;SACxD,CAAC,CAAW;QAEb,OAAO+yB,WAAW;OACnB,CAAC,OAAOxoC,KAAK,EAAE;QACd,OAAO,EAAE;;IACV;EACH;EAEM+D,cAAcA,CAACC,MAAc;IAAA,IAAA0C,OAAA;IAAA,OAAAjG,4JAAA;MACjC,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAAS0G,OAAI,CAAC8+B,QAAQ,CACxCjzB,IAAI,CAAC,cAAc,CAAC,CACpBshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,SAAS,EAAE9vB,MAAM,CAAC;QAExB,IAAIhE,KAAK,EAAE,MAAMA,KAAK;QAEtB,OAAOmC,IAAI,CAACyD,GAAG,CAAChB,MAAM,KAAK;UACzBhE,EAAE,EAAEgE,MAAM,CAAChE,EAAE;UACboD,MAAM,EAAEY,MAAM,CAACwjC,OAAO;UACtBz2C,MAAM,EAAEuP,QAAQ,CAAC0D,MAAM,CAACjT,MAAM,CAAC;UAC/B+D,KAAK,EAAEkP,MAAM,CAAClP;SACf,CAAC,CAAiB;OACpB,CAAC,OAAOsK,KAAK,EAAE;QACd,OAAO,EAAE;;IACV;EACH;EAEA;EACM6E,oBAAoBA,CAAChS,MAA0B;IAAA,IAAA+T,OAAA;IAAA,OAAAnG,4JAAA;MACnD,IAAI;QACF,MAAMY,QAAQ,GAAG,GAAGuF,OAAI,CAACxF,yBAAyB,CAACvO,MAAM,CAACgI,KAAK,CAAC,IAAIhI,MAAM,CAACA,MAAM,EAAE;QAEnF;QACA,MAAM61C,mBAAmB,GAAG,CAAC71C,MAAM,CAACQ,aAAa,IAAI,EAAE,EAAEzB,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAEpF,MAAM0P,UAAU,GAAG;UACjBX,EAAE,EAAES,QAAQ;UACZxG,KAAK,EAAE+L,OAAI,CAAC4nB,0BAA0B,CAAC37B,MAAM,CAACgI,KAAK,CAAC;UACpDhI,MAAM,EAAEA,MAAM,CAACA,MAAM;UACrBwP,WAAW,EAAEuE,OAAI,CAAC4nB,0BAA0B,CAAC37B,MAAM,CAACuP,UAAU,CAAC;UAC/D7Q,cAAc,EAAEm3C,mBAAmB;UACnC13C,oBAAoB,EAAE6B,MAAM,CAACU,mBAAmB;UAChDqF,aAAa,EAAE/F,MAAM,CAACf,YAAY;UAClC+G,YAAY,EAAEhG,MAAM,CAACyP,WAAW;UAChCxJ,aAAa,EAAEjG,MAAM,CAAC0P,YAAY;UAClCf,OAAO,EAAE3O,MAAM,CAAC2O;SACjB;QAED,MAAM;UAAEW,IAAI;UAAEnC;QAAK,CAAE,SAAS4G,OAAI,CAAC4+B,QAAQ,CACxCjzB,IAAI,CAAC,SAAS,CAAC,CACfo2B,MAAM,CAAC,CAACpnC,UAAU,CAAC,CAAC,CACpBsyB,MAAM,EAAE,CACRiT,MAAM,EAAE;QAEX,IAAI9mC,KAAK,EAAE,MAAMA,KAAK;QAEtB,OAAOmC,IAAI,CAACvB,EAAE;OACf,CAAC,OAAOZ,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEM4oC,SAASA,CAAC/tC,KAAW,EAAEhI,MAAc;IAAA,IAAAiU,OAAA;IAAA,OAAArG,4JAAA;MACzC,IAAI;QACF,MAAMY,QAAQ,GAAG,GAAGyF,OAAI,CAAC1F,yBAAyB,CAACvG,KAAK,CAAC,IAAIhI,MAAM,EAAE;QACrE,MAAM;UAAEsP,IAAI;UAAEnC;QAAK,CAAE,SAAS8G,OAAI,CAAC0+B,QAAQ,CACxCjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC,CAClBylC,MAAM,EAAE;QAEX,IAAI9mC,KAAK,EAAE;UACT,IAAIA,KAAK,CAACgC,IAAI,KAAK,UAAU,EAAE;YAC7B;YACA,OAAO,IAAI;;UAEb,MAAMhC,KAAK;;QAGb,OAAO;UACLY,EAAE,EAAEuB,IAAI,CAACvB,EAAE;UACX/F,KAAK,EAAE,IAAI+D,IAAI,CAACuD,IAAI,CAACtH,KAAK,CAAC;UAC3BhI,MAAM,EAAEsP,IAAI,CAACtP,MAAM;UACnBuP,UAAU,EAAE,IAAIxD,IAAI,CAACuD,IAAI,CAACE,WAAW,CAAC;UACtC;UACAhP,aAAa,EAAE8O,IAAI,CAAC5Q,cAAc,IAAI,EAAE;UACxCgC,mBAAmB,EAAE4O,IAAI,CAACnR,oBAAoB;UAC9Cc,YAAY,EAAEqQ,IAAI,CAACvJ,aAAa;UAChC0J,WAAW,EAAEH,IAAI,CAACtJ,YAAY;UAC9B0J,YAAY,EAAEJ,IAAI,CAACrJ,aAAa;UAChC0I,OAAO,EAAEW,IAAI,CAACX;SACL;OACZ,CAAC,OAAOxB,KAAK,EAAE;QACd,OAAO,IAAI;;IACZ;EACH;EAEA;EACM4B,aAAaA,CAACP,QAAgB;IAAA,IAAA2F,OAAA;IAAA,OAAAvG,4JAAA;MAClC,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASgH,OAAI,CAACw+B,QAAQ,CACxCjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC;QAErB,IAAIrB,KAAK,EAAE;UACT;UACA,IAAIA,KAAK,CAACgC,IAAI,KAAK,OAAO,IAAIhC,KAAK,CAAC2E,OAAO,EAAEjX,QAAQ,CAAC,mBAAmB,CAAC,EAAE;YAC1E,MAAM;cAAE,GAAGsS,KAAK;cAAE+B,UAAU,EAAE;YAAI,CAAE;;UAEtC,MAAM/B,KAAK;;QAGb,IAAI,CAACmC,IAAI,IAAIA,IAAI,CAACrM,MAAM,KAAK,CAAC,EAAE;UAC9B,OAAO,IAAI;;QAGb;QACA,MAAM+yC,WAAW,GAAG1mC,IAAI,CAAC,CAAC,CAAC;QAE3B,OAAO;UACLvB,EAAE,EAAEioC,WAAW,CAACjoC,EAAE;UAClB/F,KAAK,EAAE,IAAI+D,IAAI,CAACiqC,WAAW,CAAChuC,KAAK,CAAC;UAClChI,MAAM,EAAEg2C,WAAW,CAACh2C,MAAM;UAC1BuP,UAAU,EAAE,IAAIxD,IAAI,CAACiqC,WAAW,CAACxmC,WAAW,CAAC;UAC7ChP,aAAa,EAAEw1C,WAAW,CAACt3C,cAAc,IAAI,EAAE;UAC/CgC,mBAAmB,EAAEs1C,WAAW,CAAC73C,oBAAoB;UACrDc,YAAY,EAAE+2C,WAAW,CAACjwC,aAAa;UACvC0J,WAAW,EAAEumC,WAAW,CAAChwC,YAAY;UACrC0J,YAAY,EAAEsmC,WAAW,CAAC/vC,aAAa;UACvC0I,OAAO,EAAEqnC,WAAW,CAACrnC,OAAO;UAC5B1Q,QAAQ,EAAE+3C,WAAW,CAAC/3C;SACb;OACZ,CAAC,OAAOkP,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEA;EACMkO,2BAA2BA,CAAC7M,QAAgB;IAAA,IAAA6F,OAAA;IAAA,OAAAzG,4JAAA;MAChD,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASkH,OAAI,CAACs+B,QAAQ,CACxCjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,4FAA4F,CAAC,CACpGC,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC,CAClBsmC,KAAK,CAAC,UAAU,CAAC;QAEpB,IAAI3nC,KAAK,EAAE;UACT+C,OAAO,CAAC/C,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;UAC9D,OAAO,EAAE;;QAGX;QACA,MAAM8oC,YAAY,SAAS10B,OAAO,CAACU,GAAG,CAAC,CAAC3S,IAAI,IAAI,EAAE,EAAEyD,GAAG;UAAA,IAAAmjC,KAAA,GAAAtoC,4JAAA,CAAC,WAAO5N,MAAM,EAAI;YACvE,MAAMse,qBAAqB,SAASjK,OAAI,CAAC8hC,mCAAmC,CAC1E3nC,QAAQ,EACRxO,MAAM,CAAC/B,QAAQ,EACf+B,MAAM,CAACtB,cAAc,CACtB;YAED,OAAO;cACL,GAAGsB,MAAM;cACT5B,uBAAuB,EAAEkgB;aAC1B;UACH,CAAC;UAAA,iBAAA4sB,GAAA;YAAA,OAAAgL,KAAA,CAAAjkC,KAAA,OAAAC,SAAA;UAAA;QAAA,IAAC,CAAC;QAEH,OAAO+jC,YAAY;OACpB,CAAC,OAAO9oC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D,OAAO,EAAE;;IACV;EACH;EAEA;EACcgpC,mCAAmCA,CAC/C3nC,QAAgB,EAChBvQ,QAAgB,EAChBuC,aAAqB;IAAA,IAAA+T,OAAA;IAAA,OAAA3G,4JAAA;MAErB,IAAI;QACF;QACA,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASoH,OAAI,CAACo+B,QAAQ,CACxCyD,GAAG,CAAC,0CAA0C,EAAE;UAC/CC,WAAW,EAAE7nC,QAAQ;UACrB8nC,UAAU,EAAEr4C,QAAQ;UACpBs4C,gBAAgB,EAAE/1C;SACnB,CAAC;QAEJ,IAAI2M,KAAK,EAAE;UACT+C,OAAO,CAAC/C,KAAK,CAAC,gEAAgE,EAAEA,KAAK,CAAC;UACtF,OAAO,CAAC;;QAGV,OAAOmC,IAAI,IAAI,CAAC;OACjB,CAAC,OAAOnC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;QACrE,OAAO,CAAC;;IACT;EACH;EAEA;EACMkC,mBAAmBA,CAACb,QAAgB;IAAA,IAAAwG,OAAA;IAAA,OAAApH,4JAAA;MACxC,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAAS6H,OAAI,CAAC29B,QAAQ,CACxCyD,GAAG,CAAC,mBAAmB,EAAE;UAAEI,SAAS,EAAEhoC;QAAQ,CAAE,CAAC;QAEpD,IAAIrB,KAAK,EAAE;UACT,OAAO,IAAI;;QAGb,OAAOmC,IAAI;OACZ,CAAC,OAAOnC,KAAK,EAAE;QACd,OAAO,IAAI;;IACZ;EACH;EAEA;EACMspC,eAAeA,CAACjoC,QAAgB,EAAEhO,aAAqB,EAAEE,mBAA2B;IAAA,IAAAuU,OAAA;IAAA,OAAArH,4JAAA;MACxF,IAAI;QAEF,MAAMynC,YAAY,GAAG70C,aAAa,CAACzB,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAC9D,MAAM03C,gBAAgB,GAAGzhC,OAAI,CAAC5I,mBAAmB,EAAE;QAEnD,MAAM;UAAEc;QAAK,CAAE,SAAS8H,OAAI,CAAC09B,QAAQ,CAClCjzB,IAAI,CAAC,SAAS,CAAC,CACf01B,MAAM,CAAC;UACNrnC,EAAE,EAAES,QAAQ;UACZxG,KAAK,EAAEiN,OAAI,CAAC0mB,0BAA0B,CAAC+a,gBAAgB,CAAC;UACxD12C,MAAM,EAAEwO,QAAQ,CAACjC,KAAK,CAAC,GAAG,CAAC,CAAC3M,KAAK,CAAC,CAAC,CAAC,CAACyZ,IAAI,CAAC,GAAG,CAAC;UAC9C7J,WAAW,EAAEyF,OAAI,CAAC0mB,0BAA0B,CAAC+a,gBAAgB,CAAC;UAC9Dh4C,cAAc,EAAE22C,YAAY;UAC5Bl3C,oBAAoB,EAAEuC,mBAAmB;UACzCqF,aAAa,EAAE,CAAC;UAChBC,YAAY,EAAE,CAAC;UACfC,aAAa,EAAE,CAAC;UAChB0I,OAAO,EAAE;SACV,CAAC;QAEJ,IAAIxB,KAAK,EAAE;UACT,MAAMA,KAAK;;OAGd,CAAC,OAAOA,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEMwpC,kBAAkBA,CAACnoC,QAAgB,EAAEhO,aAAqB,EAAEE,mBAA2B;IAAA,IAAA6U,OAAA;IAAA,OAAA3H,4JAAA;MAC3F,IAAI;QAEF;QACA,MAAMynC,YAAY,GAAG70C,aAAa,CAACzB,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAE9D;QACA,MAAM;UAAEsQ,IAAI,EAAEsnC,YAAY;UAAEzpC,KAAK,EAAE0pC;QAAW,CAAE,SAASthC,OAAI,CAACo9B,QAAQ,CACnEjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,IAAI,CAAC,CACZC,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC,CAClBylC,MAAM,EAAE;QAEX,IAAI4C,WAAW,IAAIA,WAAW,CAAC1nC,IAAI,KAAK,UAAU,EAAE;UAClD,MAAM0nC,WAAW;;QAGnB,IAAIh7B,MAAM;QAEV,IAAI+6B,YAAY,EAAE;UAChB;UACA/6B,MAAM,SAAStG,OAAI,CAACo9B,QAAQ,CACzBjzB,IAAI,CAAC,SAAS,CAAC,CACfo3B,MAAM,CAAC;YACNp4C,cAAc,EAAE22C,YAAY;YAC5Bl3C,oBAAoB,EAAEuC,mBAAmB;YACzCiO,OAAO,EAAE;WACV,CAAC,CACDsyB,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC;SACtB,MAAM;UACL;UACA,MAAMkoC,gBAAgB,GAAGnhC,OAAI,CAAClJ,mBAAmB,EAAE;UACnDwP,MAAM,SAAStG,OAAI,CAACo9B,QAAQ,CACzBjzB,IAAI,CAAC,SAAS,CAAC,CACf01B,MAAM,CAAC;YACNrnC,EAAE,EAAES,QAAQ;YACZxG,KAAK,EAAEuN,OAAI,CAAComB,0BAA0B,CAAC+a,gBAAgB,CAAC;YACxD12C,MAAM,EAAEwO,QAAQ,CAACjC,KAAK,CAAC,GAAG,CAAC,CAAC3M,KAAK,CAAC,CAAC,CAAC,CAACyZ,IAAI,CAAC,GAAG,CAAC;YAC9C7J,WAAW,EAAE+F,OAAI,CAAComB,0BAA0B,CAAC+a,gBAAgB,CAAC;YAC9Dh4C,cAAc,EAAE22C,YAAY;YAC5Bl3C,oBAAoB,EAAEuC,mBAAmB;YACzCqF,aAAa,EAAE,CAAC;YAChBC,YAAY,EAAE,CAAC;YACfC,aAAa,EAAE,CAAC;YAChB0I,OAAO,EAAE;WACV,CAAC;;QAGN,IAAIkN,MAAM,CAAC1O,KAAK,EAAE;UAChB,MAAM0O,MAAM,CAAC1O,KAAK;;OAIrB,CAAC,OAAOA,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEM4pC,YAAYA,CAACvoC,QAAgB,EAAEQ,UAAkB,EAAEhH,KAAW;IAAA,IAAA4N,OAAA;IAAA,OAAAhI,4JAAA;MAClE,IAAI;QACF,MAAM8oC,gBAAgB,GAAG9gC,OAAI,CAACvJ,mBAAmB,EAAE;QAEnD,MAAM;UAAEc;QAAK,CAAE,SAASyI,OAAI,CAAC+8B,QAAQ,CAClCjzB,IAAI,CAAC,SAAS,CAAC,CACf01B,MAAM,CAAC;UACNrnC,EAAE,EAAES,QAAQ;UACZxG,KAAK,EAAE4N,OAAI,CAAC+lB,0BAA0B,CAAC+a,gBAAgB,CAAC;UACxD12C,MAAM,EAAEgP,UAAU;UAClBQ,WAAW,EAAEoG,OAAI,CAAC+lB,0BAA0B,CAAC+a,gBAAgB,CAAC;UAC9Dh4C,cAAc,EAAE,IAAI;UACpBP,oBAAoB,EAAE,EAAE;UACxB4H,aAAa,EAAE,CAAC;UAChBC,YAAY,EAAE,CAAC;UACfC,aAAa,EAAE,CAAC;UAChB0I,OAAO,EAAE;SACV,CAAC;QAEJ,IAAIxB,KAAK,EAAE,MAAMA,KAAK;OACvB,CAAC,OAAOA,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEA;EACM6pC,4BAA4BA,CAAChvC,KAAW,EAAE/J,QAAgB;IAAA,IAAA+X,OAAA;IAAA,OAAApI,4JAAA;MAC9D,IAAI;QACFsC,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEnI,KAAK,EAAE,WAAW,EAAE/J,QAAQ,CAAC;QAE5F,MAAMid,QAAQ,GAAGlF,OAAI,CAACzH,yBAAyB,CAACvG,KAAK,CAAC;QAEtD;QACA,MAAM;UAAEsH,IAAI;UAAEnC;QAAK,CAAE,SAAS6I,OAAI,CAAC28B,QAAQ,CAACyD,GAAG,CAAC,gCAAgC,EAAE;UAChFa,OAAO,EAAE/7B,QAAQ;UACjBo7B,UAAU,EAAEr4C;SACb,CAAC;QAEF,IAAIkP,KAAK,EAAE;UACT+C,OAAO,CAACC,GAAG,CAAC,kEAAkE,EAAEhD,KAAK,CAACgI,OAAO,CAAC;UAC9F;UACA,aAAaa,OAAI,CAACkhC,2BAA2B,CAAClvC,KAAK,EAAE/J,QAAQ,CAAC;;QAGhE;QACA,MAAMk5C,aAAa,GAAQ;UACzB9W,MAAM,EAAE;YAAEphC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAChGktB,KAAK,EAAE;YAAEthC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAC/FmtB,KAAK,EAAE;YAAEvhC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE;SAC9F;QAED,IAAI/D,IAAI,IAAIA,IAAI,CAACrM,MAAM,GAAG,CAAC,EAAE;UAC3BqM,IAAI,CAACgJ,OAAO,CAAE00B,GAAQ,IAAI;YACxB;YACA,IAAIoK,SAAuC;YAC3C,IAAIpK,GAAG,CAAChtC,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,IAAI2L,GAAG,CAAChtC,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,EAAE;cACpF+V,SAAS,GAAG,QAAQ;aACrB,MAAM,IAAIpK,GAAG,CAAChtC,MAAM,EAAEqhC,WAAW,EAAE,KAAK,OAAO,EAAE;cAChD+V,SAAS,GAAG,OAAO;aACpB,MAAM,IAAIpK,GAAG,CAAChtC,MAAM,EAAEqhC,WAAW,EAAE,KAAK,OAAO,EAAE;cAChD+V,SAAS,GAAG,OAAO;aACpB,MAAM;cACL,OAAO,CAAC;;YAGV,IAAID,aAAa,CAACC,SAAS,CAAC,EAAE;cAC5BD,aAAa,CAACC,SAAS,CAAC,CAACn4C,YAAY,GAAGuc,UAAU,CAACwxB,GAAG,CAACjnC,aAAa,CAAC,IAAI,CAAC;cAC1EoxC,aAAa,CAACC,SAAS,CAAC,CAAC52C,aAAa,GAAGwsC,GAAG,CAACtuC,cAAc,GAAG2P,QAAQ,CAAC2+B,GAAG,CAACtuC,cAAc,CAAC,GAAG,IAAI;cACjGy4C,aAAa,CAACC,SAAS,CAAC,CAAC/jC,MAAM,GAAG25B,GAAG,CAAC7uC,oBAAoB,IAAI,EAAE;cAChEg5C,aAAa,CAACC,SAAS,CAAC,CAAC3rB,UAAU,GAAGjQ,UAAU,CAACwxB,GAAG,CAACqK,WAAW,CAAC,IAAI,CAAC;cAEtE;cACA,IAAIrK,GAAG,CAACsK,gBAAgB,IAAI,OAAOtK,GAAG,CAACsK,gBAAgB,KAAK,QAAQ,EAAE;gBACpEH,aAAa,CAACC,SAAS,CAAC,CAAC9W,eAAe,GAAG0M,GAAG,CAACsK,gBAAgB;;;UAGrE,CAAC,CAAC;;QAGJpnC,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEgnC,aAAa,CAAC;QAC1E,OAAOA,aAAa;OAErB,CAAC,OAAOhqC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D;QACA,aAAa6I,OAAI,CAACkhC,2BAA2B,CAAClvC,KAAK,EAAE/J,QAAQ,CAAC;;IAC/D;EACH;EAEA;EACci5C,2BAA2BA,CAAClvC,KAAW,EAAE/J,QAAgB;IAAA,IAAAqY,OAAA;IAAA,OAAA1I,4JAAA;MACrE,IAAI;QACF,MAAMsN,QAAQ,GAAG5E,OAAI,CAAC/H,yBAAyB,CAACvG,KAAK,CAAC;QAEtD;QACA,MAAM;UAAEsH,IAAI;UAAEnC;QAAK,CAAE,SAASmJ,OAAI,CAACq8B,QAAQ,CAACyD,GAAG,CAAC,4BAA4B,EAAE;UAC5Ea,OAAO,EAAE/7B,QAAQ;UACjBo7B,UAAU,EAAEr4C;SACb,CAAC;QAEF,IAAIkP,KAAK,EAAE;UACT+C,OAAO,CAACC,GAAG,CAAC,+DAA+D,EAAEhD,KAAK,CAACgI,OAAO,CAAC;UAC3F,aAAamB,OAAI,CAACihC,wBAAwB,CAACvvC,KAAK,EAAE/J,QAAQ,CAAC;;QAG7D,MAAMk5C,aAAa,GAAQ;UACzB9W,MAAM,EAAE;YAAEphC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAChGktB,KAAK,EAAE;YAAEthC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAC/FmtB,KAAK,EAAE;YAAEvhC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE;SAC9F;QAED,IAAI/D,IAAI,IAAIA,IAAI,CAACrM,MAAM,GAAG,CAAC,EAAE;UAC3BqM,IAAI,CAACgJ,OAAO,CAAE00B,GAAQ,IAAI;YACxB;YACA,IAAIoK,SAAuC;YAC3C,IAAIpK,GAAG,CAAChtC,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,IAAI2L,GAAG,CAAChtC,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,EAAE;cACpF+V,SAAS,GAAG,QAAQ;aACrB,MAAM,IAAIpK,GAAG,CAAChtC,MAAM,EAAEqhC,WAAW,EAAE,KAAK,OAAO,EAAE;cAChD+V,SAAS,GAAG,OAAO;aACpB,MAAM,IAAIpK,GAAG,CAAChtC,MAAM,EAAEqhC,WAAW,EAAE,KAAK,OAAO,EAAE;cAChD+V,SAAS,GAAG,OAAO;aACpB,MAAM;cACL,OAAO,CAAC;;YAGV,IAAID,aAAa,CAACC,SAAS,CAAC,EAAE;cAC5BD,aAAa,CAACC,SAAS,CAAC,CAACn4C,YAAY,GAAGuc,UAAU,CAACwxB,GAAG,CAACjnC,aAAa,CAAC,IAAI,CAAC;cAC1EoxC,aAAa,CAACC,SAAS,CAAC,CAAC52C,aAAa,GAAGwsC,GAAG,CAACtuC,cAAc,GAAG2P,QAAQ,CAAC2+B,GAAG,CAACtuC,cAAc,CAAC,GAAG,IAAI;cACjGy4C,aAAa,CAACC,SAAS,CAAC,CAAC/jC,MAAM,GAAG25B,GAAG,CAAC7uC,oBAAoB,IAAI,EAAE;cAChEg5C,aAAa,CAACC,SAAS,CAAC,CAAC3rB,UAAU,GAAGjQ,UAAU,CAACwxB,GAAG,CAACqK,WAAW,CAAC,IAAI,CAAC;cACtE;;UAEJ,CAAC,CAAC;;QAGJnnC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEgnC,aAAa,CAAC;QAChE,OAAOA,aAAa;OACrB,CAAC,OAAOhqC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,aAAamJ,OAAI,CAACihC,wBAAwB,CAACvvC,KAAK,EAAE/J,QAAQ,CAAC;;IAC5D;EACH;EAEA;EACcu5C,0BAA0BA,CAACxvC,KAAW,EAAE/J,QAAgB;IAAA,IAAAwY,OAAA;IAAA,OAAA7I,4JAAA;MACpE,IAAI;QACF,MAAMsN,QAAQ,GAAGzE,OAAI,CAAClI,yBAAyB,CAACvG,KAAK,CAAC;QAEtD;QACA,MAAM;UAAEsH,IAAI,EAAE05B,WAAW;UAAE77B,KAAK,EAAEsqC;QAAY,CAAE,SAAShhC,OAAI,CAACk8B,QAAQ,CACnEjzB,IAAI,CAAC,uBAAuB,CAAC,CAC7BshB,MAAM,CAAC,4FAA4F,CAAC,CACpGC,EAAE,CAAC,OAAO,EAAE/lB,QAAQ,CAAC,CACrB+lB,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC;QAE3B,IAAIw5C,YAAY,EAAE;UAChBvnC,OAAO,CAACC,GAAG,CAAC,gEAAgE,EAAEsnC,YAAY,CAACtiC,OAAO,CAAC;UACnG,aAAasB,OAAI,CAAC8gC,wBAAwB,CAACvvC,KAAK,EAAE/J,QAAQ,CAAC;;QAG7D;QACA,MAAMk5C,aAAa,GAAQ;UACzBO,MAAM,EAAE;YAAEz4C,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAChGktB,KAAK,EAAE;YAAEthC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAC/FmtB,KAAK,EAAE;YAAEvhC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE;SAC9F;QAED21B,WAAW,EAAE1wB,OAAO,CAAE00B,GAAQ,IAAI;UAChC,MAAM2K,SAAS,GAAG3K,GAAG,CAAChtC,MAAM,EAAEqhC,WAAW,EAAkC;UAC3E,IAAI8V,aAAa,CAACQ,SAAS,CAAC,EAAE;YAC5BR,aAAa,CAACQ,SAAS,CAAC,GAAG;cACzB14C,YAAY,EAAEuc,UAAU,CAACwxB,GAAG,CAACjnC,aAAa,CAAC,IAAI,CAAC;cAChDu6B,eAAe,EAAE0M,GAAG,CAACsK,gBAAgB,IAAI,OAAOtK,GAAG,CAACsK,gBAAgB,KAAK,QAAQ,GAAGtK,GAAG,CAACsK,gBAAgB,GAAG,EAAE;cAC7G92C,aAAa,EAAEwsC,GAAG,CAACtuC,cAAc,GAAG2P,QAAQ,CAAC2+B,GAAG,CAACtuC,cAAc,CAAC,GAAG,IAAI;cACvE+sB,UAAU,EAAEjQ,UAAU,CAACwxB,GAAG,CAACqK,WAAW,CAAC,IAAI,CAAC;cAC5ChkC,MAAM,EAAE25B,GAAG,CAAC7uC,oBAAoB,IAAI;aACrC;;QAEL,CAAC,CAAC;QAEF+R,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEgnC,aAAa,CAAC;QACpE,OAAOA,aAAa;OACrB,CAAC,OAAOhqC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,aAAasJ,OAAI,CAAC8gC,wBAAwB,CAACvvC,KAAK,EAAE/J,QAAQ,CAAC;;IAC5D;EACH;EAEA;EACcs5C,wBAAwBA,CAACvvC,KAAW,EAAE/J,QAAgB;IAAA,IAAAgb,OAAA;IAAA,OAAArL,4JAAA;MAClE,IAAI;QACF,MAAMsN,QAAQ,GAAGjC,OAAI,CAAC1K,yBAAyB,CAACvG,KAAK,CAAC;QAEtD;QACA,MAAM;UAAEsH,IAAI,EAAE0+B,WAAW;UAAE7gC,KAAK,EAAEyqC;QAAY,CAAE,SAAS3+B,OAAI,CAAC05B,QAAQ,CACnEjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,qBAAqB,CAAC,CAC7BC,EAAE,CAAC,OAAO,EAAE/lB,QAAQ,CAAC,CACrB+lB,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC;QAE3B;QACA,MAAM;UAAEqR,IAAI,EAAEnF,WAAW;UAAEgD,KAAK,EAAE0qC;QAAY,CAAE,SAAS5+B,OAAI,CAAC05B,QAAQ,CACnEjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,uDAAuD,CAAC,CAC/D8W,IAAI,CAAC,IAAI,EAAE,GAAG58B,QAAQ,IAAI,CAAC;QAE9B,MAAMi8B,aAAa,GAAQ;UACzB9W,MAAM,EAAE;YAAEphC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAChGktB,KAAK,EAAE;YAAEthC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAC/FmtB,KAAK,EAAE;YAAEvhC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE;SAC9F;QAED;QACA,IAAI26B,WAAW,IAAI,CAAC4J,YAAY,EAAE;UAChC5J,WAAW,CAAC11B,OAAO,CAAEwkB,IAAS,IAAI;YAChC;YACA,IAAIsa,SAAuC;YAC3C,IAAIta,IAAI,CAAC98B,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,IAAIvE,IAAI,CAAC98B,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,EAAE;cACtF+V,SAAS,GAAG,QAAQ;aACrB,MAAM,IAAIta,IAAI,CAAC98B,MAAM,EAAEqhC,WAAW,EAAE,KAAK,OAAO,EAAE;cACjD+V,SAAS,GAAG,OAAO;aACpB,MAAM,IAAIta,IAAI,CAAC98B,MAAM,EAAEqhC,WAAW,EAAE,KAAK,OAAO,EAAE;cACjD+V,SAAS,GAAG,OAAO;aACpB,MAAM;cACL,OAAO,CAAC;;YAGV,IAAID,aAAa,CAACC,SAAS,CAAC,EAAE;cAC5BD,aAAa,CAACC,SAAS,CAAC,CAACn4C,YAAY,GAAG69B,IAAI,CAACjgB,GAAG,IAAI,CAAC;;UAEzD,CAAC,CAAC;;QAGJ;QACA,IAAI1S,WAAW,IAAI,CAAC0tC,YAAY,EAAE;UAChC1tC,WAAW,CAACmO,OAAO,CAAEtY,MAAW,IAAI;YAClC;YACA,IAAIo3C,SAAuC;YAC3C,IAAIp3C,MAAM,CAACA,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,IAAIrhC,MAAM,CAACA,MAAM,EAAEqhC,WAAW,EAAE,KAAK,QAAQ,EAAE;cAC1F+V,SAAS,GAAG,QAAQ;aACrB,MAAM,IAAIp3C,MAAM,CAACA,MAAM,EAAEqhC,WAAW,EAAE,KAAK,OAAO,EAAE;cACnD+V,SAAS,GAAG,OAAO;aACpB,MAAM,IAAIp3C,MAAM,CAACA,MAAM,EAAEqhC,WAAW,EAAE,KAAK,OAAO,EAAE;cACnD+V,SAAS,GAAG,OAAO;aACpB,MAAM;cACL,OAAO,CAAC;;YAGV,IAAID,aAAa,CAACC,SAAS,CAAC,EAAE;cAC5BD,aAAa,CAACC,SAAS,CAAC,CAAC52C,aAAa,GAAGR,MAAM,CAACtB,cAAc,GAAG2P,QAAQ,CAACrO,MAAM,CAACtB,cAAc,CAAC,GAAG,IAAI;cACvGy4C,aAAa,CAACC,SAAS,CAAC,CAAC/jC,MAAM,GAAGrT,MAAM,CAAC7B,oBAAoB,IAAI,EAAE;cACnE;;UAEJ,CAAC,CAAC;;QAGJ+R,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEgnC,aAAa,CAAC;QACjE,OAAOA,aAAa;OACrB,CAAC,OAAOhqC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,OAAO;UACLuqC,MAAM,EAAE;YAAEz4C,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAChGktB,KAAK,EAAE;YAAEthC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE,CAAE;UAC/FmtB,KAAK,EAAE;YAAEvhC,YAAY,EAAE,CAAC;YAAEqhC,eAAe,EAAE,EAAE;YAAE9/B,aAAa,EAAE,IAAI;YAAEirB,UAAU,EAAE,CAAC;YAAEpY,MAAM,EAAE;UAAE;SAC9F;;IACF;EACH;EAEA;EACM0kC,sBAAsBA,CAACC,UAAkB,EAAEhwC,KAAW;IAAA,IAAAuS,OAAA;IAAA,OAAA3M,4JAAA;MAC1D,IAAI;QACF,MAAMsN,QAAQ,GAAGX,OAAI,CAAChM,yBAAyB,CAACvG,KAAK,CAAC;QACtD,MAAMwG,QAAQ,GAAG,GAAG0M,QAAQ,IAAI88B,UAAU,EAAE;QAE5C,MAAM;UAAE1oC,IAAI;UAAEnC;QAAK,CAAE,SAASoN,OAAI,CAACo4B,QAAQ,CACxCjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC,CAClBylC,MAAM,EAAE;QAEX,IAAI9mC,KAAK,EAAE;UACT,IAAIA,KAAK,CAACgC,IAAI,KAAK,UAAU,EAAE;YAC7B;YACA,OAAO,IAAI;;UAEb,MAAMhC,KAAK;;QAGb,OAAO;UACLY,EAAE,EAAEuB,IAAI,CAACvB,EAAE;UACX/F,KAAK,EAAE,IAAI+D,IAAI,CAACuD,IAAI,CAACtH,KAAK,CAAC;UAC3BhI,MAAM,EAAEsP,IAAI,CAACtP,MAAM;UACnBuP,UAAU,EAAE,IAAIxD,IAAI,CAACuD,IAAI,CAACE,WAAW,CAAC;UACtC9Q,cAAc,EAAE4Q,IAAI,CAAC5Q,cAAc,GAAG2P,QAAQ,CAACiB,IAAI,CAAC5Q,cAAc,CAAC,GAAG,IAAI;UAC1EP,oBAAoB,EAAEmR,IAAI,CAACnR,oBAAoB;UAC/Cc,YAAY,EAAEqQ,IAAI,CAACvJ,aAAa;UAChC0J,WAAW,EAAEH,IAAI,CAACtJ,YAAY;UAC9B0J,YAAY,EAAEJ,IAAI,CAACrJ,aAAa;UAChC0I,OAAO,EAAEW,IAAI,CAACX;SACf;OACF,CAAC,OAAOxB,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,2BAA2B6qC,UAAU,eAAehwC,KAAK,GAAG,EAAEmF,KAAK,CAAC;QAClF,OAAO,IAAI;;IACZ;EACH;EAEA;EACM8qC,wBAAwBA,CAACzpC,QAAgB,EAAEhO,aAAqB,EAAEE,mBAA2B;IAAA,IAAAka,OAAA;IAAA,OAAAhN,4JAAA;MACjG,IAAI;QAEF,MAAMynC,YAAY,GAAG70C,aAAa,CAACzB,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAE9D,MAAM;UAAEmO;QAAK,CAAE,SAASyN,OAAI,CAAC+3B,QAAQ,CAClCjzB,IAAI,CAAC,SAAS,CAAC,CACfo3B,MAAM,CAAC;UACNp4C,cAAc,EAAE22C,YAAY;UAC5Bl3C,oBAAoB,EAAEuC,mBAAmB;UACzCiO,OAAO,EAAE;SACV,CAAC,CACDsyB,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC;QAErB,IAAIrB,KAAK,EAAE;UACT,MAAMA,KAAK;;OAId,CAAC,OAAOA,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEA;EACM+qC,wBAAwBA,CAAC1pC,QAAgB,EAAEhO,aAAqB,EAAEE,mBAA2B;IAAA,IAAAqa,OAAA;IAAA,OAAAnN,4JAAA;MACjG,IAAI;QAEF,MAAMynC,YAAY,GAAG70C,aAAa,CAACzB,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAE9D;QACA,MAAM;UAAEmO;QAAK,CAAE,SAAS4N,OAAI,CAAC43B,QAAQ,CAClCjzB,IAAI,CAAC,SAAS,CAAC,CACfo3B,MAAM,CAAC;UACNp4C,cAAc,EAAE22C,YAAY;UAC5Bl3C,oBAAoB,EAAEuC,mBAAmB;UACzCiO,OAAO,EAAE;SACV,CAAC,CACDsyB,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC;QAErB,IAAIrB,KAAK,EAAE;UACT,MAAMA,KAAK;;OAId,CAAC,OAAOA,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEMgrC,uBAAuBA,CAAC3pC,QAAgB;IAAA,IAAAyM,OAAA;IAAA,OAAArN,4JAAA;MAC5C,IAAI;QACF;QACA,MAAM;UAAE0B,IAAI,EAAEtP,MAAM;UAAEmN,KAAK,EAAEirC;QAAW,CAAE,SAASn9B,OAAI,CAAC03B,QAAQ,CAC7DjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC,CAClBylC,MAAM,EAAE;QAEX,IAAImE,WAAW,EAAE,MAAMA,WAAW;QAClC,IAAI,CAACp4C,MAAM,CAACtB,cAAc,EAAE;QAE5B;QACA,MAAMiiC,UAAU,GAAG1lB,OAAI,CAACvO,qBAAqB,CAAC,IAAIX,IAAI,CAAC/L,MAAM,CAACgI,KAAK,CAAC,CAAC;QACrE,MAAM44B,QAAQ,GAAG3lB,OAAI,CAACrO,mBAAmB,CAAC,IAAIb,IAAI,CAAC/L,MAAM,CAACgI,KAAK,CAAC,CAAC;QAEjE,MAAM;UAAEsH,IAAI,EAAErF,KAAK;UAAEkD,KAAK,EAAEkrC;QAAU,CAAE,SAASp9B,OAAI,CAAC03B,QAAQ,CAC3DjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,oBAAoB,CAAC,CAC5BC,EAAE,CAAC,QAAQ,EAAEjhC,MAAM,CAACA,MAAM,CAAC,CAC3BkhC,GAAG,CAAC,OAAO,EAAEjmB,OAAI,CAAC0gB,0BAA0B,CAACgF,UAAU,CAAC,CAAC,CACzDQ,GAAG,CAAC,OAAO,EAAElmB,OAAI,CAAC0gB,0BAA0B,CAACiF,QAAQ,CAAC,CAAC;QAE1D,IAAIyX,UAAU,EAAE,MAAMA,UAAU;QAEhC;QACA,IAAIp5C,YAAY,GAAG,CAAC;QACpB,IAAIwQ,WAAW,GAAG,CAAC;QAEnB,KAAK,MAAMoC,IAAI,IAAI5H,KAAK,EAAE;UACxB,KAAK,MAAM8H,MAAM,IAAIF,IAAI,CAAC0vB,YAAY,EAAE;YACtCtiC,YAAY,IAAI8S,MAAM,CAAClP,KAAK;YAE5B;YACA,IAAIkP,MAAM,CAACjT,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAKgB,MAAM,CAACtB,cAAc,EAAE;cACvE+Q,WAAW,IAAIsC,MAAM,CAAClP,KAAK,GAAG7C,MAAM,CAAC7B,oBAAoB;;;;QAK/D,MAAMuR,YAAY,GAAGzQ,YAAY,GAAGwQ,WAAW;QAE/C;QACA,MAAM;UAAEtC,KAAK,EAAEmrC;QAAW,CAAE,SAASr9B,OAAI,CAAC03B,QAAQ,CAC/CjzB,IAAI,CAAC,SAAS,CAAC,CACfo3B,MAAM,CAAC;UACN/wC,aAAa,EAAE9G,YAAY;UAC3B+G,YAAY,EAAEyJ,WAAW;UACzBxJ,aAAa,EAAEyJ;SAChB,CAAC,CACDuxB,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC;QAErB,IAAI8pC,WAAW,EAAE,MAAMA,WAAW;OACnC,CAAC,OAAOnrC,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEA;EACMorC,cAAcA,CAAA;IAAA,IAAAx4B,OAAA;IAAA,OAAAnS,4JAAA;MAClB,IAAI;QAEF;QACA,MAAM;UAAE0B,IAAI,EAAEkpC,UAAU;UAAErrC,KAAK,EAAEsrC;QAAW,CAAE,SAAS14B,OAAI,CAAC4yB,QAAQ,CACjEjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,UAAU,EAAE;UAAEpuB,KAAK,EAAE,OAAO;UAAEo5B,IAAI,EAAE;QAAI,CAAE,CAAC;QAErD,IAAIyM,WAAW,EAAE;UACf;;QAIF;QACA,MAAM5D,KAAK,GAAG,IAAI9oC,IAAI,EAAE;QACxB,MAAM40B,UAAU,GAAG5gB,OAAI,CAACrT,qBAAqB,CAACmoC,KAAK,CAAC;QACpD,MAAMjU,QAAQ,GAAG7gB,OAAI,CAACnT,mBAAmB,CAACioC,KAAK,CAAC;QAGhD,MAAM;UAAEvlC,IAAI,EAAEopC,SAAS;UAAEvrC,KAAK,EAAEwrC;QAAU,CAAE,SAAS54B,OAAI,CAAC4yB,QAAQ,CAC/DjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,GAAG,CAAC,CACXE,GAAG,CAAC,OAAO,EAAEnhB,OAAI,CAAC4b,0BAA0B,CAACgF,UAAU,CAAC,CAAC,CACzDQ,GAAG,CAAC,OAAO,EAAEphB,OAAI,CAAC4b,0BAA0B,CAACiF,QAAQ,CAAC,CAAC;QAE1D,IAAI+X,UAAU,EAAE;UACd;;QAGF,IAAID,SAAS,IAAIA,SAAS,CAACz1C,MAAM,GAAG,CAAC,EAAE,C;QAGvC;QACA,MAAM21C,YAAY,GAAG,IAAI7sC,IAAI,CAAC8oC,KAAK,CAAC;QACpC+D,YAAY,CAACC,OAAO,CAACD,YAAY,CAACE,OAAO,EAAE,GAAG,CAAC,CAAC;QAChD,MAAMC,iBAAiB,GAAGh5B,OAAI,CAACrT,qBAAqB,CAACksC,YAAY,CAAC;QAElE,MAAM;UAAEtpC,IAAI,EAAE0pC,UAAU;UAAE7rC,KAAK,EAAE8rC;QAAW,CAAE,SAASl5B,OAAI,CAAC4yB,QAAQ,CACjEjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,GAAG,CAAC,CACXE,GAAG,CAAC,OAAO,EAAEnhB,OAAI,CAAC4b,0BAA0B,CAACod,iBAAiB,CAAC,CAAC,CAChEjE,KAAK,CAAC,YAAY,EAAE;UAAEC,SAAS,EAAE;QAAK,CAAE,CAAC,CACzCT,KAAK,CAAC,EAAE,CAAC;QAEZ,IAAI2E,WAAW,EAAE;UACf;;QAGF,IAAID,UAAU,IAAIA,UAAU,CAAC/1C,MAAM,GAAG,CAAC,EAAE;UACvC+1C,UAAU,CAAC1gC,OAAO,CAAC,CAACzG,IAAI,EAAE+F,KAAK,KAAI,CACnC,CAAC,CAAC;;OAGL,CAAC,OAAOzK,KAAK,EAAE,C;IACf;EACH;EAEA;EACM+rC,wBAAwBA,CAAA;IAAA,IAAA/4B,OAAA;IAAA,OAAAvS,4JAAA;MAC5B,IAAI;QAEF;QACA,MAAM;UAAE0B,IAAI,EAAE6jC,OAAO;UAAEhmC,KAAK,EAAEgsC;QAAY,CAAE,SAASh5B,OAAI,CAACwyB,QAAQ,CAACK,IAAI,CAACa,UAAU,EAAE;QACpF,IAAIsF,YAAY,EAAE;UAChB;;QAIF;QACA,MAAM;UAAE7pC,IAAI,EAAE8pC,WAAW;UAAEjsC,KAAK,EAAEksC;QAAW,CAAE,SAASl5B,OAAI,CAACwyB,QAAQ,CAClEjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,0BAA0B,CAAC,CAClCsT,KAAK,CAAC,CAAC,CAAC;QAEX,IAAI+E,WAAW,EAAE,C,CAChB,MAAM,C;QAGP;QACA,MAAM3I,QAAQ,GAAG;UACfwE,OAAO,EAAE/B,OAAO,EAAEA,OAAO,EAAEx4C,IAAI,EAAEoT,EAAE,IAAI,WAAW;UAClD9P,QAAQ,EAAE,MAAM;UAChB+B,MAAM,EAAE,MAAM;UACdgI,KAAK,EAAEmY,OAAI,CAACwb,0BAA0B,CAAC,IAAI5vB,IAAI,EAAE,CAAC;UAClDrI,KAAK,EAAE,CAAC;UACRyxC,aAAa,EAAE,UAAU;UACzB5xC,WAAW,EAAE;SACd;QAED,MAAM;UAAE+L,IAAI,EAAEgqC,UAAU;UAAEnsC,KAAK,EAAEosC;QAAW,CAAE,SAASp5B,OAAI,CAACwyB,QAAQ,CACjEjzB,IAAI,CAAC,OAAO,CAAC,CACb01B,MAAM,CAAC1E,QAAQ,CAAC,CAChB1P,MAAM,EAAE;QAEX,IAAIuY,WAAW,EAAE,C,CAChB,MAAM;UAEL;UACA,IAAID,UAAU,IAAIA,UAAU,CAACr2C,MAAM,GAAG,CAAC,EAAE;YACvC,MAAMkd,OAAI,CAACwyB,QAAQ,CAChBjzB,IAAI,CAAC,OAAO,CAAC,CACb85B,MAAM,EAAE,CACRvY,EAAE,CAAC,IAAI,EAAEqY,UAAU,CAAC,CAAC,CAAC,CAACvrC,EAAE,CAAC;;;OAIlC,CAAC,OAAOZ,KAAK,EAAE,C;IACf;EACH;EAEA;EACA;EACA;EAEMssC,QAAQA,CAAA;IAAA,OAAA7rC,4JAAA;MACZ,IAAI;QAEF;QACA,OAAO,CACL;UACEG,EAAE,EAAE,GAAG;UACPhK,KAAK,EAAE,sBAAsB;UAC7B6G,IAAI,EAAE,OAAO;UACb3M,QAAQ,EAAE,EAAE;UACZ4M,MAAM,EAAE,IAAI;UACZpH,SAAS,EAAE,IAAIsI,IAAI;SACpB,EACD;UACEgC,EAAE,EAAE,GAAG;UACPhK,KAAK,EAAE,oBAAoB;UAC3B6G,IAAI,EAAE,UAAU;UAChB3M,QAAQ,EAAE,YAAY;UACtB4M,MAAM,EAAE,IAAI;UACZpH,SAAS,EAAE,IAAIsI,IAAI;SACpB,EACD;UACEgC,EAAE,EAAE,GAAG;UACPhK,KAAK,EAAE,oBAAoB;UAC3B6G,IAAI,EAAE,UAAU;UAChB3M,QAAQ,EAAE,YAAY;UACtB4M,MAAM,EAAE,IAAI;UACZpH,SAAS,EAAE,IAAIsI,IAAI;SACpB,EACD;UACEgC,EAAE,EAAE,GAAG;UACPhK,KAAK,EAAE,oBAAoB;UAC3B6G,IAAI,EAAE,UAAU;UAChB3M,QAAQ,EAAE,YAAY;UACtB4M,MAAM,EAAE,IAAI;UACZpH,SAAS,EAAE,IAAIsI,IAAI;SACpB,EACD;UACEgC,EAAE,EAAE,GAAG;UACPhK,KAAK,EAAE,oBAAoB;UAC3B6G,IAAI,EAAE,UAAU;UAChB3M,QAAQ,EAAE,YAAY;UACtB4M,MAAM,EAAE,IAAI;UACZpH,SAAS,EAAE,IAAIsI,IAAI;SACpB,CACF;OACF,CAAC,OAAOoB,KAAK,EAAE;QACd,OAAO,EAAE;;IACV;EACH;EAEQusC,eAAeA,CAAA;IACrB,OAAO,CACL;MACE3rC,EAAE,EAAE,GAAG;MACPhK,KAAK,EAAE,mBAAmB;MAC1B6G,IAAI,EAAE,OAAO;MACb3M,QAAQ,EAAE,EAAE;MACZ4M,MAAM,EAAE,IAAI;MACZpH,SAAS,EAAE,IAAIsI,IAAI;KACpB,EACD;MACEgC,EAAE,EAAE,GAAG;MACPhK,KAAK,EAAE,uBAAuB;MAC9B6G,IAAI,EAAE,UAAU;MAChB3M,QAAQ,EAAE,YAAY;MACtB4M,MAAM,EAAE,IAAI;MACZpH,SAAS,EAAE,IAAIsI,IAAI;KACpB,CACF;EACH;EAEc4tC,2BAA2BA,CAACC,SAAgB;IAAA,IAAAt5B,OAAA;IAAA,OAAA1S,4JAAA;MACxD,IAAI;QACF,MAAMisC,YAAY,GAAGD,SAAS,CAAC7mC,GAAG,CAACyhC,QAAQ,KAAK;UAC9CzmC,EAAE,EAAEymC,QAAQ,CAACzmC,EAAE;UACfhK,KAAK,EAAEywC,QAAQ,CAACzwC,KAAK;UACrB6G,IAAI,EAAE4pC,QAAQ,CAACzwC,KAAK,EAAElJ,QAAQ,CAAC,OAAO,CAAC,IAAI25C,QAAQ,CAACzwC,KAAK,KAAK,sBAAsB,GAAG,OAAO,GAAG,UAAU;UAC3G9F,QAAQ,EAAEqiB,OAAI,CAACqzB,oBAAoB,CAACa,QAAQ,CAACzwC,KAAK,IAAI,EAAE,CAAC;UACzD8G,MAAM,EAAE,IAAI;UACZ+X,UAAU,EAAE,IAAI7W,IAAI,CAACyoC,QAAQ,CAAC5xB,UAAU,CAAC,CAAC8R,WAAW;SACtD,CAAC,CAAC;QAEH,MAAM;UAAEvnB;QAAK,CAAE,SAASmT,OAAI,CAACqyB,QAAQ,CAClCjzB,IAAI,CAAC,UAAU,CAAC,CAChBo2B,MAAM,CAAC+D,YAAY,EAAE;UAAEC,UAAU,EAAE;QAAI,CAAE,CAAC;QAE7C,IAAI3sC,KAAK,EAAE,C,CACV,MAAM,C;OAER,CAAC,OAAOA,KAAK,EAAE,C;IACf;EACH;EAEA;EACA;EACA;EAEM4sC,kBAAkBA,CAAA;IAAA,IAAAp5B,OAAA;IAAA,OAAA/S,4JAAA;MACtB,IAAI;QAEF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASwT,OAAI,CAACgyB,QAAQ,CACxCjzB,IAAI,CAAC,kBAAkB,CAAC,CACxBshB,MAAM,CAAC,GAAG,CAAC,CACX8T,KAAK,CAAC,YAAY,EAAE;UAAEC,SAAS,EAAE;QAAI,CAAE,CAAC;QAE3C,IAAI5nC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,OAAOmC,IAAI,IAAI,EAAE;OAClB,CAAC,OAAOnC,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEM6sC,oBAAoBA,CAACtrC,UAA+D;IAAA,IAAAsS,OAAA;IAAA,OAAApT,4JAAA;MACxF,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAAS6T,OAAI,CAAC2xB,QAAQ,CACxCjzB,IAAI,CAAC,kBAAkB,CAAC,CACxB01B,MAAM,CAAC,CAAC1mC,UAAU,CAAC,CAAC,CACpBsyB,MAAM,EAAE,CACRiT,MAAM,EAAE;QAEX,IAAI9mC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,OAAOmC,IAAI;OACZ,CAAC,OAAOnC,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEM8sC,oBAAoBA,CAACzrC,QAAgB,EAAE0rC,OAA+D;IAAA,IAAAt4B,OAAA;IAAA,OAAAhU,4JAAA;MAC1G,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASyU,OAAI,CAAC+wB,QAAQ,CACxCjzB,IAAI,CAAC,kBAAkB,CAAC,CACxBo3B,MAAM,CAACoD,OAAO,CAAC,CACfjZ,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC,CAClBwyB,MAAM,EAAE,CACRiT,MAAM,EAAE;QAEX,IAAI9mC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,OAAOmC,IAAI;OACZ,CAAC,OAAOnC,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEMgtC,oBAAoBA,CAAC3rC,QAAgB;IAAA,IAAAiU,OAAA;IAAA,OAAA7U,4JAAA;MACzC,IAAI;QACF,MAAM;UAAET;QAAK,CAAE,SAASsV,OAAI,CAACkwB,QAAQ,CAClCjzB,IAAI,CAAC,kBAAkB,CAAC,CACxB85B,MAAM,EAAE,CACRvY,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC;QAErB,IAAIrB,KAAK,EAAE;UACT,MAAMA,KAAK;;OAEd,CAAC,OAAOA,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEA;EACA;EACA;EAGMitC,yBAAyBA,CAAA;IAAA,IAAAv3B,OAAA;IAAA,OAAAjV,4JAAA;MAC7B,IAAI;QACF;QACA,MAAMysC,cAAc,GAAqB,CAAC,GAAG78C,gEAAgB,CAAC;QAE9D,KAAK,MAAMwC,MAAM,IAAIq6C,cAAc,EAAE;UACnC,MAAM;YAAEltC;UAAK,CAAE,SAAS0V,OAAI,CAAC8vB,QAAQ,CAClCjzB,IAAI,CAAC,kBAAkB,CAAC,CACxBo2B,MAAM,CAAC91C,MAAM,EAAE;YAAE85C,UAAU,EAAE;UAAM,CAAE,CAAC;UAEzC,IAAI3sC,KAAK,EAAE,C,CACV,MAAM,C;;OAGV,CAAC,OAAOA,KAAK,EAAE,C;IACf;EACH;EAEA;EACMU,uBAAuBA,CAAA;IAAA,IAAAsV,OAAA;IAAA,OAAAvV,4JAAA;MAC3B,IAAI;QAEF;QACA,MAAM;UAAET;QAAK,CAAE,SAASgW,OAAI,CAACwvB,QAAQ,CAClCjzB,IAAI,CAAC,UAAU,CAAC,CAChBshB,MAAM,CAAC,OAAO,EAAE;UAAEpuB,KAAK,EAAE,OAAO;UAAEo5B,IAAI,EAAE;QAAI,CAAE,CAAC;QAElD,IAAI7+B,KAAK,EAAE,C,CACV,MAAM,C;OAER,CAAC,OAAOA,KAAK,EAAE,C;IACf;EACH;EAEA;EACMwN,iBAAiBA,CAAA;IAAA,OAAA/M,4JAAA;MACrB,IAAI,C,CACH,CAAC,OAAOT,KAAK,EAAE,C;IACf;EACH;EAKA;EACAd,mBAAmBA,CAAA;IACjB,MAAM4B,GAAG,GAAG,IAAIlC,IAAI,EAAE;IACtB,OAAOkC,GAAG;EACZ;EAEA;EACAoJ,sBAAsBA,CAACV,IAAW;IAChC,MAAM2jC,UAAU,GAAG3jC,IAAI,IAAI,IAAI5K,IAAI,EAAE;IACrC,OAAO,IAAI,CAAC4vB,0BAA0B,CAAC2e,UAAU,CAAC;EACpD;EAEA3e,0BAA0BA,CAAChlB,IAAU;IACnC,MAAM4jC,GAAG,GAAIl9B,CAAS,IAAKA,CAAC,CAACte,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAExD,MAAM6X,IAAI,GAAGF,IAAI,CAAC6jC,WAAW,EAAE;IAC/B,MAAM1jC,KAAK,GAAGyjC,GAAG,CAAC5jC,IAAI,CAAC8jC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,MAAM1jC,GAAG,GAAGwjC,GAAG,CAAC5jC,IAAI,CAACmiC,OAAO,EAAE,CAAC;IAE/B,MAAM5qC,KAAK,GAAGqsC,GAAG,CAAC5jC,IAAI,CAACk7B,QAAQ,EAAE,CAAC;IAClC,MAAM1jC,OAAO,GAAGosC,GAAG,CAAC5jC,IAAI,CAACm7B,UAAU,EAAE,CAAC;IACtC,MAAM4I,OAAO,GAAGH,GAAG,CAAC5jC,IAAI,CAACgkC,UAAU,EAAE,CAAC;IAEtC,OAAO,GAAG9jC,IAAI,IAAIC,KAAK,IAAIC,GAAG,IAAI7I,KAAK,IAAIC,OAAO,IAAIusC,OAAO,EAAE;EACjE;EAEA;EACAnsC,yBAAyBA,CAACoI,IAAU;IAClC,MAAM4jC,GAAG,GAAIl9B,CAAS,IAAKA,CAAC,CAACte,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAExD,MAAM6X,IAAI,GAAGF,IAAI,CAAC6jC,WAAW,EAAE;IAC/B,MAAM1jC,KAAK,GAAGyjC,GAAG,CAAC5jC,IAAI,CAAC8jC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,MAAM1jC,GAAG,GAAGwjC,GAAG,CAAC5jC,IAAI,CAACmiC,OAAO,EAAE,CAAC;IAE/B,OAAO,GAAGjiC,IAAI,IAAIC,KAAK,IAAIC,GAAG,EAAE;EAClC;EAGA;EACQ6jC,aAAaA,CAACjkC,IAAU;IAC9B,OAAO67B,0DAAa,CAAC77B,IAAI,EAAE,IAAI,CAACm8B,iBAAiB,CAAC;EACpD;EAEA;EACQ+H,aAAaA,CAACC,OAAa;IACjC,OAAOvI,wDAAW,CAACuI,OAAO,EAAE,IAAI,CAAChI,iBAAiB,CAAC;EACrD;EAEA;EACAiI,qBAAqBA,CAACpkC,IAAU;IAC9B,OAAO47B,wDAAW,CAAC57B,IAAI,EAAE,IAAI,CAACm8B,iBAAiB,CAAC;EAClD;EAEA;EACA7X,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAAC5uB,mBAAmB,EAAE;EACnC;EAEA;EACA8uB,qBAAqBA,CAACxkB,IAAW;IAC/B,MAAM2jC,UAAU,GAAG3jC,IAAI,IAAI,IAAI5K,IAAI,EAAE;IACrC,OAAO0mC,6DAAgB,CAAC6H,UAAU,EAAE,IAAI,CAACxH,iBAAiB,EAAE,uBAAuB,EAAE;MACnFkI,MAAM,EAAEtI,+CAAEA;KACX,CAAC;EACJ;EAEA;EACAkD,qBAAqBA,CAACqF,SAAiB;IACrC,MAAMH,OAAO,GAAGxI,kDAAQ,CAAC2I,SAAS,CAAC;IACnC,OAAO1I,wDAAW,CAACuI,OAAO,EAAE,IAAI,CAAChI,iBAAiB,CAAC;EACrD;EAEA;EACAoI,kBAAkBA,CAACrkC,IAAY,EAAEC,KAAa,EAAEC,GAAW,EAAEC,IAAA,GAAe,CAAC,EAAEC,MAAA,GAAiB,CAAC,EAAEkkC,MAAA,GAAiB,CAAC;IACnH;IACA,MAAMC,UAAU,GAAG,GAAGvkC,IAAI,IAAI6X,MAAM,CAAC5X,KAAK,CAAC,CAAC9X,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI0vB,MAAM,CAAC3X,GAAG,CAAC,CAAC/X,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI0vB,MAAM,CAAC1X,IAAI,CAAC,CAAChY,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI0vB,MAAM,CAACzX,MAAM,CAAC,CAACjY,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI0vB,MAAM,CAACysB,MAAM,CAAC,CAACn8C,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IACrM,OAAOwzC,0DAAa,CAAC,IAAIzmC,IAAI,CAACqvC,UAAU,CAAC,EAAE,IAAI,CAACtI,iBAAiB,CAAC;EACpE;EAEA;EACApmC,qBAAqBA,CAACiK,IAAU;IAC9B;IACA,MAAM+zB,YAAY,GAAG6H,wDAAW,CAAC57B,IAAI,EAAE,IAAI,CAACm8B,iBAAiB,CAAC;IAC9D,MAAMj8B,IAAI,GAAG6zB,YAAY,CAAC8P,WAAW,EAAE;IACvC,MAAM1jC,KAAK,GAAG4zB,YAAY,CAAC+P,QAAQ,EAAE,GAAG,CAAC;IACzC,MAAM1jC,GAAG,GAAG2zB,YAAY,CAACoO,OAAO,EAAE;IAElC;IACA,OAAO,IAAI,CAACoC,kBAAkB,CAACrkC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3D;EAEA;EACAnK,mBAAmBA,CAAC+J,IAAU;IAC5B;IACA,MAAM+zB,YAAY,GAAG6H,wDAAW,CAAC57B,IAAI,EAAE,IAAI,CAACm8B,iBAAiB,CAAC;IAC9D,MAAMj8B,IAAI,GAAG6zB,YAAY,CAAC8P,WAAW,EAAE;IACvC,MAAM1jC,KAAK,GAAG4zB,YAAY,CAAC+P,QAAQ,EAAE,GAAG,CAAC;IACzC,MAAM1jC,GAAG,GAAG2zB,YAAY,CAACoO,OAAO,EAAE;IAElC;IACA,OAAO,IAAI,CAACoC,kBAAkB,CAACrkC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAC9D;EAEA;EACAzK,2BAA2BA,CAACqK,IAAU;IACpC,MAAM+zB,YAAY,GAAG6H,wDAAW,CAAC57B,IAAI,EAAE,IAAI,CAACm8B,iBAAiB,CAAC;IAC9D,MAAMj8B,IAAI,GAAG6zB,YAAY,CAAC8P,WAAW,EAAE;IACvC,MAAM1jC,KAAK,GAAG4X,MAAM,CAACgc,YAAY,CAAC+P,QAAQ,EAAE,GAAG,CAAC,CAAC,CAACz7C,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAClE,MAAM+X,GAAG,GAAG2X,MAAM,CAACgc,YAAY,CAACoO,OAAO,EAAE,CAAC,CAAC95C,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC3D,MAAMkP,KAAK,GAAGwgB,MAAM,CAACgc,YAAY,CAACmH,QAAQ,EAAE,CAAC,CAAC7yC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC9D,MAAMmP,OAAO,GAAGugB,MAAM,CAACgc,YAAY,CAACoH,UAAU,EAAE,CAAC,CAAC9yC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAClE,OAAO,GAAG6X,IAAI,IAAIC,KAAK,IAAIC,GAAG,IAAI7I,KAAK,IAAIC,OAAO,EAAE;EACtD;EAEA;EACAwC,uBAAuBA,CAAC0qC,mBAA2B;IACjD;IACA;IACA,MAAMC,SAAS,GAAG,IAAIvvC,IAAI,CAACsvC,mBAAmB,CAAC;IAC/C,OAAO7I,0DAAa,CAAC8I,SAAS,EAAE,IAAI,CAACxI,iBAAiB,CAAC;EACzD;EAEA;EAEA;EACM59B,WAAWA,CAAA;IAAA,IAAAqmC,OAAA;IAAA,OAAA3tC,4JAAA;MACf,IAAI;QACF;QACA,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASouC,OAAI,CAAC5I,QAAQ,CAACK,IAAI,CAACwI,KAAK,CAACC,SAAS,EAAE;QAElEvrC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEb,IAAI,CAAC;QACxC,IAAInC,KAAK,EAAE;UACT+C,OAAO,CAAC/C,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClD;UACA,OAAOouC,OAAI,CAACG,4BAA4B,EAAE;;QAG5C;QACA,OAAOpsC,IAAI,CAAC7E,KAAK,CAACsI,GAAG,CAAEpY,IAAS,KAAM;UACpCoT,EAAE,EAAEpT,IAAI,CAACoT,EAAE;UACXhK,KAAK,EAAEpJ,IAAI,CAACoJ,KAAK,IAAI,EAAE;UACvB6G,IAAI,EAAGjQ,IAAI,CAAC04C,aAAa,GAAG,MAAM,CAAC,KAAK14C,IAAI,CAACoJ,KAAK,KAAK,sBAAsB,GAAG,OAAO,GAAG,UAAU,CAA0B;UAC9H9F,QAAQ,EAAEtD,IAAI,CAAC04C,aAAa,GAAG,UAAU,CAAC,IAAIkI,OAAI,CAAC5H,oBAAoB,CAACh5C,IAAI,CAACoJ,KAAK,IAAI,EAAE,CAAC;UACzF8G,MAAM,EAAElQ,IAAI,CAAC04C,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAE14C,IAAI,CAAC,cAAc,CAAE;UACjE8I,SAAS,EAAE,IAAIsI,IAAI,CAACpR,IAAI,CAACioB,UAAU;SACpC,CAAC,CAAC;OACJ,CAAC,OAAOzV,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;QACA,OAAOouC,OAAI,CAACG,4BAA4B,EAAE;;IAC3C;EACH;EAEA;EACQA,4BAA4BA,CAAA;IAClC,OAAO,CACL;MACE3tC,EAAE,EAAE,eAAe;MACnBhK,KAAK,EAAE,sBAAsB;MAC7B6G,IAAI,EAAE,OAAO;MACb3M,QAAQ,EAAE,EAAE;MACZ4M,MAAM,EAAE,IAAI;MACZpH,SAAS,EAAE,IAAIsI,IAAI;KACpB,EACD;MACEgC,EAAE,EAAE,gBAAgB;MACpBhK,KAAK,EAAE,oBAAoB;MAC3B6G,IAAI,EAAE,UAAU;MAChB3M,QAAQ,EAAE,YAAY;MACtB4M,MAAM,EAAE,IAAI;MACZpH,SAAS,EAAE,IAAIsI,IAAI;KACpB,EACD;MACEgC,EAAE,EAAE,gBAAgB;MACpBhK,KAAK,EAAE,oBAAoB;MAC3B6G,IAAI,EAAE,UAAU;MAChB3M,QAAQ,EAAE,YAAY;MACtB4M,MAAM,EAAE,IAAI;MACZpH,SAAS,EAAE,IAAIsI,IAAI;KACpB,CACF;EACH;EAEA;EACM2J,aAAaA,CAACg+B,QAA4F;IAAA,IAAAiI,OAAA;IAAA,OAAA/tC,4JAAA;MAC9G,IAAI;QACFsC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEujC,QAAQ,CAAC;QAEzC;QACA,MAAM;UAAEpkC,IAAI,EAAEssC,QAAQ;UAAEzuC,KAAK,EAAEsnC;QAAS,CAAE,SAASkH,OAAI,CAAChJ,QAAQ,CAACK,IAAI,CAACwI,KAAK,CAAC3iC,UAAU,CAAC;UACrF9U,KAAK,EAAE2vC,QAAQ,CAAC3vC,KAAK;UACrBtB,QAAQ,EAAE,qBAAqB;UAC/Bo5C,aAAa,EAAE,IAAI;UACnBxI,aAAa,EAAE;YACbzoC,IAAI,EAAE8oC,QAAQ,CAAC9oC,IAAI;YACnB3M,QAAQ,EAAEy1C,QAAQ,CAACz1C,QAAQ,IAAI,EAAE;YACjC4M,MAAM,EAAE6oC,QAAQ,CAAC7oC,MAAM,KAAKkR,SAAS,GAAG23B,QAAQ,CAAC7oC,MAAM,GAAG;;SAE7D,CAAC;QAEF,IAAI4pC,SAAS,EAAE;UACb,MAAMA,SAAS;;QAGjBvkC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEyrC,QAAQ,CAACjhD,IAAI,CAACoJ,KAAK,CAAC;QAEhE;QACA,OAAO;UACLgK,EAAE,EAAE6tC,QAAQ,CAACjhD,IAAI,CAACoT,EAAE;UACpBhK,KAAK,EAAE63C,QAAQ,CAACjhD,IAAI,CAACoJ,KAAK,IAAI,EAAE;UAChC6G,IAAI,EAAE8oC,QAAQ,CAAC9oC,IAAI;UACnB3M,QAAQ,EAAEy1C,QAAQ,CAACz1C,QAAQ,IAAI,EAAE;UACjC4M,MAAM,EAAE6oC,QAAQ,CAAC7oC,MAAM,KAAKkR,SAAS,GAAG23B,QAAQ,CAAC7oC,MAAM,GAAG,IAAI;UAC9DpH,SAAS,EAAE,IAAIsI,IAAI,CAAC6vC,QAAQ,CAACjhD,IAAI,CAACioB,UAAU;SAC7C;OACF,CAAC,OAAOzV,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,MAAMA,KAAK;;IACZ;EACH;EAEA;EACMqI,kBAAkBA,CAACO,MAAc,EAAEmkC,OAA6F;IAAA,IAAA4B,OAAA;IAAA,OAAAluC,4JAAA;MACpI,IAAI;QACFsC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE4F,MAAM,EAAEmkC,OAAO,CAAC;QAErD;QACA,MAAM9G,YAAY,GAAQ,EAAE;QAC5B,IAAI8G,OAAO,CAACtvC,IAAI,EAAEwoC,YAAY,CAAC,MAAM,CAAC,GAAG8G,OAAO,CAACtvC,IAAI;QACrD,IAAIsvC,OAAO,CAACj8C,QAAQ,KAAK8d,SAAS,EAAEq3B,YAAY,CAAC,UAAU,CAAC,GAAG8G,OAAO,CAACj8C,QAAQ;QAC/E,IAAIi8C,OAAO,CAACrvC,MAAM,KAAKkR,SAAS,EAAEq3B,YAAY,CAAC,QAAQ,CAAC,GAAG8G,OAAO,CAACrvC,MAAM;QAEzE;QACA,MAAMkxC,UAAU,GAAQ,EAAE;QAC1B,IAAI7B,OAAO,CAACn2C,KAAK,EAAEg4C,UAAU,CAACh4C,KAAK,GAAGm2C,OAAO,CAACn2C,KAAK;QACnD,IAAI8O,MAAM,CAAC4J,IAAI,CAAC22B,YAAY,CAAC,CAACnwC,MAAM,GAAG,CAAC,EAAE84C,UAAU,CAAC1I,aAAa,GAAGD,YAAY;QAEjF;QACA,IAAI8G,OAAO,CAACrvC,MAAM,KAAK,KAAK,EAAE;UAC5BkxC,UAAU,CAACC,YAAY,GAAG,SAAS,CAAC,CAAC;SACtC,MAAM,IAAI9B,OAAO,CAACrvC,MAAM,KAAK,IAAI,EAAE;UAClCkxC,UAAU,CAACC,YAAY,GAAG,MAAM,CAAC,CAAC;;QAGpC,MAAM;UAAE1sC,IAAI;UAAEnC;QAAK,CAAE,SAAS2uC,OAAI,CAACnJ,QAAQ,CAACK,IAAI,CAACwI,KAAK,CAACS,cAAc,CAAClmC,MAAM,EAAEgmC,UAAU,CAAC;QAEzF,IAAI5uC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb+C,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEb,IAAI,CAAC3U,IAAI,CAACoJ,KAAK,CAAC;QAEjE;QACA,OAAO;UACLgK,EAAE,EAAEuB,IAAI,CAAC3U,IAAI,CAACoT,EAAE;UAChBhK,KAAK,EAAEuL,IAAI,CAAC3U,IAAI,CAACoJ,KAAK,IAAI,EAAE;UAC5B6G,IAAI,EAAEsvC,OAAO,CAACtvC,IAAI,IAAK0E,IAAI,CAAC3U,IAAI,CAAC04C,aAAa,GAAG,MAAM,CAA0B,IAAI,UAAU;UAC/Fp1C,QAAQ,EAAEi8C,OAAO,CAACj8C,QAAQ,IAAIqR,IAAI,CAAC3U,IAAI,CAAC04C,aAAa,GAAG,UAAU,CAAC,IAAI,EAAE;UACzExoC,MAAM,EAAEqvC,OAAO,CAACrvC,MAAM,KAAKkR,SAAS,GAAGm+B,OAAO,CAACrvC,MAAM,GAAG,CAAEyE,IAAI,CAAC3U,IAAY,CAAC,cAAc,CAAC;UAC3F8I,SAAS,EAAE,IAAIsI,IAAI,CAACuD,IAAI,CAAC3U,IAAI,CAACioB,UAAU;SACzC;OACF,CAAC,OAAOzV,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,MAAMA,KAAK;;IACZ;EACH;EAEA;EACM85B,kBAAkBA,CAAClxB,MAAc;IAAA,IAAAmmC,OAAA;IAAA,OAAAtuC,4JAAA;MACrC,IAAI;QACFsC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE4F,MAAM,CAAC;QAE1C,MAAM;UAAE5I;QAAK,CAAE,SAAS+uC,OAAI,CAACvJ,QAAQ,CAACK,IAAI,CAACwI,KAAK,CAAC1lC,UAAU,CAACC,MAAM,CAAC;QAEnE,IAAI5I,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb+C,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;OAC9C,CAAC,OAAOhD,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,MAAMA,KAAK;;IACZ;EACH;EAEA;EACM0I,wBAAwBA,CAACE,MAAc;IAAA,IAAAomC,OAAA;IAAA,OAAAvuC,4JAAA;MAC3C,IAAI;QACFsC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE4F,MAAM,CAAC;QAErD;QACA,MAAM;UAAEzG,IAAI,EAAEklC,QAAQ;UAAErnC,KAAK,EAAEivC;QAAU,CAAE,SAASD,OAAI,CAACxJ,QAAQ,CAACK,IAAI,CAACwI,KAAK,CAACa,WAAW,CAACtmC,MAAM,CAAC;QAEhG,IAAIqmC,UAAU,EAAE;UACd,MAAMA,UAAU;;QAGlB;QACA,MAAME,aAAa,GAAG9H,QAAQ,CAAC75C,IAAI,CAAC04C,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAEmB,QAAQ,CAAC75C,IAAY,CAAC,cAAc,CAAC;QACxG,MAAMusC,SAAS,GAAG,CAACoV,aAAa;QAEhC;QACA,MAAMP,UAAU,GAAQ;UACtB1I,aAAa,EAAE;YACb,GAAGmB,QAAQ,CAAC75C,IAAI,CAAC04C,aAAa;YAC9B,CAAC,QAAQ,GAAGnM;;SAEf;QAED;QACA,IAAI,CAACA,SAAS,EAAE;UACd6U,UAAU,CAACC,YAAY,GAAG,SAAS,CAAC,CAAC;SACtC,MAAM;UACLD,UAAU,CAACC,YAAY,GAAG,MAAM,CAAC,CAAC;;QAGpC,MAAM;UAAE1sC,IAAI;UAAEnC;QAAK,CAAE,SAASgvC,OAAI,CAACxJ,QAAQ,CAACK,IAAI,CAACwI,KAAK,CAACS,cAAc,CAAClmC,MAAM,EAAEgmC,UAAU,CAAC;QAEzF,IAAI5uC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb+C,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAE+2B,SAAS,GAAG,QAAQ,GAAG,UAAU,CAAC;QAE5F,OAAO;UACLn5B,EAAE,EAAEuB,IAAI,CAAC3U,IAAI,CAACoT,EAAE;UAChBhK,KAAK,EAAEuL,IAAI,CAAC3U,IAAI,CAACoJ,KAAK,IAAI,EAAE;UAC5B6G,IAAI,EAAG0E,IAAI,CAAC3U,IAAI,CAAC04C,aAAa,GAAG,MAAM,CAA0B,IAAI,UAAU;UAC/Ep1C,QAAQ,EAAEqR,IAAI,CAAC3U,IAAI,CAAC04C,aAAa,GAAG,UAAU,CAAC,IAAI,EAAE;UACrDxoC,MAAM,EAAEq8B,SAAS;UACjBzjC,SAAS,EAAE,IAAIsI,IAAI,CAACuD,IAAI,CAAC3U,IAAI,CAACioB,UAAU;SACzC;OACF,CAAC,OAAOzV,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC7D,MAAMA,KAAK;;IACZ;EACH;EAEA;EACM+L,kBAAkBA,CAACnD,MAAc,EAAE3K,WAAmB;IAAA,IAAAmxC,OAAA;IAAA,OAAA3uC,4JAAA;MAC1D,IAAI;QACFsC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE4F,MAAM,CAAC;QAE3D,MAAM;UAAE5I;QAAK,CAAE,SAASovC,OAAI,CAAC5J,QAAQ,CAACK,IAAI,CAACwI,KAAK,CAACS,cAAc,CAAClmC,MAAM,EAAE;UACtEtT,QAAQ,EAAE2I;SACX,CAAC;QAEF,IAAI+B,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb+C,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;OACnD,CAAC,OAAOhD,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,MAAMA,KAAK;;IACZ;EACH;EAEA;EACMqvC,iBAAiBA,CAACz4C,KAAa;IAAA,IAAA04C,OAAA;IAAA,OAAA7uC,4JAAA;MACnC,IAAI;QACF,MAAM;UAAET;QAAK,CAAE,SAASsvC,OAAI,CAAC9J,QAAQ,CAACK,IAAI,CAAC0J,qBAAqB,CAAC34C,KAAK,EAAE;UACtEhH,UAAU,EAAE,GAAG6yC,MAAM,CAAC+M,QAAQ,CAACC,MAAM;SACtC,CAAC;QAEF,IAAIzvC,KAAK,EAAE;UACT,MAAMA,KAAK;;OAEd,CAAC,OAAOA,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;EAEA;EACA;EACA;EAEA;EACM6N,wBAAwBA,CAAA;IAAA,IAAA6hC,OAAA;IAAA,OAAAjvC,4JAAA;MAC5B,IAAI;QACF;QACA,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAAS0vC,OAAI,CAAClK,QAAQ,CACxCyD,GAAG,CAAC,8BAA8B,CAAC;QAEtC,IAAIjpC,KAAK,EAAE;UACT+C,OAAO,CAACof,IAAI,CAAC,0EAA0E,EAAEniB,KAAK,CAAC;UAE/F;UACA,MAAM;YAAEmC,IAAI,EAAEwtC,SAAS;YAAE3vC,KAAK,EAAE4vC;UAAU,CAAE,SAASF,OAAI,CAAClK,QAAQ,CAACK,IAAI,CAACwI,KAAK,CAACC,SAAS,EAAE;UAEzF,IAAIsB,UAAU,EAAE;YACd,MAAMA,UAAU;;UAGlB;UACA,MAAM39B,aAAa,GAAG,IAAIC,GAAG,EAA0B;UAEvD,KAAK,MAAM1kB,IAAI,IAAImiD,SAAS,CAACryC,KAAK,EAAE;YAClC,IAAI9P,IAAI,CAACoJ,KAAK,KAAK,sBAAsB,IAAI,CAACpJ,IAAI,CAACqiD,kBAAkB,IAAI,CAACriD,IAAI,CAACoJ,KAAK,EAAE;cACpF;;YAGF,IAAI9F,QAAQ,GAAG,WAAW;YAC1B,IAAItD,IAAI,CAAC04C,aAAa,IAAI14C,IAAI,CAAC04C,aAAa,CAAC,UAAU,CAAC,EAAE;cACxDp1C,QAAQ,GAAGtD,IAAI,CAAC04C,aAAa,CAAC,UAAU,CAAC;aAC1C,MAAM,IAAI14C,IAAI,CAACoJ,KAAK,CAAClJ,QAAQ,CAAC,QAAQ,CAAC,EAAE;cACxCoD,QAAQ,GAAG,YAAY;aACxB,MAAM,IAAItD,IAAI,CAACoJ,KAAK,CAAClJ,QAAQ,CAAC,QAAQ,CAAC,EAAE;cACxCoD,QAAQ,GAAG,YAAY;aACxB,MAAM,IAAItD,IAAI,CAACoJ,KAAK,CAAClJ,QAAQ,CAAC,QAAQ,CAAC,EAAE;cACxCoD,QAAQ,GAAG,YAAY;aACxB,MAAM,IAAItD,IAAI,CAACoJ,KAAK,CAAClJ,QAAQ,CAAC,QAAQ,CAAC,EAAE;cACxCoD,QAAQ,GAAG,YAAY;;YAGzB,IAAI,CAACmhB,aAAa,CAACE,GAAG,CAACrhB,QAAQ,CAAC,EAAE;cAChCmhB,aAAa,CAACG,GAAG,CAACthB,QAAQ,EAAE;gBAC1BA,QAAQ;gBACRoV,MAAM,EAAE,EAAE;gBACV4pC,OAAO,EAAEtiD,IAAI,CAACoT,EAAE;gBAChBhK,KAAK,EAAEpJ,IAAI,CAACoJ,KAAK,IAAI;eACtB,CAAC;;;UAIN,OAAO0b,KAAK,CAACC,IAAI,CAACN,aAAa,CAACxC,MAAM,EAAE,CAAC;;QAG3C,OAAO,CAACtN,IAAI,IAAI,EAAE,EAAEyD,GAAG,CAAEpY,IAAS,KAAM;UACtCsD,QAAQ,EAAEtD,IAAI,CAACsD,QAAQ;UACvBoV,MAAM,EAAE1Y,IAAI,CAACuiD,cAAc;UAC3BD,OAAO,EAAEtiD,IAAI,CAACu6C,OAAO;UACrBnxC,KAAK,EAAEpJ,IAAI,CAACoJ;SACb,CAAC,CAAC;OACJ,CAAC,OAAOoJ,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QAC/D;QACA,OAAO,CACL;UAAElP,QAAQ,EAAE,YAAY;UAAEoV,MAAM,EAAE,EAAE;UAAE4pC,OAAO,EAAE,EAAE;UAAEl5C,KAAK,EAAE;QAAoB,CAAE,EAChF;UAAE9F,QAAQ,EAAE,YAAY;UAAEoV,MAAM,EAAE,EAAE;UAAE4pC,OAAO,EAAE,EAAE;UAAEl5C,KAAK,EAAE;QAAoB,CAAE,EAChF;UAAE9F,QAAQ,EAAE,YAAY;UAAEoV,MAAM,EAAE,EAAE;UAAE4pC,OAAO,EAAE,EAAE;UAAEl5C,KAAK,EAAE;QAAoB,CAAE,EAChF;UAAE9F,QAAQ,EAAE,YAAY;UAAEoV,MAAM,EAAE,EAAE;UAAE4pC,OAAO,EAAE,EAAE;UAAEl5C,KAAK,EAAE;QAAoB,CAAE,EAChF;UAAE9F,QAAQ,EAAE,WAAW;UAAEoV,MAAM,EAAE,EAAE;UAAE4pC,OAAO,EAAE,EAAE;UAAEl5C,KAAK,EAAE;QAAuB,CAAE,CACnF;;IACF;EACH;EAEA;EACMoX,uBAAuBA,CAC3B3M,QAAgB,EAChBhO,aAAqB,EACrBmE,mBAAmD;IAAA,IAAAw4C,OAAA;IAAA,OAAAvvC,4JAAA;MAEnD,IAAI;QACF,MAAMynC,YAAY,GAAG70C,aAAa,CAACzB,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAE9D,MAAM;UAAEsQ,IAAI;UAAEnC;QAAK,CAAE,SAASgwC,OAAI,CAACxK,QAAQ,CACxCyD,GAAG,CAAC,4BAA4B,EAAE;UACjCC,WAAW,EAAE7nC,QAAQ;UACrB+nC,gBAAgB,EAAElB,YAAY;UAC9B+H,eAAe,EAAEz4C;SAClB,CAAC;QAEJ,IAAIwI,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb+C,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;OACzD,CAAC,OAAOhD,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5D,MAAMA,KAAK;;IACZ;EACH;EAEA;EACMiO,gCAAgCA,CAAC5M,QAAgB;IAAA,IAAA6uC,OAAA;IAAA,OAAAzvC,4JAAA;MACrD,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASkwC,OAAI,CAAC1K,QAAQ,CACxCyD,GAAG,CAAC,sCAAsC,EAAE;UAC3CC,WAAW,EAAE7nC;SACd,CAAC;QAEJ,IAAIrB,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb+C,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;OAC5D,CAAC,OAAOhD,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QAC/D,MAAMA,KAAK;;IACZ;EACH;EAEA;EACMmwC,qBAAqBA,CAACt1C,KAAW,EAAEhI,MAAc;IAAA,IAAAu9C,OAAA;IAAA,OAAA3vC,4JAAA;MACrD,IAAI;QACF,MAAMsN,QAAQ,GAAGqiC,OAAI,CAAChvC,yBAAyB,CAACvG,KAAK,CAAC;QACtD,MAAMwG,QAAQ,GAAG,GAAG0M,QAAQ,IAAIlb,MAAM,EAAE;QAExC,MAAM;UAAEsP,IAAI;UAAEnC;QAAK,CAAE,SAASowC,OAAI,CAAC5K,QAAQ,CACxCjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC,CAClBsmC,KAAK,CAAC,UAAU,CAAC;QAEpB,IAAI3nC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,OAAO,CAACmC,IAAI,IAAI,EAAE,EAAEyD,GAAG,CAAC+pB,IAAI,KAAK;UAC/B/uB,EAAE,EAAE+uB,IAAI,CAAC/uB,EAAE;UACX/F,KAAK,EAAE,IAAI+D,IAAI,CAAC+wB,IAAI,CAAC90B,KAAK,CAAC;UAC3BhI,MAAM,EAAE88B,IAAI,CAAC98B,MAAM;UACnBuP,UAAU,EAAE,IAAIxD,IAAI,CAAC+wB,IAAI,CAACttB,WAAW,CAAC;UACtChP,aAAa,EAAEs8B,IAAI,CAACp+B,cAAc,IAAI,EAAE;UACxCgC,mBAAmB,EAAEo8B,IAAI,CAAC3+B,oBAAoB;UAC9Cc,YAAY,EAAE69B,IAAI,CAAC/2B,aAAa;UAChC0J,WAAW,EAAEqtB,IAAI,CAAC92B,YAAY;UAC9B0J,YAAY,EAAEotB,IAAI,CAAC72B,aAAa;UAChC0I,OAAO,EAAEmuB,IAAI,CAACnuB,OAAO;UACrB1Q,QAAQ,EAAE6+B,IAAI,CAAC7+B;SAChB,CAAC,CAAC;OACJ,CAAC,OAAOkP,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D,OAAO,EAAE;;IACV;EACH;EAEA;EACMqwC,2BAA2BA,CAACx1C,KAAW,EAAEhI,MAAc;IAAA,IAAAy9C,OAAA;IAAA,OAAA7vC,4JAAA;MAQ3D,IAAI;QACF,MAAM8vC,kBAAkB,SAASD,OAAI,CAACH,qBAAqB,CAACt1C,KAAK,EAAEhI,MAAM,CAAC;QAE1E,IAAI09C,kBAAkB,CAACz6C,MAAM,KAAK,CAAC,EAAE;UACnC,OAAO;YACLzC,aAAa,EAAE,EAAE;YACjBvB,YAAY,EAAE,CAAC;YACfwQ,WAAW,EAAE,CAAC;YACdC,YAAY,EAAE,CAAC;YACff,OAAO,EAAE,KAAK;YACdgvC,mBAAmB,EAAE;WACtB;;QAGH,MAAMz+B,OAAO,GAAG;UACd1e,aAAa,EAAEk9C,kBAAkB,CAAC,CAAC,CAAC,CAACl9C,aAAa,IAAI,EAAE;UACxDvB,YAAY,EAAEy+C,kBAAkB,CAACjrC,MAAM,CAAC,CAACoK,GAAG,EAAEzJ,CAAC,KAAKyJ,GAAG,GAAGzJ,CAAC,CAACnU,YAAY,EAAE,CAAC,CAAC;UAC5EwQ,WAAW,EAAEiuC,kBAAkB,CAACjrC,MAAM,CAAC,CAACoK,GAAG,EAAEzJ,CAAC,KAAKyJ,GAAG,GAAGzJ,CAAC,CAAC3D,WAAW,EAAE,CAAC,CAAC;UAC1EC,YAAY,EAAEguC,kBAAkB,CAACjrC,MAAM,CAAC,CAACoK,GAAG,EAAEzJ,CAAC,KAAKyJ,GAAG,GAAGzJ,CAAC,CAAC1D,YAAY,EAAE,CAAC,CAAC;UAC5Ef,OAAO,EAAE+uC,kBAAkB,CAACE,KAAK,CAACxqC,CAAC,IAAIA,CAAC,CAACzE,OAAO,CAAC;UACjDgvC,mBAAmB,EAAED,kBAAkB,CAAC3qC,GAAG,CAACK,CAAC,KAAK;YAChDnV,QAAQ,EAAEmV,CAAC,CAACnV,QAAQ;YACpBoV,MAAM,EAAED,CAAC,CAAC1S,mBAAmB;YAC7Bm9C,OAAO,EAAEzqC,CAAC,CAACnU,YAAY;YACvB6+C,MAAM,EAAE1qC,CAAC,CAAC3D,WAAW;YACrBsuC,QAAQ,EAAE3qC,CAAC,CAAC1D;WACb,CAAC;SACH;QAED,OAAOwP,OAAO;OACf,CAAC,OAAO/R,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC7D,OAAO;UACL3M,aAAa,EAAE,EAAE;UACjBvB,YAAY,EAAE,CAAC;UACfwQ,WAAW,EAAE,CAAC;UACdC,YAAY,EAAE,CAAC;UACff,OAAO,EAAE,KAAK;UACdgvC,mBAAmB,EAAE;SACtB;;IACF;EACH;EAEA;;;EAGM/oB,kBAAkBA,CAAC5lB,UAAkB,EAAEhH,KAAa;IAAA,IAAAg2C,OAAA;IAAA,OAAApwC,4JAAA;MACxD,IAAI;QACF,MAAM;UAAE0B,IAAI,EAAEiB,MAAM;UAAEpD;QAAK,CAAE,SAAS6wC,OAAI,CAACrL,QAAQ,CAChDjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC;;SAEP,CAAC,CACDC,EAAE,CAAC,QAAQ,EAAEjyB,UAAU,CAAC,CACxBkyB,GAAG,CAAC,YAAY,EAAE,GAAGl5B,KAAK,WAAW,CAAC,CACtCi2C,EAAE,CAAC,YAAY,EAAE,GAAGj2C,KAAK,WAAW,CAAC;QAExC,IAAImF,KAAK,EAAE;UACT+C,OAAO,CAAC/C,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;UAC3D,OAAO,EAAE;;QAGX,MAAMmnB,eAAe,GAAiC,EAAE;QAExD;QACA/jB,MAAM,EAAE+H,OAAO,CAACgF,KAAK,IAAG;UACtBA,KAAK,CAACxL,OAAO,EAAEwG,OAAO,CAAE4lC,OAAY,IAAI;YACtC,MAAMp/C,MAAM,GAAGo/C,OAAO,CAACp/C,MAAM,CAACC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;YACzD,MAAM6D,KAAK,GAAGq7C,OAAO,CAACr7C,KAAK,IAAI,CAAC;YAEhC,IAAI,CAACyxB,eAAe,CAACx1B,MAAM,CAAC,EAAE;cAC5Bw1B,eAAe,CAACx1B,MAAM,CAAC,GAAG,CAAC;;YAE7Bw1B,eAAe,CAACx1B,MAAM,CAAC,IAAI+D,KAAK;UAClC,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,OAAOyxB,eAAe;OACvB,CAAC,OAAOnnB,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,OAAO,EAAE;;IACV;EACH;EAEA;;;EAGAmO,mBAAmBA,CAAA;IACjB,IAAI,CAACmZ,oBAAoB,CAACmf,IAAI,EAAE;EAClC;EAEA;EACA;EACA;EAEA;;;EAGM9iC,qBAAqBA,CAACvG,UAAiB,EAAEC,UAAiB,EAAE0P,YAAqB,EAAEikC,cAAuB;IAAA,IAAAC,OAAA;IAAA,OAAAxwC,4JAAA;MAyB9G,IAAI;QACF,IAAIywC,YAAY,EAAEC,UAAU;QAE5B,IAAI/zC,UAAU,IAAIC,UAAU,EAAE;UAC5B6zC,YAAY,GAAGD,OAAI,CAACziB,0BAA0B,CAACyiB,OAAI,CAAC1xC,qBAAqB,CAACnC,UAAU,CAAC,CAAC;UACtF+zC,UAAU,GAAGF,OAAI,CAACziB,0BAA0B,CAACyiB,OAAI,CAACxxC,mBAAmB,CAACpC,UAAU,CAAC,CAAC;SACnF,MAAM,IAAID,UAAU,EAAE;UACrB8zC,YAAY,GAAGD,OAAI,CAACziB,0BAA0B,CAACyiB,OAAI,CAAC1xC,qBAAqB,CAACnC,UAAU,CAAC,CAAC;UACtF+zC,UAAU,GAAGF,OAAI,CAACziB,0BAA0B,CAACyiB,OAAI,CAACxxC,mBAAmB,CAACrC,UAAU,CAAC,CAAC;SACnF,MAAM;UACL,MAAMsqC,KAAK,GAAGuJ,OAAI,CAAC/xC,mBAAmB,EAAE;UACxCgyC,YAAY,GAAGD,OAAI,CAACziB,0BAA0B,CAACyiB,OAAI,CAAC1xC,qBAAqB,CAACmoC,KAAK,CAAC,CAAC;UACjFyJ,UAAU,GAAGF,OAAI,CAACziB,0BAA0B,CAACyiB,OAAI,CAACxxC,mBAAmB,CAACioC,KAAK,CAAC,CAAC;;QAG/E;QACA,IAAI0J,UAAU,GAAGH,OAAI,CAACzL,QAAQ,CAC3BjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC;;;;;;;;;;;SAWP,CAAC,CACDE,GAAG,CAAC,OAAO,EAAEmd,YAAY,CAAC,CAC1Bld,GAAG,CAAC,OAAO,EAAEmd,UAAU,CAAC;QAE3B;QACA,IAAIpkC,YAAY,EAAE;UAChBqkC,UAAU,GAAGA,UAAU,CAACtd,EAAE,CAAC,QAAQ,EAAE/mB,YAAY,CAAC;;QAEpD,IAAIikC,cAAc,EAAE;UAClBI,UAAU,GAAGA,UAAU,CAACtd,EAAE,CAAC,UAAU,EAAEkd,cAAc,CAAC;;QAGxD,MAAM;UAAE7uC,IAAI,EAAEkvC,SAAS;UAAErxC;QAAK,CAAE,SAASoxC,UAAU;QAEnD,IAAIpxC,KAAK,EAAE;UACT+C,OAAO,CAAC/C,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD,MAAMA,KAAK;;QAGb;QACA,MAAM;UAAEmC,IAAI,EAAEnF,WAAW;UAAEgD,KAAK,EAAE0qC;QAAY,CAAE,SAASuG,OAAI,CAACzL,QAAQ,CACnEjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,2DAA2D,CAAC,CACnEC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;QAEtB,IAAI4W,YAAY,EAAE;UAChB3nC,OAAO,CAACof,IAAI,CAAC,oCAAoC,EAAEuoB,YAAY,CAAC;;QAGlE;QACA,MAAM4G,eAAe,GAAG,IAAIp/B,GAAG,EAAE;QACjC,CAAClV,WAAW,IAAI,EAAE,EAAEmO,OAAO,CAACtY,MAAM,IAAG;UACnC,IAAIA,MAAM,CAACtB,cAAc,EAAE;YACzB+/C,eAAe,CAACl/B,GAAG,CAACvf,MAAM,CAACA,MAAM,EAAE;cACjCQ,aAAa,EAAE6N,QAAQ,CAACrO,MAAM,CAACtB,cAAc,CAAC;cAC9C2U,MAAM,EAAErT,MAAM,CAAC7B,oBAAoB,IAAI;aACxC,CAAC;;QAEN,CAAC,CAAC;QAEF,IAAIc,YAAY,GAAG,CAAC;QACpB,IAAIwQ,WAAW,GAAG,CAAC;QACnB,IAAIivC,WAAW,GAAG,CAAC;QACnB,MAAMC,iBAAiB,GAAG,IAAIt/B,GAAG,EAAE;QACnC,MAAMtO,gBAAgB,GAAG,IAAIsO,GAAG,EAAE;QAElC;QACA,CAACm/B,SAAS,IAAI,EAAE,EAAElmC,OAAO,CAACzG,IAAI,IAAG;UAC/B6sC,WAAW,EAAE;UACbz/C,YAAY,IAAI4S,IAAI,CAACnO,KAAK;UAE1B;UACA,IAAI,CAACi7C,iBAAiB,CAACr/B,GAAG,CAACzN,IAAI,CAAC5T,QAAQ,CAAC,EAAE;YACzC0gD,iBAAiB,CAACp/B,GAAG,CAAC1N,IAAI,CAAC5T,QAAQ,EAAE;cACnCA,QAAQ,EAAE4T,IAAI,CAAC5T,QAAQ;cACvBgB,YAAY,EAAE,CAAC;cACfwQ,WAAW,EAAE,CAAC;cACdC,YAAY,EAAE,CAAC;cACfkvC,WAAW,EAAE;aACd,CAAC;;UAEJ,MAAMliC,YAAY,GAAGiiC,iBAAiB,CAAC/iC,GAAG,CAAC/J,IAAI,CAAC5T,QAAQ,CAAC;UACzDye,YAAY,CAACzd,YAAY,IAAI4S,IAAI,CAACnO,KAAK;UACvCgZ,YAAY,CAACkiC,WAAW,EAAE;UAE1B;UACA,IAAI,CAAC7tC,gBAAgB,CAACuO,GAAG,CAACzN,IAAI,CAAC7R,MAAM,CAAC,EAAE;YACtC+Q,gBAAgB,CAACwO,GAAG,CAAC1N,IAAI,CAAC7R,MAAM,EAAE,IAAIqf,GAAG,EAAE,CAAC;;UAE9C,MAAMw/B,SAAS,GAAG9tC,gBAAgB,CAAC6K,GAAG,CAAC/J,IAAI,CAAC7R,MAAM,CAAC;UAEnD,IAAI,CAAC6+C,SAAS,CAACv/B,GAAG,CAACzN,IAAI,CAAC5T,QAAQ,CAAC,EAAE;YACjC4gD,SAAS,CAACt/B,GAAG,CAAC1N,IAAI,CAAC5T,QAAQ,EAAE,IAAIohB,GAAG,EAAE,CAAC;;UAEzC,MAAMy/B,WAAW,GAAGD,SAAS,CAACjjC,GAAG,CAAC/J,IAAI,CAAC5T,QAAQ,CAAC;UAEhD;UACA,CAAC4T,IAAI,CAAC0vB,YAAY,IAAI,EAAE,EAAEjpB,OAAO,CAACvG,MAAM,IAAG;YACzC,MAAMjT,MAAM,GAAGuP,QAAQ,CAAC0D,MAAM,CAACjT,MAAM,CAACC,QAAQ,EAAE,CAAC;YAEjD;YACA,IAAI,CAAC+/C,WAAW,CAACx/B,GAAG,CAACxgB,MAAM,CAAC,EAAE;cAC5BggD,WAAW,CAACv/B,GAAG,CAACzgB,MAAM,EAAE;gBAAEG,YAAY,EAAE,CAAC;gBAAEgd,cAAc,EAAE;cAAC,CAAE,CAAC;;YAEjE,MAAMmB,UAAU,GAAG0hC,WAAW,CAACljC,GAAG,CAAC9c,MAAM,CAAC;YAC1Cse,UAAU,CAACne,YAAY,IAAI8S,MAAM,CAAClP,KAAK;YACvCua,UAAU,CAACnB,cAAc,EAAE;YAE3B;YACA,MAAM8iC,UAAU,GAAGN,eAAe,CAAC7iC,GAAG,CAAC/J,IAAI,CAAC7R,MAAM,CAAC;YACnD,IAAI++C,UAAU,IAAIjgD,MAAM,KAAKigD,UAAU,CAACv+C,aAAa,EAAE;cACrD,MAAMw+C,WAAW,GAAGjtC,MAAM,CAAClP,KAAK,GAAGk8C,UAAU,CAAC1rC,MAAM;cACpD5D,WAAW,IAAIuvC,WAAW;cAC1BtiC,YAAY,CAACjN,WAAW,IAAIuvC,WAAW;;UAE3C,CAAC,CAAC;UAEFtiC,YAAY,CAAChN,YAAY,GAAGgN,YAAY,CAACzd,YAAY,GAAGyd,YAAY,CAACjN,WAAW;QAClF,CAAC,CAAC;QAEF;QACA,MAAMwvC,qBAAqB,GAWtB,EAAE;QAEPluC,gBAAgB,CAACuH,OAAO,CAAC,CAAC8G,aAAkB,EAAEpf,MAAc,KAAI;UAC9D,MAAME,UAAU,GAQX,EAAE;UAEPkf,aAAa,CAAC9G,OAAO,CAAC,CAAC4mC,UAAe,EAAEjhD,QAAgB,KAAI;YAC1D,IAAI0e,aAAa,GAAG,CAAC;YACrBuiC,UAAU,CAAC5mC,OAAO,CAAEhJ,IAAS,IAAI;cAC/BqN,aAAa,IAAIrN,IAAI,CAACrQ,YAAY;YACpC,CAAC,CAAC;YAEF,MAAMU,OAAO,GAKR,EAAE;YAEPu/C,UAAU,CAAC5mC,OAAO,CAAC,CAAChJ,IAAS,EAAExQ,MAAc,KAAI;cAC/Ca,OAAO,CAACqc,IAAI,CAAC;gBACXld,MAAM;gBACNG,YAAY,EAAEqQ,IAAI,CAACrQ,YAAY;gBAC/Bgd,cAAc,EAAE3M,IAAI,CAAC2M,cAAc;gBACnCC,UAAU,EAAES,aAAa,GAAG,CAAC,GAAIrN,IAAI,CAACrQ,YAAY,GAAG0d,aAAa,GAAI,GAAG,GAAG;eAC7E,CAAC;YACJ,CAAC,CAAC;YAEFhd,OAAO,CAACwc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACpd,YAAY,GAAGmd,CAAC,CAACnd,YAAY,CAAC;YACvDiB,UAAU,CAAC8b,IAAI,CAAC;cAAE/d,QAAQ;cAAE0B;YAAO,CAAE,CAAC;UACxC,CAAC,CAAC;UAEFs/C,qBAAqB,CAACjjC,IAAI,CAAC;YAAEhc,MAAM;YAAEE;UAAU,CAAE,CAAC;QACpD,CAAC,CAAC;QAEF,OAAO;UACLjB,YAAY;UACZwQ,WAAW;UACXC,YAAY,EAAEzQ,YAAY,GAAGwQ,WAAW;UACxCivC,WAAW;UACXC,iBAAiB,EAAEl/B,KAAK,CAACC,IAAI,CAACi/B,iBAAiB,CAAC/hC,MAAM,EAAE,CAAC;UACzD7L,gBAAgB,EAAEkuC;SACnB;OAEF,CAAC,OAAO9xC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,OAAO;UACLlO,YAAY,EAAE,CAAC;UACfwQ,WAAW,EAAE,CAAC;UACdC,YAAY,EAAE,CAAC;UACfgvC,WAAW,EAAE,CAAC;UACdC,iBAAiB,EAAE,EAAE;UACrB5tC,gBAAgB,EAAE;SACnB;;IACF;EACH;EAEA;;;EAGMF,4BAA4BA,CAACtG,UAAiB,EAAEC,UAAiB,EAAE0P,YAAqB;IAAA,IAAAilC,OAAA;IAAA,OAAAvxC,4JAAA;MAI5F,IAAI;QACF,IAAIywC,YAAY,EAAEC,UAAU;QAE5B,IAAI/zC,UAAU,IAAIC,UAAU,EAAE;UAC5B6zC,YAAY,GAAGc,OAAI,CAACxjB,0BAA0B,CAACwjB,OAAI,CAACzyC,qBAAqB,CAACnC,UAAU,CAAC,CAAC;UACtF+zC,UAAU,GAAGa,OAAI,CAACxjB,0BAA0B,CAACwjB,OAAI,CAACvyC,mBAAmB,CAACpC,UAAU,CAAC,CAAC;SACnF,MAAM,IAAID,UAAU,EAAE;UACrB8zC,YAAY,GAAGc,OAAI,CAACxjB,0BAA0B,CAACwjB,OAAI,CAACzyC,qBAAqB,CAACnC,UAAU,CAAC,CAAC;UACtF+zC,UAAU,GAAGa,OAAI,CAACxjB,0BAA0B,CAACwjB,OAAI,CAACvyC,mBAAmB,CAACrC,UAAU,CAAC,CAAC;SACnF,MAAM;UACL,MAAMsqC,KAAK,GAAGsK,OAAI,CAAC9yC,mBAAmB,EAAE;UACxCgyC,YAAY,GAAGc,OAAI,CAACxjB,0BAA0B,CAACwjB,OAAI,CAACzyC,qBAAqB,CAACmoC,KAAK,CAAC,CAAC;UACjFyJ,UAAU,GAAGa,OAAI,CAACxjB,0BAA0B,CAACwjB,OAAI,CAACvyC,mBAAmB,CAACioC,KAAK,CAAC,CAAC;;QAG/E,IAAIa,KAAK,GAAGyJ,OAAI,CAACxM,QAAQ,CACtBjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC;;;;;;;;;;;;;;;SAeP,CAAC,CACDE,GAAG,CAAC,OAAO,EAAEmd,YAAY,CAAC,CAC1Bld,GAAG,CAAC,OAAO,EAAEmd,UAAU,CAAC,CACxBxJ,KAAK,CAAC,YAAY,EAAE;UAAEC,SAAS,EAAE;QAAK,CAAE,CAAC;QAE5C,IAAI76B,YAAY,IAAIA,YAAY,CAACiK,IAAI,EAAE,KAAK,EAAE,EAAE;UAC9CuxB,KAAK,GAAGA,KAAK,CAACzU,EAAE,CAAC,QAAQ,EAAE/mB,YAAY,CAAC;;QAG1C,MAAM;UAAE5K,IAAI;UAAEnC;QAAK,CAAE,SAASuoC,KAAK;QAEnC,IAAIvoC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb,MAAMlD,KAAK,GAAW,EAAE;QACxB,MAAMC,WAAW,GAAuC,EAAE;QAE1D,CAACoF,IAAI,IAAI,EAAE,EAAEgJ,OAAO,CAAC28B,QAAQ,IAAG;UAC9B;UACA,MAAMpjC,IAAI,GAAS;YACjB9D,EAAE,EAAEknC,QAAQ,CAAClnC,EAAE;YACfgI,MAAM,EAAEk/B,QAAQ,CAACC,OAAO;YACxBj3C,QAAQ,EAAEg3C,QAAQ,CAACh3C,QAAQ;YAC3B+B,MAAM,EAAEi1C,QAAQ,CAACj1C,MAAM;YACvBgI,KAAK,EAAEm3C,OAAI,CAACvJ,qBAAqB,CAACX,QAAQ,CAACjtC,KAAK,CAAC;YACjDtE,KAAK,EAAEuxC,QAAQ,CAACvxC,KAAK;YACrBJ,YAAY,EAAE2xC,QAAQ,CAACE,aAAa,IAAIF,QAAQ,CAAClnC,EAAE,CAACnO,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7D2D,WAAW,EAAE0xC,QAAQ,CAAC1xC,WAAW,IAAI,CAAC;YACtCE,SAAS,EAAE07C,OAAI,CAACvJ,qBAAqB,CAACX,QAAQ,CAACryB,UAAU;WAC1D;UACD3Y,KAAK,CAAC+R,IAAI,CAACnK,IAAI,CAAC;UAEhB;UACA3H,WAAW,CAAC2H,IAAI,CAAC9D,EAAE,CAAC,GAAG,CAACknC,QAAQ,CAAC1T,YAAY,IAAI,EAAE,EAAExuB,GAAG,CAACuiC,UAAU,KAAK;YACtEvnC,EAAE,EAAEunC,UAAU,CAACvnC,EAAE;YACjBoD,MAAM,EAAEU,IAAI,CAAC9D,EAAE;YACfjP,MAAM,EAAEuP,QAAQ,CAACinC,UAAU,CAACx2C,MAAM,CAAC;YACnC+D,KAAK,EAAEyyC,UAAU,CAACzyC;WACnB,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,OAAO;UAAEoH,KAAK;UAAEC;QAAW,CAAE;OAE9B,CAAC,OAAOiD,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D,OAAO;UAAElD,KAAK,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAE,CAAE;;IACtC;EACH;EAEA;;;EAGMmG,qBAAqBA,CAACrI,KAAW,EAAEkS,YAAqB;IAAA,IAAAklC,OAAA;IAAA,OAAAxxC,4JAAA;MAiB5D,IAAI;QACF,MAAMywC,YAAY,GAAGe,OAAI,CAACzjB,0BAA0B,CAACyjB,OAAI,CAAC1yC,qBAAqB,CAAC1E,KAAK,CAAC,CAAC;QACvF,MAAMs2C,UAAU,GAAGc,OAAI,CAACzjB,0BAA0B,CAACyjB,OAAI,CAACxyC,mBAAmB,CAAC5E,KAAK,CAAC,CAAC;QAEnF;QACA,IAAI0tC,KAAK,GAAG0J,OAAI,CAACzM,QAAQ,CACtBjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC;;;;;;;;;;;;;;;SAeP,CAAC,CACDE,GAAG,CAAC,OAAO,EAAEmd,YAAY,CAAC,CAC1Bld,GAAG,CAAC,OAAO,EAAEmd,UAAU,CAAC,CACxBxJ,KAAK,CAAC,YAAY,EAAE;UAAEC,SAAS,EAAE;QAAK,CAAE,CAAC;QAE5C,IAAI76B,YAAY,IAAIA,YAAY,CAACiK,IAAI,EAAE,KAAK,EAAE,EAAE;UAC9CuxB,KAAK,GAAGA,KAAK,CAACzU,EAAE,CAAC,QAAQ,EAAE/mB,YAAY,CAAC;;QAG1C,MAAM;UAAE5K,IAAI,EAAEkvC,SAAS;UAAErxC;QAAK,CAAE,SAASuoC,KAAK;QAE9C,IAAIvoC,KAAK,EAAE;UACT,MAAMA,KAAK;;QAGb;QACA,MAAM+N,QAAQ,GAAGkkC,OAAI,CAAC7wC,yBAAyB,CAACvG,KAAK,CAAC;QACtD,MAAM;UAAEsH,IAAI,EAAEnF,WAAW;UAAEgD,KAAK,EAAE0qC;QAAY,CAAE,SAASuH,OAAI,CAACzM,QAAQ,CACnEjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,uDAAuD,CAAC,CAC/D8W,IAAI,CAAC,IAAI,EAAE,GAAG58B,QAAQ,IAAI,CAAC,CAC3B+lB,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;QAEtB,IAAI4W,YAAY,EAAE;UAChB3nC,OAAO,CAACof,IAAI,CAAC,mCAAmC,EAAEuoB,YAAY,CAAC;;QAGjE;QACA,MAAM4G,eAAe,GAAG,IAAIp/B,GAAG,EAAE;QACjC,CAAClV,WAAW,IAAI,EAAE,EAAEmO,OAAO,CAACtY,MAAM,IAAG;UACnC,IAAIA,MAAM,CAACtB,cAAc,EAAE;YACzB+/C,eAAe,CAACl/B,GAAG,CAACvf,MAAM,CAACA,MAAM,EAAE;cACjCQ,aAAa,EAAE6N,QAAQ,CAACrO,MAAM,CAACtB,cAAc,CAAC;cAC9C2U,MAAM,EAAErT,MAAM,CAAC7B,oBAAoB,IAAI;aACxC,CAAC;;QAEN,CAAC,CAAC;QAEF;QACA,MAAM8L,KAAK,GAAW,EAAE;QACxB,MAAMC,WAAW,GAAuC,EAAE;QAC1D,IAAIjL,YAAY,GAAG,CAAC;QACpB,IAAIwQ,WAAW,GAAG,CAAC;QACnB,MAAMkvC,iBAAiB,GAAG,IAAIt/B,GAAG,EAAE;QAEnC,CAACm/B,SAAS,IAAI,EAAE,EAAElmC,OAAO,CAAC28B,QAAQ,IAAG;UACnC;UACA,MAAMpjC,IAAI,GAAS;YACjB9D,EAAE,EAAEknC,QAAQ,CAAClnC,EAAE;YACfgI,MAAM,EAAEk/B,QAAQ,CAACC,OAAO;YACxBj3C,QAAQ,EAAEg3C,QAAQ,CAACh3C,QAAQ;YAC3B+B,MAAM,EAAEi1C,QAAQ,CAACj1C,MAAM;YACvBgI,KAAK,EAAEo3C,OAAI,CAACxJ,qBAAqB,CAACX,QAAQ,CAACjtC,KAAK,CAAC;YACjDtE,KAAK,EAAEuxC,QAAQ,CAACvxC,KAAK;YACrBJ,YAAY,EAAE2xC,QAAQ,CAACE,aAAa,IAAIF,QAAQ,CAAClnC,EAAE,CAACnO,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7D2D,WAAW,EAAE0xC,QAAQ,CAAC1xC,WAAW,IAAI,CAAC;YACtCE,SAAS,EAAE27C,OAAI,CAACxJ,qBAAqB,CAACX,QAAQ,CAACryB,UAAU;WAC1D;UACD3Y,KAAK,CAAC+R,IAAI,CAACnK,IAAI,CAAC;UAChB5S,YAAY,IAAI4S,IAAI,CAACnO,KAAK;UAE1B;UACA,IAAI,CAACi7C,iBAAiB,CAACr/B,GAAG,CAACzN,IAAI,CAAC5T,QAAQ,CAAC,EAAE;YACzC0gD,iBAAiB,CAACp/B,GAAG,CAAC1N,IAAI,CAAC5T,QAAQ,EAAE;cACnCA,QAAQ,EAAE4T,IAAI,CAAC5T,QAAQ;cACvBgB,YAAY,EAAE,CAAC;cACfwQ,WAAW,EAAE,CAAC;cACdC,YAAY,EAAE,CAAC;cACfkvC,WAAW,EAAE;aACd,CAAC;;UAEJ,MAAMliC,YAAY,GAAGiiC,iBAAiB,CAAC/iC,GAAG,CAAC/J,IAAI,CAAC5T,QAAQ,CAAC;UACzDye,YAAY,CAACzd,YAAY,IAAI4S,IAAI,CAACnO,KAAK;UACvCgZ,YAAY,CAACkiC,WAAW,EAAE;UAE1B,MAAM9sC,OAAO,GAAiB,EAAE;UAChC,CAACmjC,QAAQ,CAAC1T,YAAY,IAAI,EAAE,EAAEjpB,OAAO,CAACg9B,UAAU,IAAG;YACjD,MAAMvjC,MAAM,GAAe;cACzBhE,EAAE,EAAEunC,UAAU,CAACvnC,EAAE;cACjBoD,MAAM,EAAEU,IAAI,CAAC9D,EAAE;cACfjP,MAAM,EAAEuP,QAAQ,CAACinC,UAAU,CAACx2C,MAAM,CAAC;cACnC+D,KAAK,EAAEyyC,UAAU,CAACzyC;aACnB;YACDiP,OAAO,CAACkK,IAAI,CAACjK,MAAM,CAAC;YAEpB;YACA,MAAMgtC,UAAU,GAAGN,eAAe,CAAC7iC,GAAG,CAAC/J,IAAI,CAAC7R,MAAM,CAAC;YACnD,IAAI++C,UAAU,IAAIhtC,MAAM,CAACjT,MAAM,KAAKigD,UAAU,CAACv+C,aAAa,EAAE;cAC5D,MAAMw+C,WAAW,GAAGjtC,MAAM,CAAClP,KAAK,GAAGk8C,UAAU,CAAC1rC,MAAM;cACpD5D,WAAW,IAAIuvC,WAAW;cAC1BtiC,YAAY,CAACjN,WAAW,IAAIuvC,WAAW;;UAE3C,CAAC,CAAC;UAEF90C,WAAW,CAAC2H,IAAI,CAAC9D,EAAE,CAAC,GAAG+D,OAAO;UAC9B4K,YAAY,CAAChN,YAAY,GAAGgN,YAAY,CAACzd,YAAY,GAAGyd,YAAY,CAACjN,WAAW;QAClF,CAAC,CAAC;QAEF,OAAO;UACLxF,KAAK;UACLC,WAAW;UACXoG,aAAa,EAAE;YACbrR,YAAY;YACZwQ,WAAW;YACXC,YAAY,EAAEzQ,YAAY,GAAGwQ,WAAW;YACxCivC,WAAW,EAAEz0C,KAAK,CAAChH,MAAM;YACzB07C,iBAAiB,EAAEl/B,KAAK,CAACC,IAAI,CAACi/B,iBAAiB,CAAC/hC,MAAM,EAAE;;SAE3D;OAEF,CAAC,OAAOzP,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,OAAO;UACLlD,KAAK,EAAE,EAAE;UACTC,WAAW,EAAE,EAAE;UACfoG,aAAa,EAAE;YACbrR,YAAY,EAAE,CAAC;YACfwQ,WAAW,EAAE,CAAC;YACdC,YAAY,EAAE,CAAC;YACfgvC,WAAW,EAAE,CAAC;YACdC,iBAAiB,EAAE;;SAEtB;;IACF;EACH;EAEA;EAEA;EACM3xB,cAAcA,CAAA;IAAA,IAAAqyB,OAAA;IAAA,OAAAzxC,4JAAA;MAClB,OAAOyxC,OAAI,CAACzM,kBAAkB,CAACnuC,KAAK;IAAC;EACvC;EAEA;EAEM0pB,uBAAuBA,CAACF,UAAkE;IAAA,IAAAqxB,OAAA;IAAA,OAAA1xC,4JAAA;MAC9F,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASmyC,OAAI,CAAC3M,QAAQ,CACxCjzB,IAAI,CAAC,kBAAkB,CAAC,CACxB01B,MAAM,CAAC;UACNltC,IAAI,EAAE+lB,UAAU,CAAC/lB,IAAI;UACrBE,MAAM,EAAE6lB,UAAU,CAAC7lB,MAAM;UACzBvF,KAAK,EAAEorB,UAAU,CAACprB,KAAK;UACvB08C,UAAU,EAAEtxB,UAAU,CAACC,SAAS;UAChCsoB,SAAS,EAAEvoB,UAAU,CAACzf,QAAQ;UAC9BxG,KAAK,EAAEs3C,OAAI,CAAC3jB,0BAA0B,CAAC1N,UAAU,CAACjmB,KAAM,CAAC;UACzD/J,QAAQ,EAAEgwB,UAAU,CAAChwB,QAAQ;UAC7BuhD,eAAe,EAAEvxB,UAAU,CAACtB;SAC7B,CAAC;QAEJ,IAAIxf,KAAK,EAAE,MAAMA,KAAK;OACvB,CAAC,OAAOA,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D,MAAMA,KAAK;;IACZ;EACH;EAEMiV,sBAAsBA,CAACpa,KAAW,EAAE/J,QAAgB;IAAA,IAAAwhD,OAAA;IAAA,OAAA7xC,4JAAA;MACxD,IAAI;QACF,MAAM+yB,UAAU,GAAG8e,OAAI,CAAC/yC,qBAAqB,CAAC1E,KAAK,CAAC;QACpD,MAAM44B,QAAQ,GAAG6e,OAAI,CAAC7yC,mBAAmB,CAAC5E,KAAK,CAAC;QAEhD,MAAM;UAAEsH,IAAI;UAAEnC;QAAK,CAAE,SAASsyC,OAAI,CAAC9M,QAAQ,CACxCjzB,IAAI,CAAC,kBAAkB,CAAC,CACxBshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBijC,GAAG,CAAC,OAAO,EAAEue,OAAI,CAAC9jB,0BAA0B,CAACgF,UAAU,CAAC,CAAC,CACzDQ,GAAG,CAAC,OAAO,EAAEse,OAAI,CAAC9jB,0BAA0B,CAACiF,QAAQ,CAAC,CAAC,CACvDkU,KAAK,CAAC,YAAY,EAAE;UAAEC,SAAS,EAAE;QAAK,CAAE,CAAC;QAE5C,IAAI5nC,KAAK,EAAE,MAAMA,KAAK;QAEtB,OAAO,CAACmC,IAAI,IAAI,EAAE,EAAEyD,GAAG,CAACi6B,GAAG,KAAK;UAC9Bj/B,EAAE,EAAEi/B,GAAG,CAACj/B,EAAE;UACV7F,IAAI,EAAE8kC,GAAG,CAAC9kC,IAAI;UACdE,MAAM,EAAE4kC,GAAG,CAAC5kC,MAAM;UAClBvF,KAAK,EAAE2Y,UAAU,CAACwxB,GAAG,CAACnqC,KAAK,CAAC;UAC5BqrB,SAAS,EAAE8e,GAAG,CAACuS,UAAU;UACzB/wC,QAAQ,EAAEw+B,GAAG,CAACwJ,SAAS;UACvBxuC,KAAK,EAAE,IAAI+D,IAAI,CAACihC,GAAG,CAAChlC,KAAK,CAAC;UAC1B/J,QAAQ,EAAE+uC,GAAG,CAAC/uC,QAAQ;UACtB0uB,cAAc,EAAEqgB,GAAG,CAACwS,eAAe;UACnC/7C,SAAS,EAAE,IAAIsI,IAAI,CAACihC,GAAG,CAACpqB,UAAU;SACnC,CAAC,CAAC;OACJ,CAAC,OAAOzV,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC7D,OAAO,EAAE;;IACV;EACH;EAEA;EAEM+U,yBAAyBA,CAACla,KAAW,EAAE/J,QAAgB;IAAA,IAAAyhD,OAAA;IAAA,OAAA9xC,4JAAA;MAC3D,IAAI;QACF,MAAMsN,QAAQ,GAAGwkC,OAAI,CAACnxC,yBAAyB,CAACvG,KAAK,CAAC;QAEtD;QACA,MAAM;UAAEsH,IAAI;UAAEnC;QAAK,CAAE,SAASuyC,OAAI,CAAC/M,QAAQ,CACxCyD,GAAG,CAAC,8BAA8B,EAAE;UACnCa,OAAO,EAAE/7B,QAAQ;UACjBo7B,UAAU,EAAEr4C;SACb,CAAC;QAEJ,IAAIkP,KAAK,EAAE,MAAMA,KAAK;QAEtB,IAAImC,IAAI,IAAIA,IAAI,CAACrM,MAAM,GAAG,CAAC,EAAE;UAC3B,MAAM8qB,SAAS,GAAGze,IAAI,CAAC,CAAC,CAAC;UACzB,OAAO;YACLvJ,aAAa,EAAEyV,UAAU,CAACuS,SAAS,CAAChoB,aAAa,IAAI,GAAG,CAAC;YACzDC,YAAY,EAAEwV,UAAU,CAACuS,SAAS,CAAC/nB,YAAY,IAAI,GAAG,CAAC;YACvDgD,UAAU,EAAEwS,UAAU,CAACuS,SAAS,CAAC/kB,UAAU,IAAI,GAAG,CAAC;YACnDsZ,mBAAmB,EAAE9G,UAAU,CAACuS,SAAS,CAACzL,mBAAmB,IAAI,GAAG,CAAC;YACrEC,kBAAkB,EAAE/G,UAAU,CAACuS,SAAS,CAACxL,kBAAkB,IAAI,GAAG,CAAC;YACnEtZ,aAAa,EAAEuS,UAAU,CAACuS,SAAS,CAAC9kB,aAAa,IAAI,GAAG;WACzD;;QAGH,OAAO;UACLlD,aAAa,EAAE,CAAC;UAChBC,YAAY,EAAE,CAAC;UACfgD,UAAU,EAAE,CAAC;UACbsZ,mBAAmB,EAAE,CAAC;UACtBC,kBAAkB,EAAE,CAAC;UACrBtZ,aAAa,EAAE;SAChB;OACF,CAAC,OAAOkE,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;QACjE;QACA,aAAauyC,OAAI,CAACC,yBAAyB,CAAC33C,KAAK,EAAE/J,QAAQ,CAAC;;IAC7D;EACH;EAEc0hD,yBAAyBA,CAAC33C,KAAW,EAAE/J,QAAgB;IAAA,IAAA2hD,OAAA;IAAA,OAAAhyC,4JAAA;MACnE,IAAI;QACF,MAAM+yB,UAAU,GAAGif,OAAI,CAAClzC,qBAAqB,CAAC1E,KAAK,CAAC;QACpD,MAAM44B,QAAQ,GAAGgf,OAAI,CAAChzC,mBAAmB,CAAC5E,KAAK,CAAC;QAEhD;QACA,MAAM;UAAEsH,IAAI,EAAEkvC,SAAS;UAAErxC,KAAK,EAAEkrC;QAAU,CAAE,SAASuH,OAAI,CAACjN,QAAQ,CAC/DjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC,OAAO,CAAC,CACfC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBijC,GAAG,CAAC,OAAO,EAAE0e,OAAI,CAACjkB,0BAA0B,CAACgF,UAAU,CAAC,CAAC,CACzDQ,GAAG,CAAC,OAAO,EAAEye,OAAI,CAACjkB,0BAA0B,CAACiF,QAAQ,CAAC,CAAC;QAE1D,IAAIyX,UAAU,EAAE,MAAMA,UAAU;QAEhC,MAAMp5C,YAAY,GAAG,CAACu/C,SAAS,IAAI,EAAE,EAAE/rC,MAAM,CAAC,CAACoK,GAAG,EAAEhL,IAAI,KAAKgL,GAAG,GAAGrB,UAAU,CAAC3J,IAAI,CAACnO,KAAK,CAAC,EAAE,CAAC,CAAC;QAE7F;QACA;QACA;QACA,MAAM;UAAE4L,IAAI,EAAEuwC,gBAAgB;UAAE1yC,KAAK,EAAE2yC;QAAiB,CAAE,SAASF,OAAI,CAACjN,QAAQ,CAC7EjzB,IAAI,CAAC,kBAAkB,CAAC,CACxBshB,MAAM,CAAC,OAAO,CAAC,CACfC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBgjC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CACpB8e,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAAA,CAC5B7e,GAAG,CAAC,OAAO,EAAE0e,OAAI,CAACjkB,0BAA0B,CAACgF,UAAU,CAAC,CAAC,CACzDQ,GAAG,CAAC,OAAO,EAAEye,OAAI,CAACjkB,0BAA0B,CAACiF,QAAQ,CAAC,CAAC;QAE1D,IAAIkf,iBAAiB,EAAE,MAAMA,iBAAiB;QAE9C,MAAMrwC,WAAW,GAAG,CAACowC,gBAAgB,IAAI,EAAE,EAAEptC,MAAM,CAAC,CAACoK,GAAG,EAAEmjC,IAAI,KAAKnjC,GAAG,GAAGrB,UAAU,CAACwkC,IAAI,CAACn9C,KAAK,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;QAE1G;QACA,MAAM;UAAEyM,IAAI,EAAE2wC,eAAe;UAAE9yC,KAAK,EAAE+yC;QAAgB,CAAE,SAASN,OAAI,CAACjN,QAAQ,CAC3EjzB,IAAI,CAAC,kBAAkB,CAAC,CACxBshB,MAAM,CAAC,aAAa,CAAC,CACrBC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBijC,GAAG,CAAC,OAAO,EAAE0e,OAAI,CAACjkB,0BAA0B,CAACgF,UAAU,CAAC,CAAC,CACzDQ,GAAG,CAAC,OAAO,EAAEye,OAAI,CAACjkB,0BAA0B,CAACiF,QAAQ,CAAC,CAAC;QAE1D,IAAIsf,gBAAgB,EAAE,MAAMA,gBAAgB;QAE5C,IAAInxB,kBAAkB,GAAG,CAAC;QAC1B,IAAIC,iBAAiB,GAAG,CAAC;QAEzB,CAACixB,eAAe,IAAI,EAAE,EAAE3nC,OAAO,CAAC2K,GAAG,IAAG;UACpC,MAAMpgB,KAAK,GAAG2Y,UAAU,CAACyH,GAAG,CAACpgB,KAAK,CAAC;UACnC,IAAIogB,GAAG,CAAC/a,IAAI,KAAK,SAAS,EAAE;YAC1B6mB,kBAAkB,IAAIlsB,KAAK;WAC5B,MAAM;YACLmsB,iBAAiB,IAAInsB,KAAK;;QAE9B,CAAC,CAAC;QAEF,MAAM4qB,SAAS,GAAGxuB,YAAY,GAAGwQ,WAAW;QAC5C,MAAMwf,YAAY,GAAGxB,SAAS,GAAGsB,kBAAkB,GAAGC,iBAAiB;QAEvE,OAAO;UACLjpB,aAAa,EAAE9G,YAAY;UAC3B+G,YAAY,EAAEyJ,WAAW;UACzBzG,UAAU,EAAEykB,SAAS;UACrBnL,mBAAmB,EAAEyM,kBAAkB;UACvCxM,kBAAkB,EAAEyM,iBAAiB;UACrC/lB,aAAa,EAAEgmB;SAChB;OACF,CAAC,OAAO9hB,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;QACnE,OAAO;UACLpH,aAAa,EAAE,CAAC;UAChBC,YAAY,EAAE,CAAC;UACfgD,UAAU,EAAE,CAAC;UACbsZ,mBAAmB,EAAE,CAAC;UACtBC,kBAAkB,EAAE,CAAC;UACrBtZ,aAAa,EAAE;SAChB;;IACF;EACH;EAEA;EAEMkZ,4BAA4BA,CAACna,KAAW,EAAE/J,QAAgB;IAAA,IAAAkiD,OAAA;IAAA,OAAAvyC,4JAAA;MAC9D,IAAI;QACF,MAAM+yB,UAAU,GAAGwf,OAAI,CAACzzC,qBAAqB,CAAC1E,KAAK,CAAC;QACpD,MAAM44B,QAAQ,GAAGuf,OAAI,CAACvzC,mBAAmB,CAAC5E,KAAK,CAAC;QAEhD;QACA,MAAM;UAAEsH,IAAI,EAAEnF,WAAW;UAAEgD;QAAK,CAAE,SAASgzC,OAAI,CAACxN,QAAQ,CACrDjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBijC,GAAG,CAAC,OAAO,EAAEif,OAAI,CAACxkB,0BAA0B,CAACgF,UAAU,CAAC,CAAC,CACzDQ,GAAG,CAAC,OAAO,EAAEgf,OAAI,CAACxkB,0BAA0B,CAACiF,QAAQ,CAAC,CAAC,CACvDwf,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC,CACrBtL,KAAK,CAAC,QAAQ,CAAC;QAElB,IAAI3nC,KAAK,EAAE,MAAMA,KAAK;QAEtB;QACA,MAAM2U,iBAAiB,GAAG3X,WAAW;QAErC;QACA,MAAM;UAAEmF,IAAI,EAAE2wC,eAAe;UAAE9yC,KAAK,EAAE+yC;QAAgB,CAAE,SAASC,OAAI,CAACxN,QAAQ,CAC3EjzB,IAAI,CAAC,kBAAkB,CAAC,CACxBshB,MAAM,CAAC,yBAAyB,CAAC,CACjCC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBgjC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC,CACpBC,GAAG,CAAC,OAAO,EAAEif,OAAI,CAACxkB,0BAA0B,CAACgF,UAAU,CAAC,CAAC,CACzDQ,GAAG,CAAC,OAAO,EAAEgf,OAAI,CAACxkB,0BAA0B,CAACiF,QAAQ,CAAC,CAAC;QAE1D,IAAIsf,gBAAgB,EAAE;UACpBhwC,OAAO,CAACof,IAAI,CAAC,uCAAuC,EAAE4wB,gBAAgB,CAAC;;QAGzE;QACA,MAAM9zB,cAAc,GAAG,IAAI7Q,GAAG,EAAE;QAChC,CAAC0kC,eAAe,IAAI,EAAE,EAAE3nC,OAAO,CAAC2V,UAAU,IAAG;UAC3C,IAAIA,UAAU,CAAC7lB,MAAM,IACjB6lB,UAAU,CAAC7lB,MAAM,CAACvN,QAAQ,CAAC,oBAAoB,CAAC,IAChDozB,UAAU,CAACuoB,SAAS,EAAE;YACxBpqB,cAAc,CAACtL,GAAG,CAACmN,UAAU,CAACuoB,SAAS,CAAC;;QAE5C,CAAC,CAAC;QAEF,IAAI10B,iBAAiB,CAAC7e,MAAM,KAAK,CAAC,EAAE;UAClC,OAAO,EAAE;;QAGX;QACA;QACA,MAAMo9C,YAAY,GAAGv+B,iBAAiB,CAAC,CAAC;QAExC;QACA,MAAM;UAAExS,IAAI,EAAE+6B,UAAU;UAAEl9B,KAAK,EAAEmzC;QAAW,CAAE,SAASH,OAAI,CAACxN,QAAQ,CACjEjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC;;;SAGP,CAAC,CACDC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBijC,GAAG,CAAC,OAAO,EAAEif,OAAI,CAACxkB,0BAA0B,CAACgF,UAAU,CAAC,CAAC,CACzDQ,GAAG,CAAC,OAAO,EAAEgf,OAAI,CAACxkB,0BAA0B,CAACiF,QAAQ,CAAC,CAAC,CACvD2f,EAAE,CAAC,QAAQ,EAAEF,YAAY,CAACttC,GAAG,CAACK,CAAC,IAAIA,CAAC,CAACpT,MAAM,CAAC,CAAC;QAEhD,IAAIsgD,WAAW,EAAE;UACfpwC,OAAO,CAACof,IAAI,CAAC,kCAAkC,EAAEgxB,WAAW,CAAC;;QAG/D;QACA,MAAME,eAAe,GAAG,IAAInhC,GAAG,EAAE;QACjC,CAACgrB,UAAU,IAAI,EAAE,EAAE/xB,OAAO,CAACgF,KAAK,IAAG;UACjC,IAAI,CAACkjC,eAAe,CAAClhC,GAAG,CAAChC,KAAK,CAACtd,MAAM,CAAC,EAAE;YACtCwgD,eAAe,CAACjhC,GAAG,CAACjC,KAAK,CAACtd,MAAM,EAAE,IAAIqf,GAAG,EAAE,CAAC;;UAG9C,MAAMw/B,SAAS,GAAG2B,eAAe,CAAC5kC,GAAG,CAAC0B,KAAK,CAACtd,MAAM,CAAC;UACnDsd,KAAK,CAACikB,YAAY,CAACjpB,OAAO,CAAC4lC,OAAO,IAAG;YACnC,MAAMp/C,MAAM,GAAGuP,QAAQ,CAAC6vC,OAAO,CAACp/C,MAAM,CAAC;YACvC,MAAM+D,KAAK,GAAG2Y,UAAU,CAAC0iC,OAAO,CAACr7C,KAAK,IAAI,CAAC,CAAC;YAE5C,IAAIg8C,SAAS,CAACv/B,GAAG,CAACxgB,MAAM,CAAC,EAAE;cACzB+/C,SAAS,CAACt/B,GAAG,CAACzgB,MAAM,EAAE+/C,SAAS,CAACjjC,GAAG,CAAC9c,MAAM,CAAC,GAAG+D,KAAK,CAAC;aACrD,MAAM;cACLg8C,SAAS,CAACt/B,GAAG,CAACzgB,MAAM,EAAE+D,KAAK,CAAC;;UAEhC,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF;QACA,MAAM49C,iBAAiB,GAAGJ,YAAY,CAACttC,GAAG,CAAC/S,MAAM,IAAG;UAClD,MAAMQ,aAAa,GAAG6N,QAAQ,CAACrO,MAAM,CAACtB,cAAc,CAAC;UACrD,MAAMgC,mBAAmB,GAAG8a,UAAU,CAACxb,MAAM,CAAC7B,oBAAoB,IAAI,EAAE,CAAC;UAEzE;UACA,IAAIuiD,6BAA6B,GAAG,CAAC;UACrC,IAAIF,eAAe,CAAClhC,GAAG,CAACtf,MAAM,CAACA,MAAM,CAAC,EAAE;YACtC0gD,6BAA6B,GAAGF,eAAe,CAAC5kC,GAAG,CAAC5b,MAAM,CAACA,MAAM,CAAC,CAAC4b,GAAG,CAACpb,aAAa,CAAC,IAAI,CAAC;;UAG5F;UACA,MAAMmgD,mBAAmB,GAAGD,6BAA6B,GAAGhgD,mBAAmB;UAC/E,MAAMkgD,aAAa,GAAGplC,UAAU,CAACxb,MAAM,CAACgG,YAAY,IAAI,GAAG,CAAC;UAE5D,OAAO;YACL,GAAGhG,MAAM;YACT0H,gCAAgC,EAAEg5C,6BAA6B;YAC/D15C,qBAAqB,EAAE25C,mBAAmB;YAC1CxiD,oBAAoB,EAAEuC,mBAAmB;YACzC8G,SAAS,EAAE4kB,cAAc,CAAC9M,GAAG,CAACtf,MAAM,CAAC+N,EAAE,CAAC;YACxC;YACA9G,eAAe,EAAE;cACf45C,iBAAiB,EAAEH,6BAA6B;cAChDrtC,MAAM,EAAE3S,mBAAmB;cAC3BogD,eAAe,EAAEH,mBAAmB;cACpCI,cAAc,EAAEH,aAAa;cAC7B15C,UAAU,EAAEsW,IAAI,CAACgG,GAAG,CAACm9B,mBAAmB,GAAGC,aAAa,CAAC;cACzDj5C,QAAQ,EAAE6V,IAAI,CAACgG,GAAG,CAACm9B,mBAAmB,GAAGC,aAAa,CAAC,GAAG,IAAI,CAAC;;WAElE;QACH,CAAC,CAAC;QAEF,OAAOH,iBAAiB;OACzB,CAAC,OAAOtzC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;QACpE,OAAO,EAAE;;IACV;EACH;EAEA;EAEMkV,mBAAmBA,CAACra,KAAW,EAAE/J,QAAgB;IAAA,IAAA+iD,OAAA;IAAA,OAAApzC,4JAAA;MACrD,IAAI;QACF,MAAMsN,QAAQ,GAAG8lC,OAAI,CAACzyC,yBAAyB,CAACvG,KAAK,CAAC;QAEtD,MAAM;UAAEsH,IAAI;UAAEnC;QAAK,CAAE,SAAS6zC,OAAI,CAACrO,QAAQ,CACxCjzB,IAAI,CAAC,iBAAiB,CAAC,CACvBshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,OAAO,EAAE/lB,QAAQ,CAAC,CACrB+lB,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBg2C,MAAM,EAAE;QAEX,IAAI9mC,KAAK,EAAE;UACT,IAAIA,KAAK,CAACgC,IAAI,KAAK,UAAU,EAAE;YAC7B;YACA,OAAO,IAAI;;UAEb,MAAMhC,KAAK;;QAGb,OAAO;UACLY,EAAE,EAAEuB,IAAI,CAACvB,EAAE;UACX/F,KAAK,EAAE,IAAI+D,IAAI,CAACuD,IAAI,CAACtH,KAAK,CAAC;UAC3BkmB,SAAS,EAAE5e,IAAI,CAACiwC,UAAU;UAC1BthD,QAAQ,EAAEqR,IAAI,CAACrR,QAAQ;UACvBgB,YAAY,EAAEuc,UAAU,CAAClM,IAAI,CAACvJ,aAAa,CAAC;UAC5C0J,WAAW,EAAE+L,UAAU,CAAClM,IAAI,CAACtJ,YAAY,CAAC;UAC1Cqd,IAAI,EAAE7H,UAAU,CAAClM,IAAI,CAAC+T,IAAI,CAAC;UAC3BC,iBAAiB,EAAE9H,UAAU,CAAClM,IAAI,CAACiU,kBAAkB,CAAC;UACtDrc,UAAU,EAAEsU,UAAU,CAAClM,IAAI,CAACpI,UAAU,CAAC;UACvCgd,KAAK,EAAE5U,IAAI,CAAC4U,KAAK;UACjBT,aAAa,EAAEnU,IAAI,CAACsU,cAAc;UAClCF,YAAY,EAAEpU,IAAI,CAACuU,aAAa;UAChCF,YAAY,EAAErU,IAAI,CAACwU,aAAa;UAChCrgB,SAAS,EAAE,IAAIsI,IAAI,CAACuD,IAAI,CAACsT,UAAU;SACpC;OACF,CAAC,OAAOzV,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,OAAO,IAAI;;IACZ;EACH;EAEMiiB,qBAAqBA,CAAC1M,MAA4D;IAAA,IAAAu+B,OAAA;IAAA,OAAArzC,4JAAA;MACtF,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAAS8zC,OAAI,CAACtO,QAAQ,CACxCjzB,IAAI,CAAC,iBAAiB,CAAC,CACvB01B,MAAM,CAAC;UACNptC,KAAK,EAAEi5C,OAAI,CAAC1yC,yBAAyB,CAACmU,MAAM,CAAC1a,KAAM,CAAC;UACpDu3C,UAAU,EAAE78B,MAAM,CAACwL,SAAS;UAC5BjwB,QAAQ,EAAEykB,MAAM,CAACzkB,QAAQ;UACzB8H,aAAa,EAAE2c,MAAM,CAACzjB,YAAY;UAClC+G,YAAY,EAAE0c,MAAM,CAACjT,WAAW;UAChC4T,IAAI,EAAEX,MAAM,CAACW,IAAI;UACjBE,kBAAkB,EAAEb,MAAM,CAACY,iBAAiB;UAC5Cpc,UAAU,EAAEwb,MAAM,CAACxb,UAAU;UAC7Bgd,KAAK,EAAExB,MAAM,CAACwB,KAAK;UACnBN,cAAc,EAAElB,MAAM,CAACe,aAAa;UACpCI,aAAa,EAAEnB,MAAM,CAACgB,YAAY;UAClCI,aAAa,EAAEpB,MAAM,CAACiB;SACvB,CAAC;QAEJ,IAAIxW,KAAK,EAAE,MAAMA,KAAK;OACvB,CAAC,OAAOA,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzD,MAAMA,KAAK;;IACZ;EACH;EAEA;EAEMqgB,oBAAoBA,CAACxlB,KAAW,EAAE/J,QAAgB,EAAE+B,MAAc;IAAA,IAAAkhD,OAAA;IAAA,OAAAtzC,4JAAA;MACtE,IAAI;QACF,MAAMsN,QAAQ,GAAGgmC,OAAI,CAAC3yC,yBAAyB,CAACvG,KAAK,CAAC;QAEtD;QACA,MAAM;UAAEsH,IAAI;UAAEnC;QAAK,CAAE,SAAS+zC,OAAI,CAACvO,QAAQ,CACxCyD,GAAG,CAAC,wBAAwB,EAAE;UAC7Ba,OAAO,EAAE/7B,QAAQ;UACjBo7B,UAAU,EAAEr4C,QAAQ;UACpBkjD,QAAQ,EAAEnhD;SACX,CAAC;QAEJ,IAAImN,KAAK,EAAE,MAAMA,KAAK;QAEtB,IAAImC,IAAI,IAAIA,IAAI,CAACrM,MAAM,GAAG,CAAC,EAAE;UAC3B,MAAM8qB,SAAS,GAAGze,IAAI,CAAC,CAAC,CAAC;UACzB,OAAO;YACL9O,aAAa,EAAEutB,SAAS,CAACrvB,cAAc;YACvC2U,MAAM,EAAEhF,QAAQ,CAAC0f,SAAS,CAAC5vB,oBAAoB,IAAI,IAAI,CAAC;YACxDqtB,cAAc,EAAEhQ,UAAU,CAACuS,SAAS,CAACqzB,gBAAgB,IAAI,GAAG,CAAC;YAC7DniD,YAAY,EAAEuc,UAAU,CAACuS,SAAS,CAAChoB,aAAa,IAAI,GAAG,CAAC;YACxD0J,WAAW,EAAE+L,UAAU,CAACuS,SAAS,CAAC/nB,YAAY,IAAI,GAAG,CAAC;YACtDynB,SAAS,EAAEjS,UAAU,CAACuS,SAAS,CAAC/kB,UAAU,IAAI,GAAG;WAClD;;QAGH,OAAO+S,SAAS;OACjB,CAAC,OAAO5O,KAAK,EAAE;QACd+C,OAAO,CAACof,IAAI,CAAC,uCAAuCtvB,MAAM,GAAG,EAAEmN,KAAK,CAAC;QACrE;QACA,aAAa+zC,OAAI,CAACG,0BAA0B,CAACr5C,KAAK,EAAE/J,QAAQ,EAAE+B,MAAM,CAAC;;IACtE;EACH;EAEcqhD,0BAA0BA,CAACr5C,KAAW,EAAE/J,QAAgB,EAAE+B,MAAc;IAAA,IAAAshD,OAAA;IAAA,OAAA1zC,4JAAA;MACpF,IAAI;QACF,MAAMY,QAAQ,GAAG,GAAG8yC,OAAI,CAAC/yC,yBAAyB,CAACvG,KAAK,CAAC,IAAIhI,MAAM,EAAE;QAErE,MAAM;UAAEsP,IAAI;UAAEnC;QAAK,CAAE,SAASm0C,OAAI,CAAC3O,QAAQ,CACxCjzB,IAAI,CAAC,SAAS,CAAC,CACfshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,IAAI,EAAEzyB,QAAQ,CAAC,CAClByyB,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBg2C,MAAM,EAAE;QAEX,IAAI9mC,KAAK,IAAI,CAACmC,IAAI,EAAE,OAAOyM,SAAS;QAEpC,IAAIyP,cAAc,GAAG,CAAC;QAEtB,IAAIlc,IAAI,CAAC5Q,cAAc,EAAE;UACvB;UACA,MAAM;YAAE4Q,IAAI,EAAEiyC,SAAS;YAAEp0C,KAAK,EAAEq0C;UAAU,CAAE,SAASF,OAAI,CAAC3O,QAAQ,CAC/DjzB,IAAI,CAAC,OAAO,CAAC,CACbshB,MAAM,CAAC;;WAEP,CAAC,CACDC,EAAE,CAAC,UAAU,EAAEhjC,QAAQ,CAAC,CACxBgjC,EAAE,CAAC,QAAQ,EAAEjhC,MAAM,CAAC,CACpBihC,EAAE,CAAC,qBAAqB,EAAE5yB,QAAQ,CAACiB,IAAI,CAAC5Q,cAAc,CAAC,CAAC,CACxDwiC,GAAG,CAAC,OAAO,EAAEogB,OAAI,CAAC3lB,0BAA0B,CAAC2lB,OAAI,CAAC50C,qBAAqB,CAAC1E,KAAK,CAAC,CAAC,CAAC,CAChFm5B,GAAG,CAAC,OAAO,EAAEmgB,OAAI,CAAC3lB,0BAA0B,CAAC2lB,OAAI,CAAC10C,mBAAmB,CAAC5E,KAAK,CAAC,CAAC,CAAC;UAEjF,IAAI,CAACw5C,UAAU,IAAID,SAAS,EAAE;YAC5B/1B,cAAc,GAAG+1B,SAAS,CAAC9uC,MAAM,CAAC,CAACoK,GAAG,EAAEhL,IAAI,KAC1CgL,GAAG,GAAG,CAAChL,IAAI,CAAC0vB,YAAY,IAAI,EAAE,EAAE9uB,MAAM,CAAC,CAACgvC,SAAiB,EAAE1vC,MAAW,KACpE0vC,SAAS,GAAGjmC,UAAU,CAACzJ,MAAM,CAAClP,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;;;QAIpD,OAAO;UACLrC,aAAa,EAAE8O,IAAI,CAAC5Q,cAAc;UAClC2U,MAAM,EAAEhF,QAAQ,CAACiB,IAAI,CAACnR,oBAAoB,IAAI,IAAI,CAAC;UACnDqtB,cAAc;UACdvsB,YAAY,EAAEuc,UAAU,CAAClM,IAAI,CAACvJ,aAAa,IAAI,GAAG,CAAC;UACnD0J,WAAW,EAAE+L,UAAU,CAAClM,IAAI,CAACtJ,YAAY,IAAI,GAAG,CAAC;UACjDynB,SAAS,EAAEjS,UAAU,CAAClM,IAAI,CAACrJ,aAAa,IAAI,GAAG;SAChD;OACF,CAAC,OAAOkH,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5D,OAAO4O,SAAS;;IACjB;EACH;EAEA;EAEA;;;EAGM2lC,cAAcA,CAAC92C,IAAY;IAAA,IAAA+2C,OAAA;IAAA,OAAA/zC,4JAAA;MAC/B,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAASw0C,OAAI,CAAChP,QAAQ,CACxCjzB,IAAI,CAAC,UAAU,CAAC,CAChBshB,MAAM,CAAC,GAAG,CAAC,CACXC,EAAE,CAAC,MAAM,EAAEr2B,IAAI,CAAC,CAChBq2B,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC;QAErB,IAAI9zB,KAAK,EAAE,MAAMA,KAAK;QACtB,OAAOmC,IAAI,IAAI,EAAE;OAClB,CAAC,OAAOnC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1D,OAAO,EAAE;;IACV;EACH;EAEA;;;EAGMkgB,yBAAyBA,CAACrlB,KAAW;IAAA,IAAA45C,OAAA;IAAA,OAAAh0C,4JAAA;MACzC,IAAI;QACF,MAAMsN,QAAQ,GAAG0mC,OAAI,CAACrzC,yBAAyB,CAACvG,KAAK,CAAC;QAEtD,MAAM;UAAEsH,IAAI;UAAEnC;QAAK,CAAE,SAASy0C,OAAI,CAACjP,QAAQ,CACxCjzB,IAAI,CAAC,kBAAkB,CAAC,CACxBshB,MAAM,CAAC,WAAW,CAAC,CACnB8W,IAAI,CAAC,WAAW,EAAE,GAAG58B,QAAQ,IAAI,CAAC,CAClC6kC,GAAG,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC;QAE/B,IAAI5yC,KAAK,EAAE,MAAMA,KAAK;QAEtB,OAAO,CAAC,GAAG,IAAIoO,GAAG,CAAC,CAACjM,IAAI,IAAI,EAAE,EAAEyD,GAAG,CAAC+pB,IAAI,IAAIA,IAAI,CAAC0Z,SAAS,CAAC,CAAC,CAAC;OAC9D,CAAC,OAAOrpC,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5D,OAAO,EAAE;;IACV;EACH;EAEA;;;EAGMsT,2BAA2BA,CAAA;IAAA,IAAAohC,OAAA;IAAA,OAAAj0C,4JAAA;MAC/B,IAAI;QACF,MAAM;UAAE0B,IAAI;UAAEnC;QAAK,CAAE,SAAS00C,OAAI,CAAClP,QAAQ,CACxCjzB,IAAI,CAAC,UAAU,CAAC,CAChBshB,MAAM,CAAC,UAAU,CAAC,CAClBC,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,CACtBA,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,CAClB8e,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC;QAE9B,IAAI5yC,KAAK,EAAE,MAAMA,KAAK;QAEtB,MAAMjN,UAAU,GAAG,CAAC,GAAG,IAAIqb,GAAG,CAAC,CAACjM,IAAI,IAAI,EAAE,EAAEyD,GAAG,CAAC+pB,IAAI,IAAIA,IAAI,CAAC7+B,QAAQ,CAAC,CAAC,CAAC;QACxE,OAAOiC,UAAU,CAACub,MAAM,CAACrI,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAAC+Q,IAAI,EAAE,KAAK,EAAE,CAAC;OACpD,CAAC,OAAOhX,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,OAAO,EAAE;;IACV;EACH;EAEA;;;EAGM8T,6BAA6BA,CAAChjB,QAAgB,EAAE+J,KAAW;IAAA,IAAA85C,OAAA;IAAA,OAAAl0C,4JAAA;MAC/D,IAAI;QACF;QACA,MAAMiU,WAAW,SAASigC,OAAI,CAAC5/B,yBAAyB,CAACla,KAAK,EAAE/J,QAAQ,CAAC;QAEzE;QACA,MAAM6jB,iBAAiB,SAASggC,OAAI,CAAC3/B,4BAA4B,CAACna,KAAK,EAAE/J,QAAQ,CAAC;QAElF;QACA,MAAM8jB,eAAe,SAAS+/B,OAAI,CAAC1/B,sBAAsB,CAACpa,KAAK,EAAE/J,QAAQ,CAAC;QAE1E,OAAO;UACL4jB,WAAW;UACXC,iBAAiB;UACjBC;SACD;OACF,CAAC,OAAO5U,KAAK,EAAE;QACd+C,OAAO,CAAC/C,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QAC/D,MAAMA,KAAK;;IACZ;EACH;;;uBAxiGWjS,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAitC,OAAA,EAAfjtC,eAAe,CAAAktC,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA;;;;;;;;;;;;;;;ACVb,MAAM8J,WAAW,GAAG;EACzB4P,UAAU,EAAE,KAAK;EAChBpP,QAAQ,EAAE;IACT/3C,GAAG,EAAE,0CAA0C;IAC/C;IACA;IACAkhB,GAAG,EAAE,6NAA6N,CAAC;;CAEtO,C;;;;;;;;;;;;;;ACP4C;AAE7CkmC,sEAAA,EAAwB,CAACE,eAAe,CAAC/kD,sDAAS,CAAC,C","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/cierre-caja/cierre-caja.component.ts","./src/app/components/cierre-caja/cierre-caja.component.html","./src/app/components/login/login.component.ts","./src/app/components/resumen-sorteos/resumen-sorteos.component.ts","./src/app/components/resumen-sorteos/resumen-sorteos.component.html","./src/app/components/sucursal/sucursal.component.ts","./src/app/components/sucursal/sucursal.component.html","./src/app/components/user-management/user-management.component.ts","./src/app/components/user-management/user-management.component.html","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/guards/sucursal.guard.ts","./src/app/models/interfaces.ts","./src/app/services/export.service.ts","./src/app/services/notification.service.ts","./src/app/services/print.service.ts","./src/app/services/sorteo.service.ts","./src/app/services/supabase.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SupabaseService } from './services/supabase.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"app-container\">\n      <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: [`\n    .app-container {\n      min-height: 100vh;\n      background-color: #f5f5f5;\n    }\n  `]\n})\nexport class AppComponent implements OnInit {\n  \n  constructor(\n    private supabaseService: SupabaseService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // Verificar estado de autenticación al iniciar\n    this.supabaseService.currentUser$.subscribe(user => {\n      if (!user && !this.router.url.includes('login')) {\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SucursalComponent } from './components/sucursal/sucursal.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { UserManagementComponent } from './components/user-management/user-management.component';\nimport { ResumenSorteosComponent } from './components/resumen-sorteos/resumen-sorteos.component';\nimport { CierreCajaComponent } from './components/cierre-caja/cierre-caja.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminGuard } from './guards/admin.guard';\nimport { SucursalGuard } from './guards/sucursal.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'sucursal', component: SucursalComponent, canActivate: [AuthGuard] },\n  { path: 'cierre-caja', component: CierreCajaComponent, canActivate: [AuthGuard, SucursalGuard] },\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard, AdminGuard] },\n  { path: 'admin/users', component: UserManagementComponent, canActivate: [AuthGuard, AdminGuard] },\n  { path: '**', redirectTo: '/login' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SucursalComponent,\n    AdminComponent,\n    UserManagementComponent,\n    CierreCajaComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    ResumenSorteosComponent\n  ],\n  providers: [ AuthGuard, AdminGuard, SucursalGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { startOfDay, endOfDay } from 'date-fns';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { ExportService, ReportData } from '../../services/export.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail, Sorteo, SORTEO_SCHEDULES, SucursalFactor } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  currentUser: any = null;\r\n  sorteos = SORTEO_SCHEDULES; // Usar directamente las interfaces en lugar de base de datos\r\n  sales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  sorteosData: { [key: string]: Sorteo } = {};\r\n  winningNumbers: { [key: string]: string } = {};\r\n  factorMultiplicador: { [key: string]: number } = {};\r\n  selectedSorteoFilter: string = '';\r\n  isLoading: boolean = false;\r\n  isLoadingFilters: boolean = false; // Loading específico para filtros\r\n  selectedDate: string = '';\r\n\r\n\r\n  // Nuevas propiedades para las mejoras\r\n  fechaDesde: string = '';\r\n  fechaHasta: string = '';\r\n  users: any[] = [];\r\n  showUserModal: boolean = false;\r\n  editingUser: any = null;\r\n  userFormData: any = {\r\n    email: '',\r\n    password: '',\r\n    role: 'sucursal',\r\n    sucursal: '',\r\n    active: true\r\n  };\r\n\r\n  // Propiedades para modal de detalles de venta\r\n  showSaleDetailModal: boolean = false;\r\n  selectedSaleForDetail: Sale | null = null;\r\n  selectedSaleDetails: SaleDetail[] = [];\r\n\r\n  // Propiedades para gestión de sorteos\r\n  showSorteoModal: boolean = false;\r\n  editingSorteo: any = null;\r\n\r\n  sorteoSchedules: SorteoSchedule[] = [...SORTEO_SCHEDULES];\r\n\r\n  // Propiedades para cambio de contraseña\r\n  showPasswordModal: boolean = false;\r\n  selectedUserForPassword: any = null;\r\n  newPassword: string = '';\r\n  confirmPassword: string = '';\r\n\r\n  // Propiedades para acordeón\r\n  showSorteosSection: boolean = false;\r\n  showUsersSection: boolean = false;\r\n\r\n  // Propiedades para modal de factores por sucursal\r\n  showFactorsModal: boolean = false;\r\n  sucursalesFactores: SucursalFactor[] = [];\r\n  factoresPorSucursal: { [sucursal: string]: number } = {};\r\n  currentSorteoForFactors: { sorteo: SorteoSchedule, winningNumber: string } | null = null;\r\n\r\n  // Propiedades optimizadas para caché de datos\r\n  private cachedDashboardData: any = null;\r\n  private cachedNumbersData: any = null;\r\n  private lastDataFetch: Date | null = null;\r\n  private cacheValidTime = 30000; // 30 segundos de caché\r\n\r\n  // Propiedades para resumen de cierre por sucursales\r\n  showResumenModal: boolean = false;\r\n  resumenSucursales: any[] = [];\r\n  currentSorteoForResumen: string = '';\r\n\r\n  // Propiedades para cierre de caja por sucursal (nueva funcionalidad)\r\n  showCierreCajaModal: boolean = false;\r\n  selectedSucursalForCierre: string = '';\r\n  fechaCierreSeleccionada: Date = new Date(); // Se inicializará con fecha de Honduras en constructor\r\n  resumenCajaSucursal: any = null;\r\n  sorteosPendientesPagoSucursal: any[] = [];\r\n  movimientosCajaSucursal: any[] = [];\r\n  sucursalesDisponibles: string[] = [];\r\n  loadingCierreCaja: boolean = false;\r\n  cierreExistenteSucursal: any = null; // Para almacenar el cierre si ya existe\r\n\r\n  // Cache para optimización\r\n  private sucursalesCacheExpiry: Date | null = null;\r\n  private readonly SUCURSALES_CACHE_DURATION = 5 * 60 * 1000; // 5 minutos\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private exportService: ExportService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    // Inicializar fechas usando timezone de Honduras para filtros\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    this.selectedDate = this.supabaseService.formatDateTimeLocalHonduras(hondurasToday).split('T')[0];\r\n\r\n    // Inicializar fecha de cierre con fecha actual de Honduras\r\n    this.fechaCierreSeleccionada = hondurasToday;\r\n\r\n    // FORZAR CIERRE DE TODOS LOS MODALES AL INICIALIZAR\r\n    this.showSaleDetailModal = false;\r\n    this.showUserModal = false;\r\n    this.showPasswordModal = false;\r\n    this.showFactorsModal = false;\r\n    this.showResumenModal = false;\r\n\r\n    // Recuperar filtros de localStorage o usar valores por defecto\r\n    this.loadFilterState();\r\n\r\n    // Si no hay filtros guardados, usar fecha de Honduras para inicializar\r\n    if (!this.fechaDesde || !this.fechaHasta) {\r\n      const fechaInicio = this.supabaseService.getStartOfDayHonduras(hondurasToday);\r\n      const fechaFin = this.supabaseService.getEndOfDayHonduras(hondurasToday);\r\n\r\n      this.fechaDesde = this.supabaseService.formatDateTimeLocalHonduras(fechaInicio);\r\n      this.fechaHasta = this.supabaseService.formatDateTimeLocalHonduras(fechaFin);\r\n    }\r\n\r\n  }\r\n\r\n  // Método para cargar estado de filtros desde localStorage\r\n  private loadFilterState(): void {\r\n    try {\r\n      const savedFilters = localStorage.getItem('admin-filters');\r\n      if (savedFilters) {\r\n        const filters = JSON.parse(savedFilters);\r\n        this.fechaDesde = filters.fechaDesde || '';\r\n        this.fechaHasta = filters.fechaHasta || '';\r\n        this.selectedSorteoFilter = filters.selectedSorteoFilter || '';\r\n        this.selectedDate = filters.selectedDate || '';\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para guardar estado de filtros en localStorage\r\n  private saveFilterState(): void {\r\n    try {\r\n      const filters = {\r\n        fechaDesde: this.fechaDesde,\r\n        fechaHasta: this.fechaHasta,\r\n        selectedSorteoFilter: this.selectedSorteoFilter,\r\n        selectedDate: this.selectedDate\r\n      };\r\n      localStorage.setItem('admin-filters', JSON.stringify(filters));\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'admin') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    // Cargar datos iniciales\r\n    this.loadSales();\r\n    this.loadSorteosData(); // Cargar datos de sorteos existentes\r\n    this.initializeUsers();\r\n    this.loadSorteoSchedules(); // Ya no es async\r\n  }\r\n\r\n  async initializeUsers(): Promise<void> {\r\n    try {\r\n      // Inicializar la tabla de perfiles\r\n      await this.supabaseService.initializeProfilesTable();\r\n      // Cargar usuarios\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      // Si falla, mostramos usuarios por defecto para que funcione la interfaz\r\n      this.users = [\r\n        {\r\n          id: '1',\r\n          email: 'admin@loteria.com',\r\n          role: 'admin',\r\n          sucursal: '',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '2',\r\n          email: 'sucursal1@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 1',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '3',\r\n          email: 'sucursal2@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 2',\r\n          active: false,\r\n          createdAt: new Date()\r\n        }\r\n      ];\r\n      this.notificationService.showError('No se pudieron cargar usuarios de la base de datos. Mostrando datos de ejemplo.');\r\n    }\r\n  }\r\n\r\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\r\n    const now = this.supabaseService.getHondurasDateTime();\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const closeTime = new Date(now);\r\n    closeTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n\r\n\r\n    return now <= closeTime;\r\n  }\r\n\r\n  getSorteoData(sorteo: SorteoSchedule): Sorteo | undefined {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    const todayString = this.supabaseService.formatDateOnlyForSupabase(hondurasToday);\r\n    const sorteoId = `${todayString}-${sorteo.name}`;\r\n\r\n\r\n    // SOLO retornar datos reales de la BD, NO crear objetos temporales\r\n    return this.sorteosData[sorteoId];\r\n  }\r\n\r\n  // Método para verificar si el sorteo está cerrado basado en datos guardados en BD\r\n  isSorteoCerrado(sorteo: SorteoSchedule): boolean {\r\n    const sorteoData = this.getSorteoData(sorteo);\r\n    // Solo considerar cerrado si está marcado como cerrado en BD O si tiene numeroGanador en BD\r\n    return !!(sorteoData?.cerrado || sorteoData?.numeroGanador);\r\n  }\r\n\r\n  // Método para verificar si hay un número ganador guardado (no temporal)\r\n  hasSavedWinner(sorteo: SorteoSchedule): boolean {\r\n    const sorteoData = this.getSorteoData(sorteo);\r\n    // Solo considerar guardado si hay datos REALES de BD con número ganador\r\n    return !!(sorteoData?.numeroGanador);\r\n  }\r\n\r\n  // Método para verificar si hay datos temporales en el formulario\r\n  hasTemporaryWinnerData(sorteo: SorteoSchedule): boolean {\r\n    return !!(this.winningNumbers[sorteo.name] && !this.hasSavedWinner(sorteo));\r\n  }\r\n\r\n  // Método para cargar un sorteo específico por ID y actualizar la UI\r\n  async loadSorteoById(sorteoId: string): Promise<void> {\r\n    try {\r\n\r\n      const sorteo = await this.supabaseService.getSorteoById(sorteoId);\r\n\r\n      if (sorteo) {\r\n        // Actualizar en sorteosData\r\n        this.sorteosData[sorteoId] = sorteo;\r\n\r\n        // También actualizar el número ganador local si está disponible\r\n        const sorteoName = sorteo.sorteo;\r\n        if (sorteo.numeroGanador) {\r\n          this.winningNumbers[sorteoName] = sorteo.numeroGanador;\r\n        }\r\n\r\n        // Forzar actualización de la vista\r\n        this.cdr.detectChanges();\r\n      } else {\r\n      }\r\n    } catch (error: any) {\r\n\r\n      // Si es error de RLS, intentar método alternativo\r\n      if (error?.isRLSError || error?.code === '42501') {\r\n        try {\r\n          const simpleData = await this.supabaseService.getSorteoByIdSimple(sorteoId);\r\n          if (simpleData && simpleData.length > 0) {\r\n            const data = simpleData[0];\r\n\r\n            // Crear objeto Sorteo desde datos simples\r\n            const sorteo: Sorteo = {\r\n              id: sorteoId,\r\n              fecha: data.fecha ? new Date(data.fecha) : new Date(),\r\n              sorteo: data.sorteo || sorteoId.split('-')[1],\r\n              horaCierre: data.hora_cierre ? new Date(data.hora_cierre) : new Date(),\r\n              numeroGanador: data.numero_ganador || '',\r\n              factorMultiplicador: data.factor_multiplicador || 0,\r\n              totalVendido: data.total_vendido || 0,\r\n              totalPagado: data.total_pagado || 0,\r\n              gananciaNeta: data.ganancia_neta || 0,\r\n              cerrado: data.cerrado || false\r\n            };\r\n\r\n            // Actualizar en sorteosData\r\n            this.sorteosData[sorteoId] = sorteo;\r\n\r\n            // Actualizar número ganador local\r\n            if (sorteo.numeroGanador) {\r\n              this.winningNumbers[sorteo.sorteo] = sorteo.numeroGanador;\r\n            }\r\n\r\n            this.cdr.detectChanges();\r\n          }\r\n        } catch (fallbackError) {\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Método para refrescar todos los sorteos del día actual\r\n  async refreshTodaysSorteos(): Promise<void> {\r\n    try {\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      const todayString = this.supabaseService.formatDateOnlyForSupabase(hondurasToday);\r\n\r\n      for (const sorteo of this.sorteoSchedules) {\r\n        const sorteoId = `${todayString}-${sorteo.name}`;\r\n        await this.loadSorteoById(sorteoId);\r\n      }\r\n\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  async loadSales(): Promise<void> {\r\n    try {\r\n      // No cambiar isLoading aquí si ya estamos en modo filtros\r\n      if (!this.isLoadingFilters) {\r\n        this.isLoading = true;\r\n      }\r\n\r\n      // Limpiar caché cuando se cargan nuevos datos\r\n      this.clearCache();\r\n\r\n      // Si hay filtros de rango de fechas, usar el método de rango optimizado\r\n      if (this.fechaDesde && this.fechaHasta) {\r\n        await this.loadSalesByDateRangeOptimized();\r\n        return;\r\n      }\r\n\r\n      // Determinar fecha para consulta individual\r\n      let fechaParaConsulta: Date;\r\n\r\n      if (this.selectedDate) {\r\n        // Si hay fecha seleccionada, usar esa fecha\r\n        fechaParaConsulta = new Date(this.selectedDate);\r\n      } else {\r\n        // Por defecto, usar hoy\r\n        fechaParaConsulta = this.supabaseService.getHondurasDateTime();\r\n      }\r\n\r\n      console.log('Cargando ventas optimizadas para fecha:', fechaParaConsulta);\r\n\r\n      // Usar método optimizado para una sola fecha\r\n      const optimizedData = await this.supabaseService.getDailyOptimizedData(\r\n        fechaParaConsulta,\r\n        this.selectedSorteoFilter\r\n      );\r\n\r\n      // Asignar datos\r\n      this.sales = optimizedData.sales;\r\n      this.saleDetails = optimizedData.saleDetails;\r\n      this.cachedDashboardData = optimizedData.dashboardData;\r\n      this.lastDataFetch = new Date();\r\n\r\n      console.log('Datos optimizados cargados:', {\r\n        ventas: this.sales.length,\r\n        totalVendido: optimizedData.dashboardData.totalVendido\r\n      });\r\n\r\n      // Forzar detección de cambios\r\n      this.cdr.detectChanges();\r\n\r\n    } catch (error) {\r\n      console.error('Error al cargar ventas optimizadas:', error);\r\n      this.sales = [];\r\n      this.saleDetails = {};\r\n      this.clearCache();\r\n      this.notificationService.showError('Error al cargar las ventas');\r\n    } finally {\r\n      // Solo cambiar isLoading si no estamos en modo filtros\r\n      if (!this.isLoadingFilters) {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Método optimizado para rangos de fechas\r\n  async loadSalesByDateRangeOptimized(): Promise<void> {\r\n    if (!this.fechaDesde || !this.fechaHasta) {\r\n      await this.loadSingleDateSales();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Cargando rango de fechas optimizado:', this.fechaDesde, 'hasta', this.fechaHasta);\r\n\r\n      // Convertir strings de datetime-local a fechas\r\n      const fechaDesdeUtc = this.supabaseService.parseLocalDateTimeToUtc(this.fechaDesde);\r\n      const fechaHastaUtc = this.supabaseService.parseLocalDateTimeToUtc(this.fechaHasta);\r\n\r\n      // Validar fechas\r\n      if (fechaDesdeUtc > fechaHastaUtc) {\r\n        this.notificationService.showError('La fecha desde no puede ser mayor que la fecha hasta');\r\n        this.sales = [];\r\n        this.saleDetails = {};\r\n        return;\r\n      }\r\n\r\n      // Usar método optimizado del servicio\r\n      const optimizedData = await this.supabaseService.getSalesWithDetailsOptimized(\r\n        fechaDesdeUtc,\r\n        fechaHastaUtc,\r\n        this.selectedSorteoFilter\r\n      );\r\n\r\n      // Asignar datos\r\n      this.sales = optimizedData.sales;\r\n      this.saleDetails = optimizedData.saleDetails;\r\n\r\n      // Obtener datos del dashboard para el rango\r\n      const dashboardData = await this.supabaseService.getAdminDashboardData(\r\n        fechaDesdeUtc,\r\n        fechaHastaUtc,\r\n        this.selectedSorteoFilter\r\n      );\r\n\r\n      this.cachedDashboardData = dashboardData;\r\n      this.cachedNumbersData = dashboardData.numerosPorSorteo;\r\n      this.lastDataFetch = new Date();\r\n\r\n      console.log('Datos de rango optimizados cargados:', {\r\n        ventas: this.sales.length,\r\n        totalVendido: dashboardData.totalVendido\r\n      });\r\n\r\n      // Forzar detección de cambios\r\n      this.cdr.detectChanges();\r\n\r\n    } catch (error) {\r\n      console.error('Error al cargar rango optimizado:', error);\r\n      this.notificationService.showError('Error al cargar las ventas: ' + error);\r\n      this.sales = [];\r\n      this.saleDetails = {};\r\n      this.clearCache();\r\n    }\r\n  }\r\n\r\n  // Método para limpiar caché\r\n  private clearCache(): void {\r\n    this.cachedDashboardData = null;\r\n    this.cachedNumbersData = null;\r\n    this.lastDataFetch = null;\r\n  }\r\n\r\n  // Verificar si el caché es válido\r\n  private isCacheValid(): boolean {\r\n    if (!this.lastDataFetch || !this.cachedDashboardData) {\r\n      return false;\r\n    }\r\n    return (new Date().getTime() - this.lastDataFetch.getTime()) < this.cacheValidTime;\r\n  }\r\n\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async setWinningNumber(sorteo: SorteoSchedule): Promise<void> {\r\n    const winningNumber = this.winningNumbers[sorteo.name];\r\n\r\n    if (!winningNumber) {\r\n      this.notificationService.showError('Por favor ingrese un número ganador');\r\n      return;\r\n    }\r\n\r\n    // Verificar autenticación\r\n    if (!this.currentUser) {\r\n      this.notificationService.showError('Usuario no autenticado. Por favor inicie sesión nuevamente.');\r\n      this.router.navigate(['/login']);\r\n      return;\r\n    }\r\n\r\n    // Abrir modal para configurar factores por sucursal\r\n    await this.openFactorsModal(sorteo, winningNumber);\r\n  }\r\n\r\n  private async calculateSorteoResults(sorteo: SorteoSchedule, winningNumber: string, multiplicador: number = 70): Promise<void> {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n\r\n    const sorteoSales = await this.supabaseService.getSalesByDateAndSorteo(hondurasToday, sorteo.name);\r\n\r\n    let totalVendido = 0;\r\n    let totalPagado = 0;\r\n\r\n    for (const sale of sorteoSales) {\r\n      totalVendido += sale.total;\r\n\r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n      for (const detail of details) {\r\n        if (detail.numero.toString() === winningNumber) {\r\n          totalPagado += detail.monto * multiplicador;\r\n        }\r\n      }\r\n    }\r\n\r\n    const gananciaNeta = totalVendido - totalPagado;\r\n\r\n    // Actualizar o crear sorteo\r\n    const [hours, minutes] = sorteo.closeTime.split(':');\r\n    const horaCierre = new Date();\r\n    horaCierre.setHours(parseInt(hours), parseInt(minutes), 0, 0);\r\n\r\n    await this.supabaseService.createOrUpdateSorteo({\r\n      fecha: hondurasToday,\r\n      sorteo: sorteo.name,\r\n      horaCierre,\r\n      numeroGanador: winningNumber,\r\n      factorMultiplicador: multiplicador,\r\n      totalVendido,\r\n      totalPagado,\r\n      gananciaNeta,\r\n      cerrado: true\r\n    });\r\n  }\r\n\r\n  // Método para recargar datos de sorteos desde la base de datos\r\n  private async loadSorteosData(): Promise<void> {\r\n    try {\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n\r\n      // Limpiar datos actuales\r\n      this.sorteosData = {};\r\n\r\n      // Cargar datos de sorteos para cada tipo\r\n      for (const sorteo of this.sorteos) {\r\n        try {\r\n          const sorteoId = `${this.supabaseService.formatDateOnlyForSupabase(hondurasToday)}-${sorteo.name}`;\r\n          const sorteoData = await this.supabaseService.getSorteoById(sorteoId);\r\n\r\n          if (sorteoData) {\r\n            this.sorteosData[sorteoId] = sorteoData; // Usar sorteoId como clave\r\n\r\n            // Sincronizar con variables locales\r\n            this.winningNumbers[sorteo.name] = sorteoData.numeroGanador || '';\r\n            this.factorMultiplicador[sorteo.name] = sorteoData.factorMultiplicador || 70;\r\n          }\r\n        } catch (error: any) {\r\n\r\n          // Si es error 406 o RLS, intentar método alternativo\r\n          if (error?.status === 406 || error?.code === '42501') {\r\n            // Aquí podrías implementar un método alternativo si tienes uno\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      // Forzar actualización de la UI\r\n      this.cdr.detectChanges();\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para actualizar la UI específicamente después de establecer ganador\r\n  private async updateSorteoUI(sorteoName: string, winningNumber: string, multiplicador: number): Promise<void> {\r\n    try {\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      const sorteoId = `${this.supabaseService.formatDateOnlyForSupabase(hondurasToday)}-${sorteoName}`;\r\n\r\n      // Actualizar datos locales inmediatamente\r\n      this.winningNumbers[sorteoName] = winningNumber;\r\n      this.factorMultiplicador[sorteoName] = multiplicador;\r\n\r\n      // Intentar cargar datos actualizados desde la base de datos\r\n      await this.loadSorteoById(sorteoId);\r\n\r\n      // Si el sorteo aún no aparece en sorteosData, crear un objeto temporal\r\n      if (!this.sorteosData[sorteoId]) {\r\n        this.sorteosData[sorteoId] = {\r\n          id: sorteoId,\r\n          fecha: hondurasToday,\r\n          sorteo: sorteoName,\r\n          horaCierre: hondurasToday,\r\n          numeroGanador: winningNumber,\r\n          factorMultiplicador: multiplicador,\r\n          totalVendido: 0,\r\n          totalPagado: 0,\r\n          gananciaNeta: 0,\r\n          cerrado: true\r\n        } as Sorteo;\r\n      }\r\n\r\n      // Forzar detección de cambios para actualizar la UI\r\n      this.cdr.detectChanges();\r\n\r\n      // Después de un breve delay, intentar refrescar nuevamente para asegurar datos actualizados\r\n      setTimeout(async () => {\r\n        await this.loadSorteoById(sorteoId);\r\n      }, 2000);\r\n\r\n    } catch (error) {\r\n      // En caso de error, asegurar que los datos locales estén actualizados\r\n      this.winningNumbers[sorteoName] = winningNumber;\r\n      this.factorMultiplicador[sorteoName] = multiplicador;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n\r\n  getTotalSales(): number {\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getSucursalSummary(): { name: string, total: number, count: number }[] {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n\r\n    for (const sale of this.sales) {\r\n      if (!summary[sale.sucursal]) {\r\n        summary[sale.sucursal] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sucursal].total += sale.total;\r\n      summary[sale.sucursal].count += 1;\r\n    }\r\n\r\n    return Object.entries(summary).map(([name, data]) => ({\r\n      name,\r\n      total: data.total,\r\n      count: data.count\r\n    }));\r\n  }\r\n\r\n\r\n  // Métodos para cards de resumen\r\n  getTotalVendido(): number {\r\n    // Usar caché si está disponible y válido\r\n    if (this.isCacheValid() && this.cachedDashboardData) {\r\n      return this.cachedDashboardData.totalVendido;\r\n    }\r\n\r\n    // Fallback al cálculo tradicional si no hay caché\r\n    return this.sales.reduce((total, sale) => total + sale.total, 0);\r\n  }\r\n\r\n  getTotalPagado(): number {\r\n    // Usar caché si está disponible y válido\r\n    if (this.isCacheValid() && this.cachedDashboardData) {\r\n      return this.cachedDashboardData.totalPagado;\r\n    }\r\n\r\n    // Fallback al cálculo tradicional si no hay caché\r\n    let totalPagado = 0;\r\n\r\n    // Calcular total pagado basándose en sorteos cerrados y números ganadores\r\n    for (const sale of this.sales) {\r\n      const sorteoSchedule = this.sorteos.find(s => s.name === sale.sorteo);\r\n      if (sorteoSchedule) {\r\n        const sorteoData = this.getSorteoData(sorteoSchedule);\r\n        if (sorteoData && sorteoData.cerrado && sorteoData.numeroGanador) {\r\n          const saleDetails = this.getSaleDetails(sale.id);\r\n          for (const detail of saleDetails) {\r\n            if (detail.numero.toString() === sorteoData.numeroGanador.toString()) {\r\n              const factor = sorteoData.factorMultiplicador || 70;\r\n              totalPagado += detail.monto * factor;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return totalPagado;\r\n  }\r\n\r\n  getGananciaNeta(): number {\r\n    return this.getTotalVendido() - this.getTotalPagado();\r\n  }\r\n\r\n  getTotalVentas(): number {\r\n    return this.sales.length;\r\n  }\r\n\r\n  // Métodos para filtros de fecha\r\n  async aplicarFiltros(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n\r\n      // Validar que las fechas sean válidas\r\n      if (this.fechaDesde && this.fechaHasta) {\r\n        const fechaDesde = new Date(this.fechaDesde);\r\n        const fechaHasta = new Date(this.fechaHasta);\r\n\r\n        if (fechaDesde > fechaHasta) {\r\n          this.notificationService.showError('La fecha desde no puede ser mayor que la fecha hasta');\r\n          this.isLoadingFilters = false;\r\n          return;\r\n        }\r\n\r\n      }\r\n\r\n      // Guardar estado de filtros\r\n      this.saveFilterState();\r\n\r\n      // Recargar ventas\r\n      await this.loadSales();\r\n\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al aplicar filtros');\r\n    } finally {\r\n      // Asegurar que el loading se quite con un pequeño delay\r\n      setTimeout(() => {\r\n        this.isLoadingFilters = false;\r\n        this.cdr.detectChanges();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async limpiarFiltros(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n\r\n      // Reinicializar fechas usando zona horaria de Honduras\r\n      const fechaInicio = this.supabaseService.getStartOfDayHonduras(hondurasToday);\r\n      const fechaFin = this.supabaseService.getEndOfDayHonduras(hondurasToday);\r\n\r\n      this.fechaDesde = this.supabaseService.formatDateTimeLocalHonduras(fechaInicio);\r\n      this.fechaHasta = this.supabaseService.formatDateTimeLocalHonduras(fechaFin);\r\n      this.selectedDate = this.supabaseService.formatDateTimeLocalHonduras(hondurasToday).split('T')[0];\r\n      this.selectedSorteoFilter = '';\r\n\r\n\r\n      // Guardar estado limpio\r\n      this.saveFilterState();\r\n\r\n      await this.loadSales();\r\n\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al limpiar filtros');\r\n    } finally {\r\n      // Asegurar que el loading se quite con un pequeño delay\r\n      setTimeout(() => {\r\n        this.isLoadingFilters = false;\r\n        this.cdr.detectChanges();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async onFiltroFechaChange(): Promise<void> {\r\n\r\n    // Auto-aplicar filtros cuando cambian las fechas\r\n    await this.aplicarFiltros();\r\n  }\r\n\r\n  async onDateChange(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n\r\n      // Guardar cambio de fecha y recargar\r\n      this.saveFilterState();\r\n      await this.loadSales();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar la fecha');\r\n    } finally {\r\n      this.isLoadingFilters = false;\r\n    }\r\n  }\r\n\r\n  async onSorteoFilterChange(): Promise<void> {\r\n    try {\r\n      this.isLoadingFilters = true;\r\n\r\n      // Guardar cambio de sorteo y recargar\r\n      this.saveFilterState();\r\n      await this.loadSales();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar el filtro de sorteo');\r\n    } finally {\r\n      this.isLoadingFilters = false;\r\n    }\r\n  }\r\n\r\n  // Método específico para cuando cambia fechaDesde\r\n  async onFechaDesdeChange(): Promise<void> {\r\n    await this.aplicarFiltros();\r\n  }\r\n\r\n  // Método específico para cuando cambia fechaHasta\r\n  async onFechaHastaChange(): Promise<void> {\r\n    await this.aplicarFiltros();\r\n  }\r\n\r\n  async loadSalesByDateRange(): Promise<void> {\r\n    if (!this.fechaDesde || !this.fechaHasta) {\r\n      await this.loadSingleDateSales();\r\n      return;\r\n    }\r\n\r\n    // No cambiar isLoading aquí si ya estamos en modo filtros\r\n    if (!this.isLoadingFilters) {\r\n      this.isLoading = true;\r\n    }\r\n    try {\r\n\r\n      // Convertir strings de datetime-local a fechas UTC para la base de datos\r\n      const fechaDesdeUtc = this.supabaseService.parseLocalDateTimeToUtc(this.fechaDesde);\r\n      const fechaHastaUtc = this.supabaseService.parseLocalDateTimeToUtc(this.fechaHasta);\r\n\r\n      // Validar que la fecha desde no sea mayor que la fecha hasta\r\n      if (fechaDesdeUtc > fechaHastaUtc) {\r\n        this.notificationService.showError('La fecha desde no puede ser mayor que la fecha hasta');\r\n        this.sales = [];\r\n        return;\r\n      }\r\n\r\n      // Cargar ventas para cada día en el rango usando fechas en Honduras\r\n      let allSales: Sale[] = [];\r\n      let currentDate = new Date(fechaDesdeUtc);\r\n      let daysProcessed = 0;\r\n      const maxDays = 31; // Límite de seguridad\r\n\r\n      while (currentDate <= fechaHastaUtc && daysProcessed < maxDays) {\r\n\r\n        const daySales = await this.supabaseService.getSalesByDateAndSorteo(currentDate, this.selectedSorteoFilter);\r\n\r\n        allSales = [...allSales, ...daySales];\r\n\r\n        // Avanzar al siguiente día usando fecha UTC\r\n        currentDate = new Date(currentDate);\r\n        currentDate.setUTCDate(currentDate.getUTCDate() + 1);\r\n        daysProcessed++;\r\n      }\r\n\r\n      if (daysProcessed >= maxDays) {\r\n        this.notificationService.showInfo('Se procesaron los primeros 31 días del rango');\r\n      }\r\n\r\n      // Forzar actualización del array\r\n      this.sales = [...allSales];\r\n\r\n\r\n      // Cargar detalles de todas las ventas\r\n      for (const sale of this.sales) {\r\n        this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n      }\r\n\r\n      // Forzar detección de cambios\r\n      this.cdr.detectChanges();\r\n\r\n\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar las ventas: ' + error);\r\n      this.sales = [];\r\n    } finally {\r\n      // Solo cambiar isLoading si no estamos en modo filtros\r\n      if (!this.isLoadingFilters) {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Método auxiliar para cargar ventas de una sola fecha\r\n  private async loadSingleDateSales(): Promise<void> {\r\n    const fecha = this.selectedDate ? new Date(this.selectedDate) : this.supabaseService.getHondurasDateTime();\r\n\r\n    this.sales = await this.supabaseService.getSalesByDateAndSorteo(fecha, this.selectedSorteoFilter);\r\n    this.sales = [...(this.sales || [])];\r\n\r\n    for (const sale of this.sales) {\r\n      this.saleDetails[sale.id] = await this.supabaseService.getSaleDetails(sale.id);\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  // Gestión de usuarios\r\n  async loadUsers(): Promise<void> {\r\n    try {\r\n      this.users = await this.supabaseService.getAllUsers();\r\n\r\n      if (this.users.length === 0) {\r\n        this.notificationService.showInfo('No hay usuarios configurados. Use el botón Sincronizar para cargar usuarios desde Authentication.');\r\n      }\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar usuarios: ' + (error as any)?.message);\r\n      // Asegurar que users no sea undefined\r\n      this.users = [];\r\n    }\r\n  }\r\n\r\n  loadSorteoSchedules(): void {\r\n    this.sorteoSchedules = [...SORTEO_SCHEDULES];\r\n\r\n    if (this.sorteoSchedules.length === 0) {\r\n      this.notificationService.showError('No se encontraron horarios de sorteos configurados');\r\n    } else {\r\n    }\r\n  }\r\n\r\n  closeUserModal(): void {\r\n    this.showUserModal = false;\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n  }\r\n\r\n  editUser(user: any): void {\r\n    this.editingUser = user;\r\n    this.userFormData = { ...user };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  async saveUser(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n\r\n      if (this.editingUser) {\r\n        // Actualizar usuario existente\r\n        await this.supabaseService.updateExistingUser(this.editingUser.id, {\r\n          email: this.userFormData.email,\r\n          role: this.userFormData.role,\r\n          sucursal: this.userFormData.sucursal,\r\n          active: this.userFormData.active\r\n        });\r\n        this.notificationService.showSuccess('Usuario actualizado exitosamente');\r\n      } else {\r\n        // Crear nuevo usuario\r\n        await this.supabaseService.createNewUser(this.userFormData);\r\n        this.notificationService.showSuccess('Usuario creado exitosamente');\r\n      }\r\n\r\n      this.closeUserModal();\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al guardar el usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async toggleUserStatus(user: any): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      await this.supabaseService.toggleExistingUserStatus(user.id);\r\n      this.notificationService.showSuccess('Estado del usuario actualizado');\r\n      await this.loadUsers();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar el estado del usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async deleteUser(userId: string): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Eliminar Usuario',\r\n      '¿Está seguro que desea eliminar este usuario?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      try {\r\n        this.isLoading = true;\r\n        // Implementar eliminación en SupabaseService\r\n        this.notificationService.showSuccess('Usuario eliminado exitosamente');\r\n        await this.loadUsers();\r\n      } catch (error) {\r\n        this.notificationService.showError('Error al eliminar el usuario');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  generateDailyReport(): void {\r\n    const reportDate = this.selectedDate ? new Date(this.selectedDate) : this.supabaseService.getHondurasDateTime();\r\n    this.printService.generateDailyReport(this.sales, reportDate);\r\n  }\r\n\r\n  // Método mejorado para reimprimir recibo desde admin\r\n  async reprintReceipt(sale: Sale): Promise<void> {\r\n    try {\r\n\r\n      // Obtener detalles de la venta desde la base de datos\r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n\r\n      if (details.length === 0) {\r\n        this.notificationService.showError('No se encontraron detalles para esta venta. No se puede reimprimir el recibo.');\r\n        return;\r\n      }\r\n\r\n      // Generar recibo con los detalles obtenidos\r\n      this.printService.generateThermalReceipt(sale, details);\r\n      this.notificationService.showSuccess('Recibo enviado a impresión');\r\n\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al reimprimir el recibo. Por favor intente nuevamente.');\r\n    }\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    await this.supabaseService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  // Métodos para el nuevo diseño minimalista\r\n  formatDateTime(dateInput: string | Date): string {\r\n    const date = typeof dateInput === 'string' ? new Date(dateInput) : dateInput;\r\n    return date.toLocaleString('es-HN', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  }\r\n\r\n  // Método para formatear fecha para inputs datetime-local (DEPRECATED - usar supabaseService)\r\n  private formatDateTimeLocal(date: Date): string {\r\n    // Delegar al servicio de Supabase para consistencia\r\n    return this.supabaseService.formatDateTimeLocalHonduras(date);\r\n  }\r\n\r\n  // Método para formatear fecha para mostrar en la UI\r\n  formatDateForDisplay(date: Date | string): string {\r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    return this.supabaseService.formatHondurasDateTime(dateObj);\r\n  }\r\n\r\n  // Métodos faltantes para el template del admin\r\n  exportarVentas(): void {\r\n    // Método legacy - ahora llama a Excel por defecto\r\n    this.exportarVentasExcel();\r\n  }\r\n\r\n  exportarVentasExcel(): void {\r\n    this.generateVentasReportExcel();\r\n  }\r\n\r\n  exportarVentasPDF(): void {\r\n    this.generateVentasReportPDF();\r\n  }\r\n\r\n  trackBySale(index: number, sale: Sale): string {\r\n    return sale.id;\r\n  }\r\n\r\n  trackByUser(index: number, user: any): string {\r\n    return user.id;\r\n  }\r\n\r\n  trackBySorteo(index: number, sorteo: any): string {\r\n    return sorteo.id || index.toString();\r\n  }\r\n\r\n  trackBySaleDetail(index: number, detail: SaleDetail): string {\r\n    return detail.id;\r\n  }\r\n\r\n  verDetalles(sale: Sale): void {\r\n\r\n    // Primero cerrar cualquier modal que pueda estar abierto\r\n    this.showSaleDetailModal = false;\r\n\r\n    // Obtener detalles de la venta\r\n    const details = this.getSaleDetails(sale.id);\r\n\r\n    // Configurar modal\r\n    this.selectedSaleForDetail = sale;\r\n    this.selectedSaleDetails = details;\r\n    this.showSaleDetailModal = true;\r\n\r\n    // Forzar detección de cambios\r\n    this.cdr.detectChanges();\r\n\r\n  }\r\n\r\n  // Método para cerrar el modal de detalles\r\n  closeSaleDetailModal(): void {\r\n\r\n    this.showSaleDetailModal = false;\r\n    this.selectedSaleForDetail = null;\r\n    this.selectedSaleDetails = [];\r\n\r\n    // Forzar detección de cambios\r\n    this.cdr.detectChanges();\r\n\r\n  }\r\n\r\n  // Método para forzar el cierre del modal\r\n  forceCloseSaleDetailModal(): void {\r\n    this.showSaleDetailModal = false;\r\n    this.selectedSaleForDetail = null;\r\n    this.selectedSaleDetails = [];\r\n  }\r\n\r\n  // Método de emergencia para resetear completamente el modal\r\n  resetModal(): void {\r\n\r\n    // Cerrar TODOS los modales\r\n    this.showSaleDetailModal = false;\r\n    this.showUserModal = false;\r\n    this.showPasswordModal = false;\r\n\r\n    // Limpiar datos de modales\r\n    this.selectedSaleForDetail = null;\r\n    this.selectedSaleDetails = [];\r\n\r\n    // Solo si hay elementos trabados, limpiar el DOM\r\n    setTimeout(() => {\r\n      // Eliminar backdrop de Bootstrap si existe\r\n      const backdrops = document.querySelectorAll('.modal-backdrop');\r\n      backdrops.forEach(el => {\r\n        if (el.parentNode) {\r\n          el.parentNode.removeChild(el);\r\n        }\r\n      });\r\n\r\n      // Remover clases del body\r\n      document.body.classList.remove('modal-open');\r\n\r\n    }, 100);\r\n  }\r\n\r\n  // Método para calcular total de números en el modal\r\n  getTotalNumeros(): number {\r\n    return this.selectedSaleDetails.reduce((total, detail) => total + detail.monto, 0);\r\n  }\r\n\r\n  createUser(): void {\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  // ========================\r\n  // CAMBIO DE CONTRASEÑA\r\n  // ========================\r\n\r\n  changePassword(user: any): void {\r\n    this.selectedUserForPassword = user;\r\n    this.newPassword = '';\r\n    this.confirmPassword = '';\r\n    this.showPasswordModal = true;\r\n  }\r\n\r\n  closePasswordModal(): void {\r\n    this.showPasswordModal = false;\r\n    this.selectedUserForPassword = null;\r\n    this.newPassword = '';\r\n    this.confirmPassword = '';\r\n  }\r\n\r\n  async changeUserPassword(): Promise<void> {\r\n    if (this.newPassword !== this.confirmPassword) {\r\n      this.notificationService.showError('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n\r\n    if (this.newPassword.length < 6) {\r\n      this.notificationService.showError('La contraseña debe tener al menos 6 caracteres');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.isLoading = true;\r\n      // Implementar método en SupabaseService para cambiar contraseña\r\n      await this.supabaseService.updateUserPassword(this.selectedUserForPassword.id, this.newPassword);\r\n      this.notificationService.showSuccess('Contraseña actualizada exitosamente');\r\n      this.closePasswordModal();\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cambiar la contraseña');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas en Excel\r\n  generateVentasReportExcel(): void {\r\n    if (this.sales.length === 0) {\r\n      this.notificationService.showError('No hay ventas para exportar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Generar CSV\r\n      let csvContent = 'Fecha,Sucursal,Sorteo,Total,Recibo,Correlativo,Números\\n';\r\n\r\n      for (const sale of this.sales) {\r\n        const details = this.getSaleDetails(sale.id);\r\n        const numeros = details.map(d => `${d.numero}x${d.monto}`).join(';');\r\n        csvContent += `\"${this.formatDateTime(sale.createdAt)}\",\"${sale.sucursal}\",\"${sale.sorteo}\",\"${sale.total}\",\"${sale.numeroRecibo || sale.id.slice(-6)}\",\"${sale.correlativo}\",\"${numeros}\"\\n`;\r\n      }\r\n\r\n      // Descargar archivo\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const link = document.createElement('a');\r\n      const url = URL.createObjectURL(blob);\r\n      link.setAttribute('href', url);\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      link.setAttribute('download', `ventas_excel_${this.supabaseService.formatDateOnlyForSupabase(hondurasToday)}.csv`);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n\r\n      this.notificationService.showSuccess('Reporte Excel exportado exitosamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al exportar el reporte Excel');\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas en PDF\r\n  generateVentasReportPDF(): void {\r\n    if (this.sales.length === 0) {\r\n      this.notificationService.showError('No hay ventas para exportar');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Usar el servicio de impresión para generar PDF\r\n      this.printService.generateVentasReportPDF(this.sales, this.saleDetails, {\r\n        fechaDesde: this.fechaDesde,\r\n        fechaHasta: this.fechaHasta,\r\n        sorteoFilter: this.selectedSorteoFilter\r\n      });\r\n\r\n      this.notificationService.showSuccess('Reporte PDF generado exitosamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al exportar el reporte PDF');\r\n    }\r\n  }\r\n\r\n  // Método para generar reporte de ventas (legacy)\r\n  generateVentasReport(): void {\r\n    // Mantener método legacy, ahora llama a Excel\r\n    this.generateVentasReportExcel();\r\n  }\r\n\r\n  onFactorChange(sorteoName: string, event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    if (target && target.value) {\r\n      this.factorMultiplicador[sorteoName] = +target.value;\r\n    }\r\n  }\r\n  // ========================\r\n  // MÉTODOS DE DEBUG\r\n  // ========================\r\n\r\n  async debugSorteoSchedules(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      //  await this.supabaseService.debugSorteoSchedules();\r\n      this.notificationService.showSuccess('Revisa la consola para ver los resultados del debug');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error ejecutando debug');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // ===== MÉTODOS PARA ACORDEÓN =====\r\n\r\n  toggleSorteosSection(): void {\r\n    this.showSorteosSection = !this.showSorteosSection;\r\n  }\r\n\r\n  toggleUsersSection(): void {\r\n    this.showUsersSection = !this.showUsersSection;\r\n  }\r\n\r\n  // ===== MÉTODOS PARA ABRIR MODALES =====\r\n\r\n  openCreateUserModal(): void {\r\n    this.editingUser = null;\r\n    this.userFormData = {\r\n      email: '',\r\n      password: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n    this.showUserModal = true;\r\n  }\r\n\r\n  async syncUsersFromAuth(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      this.notificationService.showInfo('Sincronizando usuarios desde auth.users...');\r\n\r\n      // Usar el nuevo método de sincronización\r\n      await this.supabaseService.syncUsersFromAuth();\r\n\r\n      // Recargar la lista de usuarios\r\n      await this.loadUsers();\r\n\r\n      this.notificationService.showSuccess('Usuarios sincronizados correctamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al sincronizar usuarios');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Navegar a la gestión de usuarios\r\n  navigateToUsers(): void {\r\n    this.router.navigate(['/admin/users']);\r\n  }\r\n\r\n  // ===== MÉTODOS PARA MODAL DE FACTORES POR SUCURSAL =====\r\n\r\n  async openFactorsModal(sorteoName: string, winningNumber: number): Promise<void>;\r\n  async openFactorsModal(sorteo: SorteoSchedule, winningNumber: string): Promise<void>;\r\n  async openFactorsModal(sorteoOrName: SorteoSchedule | string, winningNumber: string | number): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n\r\n      // Cargar usuarios activos por sucursal\r\n      this.sucursalesFactores = await this.supabaseService.getActiveUsersBySucursal();\r\n\r\n      // Inicializar factores con valores por defecto\r\n      this.factoresPorSucursal = {};\r\n      for (const sucursal of this.sucursalesFactores) {\r\n        this.factoresPorSucursal[sucursal.sucursal] = sucursal.factor;\r\n      }\r\n\r\n      // Manejar ambos tipos de parámetros\r\n      if (typeof sorteoOrName === 'string') {\r\n        // Llamada desde la interfaz del sorteo (solo nombre y número)\r\n        const sorteoSchedule = SORTEO_SCHEDULES.find(s => s.name === sorteoOrName);\r\n        if (sorteoSchedule) {\r\n          this.currentSorteoForFactors = {\r\n            sorteo: sorteoSchedule,\r\n            winningNumber: winningNumber.toString()\r\n          };\r\n        }\r\n      } else {\r\n        // Llamada desde setWinningNumber (objeto completo)\r\n        this.currentSorteoForFactors = {\r\n          sorteo: sorteoOrName,\r\n          winningNumber: winningNumber.toString()\r\n        };\r\n      }\r\n\r\n      this.showFactorsModal = true;\r\n\r\n    } catch (error) {\r\n      console.error('Error al cargar sucursales:', error);\r\n      this.notificationService.showError('Error al cargar configuración de sucursales');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  closeFactorsModal(): void {\r\n    this.showFactorsModal = false;\r\n    this.currentSorteoForFactors = null;\r\n    this.factoresPorSucursal = {};\r\n    this.sucursalesFactores = [];\r\n  }\r\n\r\n  closeResumenModal(): void {\r\n    this.showResumenModal = false;\r\n    this.resumenSucursales = [];\r\n    this.currentSorteoForResumen = '';\r\n  }\r\n\r\n  async confirmWinningNumberWithFactors(): Promise<void> {\r\n    if (!this.currentSorteoForFactors) {\r\n      this.notificationService.showError('No hay sorteo seleccionado');\r\n      return;\r\n    }\r\n\r\n    const { sorteo, winningNumber } = this.currentSorteoForFactors;\r\n\r\n    try {\r\n      this.isLoading = true;\r\n\r\n      // Usar fecha de Honduras\r\n      const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n      const fechaStr = this.supabaseService.formatDateOnlyForSupabase(hondurasToday);\r\n      const sorteoId = `${fechaStr}-${sorteo.name}`;\r\n\r\n      // Crear sorteos por sucursal con factores específicos\r\n      await this.supabaseService.crearSorteosPorSucursal(\r\n        sorteoId,\r\n        winningNumber,\r\n        this.factoresPorSucursal\r\n      );\r\n\r\n      // Calcular totales por sucursal\r\n      await this.supabaseService.calcularTotalesSorteoPorSucursal(sorteoId);\r\n\r\n      // Cerrar modal de factores\r\n      this.closeFactorsModal();\r\n\r\n      // Obtener resumen de sucursales para mostrar\r\n      this.resumenSucursales = await this.supabaseService.getSorteoResumenPorSucursal(sorteoId);\r\n      this.currentSorteoForResumen = `${sorteo.label} - Número Ganador: ${winningNumber.padStart(2, '0')}`;\r\n\r\n      // Mostrar modal de resumen\r\n      this.showResumenModal = true;\r\n\r\n      // Recargar datos\r\n      await this.loadSales();\r\n      await this.loadSorteosData();\r\n\r\n      // Notificar actualización de resúmenes\r\n      this.supabaseService.notifyResumenUpdate();\r\n\r\n      // Actualizar UI\r\n      this.winningNumbers[sorteo.name] = winningNumber;\r\n\r\n      this.notificationService.showSuccess(\r\n        `Número ganador ${winningNumber.padStart(2, '0')} establecido con factores específicos por sucursal para ${sorteo.name}`\r\n      );\r\n\r\n    } catch (error) {\r\n      console.error('Error al establecer número ganador:', error);\r\n      this.notificationService.showError('Error al establecer el número ganador con factores por sucursal');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Obtener lista única de sucursales\r\n  getUniqueSucursales(): string[] {\r\n    return [...new Set(this.sucursalesFactores.map(s => s.sucursal))];\r\n  }\r\n\r\n  // Actualizar factor para una sucursal específica\r\n  updateFactorForSucursal(sucursal: string, factor: string | number): void {\r\n    this.factoresPorSucursal[sucursal] = typeof factor === 'string' ? parseFloat(factor) : factor;\r\n  }\r\n\r\n  // Métodos auxiliares para el template\r\n  getUsersBySucursal(sucursal: string): SucursalFactor[] {\r\n    return this.sucursalesFactores.filter(s => s.sucursal === sucursal);\r\n  }\r\n\r\n  hasSucursalUsers(sucursal: string): boolean {\r\n    return this.sucursalesFactores.filter(s => s.sucursal === sucursal).length > 0;\r\n  }\r\n\r\n  // Métodos para calcular totales en el resumen\r\n  getTotalVendidoGeneral(): string {\r\n    const total = this.getTotalVendido();\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getTotalPagadoGeneral(): string {\r\n    const total = this.getTotalPagado();\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getGananciaTotalGeneral(): number {\r\n    return this.getGananciaNeta();\r\n  }\r\n\r\n  // Método para calcular el total de la cantidad del número ganador\r\n  getTotalCantidadNumeroGanador(): number {\r\n    if (!this.resumenSucursales || this.resumenSucursales.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    return this.resumenSucursales.reduce((total, sucursal) => {\r\n      return total + (sucursal.cantidad_numero_ganador || 0);\r\n    }, 0);\r\n  }\r\n\r\n  // Método para obtener resumen de ventas por número\r\n  getNumbersSummary(): Array<{ numero: number, totalVendido: number, cantidadVentas: number, porcentaje: number }> {\r\n    // Usar caché si está disponible y válido\r\n    if (this.isCacheValid() && this.cachedNumbersData) {\r\n      const totalGeneral = this.cachedNumbersData.get('total') || 0;\r\n      const result: Array<{ numero: number, totalVendido: number, cantidadVentas: number, porcentaje: number }> = [];\r\n\r\n      this.cachedNumbersData.forEach((value: any, key: string) => {\r\n        if (key !== 'total' && typeof value === 'object' && value.totalVendido !== undefined) {\r\n          result.push({\r\n            numero: parseInt(key),\r\n            totalVendido: value.totalVendido,\r\n            cantidadVentas: value.cantidadVentas,\r\n            porcentaje: totalGeneral > 0 ? (value.totalVendido / totalGeneral) * 100 : 0\r\n          });\r\n        }\r\n      });\r\n\r\n      return result.sort((a, b) => b.totalVendido - a.totalVendido);\r\n    }\r\n\r\n    // Fallback al cálculo tradicional si no hay caché\r\n    const sales = this.sales;\r\n    const numeroStats: { [numero: number]: { totalVendido: number, cantidadVentas: number } } = {};\r\n    let totalGeneral = 0;\r\n\r\n    // Procesar todas las ventas\r\n    sales.forEach((sale: Sale) => {\r\n      const details = this.getSaleDetails(sale.id);\r\n      details.forEach(detail => {\r\n        if (!numeroStats[detail.numero]) {\r\n          numeroStats[detail.numero] = { totalVendido: 0, cantidadVentas: 0 };\r\n        }\r\n        numeroStats[detail.numero].totalVendido += detail.monto;\r\n        numeroStats[detail.numero].cantidadVentas += 1;\r\n        totalGeneral += detail.monto;\r\n      });\r\n    });\r\n\r\n    // Convertir a array y calcular porcentajes\r\n    return Object.entries(numeroStats)\r\n      .map(([numero, stats]) => ({\r\n        numero: parseInt(numero),\r\n        totalVendido: stats.totalVendido,\r\n        cantidadVentas: stats.cantidadVentas,\r\n        porcentaje: totalGeneral > 0 ? (stats.totalVendido / totalGeneral) * 100 : 0\r\n      }))\r\n      .sort((a, b) => b.totalVendido - a.totalVendido); // Ordenar por total vendido descendente\r\n  }\r\n\r\n  // Método para obtener números vendidos agrupados por sorteo y sucursal\r\n  getNumbersSummaryBySorteoAndSucursal(): Array<{\r\n    sorteo: string,\r\n    sucursales: Array<{\r\n      sucursal: string,\r\n      numeros: Array<{ numero: number, totalVendido: number, cantidadVentas: number, porcentaje: number }>\r\n    }>\r\n  }> {\r\n    const groups: { [sorteo: string]: { [sucursal: string]: { [numero: number]: { totalVendido: number, cantidadVentas: number } } } } = {};\r\n\r\n    // Agrupar por sorteo, sucursal y número\r\n    this.sales.forEach(sale => {\r\n      const sorteo = sale.sorteo || 'Sin Sorteo';\r\n      const sucursal = sale.sucursal || 'Sin Sucursal';\r\n\r\n      if (!groups[sorteo]) {\r\n        groups[sorteo] = {};\r\n      }\r\n      if (!groups[sorteo][sucursal]) {\r\n        groups[sorteo][sucursal] = {};\r\n      }\r\n\r\n      const details = this.getSaleDetails(sale.id);\r\n      details.forEach(detail => {\r\n        const numero = parseInt(detail.numero.toString());\r\n        if (!groups[sorteo][sucursal][numero]) {\r\n          groups[sorteo][sucursal][numero] = { totalVendido: 0, cantidadVentas: 0 };\r\n        }\r\n        groups[sorteo][sucursal][numero].totalVendido += detail.monto;\r\n        groups[sorteo][sucursal][numero].cantidadVentas += 1;\r\n      });\r\n    });\r\n\r\n    // Convertir a array y calcular porcentajes\r\n    return Object.keys(groups).map(sorteo => {\r\n      const sorteoData = groups[sorteo];\r\n\r\n      const sucursales = Object.keys(sorteoData).map(sucursal => {\r\n        const sucursalData = sorteoData[sucursal];\r\n        const totalSucursal = Object.values(sucursalData).reduce((sum, data) => sum + data.totalVendido, 0);\r\n\r\n        const numeros = Object.keys(sucursalData).map(numeroStr => {\r\n          const numero = parseInt(numeroStr);\r\n          const data = sucursalData[numero];\r\n          return {\r\n            numero,\r\n            totalVendido: data.totalVendido,\r\n            cantidadVentas: data.cantidadVentas,\r\n            porcentaje: totalSucursal > 0 ? (data.totalVendido / totalSucursal) * 100 : 0\r\n          };\r\n        }).sort((a, b) => b.totalVendido - a.totalVendido);\r\n\r\n        return {\r\n          sucursal,\r\n          numeros\r\n        };\r\n      });\r\n\r\n      return {\r\n        sorteo,\r\n        sucursales\r\n      };\r\n    });\r\n  }\r\n\r\n  // Métodos auxiliares para la vista de números vendidos\r\n  getSorteoTotal(sorteoGroup: any): number {\r\n    return sorteoGroup.sucursales.reduce((total: number, sucursal: any) => {\r\n      return total + sucursal.numeros.reduce((subtotal: number, numero: any) => subtotal + numero.totalVendido, 0);\r\n    }, 0);\r\n  }\r\n\r\n  getSucursalTotal(sucursalGroup: any): number {\r\n    return sucursalGroup.numeros.reduce((total: number, numero: any) => total + numero.totalVendido, 0);\r\n  }\r\n\r\n  // Métodos para el tablero de números completo\r\n  getAllNumbers(): number[] {\r\n    const numbers = [];\r\n    for (let i = 0; i <= 99; i++) {\r\n      numbers.push(i);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getNumeroVenta(sucursalGroup: any, numero: number): number {\r\n    const numeroData = sucursalGroup.numeros.find((n: any) => n.numero === numero);\r\n    return numeroData ? numeroData.totalVendido : 0;\r\n  }\r\n\r\n  getNumeroIntensity(sucursalGroup: any, numero: number): string {\r\n    const venta = this.getNumeroVenta(sucursalGroup, numero);\r\n    const maxVenta = Math.max(...sucursalGroup.numeros.map((n: any) => n.totalVendido));\r\n\r\n    if (venta === 0) return 'sin-venta';\r\n    if (maxVenta === 0) return 'sin-venta';\r\n\r\n    const intensidad = venta / maxVenta;\r\n\r\n    if (intensidad >= 0.8) return 'intensidad-muy-alta';\r\n    if (intensidad >= 0.6) return 'intensidad-alta';\r\n    if (intensidad >= 0.4) return 'intensidad-media';\r\n    if (intensidad >= 0.2) return 'intensidad-baja';\r\n    return 'intensidad-muy-baja';\r\n  }\r\n\r\n  // Métodos de exportación\r\n  private prepareReportData(): any {\r\n    // Obtener fecha del filtro actual\r\n    const fechaReporte = this.fechaDesde ?\r\n      this.supabaseService.formatDateOnlyForSupabase(this.supabaseService.parseLocalDateTimeToUtc(this.fechaDesde)) :\r\n      this.selectedDate || this.supabaseService.formatDateOnlyForSupabase(this.supabaseService.getHondurasDateTime());\r\n\r\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\r\n    const fechaHora = this.supabaseService.formatHondurasDateTime(hondurasTime);\r\n    const [, hora, periodo] = fechaHora.split(' ');\r\n\r\n    // Describir filtros aplicados\r\n    let filtroAplicado = 'Todos los datos';\r\n    if (this.fechaDesde && this.fechaHasta) {\r\n      filtroAplicado = `Desde: ${this.fechaDesde} Hasta: ${this.fechaHasta}`;\r\n    } else if (this.fechaDesde) {\r\n      filtroAplicado = `Desde: ${this.fechaDesde}`;\r\n    } else if (this.fechaHasta) {\r\n      filtroAplicado = `Hasta: ${this.fechaHasta}`;\r\n    }\r\n    if (this.selectedSorteoFilter) {\r\n      filtroAplicado += ` - Sorteo: ${this.selectedSorteoFilter}`;\r\n    }\r\n\r\n    // 1. DASHBOARD PRINCIPAL (4 cards como se ven en pantalla)\r\n    const dashboardData = {\r\n      totalVendido: this.getTotalVendido(),\r\n      totalPagado: this.getTotalPagado(),\r\n      gananciaNeta: this.getGananciaNeta(),\r\n      ventasTotales: this.getTotalVentas()\r\n    };\r\n\r\n    // 2. NÚMEROS POR SORTEO Y SUCURSAL (tableros completos como se ven)\r\n    const numerosPorSorteo = this.getNumbersSummaryBySorteoAndSucursal();\r\n\r\n    // 3. DETALLE POR SUCURSALES (LA PARTE MÁS IMPORTANTE)\r\n    const numeroGanador = this.resumenSucursales.length > 0 ? this.resumenSucursales[0].numero_ganador : '';\r\n    const detallePorSucursales = {\r\n      headers: ['Sucursal', 'Factor', `Cantidad #${numeroGanador}`, 'Total Vendido', 'Total Pagado', 'Ganancia Neta'],\r\n      filas: this.resumenSucursales.map(sucursal => ({\r\n        sucursal: sucursal.sucursal,\r\n        factor: `${sucursal.factor_multiplicador}x`,\r\n        cantidadNumeroGanador: sucursal.cantidad_numero_ganador || 0,\r\n        totalVendido: sucursal.total_vendido || 0,\r\n        totalPagado: sucursal.total_pagado || 0,\r\n        gananciaNeta: sucursal.ganancia_neta || 0\r\n      })),\r\n      totales: {\r\n        sucursal: 'TOTAL GENERAL',\r\n        factor: '-',\r\n        cantidadNumeroGanador: this.getTotalCantidadNumeroGanador(),\r\n        totalVendido: parseFloat(this.getTotalVendidoGeneral()),\r\n        totalPagado: parseFloat(this.getTotalPagadoGeneral()),\r\n        gananciaNeta: this.getGananciaTotalGeneral()\r\n      }\r\n    };\r\n\r\n    return {\r\n      // Información del reporte\r\n      fechaReporte: fechaReporte,\r\n      horaReporte: `${hora} ${periodo}`,\r\n      filtroAplicado: filtroAplicado,\r\n\r\n      // Datos principales\r\n      dashboard: dashboardData,\r\n      numerosPorSorteo: numerosPorSorteo,\r\n      detallePorSucursales: detallePorSucursales\r\n    };\r\n  }\r\n\r\n  // Método para exportar datos tal como se ven en el admin\r\n  private prepareVisualReportData(): any {\r\n    // Datos del dashboard tal como aparecen en la interfaz admin\r\n    const totalVendidoGeneral = this.getTotalVendido();\r\n    const totalPagadoGeneral = this.getTotalPagado();\r\n    const gananciaNeta = totalVendidoGeneral - totalPagadoGeneral;\r\n\r\n    // Usar timezone de Honduras para fecha y hora\r\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\r\n    const fechaFormateada = this.supabaseService.formatHondurasDateTime(hondurasTime);\r\n    const [fecha, horaCompleta] = fechaFormateada.split(' ');\r\n    const hora = horaCompleta || '';\r\n    const periodo = fechaFormateada.includes('AM') ? 'AM' : 'PM';\r\n\r\n    // Descripción de filtros\r\n    let filtrosAplicados = 'Todos los datos';\r\n    if (this.fechaDesde && this.fechaHasta) {\r\n      const fechaDesdeOnly = this.fechaDesde.split('T')[0];\r\n      const fechaHastaOnly = this.fechaHasta.split('T')[0];\r\n      filtrosAplicados = `Desde: ${fechaDesdeOnly} Hasta: ${fechaHastaOnly}`;\r\n    } else if (this.selectedDate) {\r\n      filtrosAplicados = `Fecha: ${this.selectedDate}`;\r\n    }\r\n    if (this.selectedSorteoFilter) {\r\n      filtrosAplicados += ` - Sorteo: ${this.selectedSorteoFilter}`;\r\n    }\r\n\r\n    // 1. DASHBOARD CARDS (como aparecen arriba del admin)\r\n    const dashboard = {\r\n      totalVendido: totalVendidoGeneral,\r\n      totalPagado: totalPagadoGeneral,\r\n      gananciaNeta: gananciaNeta,\r\n      ventasTotales: this.sales.length\r\n    };\r\n\r\n    // 2. NÚMEROS POR SORTEO (formato tablero como en el admin)\r\n    const numerosPorSorteo = this.getNumbersSummaryBySorteoAndSucursal();\r\n\r\n    // 3. DETALLE POR SUCURSALES (LA MÁS IMPORTANTE - exacto como tabla admin)\r\n    let detallePorSucursales;\r\n\r\n    if (this.resumenSucursales && this.resumenSucursales.length > 0) {\r\n      // Usar datos existentes de resumenSucursales\r\n      detallePorSucursales = {\r\n        headers: ['Sucursal', 'Factor', 'Total Vendido', 'Total Pagado', 'Ganancia Neta'],\r\n        filas: this.resumenSucursales.map(resumen => [\r\n          resumen.sucursal,\r\n          `${resumen.factor_multiplicador || 70}x`,\r\n          `L ${(resumen.total_vendido || 0).toLocaleString('es-HN', { minimumFractionDigits: 2 })}`,\r\n          `L ${(resumen.total_pagado || 0).toLocaleString('es-HN', { minimumFractionDigits: 2 })}`,\r\n          `L ${(resumen.ganancia_neta || 0).toLocaleString('es-HN', { minimumFractionDigits: 2 })}`\r\n        ]),\r\n        totales: [\r\n          'TOTAL GENERAL',\r\n          '',\r\n          `L ${totalVendidoGeneral.toLocaleString('es-HN', { minimumFractionDigits: 2 })}`,\r\n          `L ${totalPagadoGeneral.toLocaleString('es-HN', { minimumFractionDigits: 2 })}`,\r\n          `L ${gananciaNeta.toLocaleString('es-HN', { minimumFractionDigits: 2 })}`\r\n        ]\r\n      };\r\n    } else {\r\n      // Calcular desde las ventas actuales si no hay resumenSucursales\r\n      const sucursalesMap = new Map();\r\n\r\n      // Agrupar ventas por sucursal\r\n      this.sales.forEach(sale => {\r\n        const sucursal = sale.sucursal || 'Sin Sucursal';\r\n        if (!sucursalesMap.has(sucursal)) {\r\n          sucursalesMap.set(sucursal, {\r\n            sucursal: sucursal,\r\n            factor: 70, // Factor por defecto\r\n            totalVendido: 0,\r\n            totalPagado: 0,\r\n            gananciaNeta: 0\r\n          });\r\n        }\r\n        const data = sucursalesMap.get(sucursal);\r\n        data.totalVendido += sale.total;\r\n\r\n        // Calcular total pagado basado en sorteos cerrados\r\n        const sorteoSchedule = this.sorteos.find(s => s.name === sale.sorteo);\r\n        if (sorteoSchedule) {\r\n          const sorteoData = this.getSorteoData(sorteoSchedule);\r\n          if (sorteoData && sorteoData.cerrado && sorteoData.numeroGanador) {\r\n            const saleDetails = this.getSaleDetails(sale.id);\r\n            saleDetails.forEach(detail => {\r\n              if (parseInt(detail.numero.toString()) === parseInt(sorteoData.numeroGanador || '0')) {\r\n                data.totalPagado += detail.monto * (sorteoData.factorMultiplicador || 70);\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        data.gananciaNeta = data.totalVendido - data.totalPagado;\r\n      });\r\n\r\n      const sucursalesArray = Array.from(sucursalesMap.values());\r\n\r\n      detallePorSucursales = {\r\n        headers: ['Sucursal', 'Factor', 'Total Vendido', 'Total Pagado', 'Ganancia Neta'],\r\n        filas: sucursalesArray.map(sucursal => [\r\n          sucursal.sucursal,\r\n          `${sucursal.factor}x`,\r\n          `L ${sucursal.totalVendido.toLocaleString('es-HN', { minimumFractionDigits: 2 })}`,\r\n          `L ${sucursal.totalPagado.toLocaleString('es-HN', { minimumFractionDigits: 2 })}`,\r\n          `L ${sucursal.gananciaNeta.toLocaleString('es-HN', { minimumFractionDigits: 2 })}`\r\n        ]),\r\n        totales: [\r\n          'TOTAL GENERAL',\r\n          '',\r\n          `L ${totalVendidoGeneral.toLocaleString('es-HN', { minimumFractionDigits: 2 })}`,\r\n          `L ${totalPagadoGeneral.toLocaleString('es-HN', { minimumFractionDigits: 2 })}`,\r\n          `L ${gananciaNeta.toLocaleString('es-HN', { minimumFractionDigits: 2 })}`\r\n        ]\r\n      };\r\n    }\r\n\r\n    return {\r\n      fecha: fecha || hondurasTime.toLocaleDateString('es-HN'),\r\n      hora: hora || hondurasTime.toLocaleTimeString('es-HN'),\r\n      filtros: filtrosAplicados,\r\n      dashboard: dashboard,\r\n      numerosPorSorteo: numerosPorSorteo,\r\n      detallePorSucursales: detallePorSucursales\r\n    };\r\n  }\r\n\r\n  async downloadDailyReportExcel(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      const reportData = this.prepareVisualReportData();\r\n      await this.exportService.exportVisualToExcel(reportData, `reporte-admin-visual-${this.selectedDate}`);\r\n      this.notificationService.showSuccess('Reporte Excel descargado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error descargando reporte Excel:', error);\r\n      this.notificationService.showError('Error al descargar el reporte Excel');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async downloadDailyReportPDF(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      const reportData = this.prepareVisualReportData();\r\n      await this.exportService.exportVisualToPDF(reportData, `reporte-admin-visual-${this.selectedDate}`);\r\n      this.notificationService.showSuccess('Reporte PDF descargado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error descargando reporte PDF:', error);\r\n      this.notificationService.showError('Error al descargar el reporte PDF');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // ================== MÉTODOS PARA CIERRE DE CAJA POR SUCURSAL ==================\r\n\r\n  async abrirModalCierreCaja(): Promise<void> {\r\n    console.log('📖 Abriendo modal de cierre de caja - INICIO');\r\n    const startTime = performance.now();\r\n\r\n    // PASO 1: Apertura instantánea del modal (operación síncrona)\r\n    this.showCierreCajaModal = true;\r\n    console.log('✅ Modal visible:', performance.now() - startTime, 'ms');\r\n\r\n    // PASO 2: Configuración básica (operaciones síncronas optimizadas)\r\n    this.loadingCierreCaja = false;\r\n    await this.cargarSucursalesDisponibles();\r\n    // Optimizar la fecha - usar fecha simple sin conversión de zona horaria\r\n    const hoy = new Date();\r\n    this.fechaCierreSeleccionada = hoy; // Mantener como Date\r\n\r\n    this.selectedSucursalForCierre = '';\r\n    this.resumenCajaSucursal = null;\r\n    this.sorteosPendientesPagoSucursal = [];\r\n    this.movimientosCajaSucursal = [];\r\n\r\n    console.log('✅ Configuración inicial completa:', performance.now() - startTime, 'ms');\r\n\r\n    // PASO 3: Forzar detección de cambios para mostrar el modal inmediatamente\r\n    this.cdr.detectChanges();\r\n    console.log('✅ DetectChanges ejecutado:', performance.now() - startTime, 'ms');\r\n\r\n    // PASO 4: Cargar sucursales en background (sin bloquear)\r\n\r\n    console.log('📖 Modal abierto completamente:', performance.now() - startTime, 'ms');\r\n  }\r\n\r\n\r\n\r\n  private async cargarSucursalesDisponibles(): Promise<void> {\r\n    try {\r\n      const now = new Date();\r\n\r\n\r\n      let usuarios = this.users;\r\n      if (!usuarios?.length) {\r\n        usuarios = await this.supabaseService.getAllUsers();\r\n        this.users = usuarios; // opcional: cache usuarios obtenidos\r\n      }\r\n\r\n      const sucursalesSet = new Set<string>();\r\n\r\n      for (const user of usuarios) {\r\n        if (user.active && user.role === 'sucursal' && user.sucursal) {\r\n          sucursalesSet.add(user.sucursal);\r\n        }\r\n      }\r\n\r\n      this.sucursalesDisponibles = Array.from(sucursalesSet).sort();\r\n\r\n      console.log('Sucursales cargadas y cacheadas:', this.sucursalesDisponibles);\r\n    } catch (error) {\r\n      console.error('Error al cargar sucursales:', error);\r\n      this.sucursalesDisponibles = [];\r\n    }\r\n  }\r\n\r\n\r\n  async onSucursalSeleccionada(): Promise<void> {\r\n    if (!this.selectedSucursalForCierre) return;\r\n\r\n    // Inicio inmediato del loader y limpieza visual\r\n    this.loadingCierreCaja = true;\r\n    this.resumenCajaSucursal = null;\r\n    this.sorteosPendientesPagoSucursal = [];\r\n    this.movimientosCajaSucursal = [];\r\n\r\n    // Actualiza UI inmediatamente\r\n    this.cdr.detectChanges();\r\n\r\n    // Permite actualizar la interfaz antes de cargar datos pesados\r\n    setTimeout(async () => {\r\n      try {\r\n        await this.cargarDatosCierreCajaSucursal();\r\n      } catch (error) {\r\n        console.error('Error al cargar datos de cierre de caja:', error);\r\n        this.notificationService.showError('Error al cargar los datos de la sucursal');\r\n      } finally {\r\n        this.loadingCierreCaja = false;\r\n        this.cdr.detectChanges();\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n\r\n  // Función auxiliar para manejar timeout por consulta individual\r\n  private async promiseConTimeout<T>(promise: Promise<T>, timeoutMs: number, errorMsg: string): Promise<T> {\r\n    const timeoutPromise = new Promise<T>((_, reject) =>\r\n      setTimeout(() => reject(new Error(errorMsg)), timeoutMs)\r\n    );\r\n    return Promise.race([promise, timeoutPromise]);\r\n  }\r\n\r\n  private async cargarDatosCierreCajaSucursal(): Promise<void> {\r\n    if (!this.selectedSucursalForCierre) return;\r\n\r\n    try {\r\n      const [resumenCaja, sorteosPendientes, movimientosCaja, cierreExistente] = await Promise.all([\r\n        this.supabaseService.calcularResumenCajaDiario(\r\n          this.fechaCierreSeleccionada,\r\n          this.selectedSucursalForCierre\r\n        ),\r\n        this.supabaseService.obtenerSorteosPendientesPago(\r\n          this.fechaCierreSeleccionada,\r\n          this.selectedSucursalForCierre\r\n        ),\r\n        this.supabaseService.obtenerMovimientosCaja(\r\n          this.fechaCierreSeleccionada,\r\n          this.selectedSucursalForCierre\r\n        ),\r\n        this.supabaseService.obtenerCierreDiario(\r\n          this.fechaCierreSeleccionada,\r\n          this.selectedSucursalForCierre\r\n        )\r\n      ]);\r\n\r\n      console.log('Datos de cierre de caja cargados exitosamente');\r\n\r\n      this.resumenCajaSucursal = resumenCaja;\r\n      this.sorteosPendientesPagoSucursal = sorteosPendientes;\r\n      this.movimientosCajaSucursal = movimientosCaja;\r\n      this.cierreExistenteSucursal = cierreExistente;\r\n\r\n    } catch (error) {\r\n      console.error('Error al cargar datos de cierre de caja:', error);\r\n\r\n      this.resumenCajaSucursal = {\r\n        total_vendido: 0,\r\n        total_pagado: 0,\r\n        total_neto: 0,\r\n        movimientos_entrada: 0,\r\n        movimientos_salida: 0,\r\n        balance_final: 0\r\n      };\r\n      this.sorteosPendientesPagoSucursal = [];\r\n      this.movimientosCajaSucursal = [];\r\n      this.cierreExistenteSucursal = null;\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async onFechaCierreChange(): Promise<void> {\r\n    if (this.selectedSucursalForCierre) {\r\n      await this.onSucursalSeleccionada();\r\n    }\r\n  }\r\n\r\n  cerrarModalCierreCaja(): void {\r\n    console.log('📖 Cerrando modal de cierre de caja');\r\n    const startTime = performance.now();\r\n\r\n    // Cierre visual inmediato\r\n    this.showCierreCajaModal = false;\r\n    this.loadingCierreCaja = false;\r\n\r\n    // Actualizar UI inmediatamente\r\n    this.cdr.detectChanges();\r\n\r\n    // Limpieza de datos después del cierre visual para mayor fluidez\r\n    setTimeout(() => {\r\n      this.selectedSucursalForCierre = '';\r\n      this.resumenCajaSucursal = null;\r\n      this.sorteosPendientesPagoSucursal = [];\r\n      this.movimientosCajaSucursal = [];\r\n\r\n      console.log('✅ Modal cerrado y datos limpiados:', performance.now() - startTime, 'ms');\r\n    }, 0);\r\n  }\r\n\r\n\r\n  // Métodos de utilidad para el template (copiados del cierre-caja.component)\r\n  formatearMontoSucursal(monto: number): string {\r\n    return `L ${monto.toFixed(2)}`;\r\n  }\r\n\r\n  getTipoMovimientoTextoSucursal(tipo: string): string {\r\n    return tipo === 'entrada' ? 'Entrada' : 'Salida';\r\n  }\r\n\r\n  getTipoMovimientoClassSucursal(tipo: string): string {\r\n    return tipo === 'entrada' ? 'text-success' : 'text-danger';\r\n  }\r\n\r\n  // Método auxiliar para formatear fecha del cierre existente\r\n  formatFechaCierre(cierre: any): string {\r\n    if (!cierre) return '';\r\n    const fecha = new Date(cierre.fecha_cierre || cierre.created_at);\r\n    return fecha.toLocaleDateString('es-HN') + ' ' + fecha.toLocaleTimeString('es-HN', { hour: '2-digit', minute: '2-digit' });\r\n  }\r\n\r\n  async imprimirResumenCajaSucursal(): Promise<void> {\r\n    if (!this.resumenCajaSucursal || !this.selectedSucursalForCierre) return;\r\n\r\n    try {\r\n      const contenido = this.generarContenidoReporteSucursal();\r\n      await this.printService.printContent(contenido);\r\n    } catch (error) {\r\n      console.error('Error al imprimir:', error);\r\n      this.notificationService.showError('Error al imprimir el reporte');\r\n    }\r\n  }\r\n\r\n  private generarContenidoReporteSucursal(): string {\r\n    const fecha = this.fechaCierreSeleccionada.toLocaleDateString('es-HN');\r\n    const sucursal = this.selectedSucursalForCierre;\r\n\r\n    let contenido = `\r\n      <div style=\"font-family: monospace; max-width: 300px; margin: 0 auto;\">\r\n        <div style=\"text-align: center; margin-bottom: 20px;\">\r\n          <h2>RESUMEN DE CAJA DIARIO</h2>\r\n          <p>Fecha: ${fecha}</p>\r\n          <p>Sucursal: ${sucursal}</p>\r\n        </div>\r\n        \r\n        <div style=\"border-bottom: 1px solid #ccc; margin: 10px 0;\">\r\n          <h3>RESUMEN FINANCIERO</h3>\r\n          <p>Total Vendido: L ${this.resumenCajaSucursal.total_vendido?.toFixed(2) || '0.00'}</p>\r\n          <p>Total Pagado: L ${this.resumenCajaSucursal.total_pagado?.toFixed(2) || '0.00'}</p>\r\n          <p>Ganancia Neta: L ${this.resumenCajaSucursal.total_neto?.toFixed(2) || '0.00'}</p>\r\n        </div>\r\n        \r\n        <div style=\"border-bottom: 1px solid #ccc; margin: 10px 0;\">\r\n          <h3>MOVIMIENTOS DE CAJA</h3>\r\n          <p>Entradas: L ${this.resumenCajaSucursal.movimientos_entrada?.toFixed(2) || '0.00'}</p>\r\n          <p>Salidas: L ${this.resumenCajaSucursal.movimientos_salida?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Balance Final: L ${this.resumenCajaSucursal.balance_final?.toFixed(2) || '0.00'}</strong></p>\r\n        </div>\r\n    `;\r\n\r\n    // Agregar sorteos pendientes\r\n    if (this.sorteosPendientesPagoSucursal.length > 0) {\r\n      contenido += `\r\n        <div style=\"border-bottom: 1px solid #ccc; margin: 10px 0;\">\r\n          <h3>SORTEOS PENDIENTES DE PAGO</h3>\r\n      `;\r\n\r\n      this.sorteosPendientesPagoSucursal.forEach(sorteo => {\r\n        contenido += `\r\n          <p>${sorteo.sorteo.toUpperCase()}: \r\n             Ganador ${sorteo.numero_ganador} - \r\n             A pagar: L ${sorteo.total_pagado?.toFixed(2) || '0.00'}\r\n          </p>\r\n        `;\r\n      });\r\n\r\n      contenido += `</div>`;\r\n    }\r\n\r\n    // Agregar movimientos del día\r\n    if (this.movimientosCajaSucursal.length > 0) {\r\n      contenido += `\r\n        <div style=\"margin: 10px 0;\">\r\n          <h3>MOVIMIENTOS DEL DÍA</h3>\r\n      `;\r\n\r\n      this.movimientosCajaSucursal.forEach(mov => {\r\n        const tipo = mov.tipo === 'entrada' ? 'ENTRADA' : 'SALIDA';\r\n        const signo = mov.tipo === 'entrada' ? '+' : '-';\r\n        contenido += `\r\n          <p style=\"font-size: 12px;\">\r\n            ${tipo}: ${signo}L ${mov.monto.toFixed(2)}<br>\r\n            ${mov.motivo}\r\n          </p>\r\n        `;\r\n      });\r\n\r\n      contenido += `</div>`;\r\n    }\r\n\r\n    contenido += `\r\n        <div style=\"text-align: center; margin-top: 20px; font-size: 12px;\">\r\n          <p>Generado: ${new Date().toLocaleString('es-HN')}</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    return contenido;\r\n  }\r\n\r\n  // Función para reimprimir el cierre diario de una sucursal\r\n  async imprimirCierreDiarioSucursal(): Promise<void> {\r\n    if (!this.cierreExistenteSucursal || !this.selectedSucursalForCierre) {\r\n      this.notificationService.showError('No hay cierre diario para reimprimir');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const contenido = this.generarContenidoCierreDiarioSucursal();\r\n      await this.printService.printContent(contenido);\r\n      this.notificationService.showSuccess('Cierre diario enviado a impresión');\r\n    } catch (error) {\r\n      console.error('Error al imprimir cierre diario:', error);\r\n      this.notificationService.showError('Error al imprimir el cierre diario');\r\n    }\r\n  }\r\n\r\n  // Función para generar el contenido del cierre diario de una sucursal\r\n  private generarContenidoCierreDiarioSucursal(): string {\r\n    const fecha = this.fechaCierreSeleccionada.toLocaleDateString('es-HN');\r\n    const sucursal = this.selectedSucursalForCierre;\r\n    const cierre = this.cierreExistenteSucursal;\r\n\r\n    let contenido = `\r\n      <div style=\"font-family: monospace; max-width: 300px; margin: 0 auto;\">\r\n        <div style=\"text-align: center; margin-bottom: 20px;\">\r\n          <h2>🔒 CIERRE DIARIO OFICIAL</h2>\r\n          <p><strong>Fecha:</strong> ${fecha}</p>\r\n          <p><strong>Sucursal:</strong> ${sucursal}</p>\r\n          <p><strong>Cerrado el:</strong> ${new Date(cierre.created_at || cierre.fecha_cierre || cierre.createdAt).toLocaleString('es-HN')}</p>\r\n          <hr style=\"border: 2px solid #333;\">\r\n        </div>\r\n        \r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>💰 TOTALES OFICIALES</h3>\r\n          <p><strong>Total Vendido:</strong> L ${(cierre.totalVendido || cierre.total_vendido)?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Total Pagado:</strong> L ${(cierre.totalPagado || cierre.total_pagado)?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Ganancia Neta:</strong> L ${(cierre.neto || cierre.total_neto || ((cierre.totalVendido || cierre.total_vendido || 0) - (cierre.totalPagado || cierre.total_pagado || 0)))?.toFixed(2) || '0.00'}</p>\r\n        </div>\r\n        \r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>💵 CONTROL DE EFECTIVO</h3>\r\n          <p><strong>Balance Calculado:</strong> L ${((cierre.neto || cierre.total_neto || ((cierre.totalVendido || cierre.total_vendido || 0) - (cierre.totalPagado || cierre.total_pagado || 0))) + (this.resumenCajaSucursal?.movimientos_entrada || 0) - (this.resumenCajaSucursal?.movimientos_salida || 0))?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Efectivo Reportado:</strong> L ${(cierre.efectivoReportado || cierre.efectivo_reportado)?.toFixed(2) || '0.00'}</p>\r\n          <p style=\"color: ${Math.abs(cierre.diferencia || 0) < 0.01 ? 'green' : 'red'}; font-weight: bold;\">\r\n            <strong>Diferencia:</strong> L ${(cierre.diferencia || 0)?.toFixed(2) || '0.00'}\r\n          </p>\r\n        </div>\r\n    `;\r\n\r\n    // Agregar resúmenes de sorteos si existen\r\n    if (cierre.sorteosMañana || cierre.sorteosTarde || cierre.sorteosNoche || cierre.sorteos_manana || cierre.sorteos_tarde || cierre.sorteos_noche) {\r\n      contenido += `\r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>🎰 RESUMEN DE SORTEOS</h3>\r\n      `;\r\n\r\n      const sorteoManana = cierre.sorteosMañana || cierre.sorteos_manana;\r\n      if (sorteoManana) {\r\n        contenido += `\r\n          <p style=\"margin: 5px 0;\">\r\n            <strong>MAÑANA:</strong><br>\r\n            Ganador: ${sorteoManana.numeroGanador || sorteoManana.numero_ganador || 'N/A'}<br>\r\n            Vendido: L ${(sorteoManana.totalVendido || sorteoManana.total_vendido)?.toFixed(2) || '0.00'}<br>\r\n            Pagado: L ${(sorteoManana.totalPagado || sorteoManana.total_pagado)?.toFixed(2) || '0.00'}\r\n          </p>\r\n        `;\r\n      }\r\n\r\n      const sorteoTarde = cierre.sorteosTarde || cierre.sorteos_tarde;\r\n      if (sorteoTarde) {\r\n        contenido += `\r\n          <p style=\"margin: 5px 0;\">\r\n            <strong>TARDE:</strong><br>\r\n            Ganador: ${sorteoTarde.numeroGanador || sorteoTarde.numero_ganador || 'N/A'}<br>\r\n            Vendido: L ${(sorteoTarde.totalVendido || sorteoTarde.total_vendido)?.toFixed(2) || '0.00'}<br>\r\n            Pagado: L ${(sorteoTarde.totalPagado || sorteoTarde.total_pagado)?.toFixed(2) || '0.00'}\r\n          </p>\r\n        `;\r\n      }\r\n\r\n      const sorteoNoche = cierre.sorteosNoche || cierre.sorteos_noche;\r\n      if (sorteoNoche) {\r\n        contenido += `\r\n          <p style=\"margin: 5px 0;\">\r\n            <strong>NOCHE:</strong><br>\r\n            Ganador: ${sorteoNoche.numeroGanador || sorteoNoche.numero_ganador || 'N/A'}<br>\r\n            Vendido: L ${(sorteoNoche.totalVendido || sorteoNoche.total_vendido)?.toFixed(2) || '0.00'}<br>\r\n            Pagado: L ${(sorteoNoche.totalPagado || sorteoNoche.total_pagado)?.toFixed(2) || '0.00'}\r\n          </p>\r\n        `;\r\n      }\r\n\r\n      contenido += `</div>`;\r\n    }\r\n\r\n    // Agregar movimientos del día si existen\r\n    if (this.movimientosCajaSucursal.length > 0) {\r\n      contenido += `\r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>💸 MOVIMIENTOS DE CAJA</h3>\r\n      `;\r\n\r\n      this.movimientosCajaSucursal.forEach(mov => {\r\n        const tipo = mov.tipo === 'entrada' ? 'ENTRADA' : 'SALIDA';\r\n        const signo = mov.tipo === 'entrada' ? '+' : '-';\r\n        contenido += `\r\n          <p style=\"margin: 5px 0; font-size: 12px;\">\r\n            <strong>${tipo}:</strong> ${signo}L ${mov.monto.toFixed(2)}<br>\r\n            ${mov.motivo}<br>\r\n            <small>${new Date(mov.fecha).toLocaleTimeString('es-HN')}</small>\r\n          </p>\r\n        `;\r\n      });\r\n\r\n      contenido += `</div>`;\r\n    }\r\n\r\n    // Agregar notas si existen\r\n    if (cierre.notas && cierre.notas.trim() !== '') {\r\n      contenido += `\r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>📝 OBSERVACIONES</h3>\r\n          <p style=\"font-style: italic;\">${cierre.notas}</p>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    contenido += `\r\n        <div style=\"text-align: center; margin-top: 20px; font-size: 12px; border-top: 2px solid #333; padding-top: 10px;\">\r\n          <p><strong>🔒 CIERRE OFICIAL</strong></p>\r\n          <p><strong>DOCUMENTO OFICIAL</strong></p>\r\n          <p>Reimpreso: ${new Date().toLocaleString('es-HN')}</p>\r\n          <hr style=\"border: 1px solid #333;\">\r\n          <p>Sistema de Lotería - Admin</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    return contenido;\r\n  }\r\n\r\n}\r\n","<!-- PANEL DE ADMINISTRACIÓN CON ACORDEÓN -->\r\n<div class=\"admin-interface\">\r\n  \r\n  <!-- Header -->\r\n  <div class=\"header-bar\">\r\n    <div class=\"admin-title\">\r\n      <h2><i class=\"fas fa-cog\"></i> Panel de Administración</h2>\r\n    </div>\r\n    \r\n    <div class=\"header-actions\">\r\n      <button class=\"btn-header btn-cierre-caja\" (click)=\"abrirModalCierreCaja()\"\r\n              [disabled]=\"showCierreCajaModal\">\r\n        <i class=\"fas fa-cash-register\"></i> 💰 Cierre de Caja\r\n        <span *ngIf=\"showCierreCajaModal\" style=\"margin-left: 10px; color: green;\">✅</span>\r\n      </button>\r\n      \r\n      <button class=\"btn-header btn-users\" (click)=\"navigateToUsers()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-users\"></i> Gestión de Usuarios\r\n      </button>\r\n      \r\n      <button class=\"btn-header btn-cerrar\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-sign-out-alt\"></i> Cerrar Sesión\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filtros de Fecha -->\r\n  <div class=\"filters-bar\">\r\n    <div class=\"filter-group\">\r\n      <label for=\"fechaDesde\">\r\n        <i class=\"fas fa-calendar-alt\"></i>\r\n        Desde:\r\n        <span class=\"loading-indicator\" *ngIf=\"isLoadingFilters\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n        </span>\r\n      </label>\r\n      <input type=\"datetime-local\" id=\"fechaDesde\" class=\"form-control\" \r\n             [(ngModel)]=\"fechaDesde\" (change)=\"onFiltroFechaChange()\"\r\n             [disabled]=\"isLoadingFilters\">\r\n    </div>\r\n    \r\n    <div class=\"filter-group\">\r\n      <label for=\"fechaHasta\">\r\n        <i class=\"fas fa-calendar-alt\"></i>\r\n        Hasta:\r\n        <span class=\"loading-indicator\" *ngIf=\"isLoadingFilters\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n        </span>\r\n      </label>\r\n      <input type=\"datetime-local\" id=\"fechaHasta\" class=\"form-control\" \r\n             [(ngModel)]=\"fechaHasta\" (change)=\"onFiltroFechaChange()\"\r\n             [disabled]=\"isLoadingFilters\">\r\n    </div>\r\n    \r\n    <div class=\"filter-group\">\r\n      <label for=\"sorteoFilter\">\r\n        <i class=\"fas fa-trophy\"></i>\r\n        Sorteo:\r\n        <span class=\"loading-indicator\" *ngIf=\"isLoadingFilters\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n        </span>\r\n      </label>\r\n      <select id=\"sorteoFilter\" class=\"form-control\" \r\n              [(ngModel)]=\"selectedSorteoFilter\" (change)=\"aplicarFiltros()\"\r\n              [disabled]=\"isLoadingFilters\">\r\n        <option value=\"\">Todos los sorteos</option>\r\n        <option *ngFor=\"let sorteo of sorteos\" [value]=\"sorteo.name\">{{ sorteo.label }}</option>\r\n      </select>\r\n    </div>\r\n    \r\n    <div class=\"filter-actions\">\r\n      <button class=\"btn-filter btn-primary\" (click)=\"aplicarFiltros()\" [disabled]=\"isLoading || isLoadingFilters\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoadingFilters; else searchIcon\"></i>\r\n        <ng-template #searchIcon><i class=\"fas fa-search\"></i></ng-template>\r\n        {{ isLoadingFilters ? 'Filtrando...' : 'Filtrar' }}\r\n      </button>\r\n      <button class=\"btn-filter btn-secondary\" (click)=\"limpiarFiltros()\" [disabled]=\"isLoading || isLoadingFilters\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoadingFilters; else eraserIcon\"></i>\r\n        <ng-template #eraserIcon><i class=\"fas fa-eraser\"></i></ng-template>\r\n        {{ isLoadingFilters ? 'Limpiando...' : 'Limpiar' }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Botones de Exportación -->\r\n    <div class=\"export-actions\">\r\n      <div class=\"export-label\">\r\n        <i class=\"fas fa-download\"></i>\r\n        Descargar Reporte Diario:\r\n      </div>\r\n      <button class=\"btn-export btn-excel\" (click)=\"downloadDailyReportExcel()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading; else excelIcon\"></i>\r\n        <ng-template #excelIcon><i class=\"fas fa-file-excel\"></i></ng-template>\r\n        Excel\r\n      </button>\r\n      <button class=\"btn-export btn-pdf\" (click)=\"downloadDailyReportPDF()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading; else pdfIcon\"></i>\r\n        <ng-template #pdfIcon><i class=\"fas fa-file-pdf\"></i></ng-template>\r\n        PDF\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Contenido Principal -->\r\n  <div class=\"main-content\">\r\n    \r\n    <!-- Cards de Resumen -->\r\n    <div class=\"summary-cards\">\r\n      <div class=\"summary-card vendido\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-chart-line\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getTotalVendido().toFixed(2) }}</h3>\r\n          <p>Total Vendido</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card pagado\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-coins\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getTotalPagado().toFixed(2) }}</h3>\r\n          <p>Total Pagado</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card ganancia\" [class.positive]=\"getGananciaNeta() > 0\" [class.negative]=\"getGananciaNeta() < 0\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-piggy-bank\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>L {{ getGananciaNeta().toFixed(2) }}</h3>\r\n          <p>Ganancia Neta</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card ventas\">\r\n        <div class=\"card-icon\">\r\n          <i class=\"fas fa-shopping-cart\"></i>\r\n        </div>\r\n        <div class=\"card-content\">\r\n          <h3>{{ getTotalVentas() }}</h3>\r\n          <p>Ventas Totales</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sección de Información del Número Ganador -->\r\n    <div class=\"numero-ganador-section\" *ngIf=\"resumenSucursales && resumenSucursales.length > 0\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-trophy\"></i> Información del Número Ganador</h3>\r\n        <div class=\"section-subtitle\">Detalle de pagos por sucursal</div>\r\n      </div>\r\n      \r\n      <div class=\"numero-ganador-card\">\r\n        <div class=\"numero-ganador-header\">\r\n          <div class=\"numero-display\">\r\n            <span class=\"numero-text\">{{ resumenSucursales[0]?.numero_ganador || '00' }}</span>\r\n            <span class=\"numero-label\">Número Ganador</span>\r\n          </div>\r\n          <div class=\"totales-general\">\r\n            <div class=\"total-item\">\r\n              <span class=\"total-value\">L {{ getTotalCantidadNumeroGanador().toFixed(2) }}</span>\r\n              <span class=\"total-label\">Total Comprado</span>\r\n            </div>\r\n            <div class=\"total-item\">\r\n              <span class=\"total-value\">L {{ getTotalPagadoGeneral() }}</span>\r\n              <span class=\"total-label\">Total a Pagar</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"sucursales-detalle\">\r\n          <div class=\"detalle-header\">\r\n            <span>Sucursal</span>\r\n            <span>Factor</span>\r\n            <span>Cantidad</span>\r\n            <span>Pago</span>\r\n          </div>\r\n          <div class=\"detalle-row\" *ngFor=\"let sucursal of resumenSucursales\">\r\n            <span class=\"sucursal-name\">{{ sucursal.sucursal }}</span>\r\n            <span class=\"factor-value\">{{ sucursal.factor_multiplicador }}x</span>\r\n            <span class=\"cantidad-value\">L {{ (sucursal.cantidad_numero_ganador || 0).toFixed(2) }}</span>\r\n            <span class=\"pago-value\">L {{ ((sucursal.cantidad_numero_ganador || 0) * (sucursal.factor_multiplicador || 1)).toFixed(2) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sección de Números Vendidos por Sorteo -->\r\n    <div class=\"numeros-vendidos-section\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-chart-bar\"></i> Números Vendidos por Sorteo</h3>\r\n        <div class=\"section-subtitle\">Vista en tiempo real de las ventas por sorteo</div>\r\n      </div>\r\n      \r\n      <div class=\"sorteos-numeros-grid\" *ngIf=\"sales.length > 0; else noVentasNumeros\">\r\n        <div *ngFor=\"let sorteoGroup of getNumbersSummaryBySorteoAndSucursal()\" class=\"sorteo-numeros-card\">\r\n          <div class=\"sorteo-numeros-header\">\r\n            <h4>{{ sorteoGroup.sorteo }}</h4>\r\n            <div class=\"sorteo-total\">\r\n              Total: L {{ getSorteoTotal(sorteoGroup).toFixed(2) }}\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"sucursales-container\">\r\n            <div *ngFor=\"let sucursalGroup of sorteoGroup.sucursales\" class=\"sucursal-group\">\r\n              <div class=\"sucursal-header\">\r\n                <h5>{{ sucursalGroup.sucursal }}</h5>\r\n                <span class=\"sucursal-total\">L {{ getSucursalTotal(sucursalGroup).toFixed(2) }}</span>\r\n              </div>\r\n              \r\n              <!-- Top 5 números más vendidos -->\r\n              <div class=\"top-numeros-section\">\r\n                <h6>\r\n                  <i class=\"fas fa-trophy\"></i>\r\n                  Top 5 Números Más Vendidos\r\n                </h6>\r\n                <div class=\"top-numeros-grid\">\r\n                  <div class=\"top-numero-card\" *ngFor=\"let numero of sucursalGroup.numeros.slice(0, 5); let i = index\">\r\n                    <div class=\"numero\">{{ numero.numero.toString().padStart(2, '0') }}</div>\r\n                    <div class=\"cantidad\">L {{ numero.totalVendido.toFixed(2) }}</div>\r\n                    <div class=\"posicion\">#{{ i + 1 }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Tablero completo de números 00-99 -->\r\n              <div class=\"tablero-numeros\">\r\n                <h6>\r\n                  <i class=\"fas fa-grid-3x3\"></i>\r\n                  Tablero Completo (00-99)\r\n                </h6>\r\n                <div class=\"numeros-grid-completo\">\r\n                  <div class=\"numero-cell\" \r\n                       *ngFor=\"let num of getAllNumbers()\"\r\n                       [class]=\"getNumeroIntensity(sucursalGroup, num)\"\r\n                       [title]=\"'Número ' + num.toString().padStart(2, '0') + ': L ' + getNumeroVenta(sucursalGroup, num).toFixed(2)\">\r\n                    <span class=\"numero-label\">{{ num.toString().padStart(2, '0') }}</span>\r\n                    <span class=\"numero-venta\">L {{ getNumeroVenta(sucursalGroup, num).toFixed(2) }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <ng-template #noVentasNumeros>\r\n        <div class=\"no-data-message\">\r\n          <i class=\"fas fa-chart-bar\"></i>\r\n          <h4>No hay ventas por números para mostrar</h4>\r\n          <p>Las estadísticas aparecerán cuando haya ventas registradas</p>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n\r\n    <!-- Sección de Sorteos con estilo minimalista -->\r\n    <div class=\"sorteos-section\">\r\n      <div class=\"section-header\">\r\n        <h3><i class=\"fas fa-dice\"></i> Gestión de Sorteos</h3>\r\n      </div>\r\n      \r\n      <div class=\"sorteos-grid\">\r\n        <div *ngFor=\"let sorteo of sorteos\" class=\"sorteo-card\">\r\n          <div class=\"sorteo-header\">\r\n            <h4>{{ sorteo.label }}</h4>\r\n            <div class=\"sorteo-status\">\r\n              <span class=\"status-badge\" [class.open]=\"isSorteoOpen(sorteo)\" [class.closed]=\"!isSorteoOpen(sorteo)\">\r\n                {{ isSorteoOpen(sorteo) ? 'Abierto' : 'Cerrado' }}\r\n              </span>\r\n              <span class=\"close-time\">{{ sorteo.closeTime }}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"sorteo-content\">\r\n            <!-- Mostrar resultados solo si hay datos GUARDADOS en BD -->\r\n            <div *ngIf=\"hasSavedWinner(sorteo); else setWinner\">\r\n              <!-- Resultados del sorteo -->\r\n              <div class=\"winner-section\">\r\n                <div class=\"winner-number\">\r\n                  <i class=\"fas fa-trophy\"></i>\r\n                  <span>{{ getSorteoData(sorteo)?.numeroGanador || 'N/A' }}</span>\r\n                </div>\r\n                <div class=\"factor\">Factor: {{ getSorteoData(sorteo)?.factorMultiplicador || 70 }}</div>\r\n              </div>\r\n            \r\n            </div>\r\n            \r\n            <ng-template #setWinner>\r\n              <!-- Formulario para establecer ganador solo si no está abierto -->\r\n              <div *ngIf=\"!isSorteoOpen(sorteo)\" class=\"winner-form\">\r\n                <div class=\"form-group\">\r\n                  <label>Número Ganador:</label>\r\n                  <input type=\"number\" class=\"form-input\" min=\"1\" max=\"99\" \r\n                         [(ngModel)]=\"winningNumbers[sorteo.name]\" \r\n                         [disabled]=\"isLoading\"\r\n                         placeholder=\"Ingrese número (1-99)\">\r\n                </div>\r\n                <button class=\"btn-set-winner\" (click)=\"openFactorsModal(sorteo.name, +winningNumbers[sorteo.name])\" \r\n                        [disabled]=\"!winningNumbers[sorteo.name] || isLoading\">\r\n                  <i class=\"fas fa-cog\"></i> \r\n                  <span *ngIf=\"isLoading\">Cargando...</span>\r\n                  <span *ngIf=\"!isLoading\">Configurar Factores</span>\r\n                </button>\r\n              </div>\r\n              \r\n              <!-- Mensaje cuando el sorteo está abierto -->\r\n              <div *ngIf=\"isSorteoOpen(sorteo)\" class=\"sorteo-open-message\">\r\n                <i class=\"fas fa-clock\"></i>\r\n                <span>Sorteo abierto - Esperando cierre</span>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Componente de Resumen de Sorteos -->\r\n    <app-resumen-sorteos></app-resumen-sorteos>\r\n\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para crear/editar usuario -->\r\n<div class=\"modal fade\" [class.show]=\"showUserModal\" [style.display]=\"showUserModal ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" (click)=\"showUserModal && $event.target === $event.currentTarget && closeUserModal()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-user\"></i> {{ editingUser ? 'Editar Usuario' : 'Crear Usuario' }}\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"closeUserModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #userForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"userEmail\">Email:</label>\r\n            <input type=\"email\" id=\"userEmail\" class=\"form-input\" required\r\n                   [(ngModel)]=\"userFormData.email\" name=\"email\" \r\n                   placeholder=\"usuario@ejemplo.com\">\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"userName\">Nombre:</label>\r\n            <input type=\"text\" id=\"userName\" class=\"form-input\"\r\n                   [(ngModel)]=\"userFormData.nombre\" name=\"nombre\" \r\n                   placeholder=\"Nombre completo del usuario\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\" *ngIf=\"!editingUser\">\r\n            <label for=\"userPassword\">Contraseña:</label>\r\n            <input type=\"password\" id=\"userPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"userFormData.password\" name=\"password\" \r\n                   placeholder=\"Contraseña segura\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"userRole\">Rol:</label>\r\n            <select id=\"userRole\" class=\"form-input\" \r\n                    [(ngModel)]=\"userFormData.role\" name=\"role\" required>\r\n              <option value=\"admin\">Administrador</option>\r\n              <option value=\"sucursal\">Sucursal</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"form-group\" *ngIf=\"userFormData.role === 'sucursal'\">\r\n            <label for=\"userSucursal\">Sucursal:</label>\r\n            <input type=\"text\" id=\"userSucursal\" class=\"form-input\" \r\n                   [(ngModel)]=\"userFormData.sucursal\" name=\"sucursal\" \r\n                   placeholder=\"Nombre de la sucursal\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"checkbox-label\">\r\n              <input type=\"checkbox\" [(ngModel)]=\"userFormData.active\" name=\"active\">\r\n              <span class=\"checkmark\"></span>\r\n              Usuario Activo\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closeUserModal()\">\r\n          <i class=\"fas fa-times\"></i> Cancelar\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"saveUser()\" \r\n                [disabled]=\"!userForm.valid || isLoading\">\r\n          <i class=\"fas fa-save\"></i> {{ editingUser ? 'Actualizar' : 'Crear' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n \r\n\r\n<!-- Modal para cambiar contraseña de usuario -->\r\n<div class=\"modal fade\" [class.show]=\"showPasswordModal\" [style.display]=\"showPasswordModal ? 'block' : 'none'\" \r\n     tabindex=\"-1\" role=\"dialog\" (click)=\"showPasswordModal && $event.target === $event.currentTarget && closePasswordModal()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-key\"></i> Cambiar Contraseña\r\n        </h5>\r\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"closePasswordModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #passwordForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"newPassword\">Nueva Contraseña:</label>\r\n            <input type=\"password\" id=\"newPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"newPassword\" name=\"newPassword\" \r\n                   placeholder=\"Ingrese la nueva contraseña\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"confirmPassword\">Confirmar Contraseña:</label>\r\n            <input type=\"password\" id=\"confirmPassword\" class=\"form-input\" required\r\n                   [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" \r\n                   placeholder=\"Confirme la nueva contraseña\">\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closePasswordModal()\">\r\n          <i class=\"fas fa-times\"></i> Cancelar\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"changeUserPassword()\" \r\n                [disabled]=\"!passwordForm.valid || newPassword !== confirmPassword || isLoading\">\r\n          <i class=\"fas fa-save\"></i> Cambiar Contraseña\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- MODAL DE DETALLES DE VENTA -->\r\n<div class=\"modal\" [style.display]=\"showSaleDetailModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showSaleDetailModal\" \r\n     (keydown.escape)=\"closeSaleDetailModal()\"\r\n     tabindex=\"0\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\"><i class=\"fas fa-receipt\"></i> Detalles de Venta</h3>\r\n        <button type=\"button\" class=\"btn-close\" (click)=\"closeSaleDetailModal()\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"modal-body\" *ngIf=\"selectedSaleForDetail\">\r\n        <!-- Información General -->\r\n        <div class=\"sale-info-grid\">\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Recibo:</span>\r\n            <span class=\"value\">{{ selectedSaleForDetail.numeroRecibo }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Correlativo:</span>\r\n            <span class=\"value\">{{ selectedSaleForDetail.correlativo }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Fecha:</span>\r\n            <span class=\"value\">{{ formatDateTime(selectedSaleForDetail.createdAt) }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Sucursal:</span>\r\n            <span class=\"value\">{{ selectedSaleForDetail.sucursal }}</span>\r\n          </div>\r\n          <div class=\"info-row\">\r\n            <span class=\"label\">Sorteo:</span>\r\n            <span class=\"value text-capitalize\">{{ selectedSaleForDetail.sorteo }}</span>\r\n          </div>\r\n          <div class=\"info-row total-row\">\r\n            <span class=\"label\">Total:</span>\r\n            <span class=\"value\">L {{ selectedSaleForDetail.total.toFixed(2) }}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Números Jugados -->\r\n        <div class=\"numbers-section\" *ngIf=\"selectedSaleDetails.length > 0\">\r\n          <h4><i class=\"fas fa-list\"></i> Números Jugados</h4>\r\n          <div class=\"numbers-grid\">\r\n            <div class=\"number-item\" *ngFor=\"let detail of selectedSaleDetails; trackBy: trackBySaleDetail\">\r\n              <div class=\"number-card\">\r\n                <div class=\"number\">{{ detail.numero.toString().padStart(2, '0') }}</div>\r\n                <div class=\"amount\">L {{ detail.monto.toFixed(2) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"numbers-summary\">\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">Cantidad de números:</span>\r\n              <span class=\"value\">{{ selectedSaleDetails.length }}</span>\r\n            </div>\r\n            <div class=\"summary-item\">\r\n              <span class=\"label\">Total apostado:</span>\r\n              <span class=\"value\">L {{ getTotalNumeros().toFixed(2) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"no-numbers\" *ngIf=\"selectedSaleDetails.length === 0\">\r\n          <i class=\"fas fa-exclamation-triangle\"></i>\r\n          <p>No se encontraron números para esta venta</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn-modal btn-primary\" (click)=\"reprintReceipt(selectedSaleForDetail!)\" \r\n                [disabled]=\"isLoading\">\r\n          <i class=\"fas fa-print\"></i> Reimprimir Recibo\r\n        </button>\r\n        <button type=\"button\" class=\"btn-modal btn-secondary\" (click)=\"closeSaleDetailModal()\">\r\n          <i class=\"fas fa-times\"></i> Cerrar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para configurar factores por sucursal -->\r\n<div class=\"modal-overlay\" *ngIf=\"showFactorsModal\" (click)=\"closeFactorsModal()\">\r\n  <div class=\"modal-container factors-modal\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>\r\n        <i class=\"fas fa-calculator\"></i>\r\n        Configurar Factores por Sucursal\r\n      </h3>\r\n      <div class=\"sorteo-info\" *ngIf=\"currentSorteoForFactors\">\r\n        <div class=\"sorteo-badge\">{{ currentSorteoForFactors.sorteo.label }}</div>\r\n        <div class=\"winning-number\">Número Ganador: {{ currentSorteoForFactors.winningNumber.padStart(2, '0') }}</div>\r\n      </div>\r\n      <button class=\"btn-close\" (click)=\"closeFactorsModal()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n      <div class=\"factors-instruction\">\r\n        <i class=\"fas fa-info-circle\"></i>\r\n        <p>Configure el factor multiplicador para cada sucursal. Este factor determinará cuánto se paga por cada número ganador.</p>\r\n      </div>\r\n\r\n      <div class=\"factors-list\" *ngIf=\"sucursalesFactores.length > 0\">\r\n        <div class=\"factor-item\" *ngFor=\"let sucursal of getUniqueSucursales(); let i = index\">\r\n          <div class=\"sucursal-info\">\r\n            <div class=\"sucursal-name\">\r\n              <i class=\"fas fa-store\"></i>\r\n              {{ sucursal }}\r\n            </div>\r\n            <div class=\"sucursal-users\" *ngIf=\"hasSucursalUsers(sucursal)\">\r\n              <small>\r\n                Usuarios: \r\n                <span *ngFor=\"let user of getUsersBySucursal(sucursal); let last = last\">\r\n                  {{ user.email }}{{ !last ? ', ' : '' }}\r\n                </span>\r\n              </small>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"factor-input\">\r\n            <label>Factor (ej: 70)</label>\r\n            <div class=\"input-with-x\">\r\n              <input \r\n                type=\"number\" \r\n                min=\"1\" \r\n                max=\"999\" \r\n                step=\"0.1\"\r\n                [value]=\"factoresPorSucursal[sucursal] || 75\" \r\n                (input)=\"updateFactorForSucursal(sucursal, $any($event.target).value)\"\r\n                placeholder=\"70\">\r\n              <span class=\"x-multiplier\">x</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"loading-factors\" *ngIf=\"isLoading && sucursalesFactores.length === 0\">\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n        <p>Cargando configuración de sucursales...</p>\r\n      </div>\r\n\r\n      <div class=\"no-sucursales\" *ngIf=\"!isLoading && sucursalesFactores.length === 0\">\r\n        <i class=\"fas fa-exclamation-triangle\"></i>\r\n        <p>No se encontraron sucursales activas</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-modal btn-secondary\" (click)=\"closeFactorsModal()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-times\"></i>\r\n        Cancelar\r\n      </button>\r\n      <button class=\"btn-modal btn-primary\" (click)=\"confirmWinningNumberWithFactors()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading\"></i>\r\n        <i class=\"fas fa-trophy\" *ngIf=\"!isLoading\"></i>\r\n        {{ isLoading ? 'Estableciendo...' : 'Establecer Ganador' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para mostrar resumen por sucursales -->\r\n<div class=\"modal-overlay\" *ngIf=\"showResumenModal\" (click)=\"closeResumenModal()\">\r\n  <div class=\"modal-container resumen-modal\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>\r\n        <i class=\"fas fa-chart-bar\"></i>\r\n        Resumen de Cierre por Sucursales\r\n      </h3>\r\n      <button type=\"button\" class=\"btn-close\" (click)=\"closeResumenModal()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n    \r\n    <div class=\"modal-body\">\r\n      <div class=\"sorteo-info\">\r\n        <h4>{{ currentSorteoForResumen }}</h4>\r\n      </div>\r\n      \r\n      <div class=\"resumen-table\">\r\n        <div class=\"table-header\">\r\n          <div class=\"col-sucursal\">Sucursal</div>\r\n          <div class=\"col-factor\">Factor</div>\r\n          <div class=\"col-numero-ganador\">Cantidad #{{ resumenSucursales[0]?.numero_ganador || '00' }}</div>\r\n          <div class=\"col-vendido\">Total Vendido</div>\r\n          <div class=\"col-pagado\">Total Pagado</div>\r\n          <div class=\"col-ganancia\">Ganancia Neta</div>\r\n        </div>\r\n        \r\n        <div class=\"table-row\" *ngFor=\"let sucursal of resumenSucursales\">\r\n          <div class=\"col-sucursal\">{{ sucursal.sucursal }}</div>\r\n          <div class=\"col-factor\">{{ sucursal.factor_multiplicador }}x</div>\r\n          <div class=\"col-numero-ganador\">\r\n            <span class=\"cantidad-numero\">L {{ (sucursal.cantidad_numero_ganador || 0).toFixed(2) }}</span>\r\n            <small class=\"multiplicacion\">x{{ sucursal.factor_multiplicador }} = L {{ ((sucursal.cantidad_numero_ganador || 0) * (sucursal.factor_multiplicador || 1)).toFixed(2) }}</small>\r\n          </div>\r\n          <div class=\"col-vendido\">L {{ sucursal.total_vendido?.toFixed(2) || '0.00' }}</div>\r\n          <div class=\"col-pagado\">L {{ sucursal.total_pagado?.toFixed(2) || '0.00' }}</div>\r\n          <div class=\"col-ganancia\" \r\n               [class.positive]=\"(sucursal.ganancia_neta || 0) > 0\"\r\n               [class.negative]=\"(sucursal.ganancia_neta || 0) < 0\">\r\n            L {{ sucursal.ganancia_neta?.toFixed(2) || '0.00' }}\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Totales generales -->\r\n        <div class=\"table-footer\">\r\n          <div class=\"col-sucursal\"><strong>TOTAL GENERAL</strong></div>\r\n          <div class=\"col-factor\">-</div>\r\n          <div class=\"col-numero-ganador\">\r\n            <strong>L {{ getTotalCantidadNumeroGanador().toFixed(2) }}</strong>\r\n          </div>\r\n          <div class=\"col-vendido\">\r\n            <strong>L {{ getTotalVendidoGeneral() }}</strong>\r\n          </div>\r\n          <div class=\"col-pagado\">\r\n            <strong>L {{ getTotalPagadoGeneral() }}</strong>\r\n          </div>\r\n          <div class=\"col-ganancia\"\r\n               [class.positive]=\"getGananciaTotalGeneral() > 0\"\r\n               [class.negative]=\"getGananciaTotalGeneral() < 0\">\r\n            <strong>L {{ getGananciaTotalGeneral().toFixed(2) }}</strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-modal btn-primary\" (click)=\"closeResumenModal()\">\r\n        <i class=\"fas fa-check\"></i>\r\n        Entendido\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Bottom Sheet de Cierre de Caja por Sucursal -->\r\n<div class=\"bottom-sheet-overlay\" \r\n     [class.show]=\"showCierreCajaModal\" \r\n     [hidden]=\"!showCierreCajaModal\"\r\n     (click)=\"showCierreCajaModal && $event.target === $event.currentTarget && cerrarModalCierreCaja()\">\r\n  \r\n  <div class=\"bottom-sheet-container\" [class.show]=\"showCierreCajaModal\">\r\n    <!-- Handle para arrastrar -->\r\n    <div class=\"bottom-sheet-handle\">\r\n      <div class=\"handle-bar\"></div>\r\n    </div>\r\n    \r\n    <!-- Header del Bottom Sheet -->\r\n    <div class=\"bottom-sheet-header\">\r\n      <div class=\"header-content\">\r\n        <h4 class=\"sheet-title\">\r\n          <i class=\"fas fa-cash-register\"></i>\r\n          💰 Cierre de Caja\r\n        </h4>\r\n        <button type=\"button\" class=\"btn-close-sheet\" (click)=\"cerrarModalCierreCaja()\" aria-label=\"Close\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Contenido del Bottom Sheet -->\r\n    <div class=\"bottom-sheet-body\">\r\n      <!-- Selección de Sucursal y Fecha -->\r\n      <div class=\"selection-container\">\r\n        <div class=\"selection-grid\">\r\n          <div class=\"selection-item\">\r\n            <label for=\"sucursalSelector\" class=\"selection-label\">\r\n              <i class=\"fas fa-store\"></i> Sucursal\r\n            </label>\r\n            <select id=\"sucursalSelector\" \r\n                    class=\"selection-input\" \r\n                    [(ngModel)]=\"selectedSucursalForCierre\"\r\n                    (change)=\"onSucursalSeleccionada()\"\r\n                    [disabled]=\"loadingCierreCaja\">\r\n              <option value=\"\">-- Seleccione --</option>\r\n              <option *ngFor=\"let sucursal of sucursalesDisponibles\" [value]=\"sucursal\">\r\n                {{ sucursal }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"selection-item\">\r\n            <label for=\"fechaSelector\" class=\"selection-label\">\r\n              <i class=\"fas fa-calendar\"></i> Fecha\r\n            </label>\r\n            <input type=\"date\" \r\n                   id=\"fechaSelector\"\r\n                   class=\"selection-input\" \r\n                   [(ngModel)]=\"fechaCierreSeleccionada\"\r\n                   (change)=\"onFechaCierreChange()\"\r\n                   [disabled]=\"loadingCierreCaja\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Estado de Carga -->\r\n      <div *ngIf=\"loadingCierreCaja\" class=\"loading-section\">\r\n        <div class=\"loading-content\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n          <span>Cargando datos...</span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Contenido Principal del Cierre de Caja -->\r\n      <div *ngIf=\"!loadingCierreCaja && selectedSucursalForCierre && resumenCajaSucursal\" class=\"cierre-content\">\r\n        \r\n        <!-- Info Header -->\r\n        <div class=\"info-header\">\r\n          <div class=\"date-info\">\r\n            <i class=\"fas fa-calendar\"></i>\r\n            {{ fechaCierreSeleccionada | date:'dd/MM/yyyy' }}\r\n          </div>\r\n          <div class=\"sucursal-info\">\r\n            <i class=\"fas fa-store\"></i>\r\n            {{ selectedSucursalForCierre }}\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Estado del Cierre -->\r\n        <div class=\"cierre-status-indicator\" \r\n             [ngClass]=\"cierreExistenteSucursal ? 'status-closed' : 'status-open'\">\r\n          <div class=\"status-content\">\r\n            <i class=\"fas\" [ngClass]=\"cierreExistenteSucursal ? 'fa-lock' : 'fa-clock'\"></i>\r\n            <span>{{ cierreExistenteSucursal ? 'Cierre ya realizado' : 'Cierre pendiente' }}</span>\r\n            <span *ngIf=\"cierreExistenteSucursal\" class=\"status-date\">\r\n              ({{ formatFechaCierre(cierreExistenteSucursal) }})\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Resumen Financiero Cards -->\r\n        <div class=\"financial-summary\">\r\n          <div class=\"summary-title\">\r\n            <i class=\"fas fa-chart-line\"></i>\r\n            Resumen del Día\r\n          </div>\r\n          \r\n          <div class=\"summary-cards\">\r\n            <div class=\"summary-card vendido\">\r\n              <div class=\"card-icon\">💵</div>\r\n              <div class=\"card-content\">\r\n                <div class=\"card-label\">Total Vendido</div>\r\n                <div class=\"card-amount positive\">{{ formatearMontoSucursal(resumenCajaSucursal.total_vendido || 0) }}</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"summary-card pagado\">\r\n              <div class=\"card-icon\">💰</div>\r\n              <div class=\"card-content\">\r\n                <div class=\"card-label\">Total Pagado</div>\r\n                <div class=\"card-amount negative\">{{ formatearMontoSucursal(resumenCajaSucursal.total_pagado || 0) }}</div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"summary-card ganancia\">\r\n              <div class=\"card-icon\">📈</div>\r\n              <div class=\"card-content\">\r\n                <div class=\"card-label\">Ganancia Neta</div>\r\n                <div class=\"card-amount\" [class.positive]=\"(resumenCajaSucursal.total_neto || 0) > 0\" [class.negative]=\"(resumenCajaSucursal.total_neto || 0) < 0\">\r\n                  {{ formatearMontoSucursal(resumenCajaSucursal.total_neto || 0) }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"summary-card balance\">\r\n              <div class=\"card-icon\">🏦</div>\r\n              <div class=\"card-content\">\r\n                <div class=\"card-label\">Balance Final</div>\r\n                <div class=\"card-amount balance\">{{ formatearMontoSucursal(resumenCajaSucursal.balance_final || 0) }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Sorteos del Día -->\r\n        <div class=\"section\" *ngIf=\"sorteosPendientesPagoSucursal.length > 0\">\r\n          <div class=\"section-header\">\r\n            <h5>\r\n              <i class=\"fas fa-dice\"></i>\r\n              Sorteos del Día\r\n              <span class=\"badge\">{{ sorteosPendientesPagoSucursal.length }}</span>\r\n            </h5>\r\n          </div>\r\n          <div class=\"pending-list\">\r\n            <div *ngFor=\"let sorteo of sorteosPendientesPagoSucursal\" class=\"pending-item-detailed\">\r\n              <div class=\"sorteo-header\">\r\n                <div class=\"sorteo-name\">{{ sorteo.sorteo.toUpperCase() }}</div>\r\n                <div class=\"sorteo-status\" \r\n                     [ngClass]=\"{\r\n                       'status-paid': sorteo.ya_pagado,\r\n                       'status-pending': !sorteo.ya_pagado\r\n                     }\">\r\n                  <i class=\"fas\" [ngClass]=\"{\r\n                    'fa-check-circle': sorteo.ya_pagado,\r\n                    'fa-exclamation-circle': !sorteo.ya_pagado\r\n                  }\"></i>\r\n                  {{ sorteo.ya_pagado ? 'Ya Pagado' : 'Pendiente de Pago' }}\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"sorteo-calculation\">\r\n                <div class=\"calculation-row\">\r\n                  <div class=\"calc-item\">\r\n                    <div class=\"calc-label\">\r\n                      <i class=\"fas fa-trophy\"></i>\r\n                      Número Ganador\r\n                    </div>\r\n                    <div class=\"calc-value winning-number\">\r\n                      #{{ sorteo.numero_ganador }}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div class=\"calc-item\">\r\n                    <div class=\"calc-label\">\r\n                      <i class=\"fas fa-shopping-cart\"></i>\r\n                      Cantidad Comprada\r\n                    </div>\r\n                    <div class=\"calc-value\">\r\n                      L {{ sorteo.cantidad_comprada_numero_ganador?.toFixed(2) || '0.00' }}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div class=\"calc-item\">\r\n                    <div class=\"calc-label\">\r\n                      <i class=\"fas fa-times\"></i>\r\n                      Factor\r\n                    </div>\r\n                    <div class=\"calc-value factor\">\r\n                      {{ sorteo.factor_multiplicador }}x\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"calculation-formula\">\r\n                  <div class=\"formula-display\">\r\n                    <span class=\"formula-part\">L {{ sorteo.cantidad_comprada_numero_ganador?.toFixed(2) || '0.00' }}</span>\r\n                    <span class=\"formula-operator\">×</span>\r\n                    <span class=\"formula-part\">{{ sorteo.factor_multiplicador }}</span>\r\n                    <span class=\"formula-operator\">=</span>\r\n                    <span class=\"formula-result\">L {{ sorteo.total_calculado_pagar?.toFixed(2) || '0.00' }}</span>\r\n                  </div>\r\n                  <div class=\"formula-label\">Total a Pagar</div>\r\n                </div>\r\n                \r\n                <!-- Verificación de cálculo -->\r\n                <div class=\"calculation-verification\">\r\n                  <div class=\"verification-success\" \r\n                       *ngIf=\"sorteo.calculo_detalle?.coincide\">\r\n                    <i class=\"fas fa-check-circle\"></i>\r\n                    <span>✅ Cálculo correcto: L {{ sorteo.total_calculado_pagar?.toFixed(2) || '0.00' }}</span>\r\n                  </div>\r\n                  \r\n                  <div class=\"verification-warning\" \r\n                       *ngIf=\"!sorteo.calculo_detalle?.coincide\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>\r\n                    <div class=\"warning-content\">\r\n                      <div class=\"warning-title\">⚠️ Diferencia encontrada</div>\r\n                      <div class=\"warning-details\">\r\n                        <span>Calculado: L {{ sorteo.total_calculado_pagar?.toFixed(2) || '0.00' }}</span>\r\n                        <span>Original: L {{ sorteo.total_pagado?.toFixed(2) || '0.00' }}</span>\r\n                        <span class=\"difference\">Diferencia: L {{ sorteo.calculo_detalle?.diferencia?.toFixed(2) || '0.00' }}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Movimientos del Día -->\r\n        <div class=\"section\" *ngIf=\"movimientosCajaSucursal.length > 0\">\r\n          <div class=\"section-header\">\r\n            <h5>\r\n              <i class=\"fas fa-exchange-alt\"></i>\r\n              Movimientos del Día\r\n              <span class=\"badge\">{{ movimientosCajaSucursal.length }}</span>\r\n            </h5>\r\n          </div>\r\n          <div class=\"movements-list\">\r\n            <div *ngFor=\"let movimiento of movimientosCajaSucursal\" class=\"movement-item\">\r\n              <div class=\"movement-time\">\r\n                {{ movimiento.fecha | date:'HH:mm' }}\r\n              </div>\r\n              <div class=\"movement-info\">\r\n                <div class=\"movement-type\" [ngClass]=\"getTipoMovimientoClassSucursal(movimiento.tipo)\">\r\n                  {{ getTipoMovimientoTextoSucursal(movimiento.tipo) }}\r\n                </div>\r\n                <div class=\"movement-reason\">{{ movimiento.motivo }}</div>\r\n              </div>\r\n              <div class=\"movement-amount\" [ngClass]=\"getTipoMovimientoClassSucursal(movimiento.tipo)\">\r\n                {{ movimiento.tipo === 'entrada' ? '+' : '-' }}{{ formatearMontoSucursal(movimiento.monto) }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Mensajes informativos -->\r\n        <div *ngIf=\"movimientosCajaSucursal.length === 0\" class=\"info-message\">\r\n          <i class=\"fas fa-info-circle\"></i>\r\n          No hay movimientos registrados para hoy.\r\n        </div>\r\n\r\n        <div *ngIf=\"sorteosPendientesPagoSucursal.length === 0\" class=\"info-message\">\r\n          <i class=\"fas fa-info-circle\"></i>\r\n          No hay sorteos con premios para mostrar.\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <!-- Mensaje de selección -->\r\n      <div *ngIf=\"!selectedSucursalForCierre && !loadingCierreCaja\" class=\"empty-state\">\r\n        <div class=\"empty-icon\">\r\n          <i class=\"fas fa-store\"></i>\r\n        </div>\r\n        <h5>Seleccione una sucursal</h5>\r\n        <p>Elija una sucursal para ver su cierre de caja</p>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n    <!-- Footer del Bottom Sheet -->\r\n    <div class=\"bottom-sheet-footer\" *ngIf=\"resumenCajaSucursal\">\r\n      <button class=\"btn-sheet btn-secondary\" (click)=\"cerrarModalCierreCaja()\">\r\n        <i class=\"fas fa-times\"></i>\r\n        Cerrar\r\n      </button>\r\n      <button class=\"btn-sheet btn-primary\" (click)=\"imprimirResumenCajaSucursal()\">\r\n        <i class=\"fas fa-print\"></i>\r\n        {{ cierreExistenteSucursal ? 'Reimprimir Resumen' : 'Imprimir Resumen' }}\r\n      </button>\r\n      <button \r\n        class=\"btn-sheet btn-info\" \r\n        (click)=\"imprimirCierreDiarioSucursal()\"\r\n        [disabled]=\"!cierreExistenteSucursal\"\r\n        *ngIf=\"cierreExistenteSucursal\">\r\n        <i class=\"fas fa-file-alt\"></i>\r\n        Reimprimir Cierre\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport {\r\n    CierreDiario,\r\n    MovimientoCaja,\r\n    PagoSorteo,\r\n    SorteoResumen,\r\n    User\r\n} from '../../models/interfaces';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-cierre-caja',\r\n    templateUrl: './cierre-caja.component.html',\r\n    styleUrls: ['./cierre-caja.component.scss']\r\n})\r\nexport class CierreCajaComponent implements OnInit, OnDestroy {\r\n    currentUser: User | null = null;\r\n    fechaHoy: Date = new Date();\r\n\r\n    // Estado del cierre\r\n    cierreExistente: CierreDiario | null = null;\r\n    yaCerrado = false;\r\n\r\n    // Datos del resumen\r\n    resumenCaja: any = null;\r\n    sorteosPendientesPago: any[] = [];\r\n    sorteosPagados: string[] = []; // Array para llevar control de sorteos ya pagados\r\n    movimientosDelDia: MovimientoCaja[] = [];\r\n\r\n    // Modal states\r\n    showPagoSorteoModal = false;\r\n    showMovimientoModal = false;\r\n    showCierreModal = false;\r\n    showConfirmPagoModal = false;\r\n\r\n    // Formularios\r\n    sorteoParaPago: PagoSorteo | null = null;\r\n    nuevoMovimiento: Partial<MovimientoCaja> = {\r\n        tipo: 'entrada',\r\n        motivo: '',\r\n        monto: 0\r\n    };\r\n    datosConfirmPago = {\r\n        nombreReceptor: '',\r\n        montoExacto: 0\r\n    };\r\n\r\n    // Cierre final\r\n    datosCierre = {\r\n        efectivoReportado: 0,\r\n        notas: ''\r\n    };\r\n\r\n    // Loading states\r\n    loading = false;\r\n    procesandoPago = false;\r\n\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(\r\n        private supabaseService: SupabaseService,\r\n        private notificationService: NotificationService,\r\n        private printService: PrintService,\r\n        private cdr: ChangeDetectorRef\r\n        \r\n    ) { }\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        try {\r\n            this.loading = true;\r\n            this.currentUser = await this.supabaseService.getCurrentUser();\r\n\r\n            if (!this.currentUser || this.currentUser.role !== 'sucursal') {\r\n                this.notificationService.showError('Acceso denegado. Solo usuarios de sucursal pueden acceder.');\r\n                return;\r\n            }\r\n\r\n            await this.cargarDatosDelDia();\r\n        } catch (error) {\r\n            console.error('Error al inicializar cierre de caja:', error);\r\n            this.notificationService.showError('Error al cargar los datos del día');\r\n        } finally {\r\n            this.loading = false;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    private async cargarDatosDelDia(): Promise<void> {\r\n        if (!this.currentUser?.sucursal) return;\r\n\r\n        try {\r\n            // Verificar si ya existe un cierre para hoy\r\n            this.cierreExistente = await this.supabaseService.obtenerCierreDiario(\r\n                this.fechaHoy,\r\n                this.currentUser.sucursal\r\n            );\r\n            this.yaCerrado = !!this.cierreExistente;\r\n\r\n            // Cargar resumen de caja\r\n            this.resumenCaja = await this.supabaseService.calcularResumenCajaDiario(\r\n                this.fechaHoy,\r\n                this.currentUser.sucursal\r\n            );\r\n\r\n            // Cargar sorteos pendientes de pago\r\n            this.sorteosPendientesPago = await this.supabaseService.obtenerSorteosPendientesPago(\r\n                this.fechaHoy,\r\n                this.currentUser.sucursal\r\n            );\r\n\r\n            // Cargar movimientos del día\r\n            this.movimientosDelDia = await this.supabaseService.obtenerMovimientosCaja(\r\n                this.fechaHoy,\r\n                this.currentUser.sucursal\r\n            );\r\n\r\n            // Identificar sorteos ya pagados basándose en los movimientos\r\n            this.identificarSorteosPagados();\r\n\r\n            // Forzar actualización de la UI después de cargar todos los datos\r\n            this.cdr.markForCheck();\r\n\r\n        } catch (error) {\r\n            console.error('Error al cargar datos del día:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // ================== PAGO DE SORTEOS ==================\r\n\r\n    async abrirModalPagoSorteo(sorteo: any): Promise<void> {\r\n        try {\r\n            // Obtener venta específica del número ganador\r\n            let ventaPorNumero = 0;\r\n            if (sorteo.numero_ganador && this.currentUser?.sucursal) {\r\n                const resumenSorteo = await this.supabaseService.obtenerResumenSorteo(\r\n                    this.fechaHoy,\r\n                    this.currentUser.sucursal,\r\n                    sorteo.sorteo\r\n                );\r\n                ventaPorNumero = resumenSorteo?.ventaPorNumero || 0;\r\n            }\r\n\r\n            this.sorteoParaPago = {\r\n                sorteoId: sorteo.id,\r\n                numeroGanador: sorteo.numero_ganador,\r\n                factor: sorteo.factor_multiplicador,\r\n                ventaPorNumero,\r\n                totalVendido: sorteo.total_vendido,\r\n                totalPagar: sorteo.total_pagado,\r\n                totalNeto: sorteo.ganancia_neta,\r\n                sucursal: this.currentUser!.sucursal!\r\n            };\r\n            this.showPagoSorteoModal = true;\r\n            this.cdr.markForCheck(); // Usar markForCheck en lugar de detectChanges\r\n        } catch (error) {\r\n            console.error('Error al cargar datos del sorteo:', error);\r\n            this.notificationService.showError('Error al cargar información del sorteo');\r\n        }\r\n    }\r\n\r\n    confirmarPagoSorteo(): void {\r\n        if (!this.sorteoParaPago) return;\r\n\r\n        console.log('Confirmando pago sorteo:', this.sorteoParaPago);\r\n        this.datosConfirmPago.montoExacto = this.sorteoParaPago.totalPagar;\r\n        this.showPagoSorteoModal = false;\r\n        this.showConfirmPagoModal = true;\r\n        \r\n        console.log('Datos confirm pago:', this.datosConfirmPago);\r\n        console.log('Modal confirm pago abierto:', this.showConfirmPagoModal);\r\n        \r\n        this.cdr.markForCheck(); // Usar markForCheck\r\n        \r\n        // Forzar actualización después de un breve momento\r\n        setTimeout(() => {\r\n            this.updateButtonValidation();\r\n        }, 100);\r\n    }\r\n\r\n    // Getter para validar pago de sorteo\r\n    get puedeConfirmarPago(): boolean {\r\n        const montoValido = !!(this.datosConfirmPago.montoExacto && this.datosConfirmPago.montoExacto > 0);\r\n        const noProcesando = !this.procesandoPago;\r\n        \r\n        const result = montoValido && noProcesando;\r\n        \r\n        console.log('Validación pago sorteo:', {\r\n            montoExacto: this.datosConfirmPago.montoExacto,\r\n            montoValido,\r\n            procesandoPago: this.procesandoPago,\r\n            noProcesando,\r\n            resultado: result\r\n        });\r\n        \r\n        return result;\r\n    }\r\n\r\n    async procesarPagoSorteo(): Promise<void> {\r\n        if (!this.sorteoParaPago || !this.currentUser) return;\r\n\r\n        try {\r\n            this.procesandoPago = true;\r\n\r\n            // Registrar movimiento de salida de efectivo\r\n            const movimiento: Partial<MovimientoCaja> = {\r\n                tipo: 'salida',\r\n                motivo: `Pago premio sorteo ${this.sorteoParaPago.sorteoId} - Número ganador: ${this.sorteoParaPago.numeroGanador}`,\r\n                monto: this.datosConfirmPago.montoExacto,\r\n                usuarioId: this.currentUser.id,\r\n                sorteoId: this.sorteoParaPago.sorteoId,\r\n                fecha: new Date(),\r\n                sucursal: this.currentUser.sucursal!,\r\n                nombreReceptor: this.datosConfirmPago.nombreReceptor || undefined\r\n            };\r\n\r\n            await this.supabaseService.registrarMovimientoCaja(movimiento);\r\n\r\n            // Marcar sorteo como pagado en el componente\r\n            this.marcarSorteoPagado(this.sorteoParaPago.sorteoId);\r\n\r\n            this.notificationService.showSuccess(\r\n                `Pago registrado: L ${this.datosConfirmPago.montoExacto.toFixed(2)}`\r\n            );\r\n\r\n            // Limpiar y recargar\r\n            this.cerrarModalConfirmPago();\r\n            await this.cargarDatosDelDia();\r\n\r\n        } catch (error) {\r\n            console.error('Error al procesar pago:', error);\r\n            this.notificationService.showError('Error al registrar el pago');\r\n        } finally {\r\n            this.procesandoPago = false;\r\n            this.cdr.detectChanges(); // Forzar actualización final\r\n        }\r\n    }\r\n\r\n    cerrarModalPagoSorteo(): void {\r\n        console.log('Cerrando modal pago sorteo');\r\n        console.log('Estado del modal:', this.showPagoSorteoModal);\r\n        this.showPagoSorteoModal = false;\r\n        this.sorteoParaPago = null;\r\n         this.cdr.detectChanges();\r\n        console.log('Modal cerrado, estado:', this.showPagoSorteoModal);\r\n    }\r\n\r\n    cerrarModalConfirmPago(): void {\r\n        this.showConfirmPagoModal = false;\r\n        this.datosConfirmPago = {\r\n            nombreReceptor: '',\r\n            montoExacto: 0\r\n        };\r\n        this.cdr.detectChanges(); // Forzar actualización de la UI\r\n    }\r\n\r\n    // ================== MOVIMIENTOS DE CAJA ==================\r\n\r\n    abrirModalMovimiento(tipo: 'entrada' | 'salida'): void {\r\n        console.log('Abriendo modal movimiento:', tipo);\r\n        this.nuevoMovimiento = {\r\n            tipo,\r\n            motivo: '',\r\n            monto: undefined\r\n        };\r\n        this.showMovimientoModal = true;\r\n        this.cdr.markForCheck(); // Usar markForCheck\r\n        \r\n        // Forzar actualización después de un breve momento\r\n        setTimeout(() => {\r\n            this.updateButtonValidation();\r\n        }, 100);\r\n        \r\n        console.log('Modal state:', this.showMovimientoModal);\r\n        console.log('Nuevo movimiento:', this.nuevoMovimiento);\r\n    }\r\n\r\n    // Getter para la validación del botón\r\n    get puedeRegistrarMovimiento(): boolean {\r\n        const motivo = this.nuevoMovimiento.motivo;\r\n        const monto = this.nuevoMovimiento.monto;\r\n\r\n        // Validar motivo\r\n        const motivoValido = !!(motivo && motivo.toString().trim().length > 0);\r\n\r\n        // Validar monto - puede ser number o string que se convierte a number\r\n        let montoValido = false;\r\n        if (monto !== null && monto !== undefined) {\r\n            const montoNum = typeof monto === 'number' ? monto : parseFloat(String(monto));\r\n            montoValido = !isNaN(montoNum) && montoNum > 0;\r\n        }\r\n\r\n        const result = motivoValido && montoValido;\r\n\r\n        console.log('Validación movimiento mejorada:', {\r\n            motivo: motivo,\r\n            monto: monto,\r\n            motivoValido,\r\n            montoValido,\r\n            resultado: result\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    async registrarMovimiento(): Promise<void> {\r\n        if (!this.currentUser || !this.puedeRegistrarMovimiento) {\r\n            this.notificationService.showError('Complete todos los campos requeridos');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const movimiento: Partial<MovimientoCaja> = {\r\n                ...this.nuevoMovimiento,\r\n                usuarioId: this.currentUser.id,\r\n                fecha: new Date(),\r\n                sucursal: this.currentUser.sucursal!\r\n            };\r\n\r\n            await this.supabaseService.registrarMovimientoCaja(movimiento);\r\n\r\n            this.notificationService.showSuccess(\r\n                `${this.nuevoMovimiento.tipo === 'entrada' ? 'Ingreso' : 'Salida'} registrado: L ${this.nuevoMovimiento.monto?.toFixed(2)}`\r\n            );\r\n\r\n            this.cerrarModalMovimiento();\r\n            await this.cargarDatosDelDia();\r\n\r\n        } catch (error) {\r\n            console.error('Error al registrar movimiento:', error);\r\n            this.notificationService.showError('Error al registrar el movimiento');\r\n        } finally {\r\n            this.cdr.detectChanges(); // Forzar actualización final\r\n        }\r\n    }\r\n\r\n    cerrarModalMovimiento(): void {\r\n        console.log('Cerrando modal movimiento');\r\n        this.showMovimientoModal = false;\r\n        this.nuevoMovimiento = {\r\n            tipo: 'entrada',\r\n            motivo: '',\r\n            monto: undefined\r\n        };\r\n        this.cdr.detectChanges(); // Forzar actualización de la UI\r\n        console.log('Modal cerrado, state:', this.showMovimientoModal);\r\n    }\r\n\r\n    // ================== CIERRE DIARIO ==================\r\n\r\n    abrirModalCierre(): void {\r\n        if (!this.resumenCaja) return;\r\n\r\n        // Asegurar que el cierre use exactamente los mismos valores que el resumen\r\n        this.sincronizarValoresConResumen();\r\n        this.showCierreModal = true;\r\n        this.cdr.detectChanges(); // Forzar actualización de la UI\r\n    }\r\n\r\n    // Método para sincronizar valores del cierre con el resumen del día\r\n    private sincronizarValoresConResumen(): void {\r\n        if (!this.resumenCaja) return;\r\n\r\n        // El efectivo reportado debe coincidir exactamente con el balance final del resumen\r\n        this.datosCierre.efectivoReportado = this.resumenCaja.balance_final || 0;\r\n        \r\n        console.log('Valores sincronizados del resumen al cierre:', {\r\n            totalVendido: this.resumenCaja.total_vendido,\r\n            totalPagado: this.resumenCaja.total_pagado,\r\n            totalNeto: this.resumenCaja.total_neto,\r\n            movimientosEntrada: this.resumenCaja.movimientos_entrada,\r\n            movimientosSalida: this.resumenCaja.movimientos_salida,\r\n            balanceFinal: this.resumenCaja.balance_final,\r\n            efectivoReportado: this.datosCierre.efectivoReportado\r\n        });\r\n    }\r\n\r\n    // Getter para validar cierre diario\r\n    get puedeRealizarCierre(): boolean {\r\n        return !!(this.datosCierre.efectivoReportado !== undefined && \r\n            this.datosCierre.efectivoReportado !== null &&\r\n            !isNaN(this.datosCierre.efectivoReportado) &&\r\n            !this.loading);\r\n    }\r\n\r\n    async realizarCierreDiario(): Promise<void> {\r\n        if (!this.currentUser || !this.resumenCaja) return;\r\n\r\n        try {\r\n            this.loading = true;\r\n\r\n            const diferencia = this.datosCierre.efectivoReportado - this.resumenCaja.balance_final;\r\n\r\n            // Obtener resúmenes de sorteos\r\n            const sorteosMañana = await this.obtenerResumenSorteo('mañana');\r\n            const sorteosTarde = await this.obtenerResumenSorteo('tarde');\r\n            const sorteosNoche = await this.obtenerResumenSorteo('noche');\r\n\r\n            // Usar exactamente los mismos valores del resumen para garantizar consistencia\r\n            const cierre: Partial<CierreDiario> = {\r\n                fecha: this.fechaHoy,\r\n                usuarioId: this.currentUser.id,\r\n                sucursal: this.currentUser.sucursal!,\r\n                totalVendido: this.resumenCaja.total_vendido,\r\n                totalPagado: this.resumenCaja.total_pagado,\r\n                neto: this.resumenCaja.total_neto,\r\n                efectivoReportado: this.datosCierre.efectivoReportado,\r\n                diferencia,\r\n                notas: this.datosCierre.notas,\r\n                sorteosMañana,\r\n                sorteosTarde,\r\n                sorteosNoche\r\n            };\r\n\r\n            console.log('Datos del cierre a registrar:', cierre);\r\n\r\n            await this.supabaseService.registrarCierreDiario(cierre);\r\n\r\n            this.notificationService.showSuccess('Cierre diario registrado exitosamente');\r\n\r\n            this.cerrarModalCierre();\r\n            await this.cargarDatosDelDia();\r\n\r\n        } catch (error) {\r\n            console.error('Error al realizar cierre:', error);\r\n            this.notificationService.showError('Error al registrar el cierre diario');\r\n        } finally {\r\n            this.loading = false;\r\n            this.cdr.detectChanges(); // Forzar actualización final\r\n        }\r\n    }\r\n\r\n    private async obtenerResumenSorteo(sorteo: string): Promise<SorteoResumen | undefined> {\r\n        if (!this.currentUser?.sucursal) return undefined;\r\n\r\n        try {\r\n            const resumen = await this.supabaseService.obtenerResumenSorteo(\r\n                this.fechaHoy,\r\n                this.currentUser.sucursal,\r\n                sorteo\r\n            );\r\n            return resumen;\r\n        } catch (error) {\r\n            console.warn(`No se pudo obtener resumen del sorteo ${sorteo}:`, error);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    cerrarModalCierre(): void {\r\n        this.showCierreModal = false;\r\n        this.datosCierre = {\r\n            efectivoReportado: 0,\r\n            notas: ''\r\n        };\r\n        this.cdr.detectChanges(); // Forzar actualización de la UI\r\n    }\r\n\r\n    // ================== IMPRESIÓN ==================\r\n\r\n    async imprimirResumenCaja(): Promise<void> {\r\n        if (!this.currentUser || !this.resumenCaja) return;\r\n\r\n        try {\r\n            const contenido = this.generarContenidoResumenDia();\r\n            await this.printService.printContent(contenido);\r\n            this.notificationService.showSuccess('Resumen del día enviado a impresión');\r\n        } catch (error) {\r\n            console.error('Error al imprimir resumen del día:', error);\r\n            this.notificationService.showError('Error al imprimir el resumen del día');\r\n        }\r\n    }\r\n\r\n    async imprimirCierreDiario(): Promise<void> {\r\n        if (!this.currentUser || !this.cierreExistente) {\r\n            this.notificationService.showError('No hay cierre diario para reimprimir');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const contenido = this.generarContenidoCierreDiario();\r\n            await this.printService.printContent(contenido);\r\n            this.notificationService.showSuccess('Cierre diario enviado a impresión');\r\n        } catch (error) {\r\n            console.error('Error al imprimir cierre diario:', error);\r\n            this.notificationService.showError('Error al imprimir el cierre diario');\r\n        }\r\n    }\r\n\r\n    // Método para generar contenido del resumen del día (antes del cierre)\r\n    private generarContenidoResumenDia(): string {\r\n        const fecha = this.fechaHoy.toLocaleDateString('es-HN');\r\n        const sucursal = this.currentUser?.sucursal || '';\r\n\r\n        let contenido = `\r\n      <div style=\"font-family: monospace; max-width: 300px; margin: 0 auto;\">\r\n        <div style=\"text-align: center; margin-bottom: 20px;\">\r\n          <h2>📊 RESUMEN DEL DÍA</h2>\r\n          <p><strong>Fecha:</strong> ${fecha}</p>\r\n          <p><strong>Sucursal:</strong> ${sucursal}</p>\r\n          <hr style=\"border: 1px solid #333;\">\r\n        </div>\r\n        \r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>💰 RESUMEN FINANCIERO</h3>\r\n          <p><strong>Total Vendido:</strong> L ${this.resumenCaja.total_vendido?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Total Pagado:</strong> L ${this.resumenCaja.total_pagado?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Ganancia Neta:</strong> L ${this.resumenCaja.total_neto?.toFixed(2) || '0.00'}</p>\r\n        </div>\r\n        \r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>💸 MOVIMIENTOS DE CAJA</h3>\r\n          <p><strong>Entradas Extra:</strong> L ${this.resumenCaja.movimientos_entrada?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Salidas Extra:</strong> L ${this.resumenCaja.movimientos_salida?.toFixed(2) || '0.00'}</p>\r\n          <p style=\"border-top: 1px solid #333; padding-top: 5px; font-weight: bold;\">\r\n            <strong>BALANCE FINAL:</strong> L ${this.resumenCaja.balance_final?.toFixed(2) || '0.00'}\r\n          </p>\r\n        </div>\r\n    `;\r\n\r\n        // Agregar sorteos pendientes\r\n        if (this.sorteosPendientesPago.length > 0) {\r\n            contenido += `\r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>🎰 SORTEOS PENDIENTES DE PAGO</h3>\r\n      `;\r\n\r\n            this.sorteosPendientesPago.forEach(sorteo => {\r\n                contenido += `\r\n          <p style=\"margin: 5px 0;\">\r\n            <strong>${sorteo.sorteo.toUpperCase()}:</strong><br>\r\n            Ganador: ${sorteo.numero_ganador}<br>\r\n            A pagar: L ${sorteo.total_pagado?.toFixed(2) || '0.00'}\r\n          </p>\r\n        `;\r\n            });\r\n\r\n            contenido += `</div>`;\r\n        }\r\n\r\n        contenido += `\r\n        <div style=\"text-align: center; margin-top: 20px; font-size: 12px; border-top: 2px solid #333; padding-top: 10px;\">\r\n          <p><strong>📄 RESUMEN DEL DÍA</strong></p>\r\n          <p>Generado: ${new Date().toLocaleString('es-HN')}</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n        return contenido;\r\n    }\r\n\r\n    // Método para generar contenido del cierre diario (después del cierre)\r\n    private generarContenidoCierreDiario(): string {\r\n        const fecha = this.fechaHoy.toLocaleDateString('es-HN');\r\n        const sucursal = this.currentUser?.sucursal || '';\r\n        const cierre = this.cierreExistente!;\r\n\r\n        let contenido = `\r\n      <div style=\"font-family: monospace; max-width: 300px; margin: 0 auto;\">\r\n        <div style=\"text-align: center; margin-bottom: 20px;\">\r\n          <h2>🔒 CIERRE DIARIO OFICIAL</h2>\r\n          <p><strong>Fecha:</strong> ${fecha}</p>\r\n          <p><strong>Sucursal:</strong> ${sucursal}</p>\r\n          <p><strong>Cerrado el:</strong> ${cierre.createdAt.toLocaleString('es-HN')}</p>\r\n          <hr style=\"border: 2px solid #333;\">\r\n        </div>\r\n        \r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>💰 TOTALES OFICIALES</h3>\r\n          <p><strong>Total Vendido:</strong> L ${cierre.totalVendido?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Total Pagado:</strong> L ${cierre.totalPagado?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Ganancia Neta:</strong> L ${cierre.neto?.toFixed(2) || '0.00'}</p>\r\n        </div>\r\n        \r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>💵 CONTROL DE EFECTIVO</h3>\r\n          <p><strong>Balance Calculado:</strong> L ${(cierre.neto + (this.resumenCaja?.movimientos_entrada || 0) - (this.resumenCaja?.movimientos_salida || 0))?.toFixed(2) || '0.00'}</p>\r\n          <p><strong>Efectivo Reportado:</strong> L ${cierre.efectivoReportado?.toFixed(2) || '0.00'}</p>\r\n          <p style=\"color: ${Math.abs(cierre.diferencia || 0) < 0.01 ? 'green' : 'red'}; font-weight: bold;\">\r\n            <strong>Diferencia:</strong> L ${cierre.diferencia?.toFixed(2) || '0.00'}\r\n          </p>\r\n        </div>\r\n    `;\r\n\r\n        // Agregar resúmenes de sorteos si existen\r\n        if (cierre.sorteosMañana || cierre.sorteosTarde || cierre.sorteosNoche) {\r\n            contenido += `\r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>🎰 RESUMEN DE SORTEOS</h3>\r\n      `;\r\n\r\n            if (cierre.sorteosMañana) {\r\n                contenido += `\r\n          <p style=\"margin: 5px 0;\">\r\n            <strong>MAÑANA:</strong><br>\r\n            Ganador: ${cierre.sorteosMañana.numeroGanador || 'N/A'}<br>\r\n            Vendido: L ${cierre.sorteosMañana.totalVendido?.toFixed(2) || '0.00'}<br>\r\n            Pagado: L ${cierre.sorteosMañana.totalPagado?.toFixed(2) || '0.00'}\r\n          </p>\r\n        `;\r\n            }\r\n\r\n            if (cierre.sorteosTarde) {\r\n                contenido += `\r\n          <p style=\"margin: 5px 0;\">\r\n            <strong>TARDE:</strong><br>\r\n            Ganador: ${cierre.sorteosTarde.numeroGanador || 'N/A'}<br>\r\n            Vendido: L ${cierre.sorteosTarde.totalVendido?.toFixed(2) || '0.00'}<br>\r\n            Pagado: L ${cierre.sorteosTarde.totalPagado?.toFixed(2) || '0.00'}\r\n          </p>\r\n        `;\r\n            }\r\n\r\n            if (cierre.sorteosNoche) {\r\n                contenido += `\r\n          <p style=\"margin: 5px 0;\">\r\n            <strong>NOCHE:</strong><br>\r\n            Ganador: ${cierre.sorteosNoche.numeroGanador || 'N/A'}<br>\r\n            Vendido: L ${cierre.sorteosNoche.totalVendido?.toFixed(2) || '0.00'}<br>\r\n            Pagado: L ${cierre.sorteosNoche.totalPagado?.toFixed(2) || '0.00'}\r\n          </p>\r\n        `;\r\n            }\r\n\r\n            contenido += `</div>`;\r\n        }\r\n\r\n        // Agregar notas si existen\r\n        if (cierre.notas && cierre.notas.trim() !== '') {\r\n            contenido += `\r\n        <div style=\"border-bottom: 2px solid #333; margin: 15px 0; padding-bottom: 10px;\">\r\n          <h3>📝 OBSERVACIONES</h3>\r\n          <p style=\"font-style: italic;\">${cierre.notas}</p>\r\n        </div>\r\n      `;\r\n        }\r\n\r\n        contenido += `\r\n        <div style=\"text-align: center; margin-top: 20px; font-size: 12px; border-top: 2px solid #333; padding-top: 10px;\">\r\n          <p><strong>🔒 CIERRE OFICIAL</strong></p>\r\n          <p><strong>DOCUMENTO OFICIAL</strong></p>\r\n          <p>Reimpreso: ${new Date().toLocaleString('es-HN')}</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n        return contenido;\r\n    }\r\n\r\n    // Método heredado para compatibilidad (genera contenido básico)\r\n    private generarContenidoReporte(): string {\r\n        return this.generarContenidoResumenDia();\r\n    }\r\n\r\n    // ================== UTILIDADES ==================\r\n\r\n    // Método para identificar sorteos ya pagados basándose en los movimientos del día\r\n    private identificarSorteosPagados(): void {\r\n        this.sorteosPagados = [];\r\n        \r\n        // Buscar movimientos de tipo 'salida' que contengan 'Pago premio sorteo' en el motivo\r\n        this.movimientosDelDia.forEach(movimiento => {\r\n            if (movimiento.tipo === 'salida' && \r\n                movimiento.motivo && \r\n                movimiento.motivo.includes('Pago premio sorteo') &&\r\n                movimiento.sorteoId) {\r\n                \r\n                if (!this.sorteosPagados.includes(movimiento.sorteoId)) {\r\n                    this.sorteosPagados.push(movimiento.sorteoId);\r\n                }\r\n            }\r\n        });\r\n        \r\n        console.log('Sorteos identificados como pagados:', this.sorteosPagados);\r\n    }\r\n\r\n    // Método para verificar si un sorteo ya fue pagado\r\n    isSorteoPagado(sorteoId: string): boolean {\r\n        return this.sorteosPagados.includes(sorteoId);\r\n    }\r\n\r\n    // Método para marcar un sorteo como pagado\r\n    marcarSorteoPagado(sorteoId: string): void {\r\n        if (!this.sorteosPagados.includes(sorteoId)) {\r\n            this.sorteosPagados.push(sorteoId);\r\n            console.log('Sorteo marcado como pagado:', sorteoId);\r\n            console.log('Sorteos pagados actuales:', this.sorteosPagados);\r\n        }\r\n    }\r\n\r\n    get diferenciaCaja(): number {\r\n        if (!this.resumenCaja) return 0;\r\n        return this.datosCierre.efectivoReportado - this.resumenCaja.balance_final;\r\n    }\r\n\r\n    get hayDiferencia(): boolean {\r\n        return Math.abs(this.diferenciaCaja) > 0.01; // Tolerancia de 1 centavo\r\n    }\r\n\r\n    getAbsDiferencia(): number {\r\n        return Math.abs(this.diferenciaCaja);\r\n    }\r\n\r\n    formatearMonto(monto: number): string {\r\n        return `L ${monto.toFixed(2)}`;\r\n    }\r\n\r\n    getTipoMovimientoTexto(tipo: string): string {\r\n        return tipo === 'entrada' ? 'Entrada' : 'Salida';\r\n    }\r\n\r\n    getTipoMovimientoClass(tipo: string): string {\r\n        return tipo === 'entrada' ? 'text-success' : 'text-danger';\r\n    }\r\n\r\n    // ================== MÉTODOS DE ACTUALIZACIÓN DE UI ==================\r\n\r\n    // Método para forzar actualización cuando cambian los valores del formulario\r\n    onFormValueChange(): void {\r\n        console.log('Form value changed - forzando actualización');\r\n        // Usar tanto markForCheck como detectChanges para asegurar actualización\r\n        this.cdr.markForCheck();\r\n        setTimeout(() => {\r\n            this.cdr.detectChanges();\r\n        }, 0);\r\n    }\r\n\r\n    // Método para actualizar validaciones de botones\r\n    updateButtonValidation(): void {\r\n        console.log('Actualizando validación de botones');\r\n        // Forzar re-evaluación de getters con un pequeño delay\r\n        setTimeout(() => {\r\n            this.cdr.markForCheck();\r\n            this.cdr.detectChanges();\r\n        }, 10);\r\n    }\r\n\r\n    // Método para debugging del estado de los modales\r\n    logModalState(): void {\r\n        console.log('Estado actual de modales:', {\r\n            showPagoSorteoModal: this.showPagoSorteoModal,\r\n            showMovimientoModal: this.showMovimientoModal,\r\n            showCierreModal: this.showCierreModal,\r\n            showConfirmPagoModal: this.showConfirmPagoModal,\r\n            puedeRegistrarMovimiento: this.puedeRegistrarMovimiento,\r\n            puedeConfirmarPago: this.puedeConfirmarPago,\r\n            puedeRealizarCierre: this.puedeRealizarCierre,\r\n            nuevoMovimiento: this.nuevoMovimiento,\r\n            datosConfirmPago: this.datosConfirmPago,\r\n            datosCierre: this.datosCierre\r\n        });\r\n    }\r\n\r\n    // Método para debugging específico de formularios\r\n    debugFormularios(): void {\r\n        console.log('=== DEBUG FORMULARIOS ===');\r\n        console.log('Nuevo Movimiento:', this.nuevoMovimiento);\r\n        console.log('Puede Registrar:', this.puedeRegistrarMovimiento);\r\n        console.log('Datos Confirm Pago:', this.datosConfirmPago);\r\n        console.log('Puede Confirmar Pago:', this.puedeConfirmarPago);\r\n        console.log('Datos Cierre:', this.datosCierre);\r\n        console.log('Puede Realizar Cierre:', this.puedeRealizarCierre);\r\n        console.log('=== SORTEOS PAGADOS ===');\r\n        console.log('Sorteos Pagados:', this.sorteosPagados);\r\n        console.log('Sorteos Pendientes:', this.sorteosPendientesPago);\r\n        this.sorteosPendientesPago.forEach(sorteo => {\r\n            console.log(`Sorteo ${sorteo.id} (${sorteo.sorteo}): ${this.isSorteoPagado(sorteo.id) ? 'PAGADO' : 'PENDIENTE'}`);\r\n        });\r\n        console.log('========================');\r\n    }\r\n}\r\n","<div class=\"cierre-caja-container\">\r\n  <!-- Header -->\r\n  <div class=\"page-header\">\r\n    <div class=\"header-left\">\r\n      <button class=\"btn btn-back\" routerLink=\"/sucursal\" [disabled]=\"loading\">\r\n        <i class=\"fas fa-arrow-left\"></i>\r\n        Regresar a Ventas\r\n      </button>\r\n    </div>\r\n    <h2>💰 Cierre de Caja</h2>\r\n    <div class=\"fecha-sucursal\">\r\n      <span class=\"fecha\">📅 {{ fechaHoy | date:'dd/MM/yyyy' }}</span>\r\n      <span class=\"sucursal\">🏪 {{ currentUser?.sucursal }}</span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Estado del cierre -->\r\n  <div class=\"alert\" [ngClass]=\"yaCerrado ? 'alert-info' : 'alert-warning'\">\r\n    <i class=\"fas\" [ngClass]=\"yaCerrado ? 'fa-check-circle' : 'fa-clock'\"></i>\r\n    {{ yaCerrado ? 'El cierre diario ya fue realizado' : 'Cierre diario pendiente' }}\r\n  </div>\r\n\r\n  <!-- Loading state -->\r\n  <div *ngIf=\"loading\" class=\"loading-container\">\r\n    <i class=\"fas fa-spinner fa-spin\"></i>\r\n    Cargando datos del día...\r\n  </div>\r\n\r\n  <!-- Contenido principal -->\r\n  <div *ngIf=\"!loading\" class=\"main-content\">\r\n    \r\n    <!-- Resumen Financiero -->\r\n    <div class=\"resumen-card\" *ngIf=\"resumenCaja\">\r\n      <div class=\"card-header\">\r\n        <h3>📊 Resumen Financiero del Día</h3>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"resumen-grid\">\r\n          <div class=\"resumen-item\">\r\n            <label>💵 Total Vendido:</label>\r\n            <span class=\"amount positive\">{{ formatearMonto(resumenCaja.total_vendido || 0) }}</span>\r\n          </div>\r\n          <div class=\"resumen-item\">\r\n            <label>💰 Total Pagado:</label>\r\n            <span class=\"amount negative\">{{ formatearMonto(resumenCaja.total_pagado || 0) }}</span>\r\n          </div>\r\n          <div class=\"resumen-item highlight\">\r\n            <label>📈 Ganancia Neta:</label>\r\n            <span class=\"amount\">{{ formatearMonto(resumenCaja.total_neto || 0) }}</span>\r\n          </div>\r\n          <div class=\"resumen-item\">\r\n            <label>💸 Entradas de Caja:</label>\r\n            <span class=\"amount positive\">{{ formatearMonto(resumenCaja.movimientos_entrada || 0) }}</span>\r\n          </div>\r\n          <div class=\"resumen-item\">\r\n            <label>💳 Salidas de Caja:</label>\r\n            <span class=\"amount negative\">{{ formatearMonto(resumenCaja.movimientos_salida || 0) }}</span>\r\n          </div>\r\n          <div class=\"resumen-item final\">\r\n            <label>🏦 Balance Final:</label>\r\n            <span class=\"amount balance\">{{ formatearMonto(resumenCaja.balance_final || 0) }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Acciones Principales -->\r\n    <div class=\"actions-grid\">\r\n      <!-- Movimientos de Caja -->\r\n      <div class=\"action-card\">\r\n        <h4>💱 Movimientos de Caja</h4>\r\n        <p>Registrar ingresos y salidas de efectivo</p>\r\n        <div class=\"action-buttons\">\r\n          <button \r\n            class=\"btn btn-success\" \r\n            (click)=\"abrirModalMovimiento('entrada')\"\r\n            [disabled]=\"yaCerrado\">\r\n            <i class=\"fas fa-plus\"></i>\r\n            Ingreso\r\n          </button>\r\n          <button \r\n            class=\"btn btn-danger\" \r\n            (click)=\"abrirModalMovimiento('salida')\"\r\n            [disabled]=\"yaCerrado\">\r\n            <i class=\"fas fa-minus\"></i>\r\n            Salida\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reportes de Impresión -->\r\n      <div class=\"action-card\">\r\n        <h4>🖨️ Reportes</h4>\r\n        <p>Imprimir resumen del día y cierre diario</p>\r\n        <div class=\"action-buttons\">\r\n          <button \r\n            class=\"btn btn-primary\" \r\n            (click)=\"imprimirResumenCaja()\"\r\n            [disabled]=\"!resumenCaja\">\r\n            <i class=\"fas fa-print\"></i>\r\n            {{ yaCerrado ? 'Reimprimir Resumen' : 'Imprimir Resumen' }}\r\n          </button>\r\n          <button \r\n            class=\"btn btn-info\" \r\n            (click)=\"imprimirCierreDiario()\"\r\n            [disabled]=\"!yaCerrado || !cierreExistente\"\r\n            *ngIf=\"yaCerrado\">\r\n            <i class=\"fas fa-file-alt\"></i>\r\n            Reimprimir Cierre\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Cierre Final -->\r\n      <div class=\"action-card cierre-card\" \r\n           [class.disabled]=\"yaCerrado\">\r\n        <h4>🔐 Cierre Diario</h4>\r\n        <p>{{ yaCerrado ? 'Cierre realizado exitosamente' : 'Finalizar el día y cerrar la caja' }}</p>\r\n        <button \r\n          class=\"btn btn-warning full-width\" \r\n          (click)=\"abrirModalCierre()\"\r\n          [disabled]=\"yaCerrado\">\r\n          <i class=\"fas fa-lock\"></i>\r\n          {{ yaCerrado ? 'Ya Cerrado' : 'Realizar Cierre' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Sorteos Pendientes de Pago -->\r\n    <div class=\"sorteos-card\" *ngIf=\"sorteosPendientesPago.length > 0\">\r\n      <div class=\"card-header\">\r\n        <h3>🎯 Sorteos Pendientes de Pago</h3>\r\n        <span class=\"badge\">{{ sorteosPendientesPago.length }}</span>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"sorteos-grid\">\r\n          <div *ngFor=\"let sorteo of sorteosPendientesPago\" class=\"sorteo-item\">\r\n            <div class=\"sorteo-info\">\r\n              <h5>{{ sorteo.sorteo.toUpperCase() }}</h5>\r\n              <div class=\"sorteo-details\">\r\n                <span class=\"numero-ganador\">🎯 Número: {{ sorteo.numero_ganador }}</span>\r\n                <span class=\"cantidad-comprada\">🛒 Comprado: {{ formatearMonto(sorteo.cantidad_comprada_numero_ganador || 0) }}</span>\r\n                <span class=\"factor\">⚡ Factor: {{ sorteo.factor_multiplicador }}x</span>\r\n                <div class=\"calculo-formula\">\r\n                  <span class=\"formula\">{{ formatearMonto(sorteo.cantidad_comprada_numero_ganador || 0) }} × {{ sorteo.factor_multiplicador }} = {{ formatearMonto(sorteo.total_calculado_pagar || sorteo.total_pagado) }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button \r\n              class=\"btn btn-sm\" \r\n              [ngClass]=\"isSorteoPagado(sorteo.id) ? 'btn-secondary' : 'btn-success'\"\r\n              (click)=\"abrirModalPagoSorteo(sorteo)\"\r\n              [disabled]=\"yaCerrado || isSorteoPagado(sorteo.id)\">\r\n              <i class=\"fas\" [ngClass]=\"isSorteoPagado(sorteo.id) ? 'fa-check' : 'fa-hand-holding-usd'\"></i>\r\n              {{ isSorteoPagado(sorteo.id) ? 'Ya Pagado' : 'Pagar Premio' }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Movimientos del Día -->\r\n    <div class=\"movimientos-card\" *ngIf=\"movimientosDelDia.length > 0\">\r\n      <div class=\"card-header\">\r\n        <h3>📝 Movimientos del Día</h3>\r\n        <span class=\"badge\">{{ movimientosDelDia.length }}</span>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"tabla-responsive\">\r\n          <table class=\"movimientos-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Hora</th>\r\n                <th>Tipo</th>\r\n                <th>Motivo</th>\r\n                <th>Monto</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let movimiento of movimientosDelDia\">\r\n                <td>{{ movimiento.fecha | date:'HH:mm' }}</td>\r\n                <td>\r\n                  <span class=\"tipo-badge\" [ngClass]=\"getTipoMovimientoClass(movimiento.tipo)\">\r\n                    {{ getTipoMovimientoTexto(movimiento.tipo) }}\r\n                  </span>\r\n                </td>\r\n                <td>{{ movimiento.motivo }}</td>\r\n                <td [ngClass]=\"getTipoMovimientoClass(movimiento.tipo)\">\r\n                  {{ movimiento.tipo === 'entrada' ? '+' : '-' }}{{ formatearMonto(movimiento.monto) }}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal: Pago de Sorteo -->\r\n<div class=\"modal\" [style.display]=\"showPagoSorteoModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showPagoSorteoModal\" (click)=\"cerrarModalPagoSorteo()\">\r\n  <div class=\"modal-dialog modal-lg\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">💰 Pago de Premio de Sorteo</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"cerrarModalPagoSorteo()\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\" *ngIf=\"sorteoParaPago\">\r\n        <div class=\"pago-sorteo-details\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"info-item\">\r\n                <label>Sorteo:</label>\r\n                <span>{{ sorteoParaPago.sorteoId }}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <label>Número Ganador:</label>\r\n                <span class=\"numero-grande\">{{ sorteoParaPago.numeroGanador }}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <label>Factor Aplicado:</label>\r\n                <span>{{ sorteoParaPago.factor }}x</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"info-item\">\r\n                <label>Total Vendido:</label>\r\n                <span>{{ formatearMonto(sorteoParaPago.totalVendido) }}</span>\r\n              </div>\r\n              <div class=\"info-item\">\r\n                <label>Vendido del Número {{ sorteoParaPago.numeroGanador }}:</label>\r\n                <span class=\"numero-destacado\">{{ formatearMonto(sorteoParaPago.ventaPorNumero) }}</span>\r\n              </div>\r\n              <div class=\"info-item total\">\r\n                <label>Total a Pagar:</label>\r\n                <span class=\"monto-pagar\">{{ formatearMonto(sorteoParaPago.totalPagar) }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModalPagoSorteo()\">\r\n          Cancelar\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"confirmarPagoSorteo()\">\r\n          <i class=\"fas fa-arrow-right\"></i>\r\n          Continuar con Pago\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal: Confirmación de Pago -->\r\n<div class=\"modal\" [style.display]=\"showConfirmPagoModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showConfirmPagoModal\" (click)=\"cerrarModalConfirmPago()\">\r\n  <div class=\"modal-dialog\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">✅ Confirmar Pago Realizado</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"cerrarModalConfirmPago()\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n          <label for=\"nombreReceptor\">Nombre de quien recibe (opcional):</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"nombreReceptor\"\r\n            class=\"form-control\" \r\n            [(ngModel)]=\"datosConfirmPago.nombreReceptor\"\r\n            (ngModelChange)=\"onFormValueChange()\"\r\n            placeholder=\"Ingrese el nombre de quien recibe el premio\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"montoExacto\">Monto pagado:</label>\r\n          <input \r\n            type=\"number\" \r\n            id=\"montoExacto\"\r\n            class=\"form-control\" \r\n            [(ngModel)]=\"datosConfirmPago.montoExacto\"\r\n            (ngModelChange)=\"onFormValueChange()\"\r\n            step=\"0.01\"\r\n            readonly>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModalConfirmPago()\">\r\n          Cancelar\r\n        </button>\r\n        <button \r\n          type=\"button\" \r\n          class=\"btn btn-success\" \r\n          (click)=\"procesarPagoSorteo()\"\r\n          [disabled]=\"procesandoPago\">\r\n          <i class=\"fas fa-spinner fa-spin\" *ngIf=\"procesandoPago\"></i>\r\n          <i class=\"fas fa-check\" *ngIf=\"!procesandoPago\"></i>\r\n          {{ procesandoPago ? 'Procesando...' : 'Confirmar Pago Realizado' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal: Movimiento de Caja -->\r\n<div class=\"modal\" [style.display]=\"showMovimientoModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showMovimientoModal\" (click)=\"cerrarModalMovimiento()\">\r\n  <div class=\"modal-dialog\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas\" [ngClass]=\"nuevoMovimiento.tipo === 'entrada' ? 'fa-plus text-success' : 'fa-minus text-danger'\"></i>\r\n          {{ nuevoMovimiento.tipo === 'entrada' ? 'Registrar Ingreso de Efectivo' : 'Registrar Salida de Efectivo' }}\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"cerrarModalMovimiento()\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form>\r\n          <div class=\"form-group\">\r\n            <label for=\"motivo\">Motivo *:</label>\r\n            <textarea \r\n              id=\"motivo\"\r\n              class=\"form-control\" \r\n              [(ngModel)]=\"nuevoMovimiento.motivo\"\r\n              (ngModelChange)=\"onFormValueChange()\"\r\n              name=\"motivo\"\r\n              rows=\"3\"\r\n              placeholder=\"Describa el motivo de este movimiento\"\r\n              required></textarea>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"monto\">Monto *:</label>\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\">L</span>\r\n              </div>\r\n              <input \r\n                type=\"number\" \r\n                id=\"monto\"\r\n                class=\"form-control\" \r\n                [(ngModel)]=\"nuevoMovimiento.monto\"\r\n                (ngModelChange)=\"onFormValueChange()\"\r\n                name=\"monto\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                placeholder=\"0.00\"\r\n                required>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModalMovimiento()\">\r\n          Cancelar\r\n        </button>\r\n        <button \r\n          type=\"button\" \r\n          class=\"btn\" \r\n          [ngClass]=\"nuevoMovimiento.tipo === 'entrada' ? 'btn-success' : 'btn-danger'\"\r\n          (click)=\"registrarMovimiento()\"\r\n          [disabled]=\"!puedeRegistrarMovimiento\">\r\n          <i class=\"fas\" [ngClass]=\"nuevoMovimiento.tipo === 'entrada' ? 'fa-plus' : 'fa-minus'\"></i>\r\n          Registrar {{ nuevoMovimiento.tipo === 'entrada' ? 'Ingreso' : 'Salida' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal: Cierre Diario -->\r\n<div class=\"modal\" [style.display]=\"showCierreModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showCierreModal\" (click)=\"cerrarModalCierre()\">\r\n  <div class=\"modal-dialog modal-lg\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">🔐 Realizar Cierre Diario</h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"cerrarModalCierre()\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\" *ngIf=\"resumenCaja\">\r\n        <div class=\"cierre-resumen\">\r\n          <h6>Resumen del Día</h6>\r\n          <div class=\"resumen-final\">\r\n            <div class=\"resumen-item\">\r\n              <label>Balance calculado del sistema:</label>\r\n              <span class=\"amount\">{{ formatearMonto(resumenCaja.balance_final) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"efectivoReportado\">Efectivo reportado en caja *:</label>\r\n          <div class=\"input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">L</span>\r\n            </div>\r\n            <input \r\n              type=\"number\" \r\n              id=\"efectivoReportado\"\r\n              class=\"form-control\" \r\n              [(ngModel)]=\"datosCierre.efectivoReportado\"\r\n              (ngModelChange)=\"onFormValueChange()\"\r\n              step=\"0.01\"\r\n              placeholder=\"0.00\"\r\n              required>\r\n          </div>\r\n          <small class=\"form-text text-muted\">\r\n            💡 Puede ingresar valores negativos si el efectivo en caja es menor al calculado\r\n          </small>\r\n        </div>\r\n\r\n        <div *ngIf=\"hayDiferencia\" class=\"diferencia-alert\">\r\n          <div class=\"alert\" [ngClass]=\"diferenciaCaja > 0 ? 'alert-success' : 'alert-danger'\">\r\n            <strong>{{ diferenciaCaja > 0 ? 'Sobrante' : 'Faltante' }}:</strong>\r\n            {{ formatearMonto(getAbsDiferencia()) }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"notas\">Notas adicionales:</label>\r\n          <textarea \r\n            id=\"notas\"\r\n            class=\"form-control\" \r\n            [(ngModel)]=\"datosCierre.notas\"\r\n            (ngModelChange)=\"onFormValueChange()\"\r\n            rows=\"3\"\r\n            placeholder=\"Observaciones sobre el cierre (opcional)\"></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModalCierre()\">\r\n          Cancelar\r\n        </button>\r\n        <button \r\n          type=\"button\" \r\n          class=\"btn btn-warning\" \r\n          (click)=\"realizarCierreDiario()\"\r\n          [disabled]=\"!puedeRealizarCierre\">\r\n          <i class=\"fas fa-spinner fa-spin\" *ngIf=\"loading\"></i>\r\n          <i class=\"fas fa-lock\" *ngIf=\"!loading\"></i>\r\n          {{ loading ? 'Procesando...' : 'Confirmar Cierre Diario' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div class=\"container\">\r\n      <div class=\"card\" style=\"max-width: 400px; margin: 100px auto;\">\r\n        <h2 class=\"text-center mb-3\">Sistema de Lotería</h2>\r\n        <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email:</label>\r\n            <input \r\n              type=\"email\" \r\n              id=\"email\" \r\n              name=\"email\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"email\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Contraseña:</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"password\" \r\n              name=\"password\" \r\n              class=\"form-control\" \r\n              [(ngModel)]=\"password\" \r\n              required>\r\n          </div>\r\n          \r\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">\r\n            {{ errorMessage }}\r\n          </div>\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            class=\"btn btn-primary w-100\" \r\n            [disabled]=\"!loginForm.valid || isLoading\">\r\n            {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .w-100 {\r\n      width: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email: string = '';\r\n  password: string = '';\r\n  errorMessage: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Verificar si ya hay un usuario logueado con timeout\r\n    this.supabaseService.currentUser$.subscribe(user => {\r\n      if (user) {\r\n        this.redirectUser(user);\r\n      }\r\n    });\r\n  }\r\n\r\n  async onLogin(): Promise<void> {\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n    this.notificationService.showLoading('Iniciando sesión...');\r\n\r\n    try {\r\n      \r\n      // Usar timeout para evitar que se cuelgue el login\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Login timeout')), 10000); // 10 segundos\r\n      });\r\n      \r\n      const loginPromise = this.supabaseService.login(this.email, this.password);\r\n      \r\n      const user = await Promise.race([loginPromise, timeoutPromise]) as any;\r\n      \r\n      \r\n      if (user) {\r\n        this.redirectUser(user);\r\n      } else {\r\n        this.errorMessage = 'Credenciales inválidas';\r\n      }\r\n    } catch (error: any) {\r\n      this.errorMessage = this.getErrorMessage(error);\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  private redirectUser(user: any): void {\r\n    if (user.role === 'admin') {\r\n      this.router.navigate(['/admin']);\r\n    } else {\r\n      this.router.navigate(['/sucursal']);\r\n    }\r\n  }\r\n\r\n  private getErrorMessage(error: any): string {\r\n    switch (error.message) {\r\n      case 'Invalid login credentials':\r\n        return 'Credenciales inválidas';\r\n      case 'Email not confirmed':\r\n        return 'Email no confirmado';\r\n      case 'Too many requests':\r\n        return 'Demasiados intentos, intenta más tarde';\r\n      case 'Login timeout':\r\n        return 'Tiempo de espera agotado, intenta de nuevo';\r\n      default:\r\n        return 'Error en el inicio de sesión';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Subscription } from 'rxjs';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoSchedule, SORTEO_SCHEDULES } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-resumen-sorteos',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './resumen-sorteos.component.html',\r\n  styleUrl: './resumen-sorteos.component.scss'\r\n})\r\nexport class ResumenSorteosComponent implements OnInit, OnDestroy {\r\n  sorteos = SORTEO_SCHEDULES;\r\n  resumenPorSorteo: { [sorteoName: string]: any[] } = {};\r\n  ventasPorNumero: { [sorteoName: string]: { [numero: string]: number } } = {};\r\n  isLoading: boolean = false;\r\n  private subscription?: Subscription;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadResumenesSorteos();\r\n    \r\n    // Suscribirse a eventos de recarga desde otros componentes\r\n    this.subscription = this.supabaseService.resumenUpdateSubject?.subscribe(() => {\r\n      this.loadResumenesSorteos();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async loadResumenesSorteos(): Promise<void> {\r\n    this.isLoading = true;\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    const fechaStr = hondurasToday.toISOString().split('T')[0];\r\n\r\n    try {\r\n      for (const sorteo of this.sorteos) {\r\n        const sorteoId = `${fechaStr}-${sorteo.name}`;\r\n        try {\r\n          // Cargar resumen por sucursal\r\n          const resumen = await this.supabaseService.getSorteoResumenPorSucursal(sorteoId);\r\n          if (resumen && resumen.length > 0) {\r\n            this.resumenPorSorteo[sorteo.name] = resumen;\r\n          }\r\n\r\n          // Cargar ventas por número para este sorteo\r\n          await this.loadVentasPorNumero(sorteo.name, fechaStr);\r\n        } catch (error) {\r\n          console.error(`Error cargando resumen para ${sorteo.name}:`, error);\r\n        }\r\n      }\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para cargar ventas por número\r\n  async loadVentasPorNumero(sorteoName: string, fecha: string): Promise<void> {\r\n    try {\r\n      const ventasPorNumero = await this.supabaseService.getVentasPorNumero(sorteoName, fecha);\r\n      this.ventasPorNumero[sorteoName] = ventasPorNumero;\r\n    } catch (error) {\r\n      console.error(`Error cargando ventas por número para ${sorteoName}:`, error);\r\n      this.ventasPorNumero[sorteoName] = {};\r\n    }\r\n  }\r\n\r\n  // Función para obtener resumen de un sorteo específico\r\n  getResumenSorteo(sorteoName: string): any[] {\r\n    return this.resumenPorSorteo[sorteoName] || [];\r\n  }\r\n\r\n  // Función para verificar si un sorteo tiene resumen\r\n  hasResumenSorteo(sorteoName: string): boolean {\r\n    return this.resumenPorSorteo[sorteoName] && this.resumenPorSorteo[sorteoName].length > 0;\r\n  }\r\n\r\n  // Funciones auxiliares para cálculos\r\n  getTotalVendidoSorteo(sorteoName: string): string {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    const total = resumen.reduce((sum, s) => sum + (s.total_vendido || 0), 0);\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getTotalPagadoSorteo(sorteoName: string): string {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    const total = resumen.reduce((sum, s) => sum + (s.total_pagado || 0), 0);\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  getGananciaTotalSorteo(sorteoName: string): number {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    return resumen.reduce((sum, s) => sum + (s.ganancia_neta || 0), 0);\r\n  }\r\n\r\n  // Función para obtener el número ganador de un sorteo\r\n  getNumeroGanador(sorteoName: string): string {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    return resumen.length > 0 ? resumen[0].numero_ganador || 'N/A' : 'N/A';\r\n  }\r\n\r\n  // Función para obtener el factor más común\r\n  getFactorPrincipal(sorteoName: string): number {\r\n    const resumen = this.getResumenSorteo(sorteoName);\r\n    return resumen.length > 0 ? resumen[0].factor_multiplicador || 70 : 70;\r\n  }\r\n\r\n  // Función para refrescar datos (para llamar desde el componente padre)\r\n  async refreshData(): Promise<void> {\r\n    await this.loadResumenesSorteos();\r\n  }\r\n\r\n  // Función para obtener sorteos con resumen (solo los cerrados)\r\n  getSorteosConResumen(): SorteoSchedule[] {\r\n    return this.sorteos.filter(sorteo => this.hasResumenSorteo(sorteo.name));\r\n  }\r\n\r\n  // Métodos para manejar ventas por número\r\n  getVentasPorNumero(sorteoName: string): { [numero: string]: number } {\r\n    return this.ventasPorNumero[sorteoName] || {};\r\n  }\r\n\r\n  hasVentasPorNumero(sorteoName: string): boolean {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    return Object.keys(ventas).length > 0;\r\n  }\r\n\r\n  getNumerosMasVendidos(sorteoName: string, top: number = 5): Array<{numero: string, total: number}> {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    return Object.entries(ventas)\r\n      .map(([numero, total]) => ({ numero, total }))\r\n      .sort((a, b) => b.total - a.total)\r\n      .slice(0, top);\r\n  }\r\n\r\n  getVentaTotalPorNumero(sorteoName: string, numero: string): number {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    return ventas[numero] || 0;\r\n  }\r\n\r\n  getMaxVentaPorNumero(sorteoName: string): number {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    const valores = Object.values(ventas);\r\n    return valores.length > 0 ? Math.max(...valores) : 0;\r\n  }\r\n\r\n  // Calcular promedio de ventas por número\r\n  getPromedioVentaPorNumero(sorteoName: string): number {\r\n    const ventas = this.getVentasPorNumero(sorteoName);\r\n    const valores = Object.values(ventas);\r\n    if (valores.length === 0) return 0;\r\n    const suma = valores.reduce((acc, val) => acc + val, 0);\r\n    return suma / valores.length;\r\n  }\r\n\r\n  // Método auxiliar para obtener la cantidad de números vendidos\r\n  getCantidadNumerosVendidos(sorteoName: string): number {\r\n    return Object.keys(this.getVentasPorNumero(sorteoName)).length;\r\n  }\r\n\r\n  // Generar array de números del 00 al 99 para la tabla\r\n  getNumeros(): string[] {\r\n    const numeros = ['00']; // Empezar con 00\r\n    for (let i = 1; i <= 99; i++) {\r\n      numeros.push(i.toString().padStart(2, '0'));\r\n    }\r\n    return numeros;\r\n  }\r\n\r\n  // Obtener color de intensidad basado en el total vendido\r\n  getIntensidadColor(sorteoName: string, numero: string): string {\r\n    const venta = this.getVentaTotalPorNumero(sorteoName, numero);\r\n    const maxVenta = this.getMaxVentaPorNumero(sorteoName);\r\n    \r\n    if (venta === 0 || maxVenta === 0) return '';\r\n    \r\n    const intensidad = venta / maxVenta;\r\n    if (intensidad > 0.8) return 'intensidad-alta';\r\n    if (intensidad > 0.5) return 'intensidad-media';\r\n    if (intensidad > 0.2) return 'intensidad-baja';\r\n    return 'intensidad-minima';\r\n  }\r\n}\r\n","<!-- Sección de Resúmenes de Sorteos -->\r\n<div class=\"resumen-sorteos-section\">\r\n  <div class=\"section-header\">\r\n    <h3>\r\n      <i class=\"fas fa-chart-bar\"></i> \r\n      Resúmenes de Sorteos por Sucursales\r\n    </h3>\r\n    <div class=\"section-actions\">\r\n      <button class=\"btn-refresh\" (click)=\"loadResumenesSorteos()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-sync-alt\" [class.fa-spin]=\"isLoading\"></i>\r\n        Actualizar\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"loading-overlay\" *ngIf=\"isLoading\">\r\n    <div class=\"loading-content\">\r\n      <i class=\"fas fa-spinner fa-spin\"></i>\r\n      <span>Cargando resúmenes de sorteos...</span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"sorteos-resumen-container\" *ngIf=\"!isLoading\">\r\n    <div *ngIf=\"getSorteosConResumen().length === 0\" class=\"no-resumen-message\">\r\n      <div class=\"empty-state\">\r\n        <i class=\"fas fa-chart-line\"></i>\r\n        <h4>No hay sorteos cerrados</h4>\r\n        <p>Los resúmenes aparecerán aquí cuando se cierren los sorteos</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Card por cada sorteo cerrado -->\r\n    <div *ngFor=\"let sorteo of getSorteosConResumen()\" class=\"sorteo-resumen-card\">\r\n      <div class=\"card-header\">\r\n        <div class=\"sorteo-info\">\r\n          <h4>{{ sorteo.label }}</h4>\r\n          <span class=\"sorteo-time\">{{ sorteo.closeTime }}</span>\r\n        </div>\r\n        <div class=\"winner-info\">\r\n          <div class=\"winner-number\">\r\n            <i class=\"fas fa-trophy\"></i>\r\n            <span>{{ getNumeroGanador(sorteo.name) }}</span>\r\n          </div>\r\n          <div class=\"factor-info\">Factor: {{ getFactorPrincipal(sorteo.name) }}x</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card-body\">\r\n        <!-- Estadísticas generales -->\r\n        <div class=\"stats-overview\">\r\n          <div class=\"stat-card vendido\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"fas fa-coins\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-label\">Total Vendido</div>\r\n              <div class=\"stat-value\">L {{ getTotalVendidoSorteo(sorteo.name) }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"stat-card pagado\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"fas fa-hand-holding-usd\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-label\">Total Pagado</div>\r\n              <div class=\"stat-value\">L {{ getTotalPagadoSorteo(sorteo.name) }}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"stat-card ganancia\" \r\n               [class.positive]=\"getGananciaTotalSorteo(sorteo.name) > 0\"\r\n               [class.negative]=\"getGananciaTotalSorteo(sorteo.name) < 0\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"fas fa-chart-line\"></i>\r\n            </div>\r\n            <div class=\"stat-content\">\r\n              <div class=\"stat-label\">Ganancia Total</div>\r\n              <div class=\"stat-value\">L {{ getGananciaTotalSorteo(sorteo.name).toFixed(2) }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Tabla detallada por sucursales -->\r\n        <div class=\"detalle-sucursales\">\r\n          <h5>\r\n            <i class=\"fas fa-building\"></i>\r\n            Detalle por Sucursales\r\n          </h5>\r\n          \r\n          <div class=\"tabla-resumen\">\r\n            <div class=\"tabla-header\">\r\n              <div class=\"col-sucursal\">Sucursal</div>\r\n              <div class=\"col-factor\">Factor</div>\r\n              <div class=\"col-vendido\">Vendido</div>\r\n              <div class=\"col-pagado\">Pagado</div>\r\n              <div class=\"col-ganancia\">Ganancia</div>\r\n            </div>\r\n            \r\n            <div class=\"tabla-row\" *ngFor=\"let sucursal of getResumenSorteo(sorteo.name)\">\r\n              <div class=\"col-sucursal\" [attr.data-label]=\"'Sucursal'\">\r\n                <i class=\"fas fa-store\"></i>\r\n                {{ sucursal.sucursal }}\r\n              </div>\r\n              <div class=\"col-factor\" [attr.data-label]=\"'Factor'\">\r\n                {{ sucursal.factor_multiplicador }}x\r\n              </div>\r\n              <div class=\"col-vendido\" [attr.data-label]=\"'Vendido'\">\r\n                L {{ sucursal.total_vendido?.toFixed(2) || '0.00' }}\r\n              </div>\r\n              <div class=\"col-pagado\" [attr.data-label]=\"'Pagado'\">\r\n                L {{ sucursal.total_pagado?.toFixed(2) || '0.00' }}\r\n              </div>\r\n              <div class=\"col-ganancia\" [attr.data-label]=\"'Ganancia'\"\r\n                   [class.positive]=\"(sucursal.ganancia_neta || 0) > 0\"\r\n                   [class.negative]=\"(sucursal.ganancia_neta || 0) < 0\">\r\n                L {{ sucursal.ganancia_neta?.toFixed(2) || '0.00' }}\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Total -->\r\n            <div class=\"tabla-footer\">\r\n              <div class=\"col-sucursal\"><strong>TOTAL GENERAL</strong></div>\r\n              <div class=\"col-factor\">-</div>\r\n              <div class=\"col-vendido\">\r\n                <strong>L {{ getTotalVendidoSorteo(sorteo.name) }}</strong>\r\n              </div>\r\n              <div class=\"col-pagado\">\r\n                <strong>L {{ getTotalPagadoSorteo(sorteo.name) }}</strong>\r\n              </div>\r\n              <div class=\"col-ganancia\"\r\n                   [class.positive]=\"getGananciaTotalSorteo(sorteo.name) > 0\"\r\n                   [class.negative]=\"getGananciaTotalSorteo(sorteo.name) < 0\">\r\n                <strong>L {{ getGananciaTotalSorteo(sorteo.name).toFixed(2) }}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Cuadro resumen de ventas por número -->\r\n        <div class=\"ventas-por-numero\" *ngIf=\"hasVentasPorNumero(sorteo.name)\">\r\n          <h5>\r\n            <i class=\"fas fa-th\"></i>\r\n            Resumen de Ventas por Número\r\n          </h5>\r\n          \r\n          <!-- Números más vendidos (top 5) -->\r\n          <div class=\"top-numeros\">\r\n            <h6>\r\n              <i class=\"fas fa-trophy\"></i>\r\n              Top 5 Números Más Vendidos\r\n            </h6>\r\n            <div class=\"top-numeros-grid\">\r\n              <div class=\"top-numero-card\" *ngFor=\"let item of getNumerosMasVendidos(sorteo.name, 5); let i = index\">\r\n                <div class=\"numero\">{{ item.numero }}</div>\r\n                <div class=\"cantidad\">L {{ item.total.toFixed(2) }}</div>\r\n                <div class=\"posicion\">#{{ i + 1 }}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Tablero de números 00-99 -->\r\n          <div class=\"tablero-numeros\">\r\n            <h6>\r\n              <i class=\"fas fa-grid-3x3\"></i>\r\n              Tablero Completo (00-99)\r\n            </h6>\r\n            <div class=\"numeros-grid\">\r\n              <div class=\"numero-cell\" \r\n                   *ngFor=\"let numero of getNumeros()\"\r\n                   [class]=\"getIntensidadColor(sorteo.name, numero)\"\r\n                   [title]=\"'Número ' + numero + ': L ' + getVentaTotalPorNumero(sorteo.name, numero).toFixed(2)\">\r\n                <span class=\"numero-label\">{{ numero }}</span>\r\n                <span class=\"numero-venta\">L {{ getVentaTotalPorNumero(sorteo.name, numero).toFixed(2) }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Estadísticas adicionales -->\r\n          <div class=\"estadisticas-adicionales\">\r\n            <h6>\r\n              <i class=\"fas fa-chart-bar\"></i>\r\n              Estadísticas de Ventas\r\n            </h6>\r\n            <div class=\"stats-adicionales-grid\">\r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-hashtag\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Números Diferentes Vendidos</span>\r\n                  <span class=\"stat-value\">{{ getCantidadNumerosVendidos(sorteo.name) }}</span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-crown\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Número Más Vendido</span>\r\n                  <span class=\"stat-value\">\r\n                    {{ getNumerosMasVendidos(sorteo.name, 1).length > 0 ? getNumerosMasVendidos(sorteo.name, 1)[0].numero : 'N/A' }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-calculator\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Promedio por Número</span>\r\n                  <span class=\"stat-value\">L {{ getPromedioVentaPorNumero(sorteo.name).toFixed(2) }}</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"stat-adicional\">\r\n                <div class=\"stat-icon\">\r\n                  <i class=\"fas fa-chart-line\"></i>\r\n                </div>\r\n                <div class=\"stat-content\">\r\n                  <span class=\"stat-label\">Venta Máxima</span>\r\n                  <span class=\"stat-value\">L {{ getMaxVentaPorNumero(sorteo.name).toFixed(2) }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { SorteoService } from '../../services/sorteo.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { PrintService } from '../../services/print.service';\r\nimport { Router } from '@angular/router';\r\nimport { SorteoSchedule, Sale, SaleDetail } from '../../models/interfaces';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-sucursal',\r\n  templateUrl: './sucursal.component.html',\r\n  styleUrls: ['./sucursal.component.scss']\r\n})\r\nexport class SucursalComponent implements OnInit, OnDestroy {\r\n  currentUser: any = null;\r\n  currentSorteo: SorteoSchedule | null = null;\r\n  timeUntilClose: string = '';\r\n  isSorteoOpen: boolean = false;\r\n\r\n  selectedNumber: number | null = null;\r\n  selectedAmount: number | null = null;\r\n  selectedNumbers: { numero: number, monto: number }[] = [];\r\n\r\n  // Propiedades para entrada individual\r\n  numero: number | null = null;\r\n  monto: number | null = null;\r\n\r\n  todaySales: Sale[] = [];\r\n  recentSales: Sale[] = [];\r\n  saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n  filteredSales: Sale[] = [];\r\n  filterDate: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  // Propiedades para el teclado numérico\r\n  numberInput: string = '';\r\n  showKeypad: boolean = false;\r\n  isBlocked: boolean = false;\r\n  currentInput: 'numero' | 'monto' = 'numero';\r\n\r\n  // Propiedades para el flujo de modales\r\n  showNumberModal: boolean = false;\r\n  showAmountModal: boolean = false;\r\n  showConfirmModal: boolean = false;\r\n  tempNumber: number | null = null;\r\n  tempAmount: number | null = null;\r\n  modalNumberInput: string = '';\r\n  modalAmountInput: string = '';\r\n\r\n  // Propiedades para el stepper de monto\r\n  stepperAmount: number = 5; // Monto mínimo\r\n  maxAmount: number = 1000; // Monto máximo configurable (opcional)\r\n  stepIncrement: number = 5; // Incremento de 5 en 5\r\n\r\n  // Propiedades para tabs de sorteos\r\n  activeTab: 'mañana' | 'tarde' | 'noche' = 'mañana';\r\n  sorteoData: { [key: string]: any } = {};\r\n\r\n  // Propiedades para la hora de Honduras\r\n  currentHondurasTime: string = '';\r\n\r\n  // Propiedades para información de bloqueo\r\n  blockMessage: string = '';\r\n  blockDetail: string = '';\r\n  nextSorteoName: string = '';\r\n  nextSorteoOpenTime: string = '';\r\n  timeUntilNextOpening: string = '';\r\n\r\n  // Manejo de suscripciones y timers\r\n  private userSubscription?: Subscription;\r\n  private sorteoUpdateInterval?: any;\r\n  private timeCheckInterval?: any;\r\n  private hondurasTimeInterval?: any;\r\n  private isProcessingModal: boolean = false;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private sorteoService: SorteoService,\r\n    private notificationService: NotificationService,\r\n    public printService: PrintService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.userSubscription = this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      console.log('Usuario actual - Sucursal:', this.currentUser?.sucursal);\r\n      if (!user || user.role !== 'sucursal') {\r\n        this.router.navigate(['/login']);\r\n      }\r\n    });\r\n\r\n    this.initializeComponent();\r\n    this.checkTimeRestrictions();\r\n    this.updateHondurasTime();\r\n\r\n    // Verificar bloqueo cada minuto - usar método que se puede limpiar\r\n    this.timeCheckInterval = setInterval(() => {\r\n      this.checkTimeRestrictions();\r\n    }, 500);\r\n\r\n    // Actualizar hora de Honduras cada segundo\r\n    this.hondurasTimeInterval = setInterval(() => {\r\n      this.updateHondurasTime();\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n    // Limpiar suscripciones y timers\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n    if (this.sorteoUpdateInterval) {\r\n      clearInterval(this.sorteoUpdateInterval);\r\n    }\r\n    if (this.timeCheckInterval) {\r\n      clearInterval(this.timeCheckInterval);\r\n    }\r\n    if (this.hondurasTimeInterval) {\r\n      clearInterval(this.hondurasTimeInterval);\r\n    }\r\n\r\n  }\r\n\r\n  private updateHondurasTime(): void {\r\n    const hondurasTime = this.supabaseService.getHondurasTimeNow();\r\n    const fullFormatted = this.supabaseService.formatDateForHonduras(hondurasTime);\r\n\r\n    const parts = fullFormatted.split(' ');\r\n    this.currentHondurasTime = `${parts[1]} ${parts[2]}`; // \"12:49:39 AM\"\r\n  }\r\n\r\n  private async initializeComponent(): Promise<void> {\r\n    try {\r\n      this.isLoading = true;\r\n      this.notificationService.showLoading('Cargando datos...');\r\n\r\n      // Primero asegurar que los horarios de sorteo estén actualizados\r\n      await this.sorteoService.refreshSorteoSchedules();\r\n\r\n      await this.updateSorteoInfo();\r\n      this.setFilterDate();\r\n\r\n      // Limpiar timer anterior si existe\r\n      if (this.sorteoUpdateInterval) {\r\n        clearInterval(this.sorteoUpdateInterval);\r\n      }\r\n\r\n      // Actualizar cada minuto - usar método que se puede limpiar\r\n      this.sorteoUpdateInterval = setInterval(async () => {\r\n        await this.updateSorteoInfo();\r\n      }, 500);\r\n\r\n      // Cargar datos iniciales de todos los tabs\r\n      await this.loadAllSorteoData();\r\n\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al cargar los datos');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  setFilterDate(): void {\r\n    // Obtiene la fecha/hora actual en Honduras\r\n    const hondurasNow = this.supabaseService.getHondurasDateTime();\r\n    // Formatea sin zona: \"YYYY-MM-DD hh:mm:ss\" y extrae la parte de fecha\r\n    const formatted = this.supabaseService.formatLocalDateForSupabase(hondurasNow);\r\n    this.filterDate = formatted.split(' ')[0]; // -> \"YYYY-MM-DD\"\r\n  }\r\n\r\n\r\n  onFilterDateChange(): void {\r\n    this.filterSales();\r\n  }\r\n\r\n  filterSales(): void {\r\n    if (!this.filterDate) {\r\n      this.filteredSales = this.todaySales;\r\n      return;\r\n    }\r\n\r\n    const filterDateObj = new Date(this.filterDate);\r\n    this.filteredSales = this.todaySales.filter(sale => {\r\n      const saleDate = new Date(sale.fecha);\r\n      return saleDate.toDateString() === filterDateObj.toDateString();\r\n    });\r\n  }\r\n\r\n  async updateSorteoInfo(): Promise<void> {\r\n    try {\r\n\r\n      // Asegurar que tenemos los horarios más recientes\r\n      await this.sorteoService.refreshSorteoSchedules();\r\n\r\n      this.currentSorteo = this.sorteoService.getCurrentSorteo();\r\n\r\n\r\n      if (this.currentSorteo) {\r\n        this.isSorteoOpen = this.sorteoService.isSorteoOpen(this.currentSorteo);\r\n        this.timeUntilClose = this.sorteoService.getTimeUntilClose(this.currentSorteo);\r\n\r\n      } else {\r\n        this.isSorteoOpen = false;\r\n        this.timeUntilClose = '';\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  addNumber(): void {\r\n    if (this.numero && this.monto &&\r\n      this.numero >= 0 && this.numero <= 99) {\r\n\r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.numero);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.monto!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.numero,\r\n          monto: this.monto\r\n        });\r\n      }\r\n\r\n      this.numero = null;\r\n      this.monto = null;\r\n      this.numberInput = '';\r\n      this.currentInput = 'numero';\r\n      this.notificationService.showSuccess('Número agregado', 'Número agregado exitosamente a la venta');\r\n    }\r\n  }\r\n\r\n  removeNumber(index: number): void {\r\n\r\n    this.selectedNumbers.splice(index, 1);\r\n\r\n    this.cdr.detectChanges(); // Forzar actualización visual inmediata\r\n  }\r\n\r\n  // Generar número de recibo único con correlativo\r\n  private generateReceiptNumber(correlativo: number, sucursal: string): string {\r\n    // Obtener fecha actual de Honduras como Date\r\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\r\n    // Formatear sin zona para Supabase: \"YYYY-MM-DD hh:mm:ss\"\r\n    const formatted = this.supabaseService.formatLocalDateForSupabase(hondurasTime);\r\n    // Extraer sólo la parte de fecha\r\n    const datePart = formatted.split(' ')[0]; // \"YYYY-MM-DD\"\r\n    const [yearFull, month, day] = datePart.split('-');\r\n    const year = yearFull.slice(-2); // últimos dos dígitos\r\n\r\n    const sucursalCode = sucursal.replace(/\\s+/g, '').toUpperCase().substring(0, 3);\r\n    const correlativoFormatted = correlativo.toString().padStart(4, '0');\r\n\r\n    console.log('Sucursal:', `${sucursalCode}-REC-${year}${month}${day}-${correlativoFormatted}`);\r\n    return `${sucursalCode}-REC-${year}${month}${day}-${correlativoFormatted}`;\r\n  }\r\n\r\n  getTotal(): number {\r\n    return this.selectedNumbers.reduce((total, item) => total + item.monto, 0);\r\n  }\r\n\r\n  async processSale(): Promise<void> {\r\n    if (!this.currentSorteo || !this.currentUser || this.selectedNumbers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Validar que el usuario tenga sucursal configurada\r\n    if (!this.currentUser.sucursal) {\r\n      await this.notificationService.showError(\r\n        'Error: El usuario no tiene una sucursal asignada. Contacte al administrador.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Confirmar venta\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Confirmar venta',\r\n      `¿Procesar venta por L. ${this.getTotal().toFixed(2)}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    this.notificationService.showLoading('Procesando venta...');\r\n\r\n    try {\r\n      // Obtener el siguiente correlativo para esta sucursal\r\n\r\n      const correlativo = await this.supabaseService.getNextCorrelativo(this.currentUser.sucursal);\r\n\r\n      // Generar número de recibo con correlativo\r\n      const numeroRecibo = this.generateReceiptNumber(correlativo, this.currentUser.sucursal);\r\n\r\n      const sale: any = {\r\n        userId: this.currentUser.id,\r\n        sucursal: this.currentUser.sucursal,\r\n        sorteo: this.currentSorteo.name,\r\n        fecha: this.supabaseService.getHondurasDateTime(),\r\n        total: this.getTotal(),\r\n        numeroRecibo: numeroRecibo,\r\n        correlativo: correlativo\r\n      };\r\n\r\n\r\n      const saleId = await this.supabaseService.createSale(sale);\r\n\r\n      // Crear detalles de venta\r\n      const saleDetails: SaleDetail[] = [];\r\n      for (const item of this.selectedNumbers) {\r\n        const detailId = await this.supabaseService.createSaleDetail({\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n        saleDetails.push({\r\n          id: detailId,\r\n          saleId,\r\n          numero: item.numero,\r\n          monto: item.monto\r\n        });\r\n      }\r\n\r\n      // Generar e imprimir recibo\r\n      const saleWithId = { ...sale, id: saleId };\r\n\r\n      // Asegurar que los detalles tengan datos\r\n      if (saleDetails.length === 0) {\r\n        // Usar selectedNumbers como fallback\r\n        for (const item of this.selectedNumbers) {\r\n          saleDetails.push({\r\n            id: `temp-${Date.now()}-${item.numero}`,\r\n            saleId,\r\n            numero: item.numero,\r\n            monto: item.monto\r\n          });\r\n        }\r\n      }\r\n\r\n      this.printService.generateThermalReceipt(saleWithId, saleDetails);\r\n\r\n      // Limpiar selección inmediatamente después de enviar a imprimir\r\n      setTimeout(async () => {\r\n        // Limpiar selección inmediatamente\r\n        this.selectedNumbers = [];\r\n\r\n        // Resetear estado de modales\r\n        this.showNumberModal = false;\r\n        this.showAmountModal = false;\r\n        this.showConfirmModal = false;\r\n        this.modalNumberInput = '';\r\n        this.modalAmountInput = '';\r\n        this.tempNumber = null;\r\n        this.tempAmount = null;\r\n\r\n        this.cdr.detectChanges(); // Forzar actualización visual inmediata\r\n\r\n        // Recargar datos de sorteos para mostrar la venta recién realizada\r\n        await this.loadAllSorteoData();\r\n\r\n        this.cdr.detectChanges(); // Forzar actualización después de cargar datos\r\n      }, 100); // Pequeño retraso para evitar conflictos con la ventana de impresión\r\n\r\n      this.notificationService.showSuccess('Venta procesada e impresa exitosamente');\r\n    } catch (error) {\r\n      this.notificationService.showError('Error al procesar la venta');\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getSaleDetails(saleId: string): SaleDetail[] {\r\n    return this.saleDetails[saleId] || [];\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Cerrar sesión',\r\n      '¿Está seguro que desea cerrar sesión?'\r\n    );\r\n\r\n    if (confirmed) {\r\n      this.notificationService.showLoading('Cerrando sesión...');\r\n      try {\r\n        await this.supabaseService.logout();\r\n        this.router.navigate(['/login']);\r\n      } catch (error) {\r\n        this.notificationService.showError('Error al cerrar sesión');\r\n      } finally {\r\n        this.notificationService.hideLoading();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Métodos del teclado numérico\r\n  pressNumber(num: number) {\r\n    if (this.isBlocked) {\r\n      this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      return;\r\n    }\r\n\r\n    if (this.numberInput.length < 5) { // Máximo 5 dígitos\r\n      this.numberInput += num.toString();\r\n    }\r\n  }\r\n\r\n  clearNumber() {\r\n    this.numberInput = '';\r\n  }\r\n\r\n  acceptNumber() {\r\n    if (!this.numberInput) return;\r\n\r\n    if (this.currentInput === 'numero') {\r\n      const numero = parseInt(this.numberInput);\r\n      if (numero >= 0 && numero <= 99) {\r\n        this.numero = numero;\r\n        this.numberInput = '';\r\n        this.currentInput = 'monto';\r\n        this.notificationService.showInfo('Número seleccionado', 'Ahora ingresa el monto a apostar');\r\n      } else {\r\n        this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n      }\r\n    } else {\r\n      const monto = parseFloat(this.numberInput);\r\n      if (monto > 0 && monto <= 500) {\r\n        this.monto = monto;\r\n        this.addNumber();\r\n        this.numberInput = '';\r\n        this.currentInput = 'numero';\r\n      } else {\r\n        this.notificationService.showError('Monto inválido', 'El monto debe ser mayor a 0 y menor o igual a L. 500');\r\n      }\r\n    }\r\n  }\r\n\r\n  // Flujo de modales para selección de números\r\n  openNumberModal(): void {\r\n\r\n    if (this.isProcessingModal || this.isBlocked) {\r\n      if (this.isBlocked) {\r\n        this.notificationService.showError('Ventas bloqueadas', 'No se pueden realizar ventas en los últimos 5 minutos antes del sorteo');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    // Reiniciar estado de modales\r\n    this.closeAllModals();\r\n\r\n    // Eliminamos el setTimeout para evitar parpadeo\r\n    this.showNumberModal = true;\r\n    this.modalNumberInput = '';\r\n    this.cdr.detectChanges();\r\n    this.isProcessingModal = false;\r\n  }\r\n\r\n  closeAllModals(): void {\r\n    this.showNumberModal = false;\r\n    this.showAmountModal = false;\r\n    this.showConfirmModal = false;\r\n    this.modalNumberInput = '';\r\n    this.modalAmountInput = '';\r\n    this.tempNumber = null;\r\n    this.tempAmount = null;\r\n    this.isProcessingModal = false;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n  }\r\n\r\n  // Modal 1: Selección de número\r\n  pressModalNumber(num: number): void {\r\n    if (this.modalNumberInput.length < 2) {\r\n      this.modalNumberInput += num.toString();\r\n      this.cdr.detectChanges(); // Forzar actualización de la UI\r\n    }\r\n  }\r\n\r\n  clearModalNumber(): void {\r\n    this.modalNumberInput = '';\r\n    this.cdr.detectChanges(); // Forzar actualización inmediata\r\n  }\r\n\r\n  acceptModalNumber(): void {\r\n\r\n    // Evitar múltiples ejecuciones\r\n    if (!this.modalNumberInput || this.isProcessingModal) {\r\n      if (!this.modalNumberInput) {\r\n        this.notificationService.showError('Número requerido', 'Debe ingresar un número');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    // Formatear el número con ceros a la izquierda si es necesario\r\n    let formattedNumber = this.modalNumberInput.padStart(2, '0');\r\n    const numero = parseInt(formattedNumber);\r\n\r\n    if (numero >= 0 && numero <= 99) {\r\n      this.tempNumber = numero;\r\n\r\n      // Transición suave sin setTimeout\r\n      this.showNumberModal = false;\r\n      this.showAmountModal = true;\r\n      this.modalAmountInput = '';\r\n      this.stepperAmount = 5; // Reiniciar stepper al mínimo\r\n      this.isProcessingModal = false;\r\n      this.cdr.detectChanges();\r\n\r\n    } else {\r\n      this.isProcessingModal = false;\r\n      this.notificationService.showError('Número inválido', 'El número debe estar entre 00 y 99');\r\n    }\r\n  }\r\n\r\n  // Modal 2: Stepper de monto\r\n  increaseAmount(): void {\r\n    if (this.stepperAmount < this.maxAmount) {\r\n      this.stepperAmount += this.stepIncrement;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  decreaseAmount(): void {\r\n    if (this.stepperAmount > 5) { // Mínimo L 5\r\n      this.stepperAmount -= this.stepIncrement;\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  resetAmount(): void {\r\n    this.stepperAmount = 5; // Reiniciar al mínimo\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  acceptStepperAmount(): void {\r\n    if (this.isProcessingModal) {\r\n      return;\r\n    }\r\n\r\n    this.isProcessingModal = true;\r\n\r\n    if (this.stepperAmount >= 5 && this.stepperAmount <= this.maxAmount) {\r\n      this.tempAmount = this.stepperAmount;\r\n\r\n      // Transición al modal de confirmación\r\n      this.showAmountModal = false;\r\n      this.showConfirmModal = true;\r\n      this.isProcessingModal = false;\r\n      this.cdr.detectChanges();\r\n    } else {\r\n      this.isProcessingModal = false;\r\n      this.notificationService.showError('Monto inválido', `El monto debe estar entre L 5 y L ${this.maxAmount}`);\r\n    }\r\n  }\r\n\r\n  // Modal 3: Confirmación\r\n  confirmAddNumber(): void {\r\n    if (this.tempNumber !== null && this.tempAmount !== null) {\r\n      // Verificar si el número ya fue seleccionado\r\n      const existingIndex = this.selectedNumbers.findIndex(n => n.numero === this.tempNumber);\r\n      if (existingIndex >= 0) {\r\n        // Actualizar monto\r\n        this.selectedNumbers[existingIndex].monto += this.tempAmount!;\r\n      } else {\r\n        // Agregar nuevo número\r\n        this.selectedNumbers.push({\r\n          numero: this.tempNumber,\r\n          monto: this.tempAmount\r\n        });\r\n      }\r\n\r\n      // Quitar el modal de confirmación, solo cerrar modales\r\n      this.closeAllModals();\r\n      this.cdr.detectChanges(); // Forzar actualización final\r\n    }\r\n  }\r\n\r\n  cancelAddNumber(): void {\r\n    this.closeAllModals();\r\n  }\r\n\r\n  // Verificación de restricciones de tiempo\r\n  private checkTimeRestrictions(): void {\r\n    // Obtener hora de Honduras formateada\r\n    const hnFormatted = this.supabaseService.formatLocalDateForSupabase(\r\n      this.supabaseService.getHondurasDateTime()\r\n    );\r\n    const [, timePart] = hnFormatted.split(' ');\r\n    const [hourStr, minuteStr] = timePart.split(':');\r\n    const currentTotalMinutes = parseInt(hourStr, 10) * 60 + parseInt(minuteStr, 10);\r\n\r\n    // Obtener todos los sorteos configurados\r\n    const sorteos = this.sorteoService.getAllSorteos();\r\n    let isInActivePeriod = false;\r\n    let activeSorteo: any = null;\r\n\r\n    // Verificar si estamos en un período activo de ventas\r\n    for (const sorteo of sorteos) {\r\n      const [openHour, openMinute] = sorteo.openTime.split(':').map(Number);\r\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\r\n      \r\n      const openTimeInMinutes = openHour * 60 + openMinute;\r\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\r\n      \r\n      // Caso especial para sorteo de noche que puede cruzar medianoche\r\n      if (sorteo.name === 'noche') {\r\n        if (closeTimeInMinutes < openTimeInMinutes) {\r\n          // Cruza medianoche\r\n          if (currentTotalMinutes >= openTimeInMinutes || currentTotalMinutes <= closeTimeInMinutes) {\r\n            isInActivePeriod = true;\r\n            activeSorteo = sorteo;\r\n            break;\r\n          }\r\n        } else {\r\n          // No cruza medianoche\r\n          if (currentTotalMinutes >= openTimeInMinutes && currentTotalMinutes <= closeTimeInMinutes) {\r\n            isInActivePeriod = true;\r\n            activeSorteo = sorteo;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        // Sorteos normales (mañana y tarde)\r\n        if (currentTotalMinutes >= openTimeInMinutes && currentTotalMinutes <= closeTimeInMinutes) {\r\n          isInActivePeriod = true;\r\n          activeSorteo = sorteo;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Si no estamos en un período activo, bloquear ventas\r\n    if (!isInActivePeriod) {\r\n      // Buscar el próximo sorteo que abrirá\r\n      const nextSorteo = this.getNextOpeningSorteo(currentTotalMinutes);\r\n      \r\n      if (nextSorteo) {\r\n        this.blockMessage = 'Ventas cerradas';\r\n        this.blockDetail = `El próximo sorteo ${nextSorteo.label} abre a las ${nextSorteo.openTime}`;\r\n        this.nextSorteoName = nextSorteo.label;\r\n        this.nextSorteoOpenTime = nextSorteo.openTime;\r\n        this.timeUntilNextOpening = this.calculateTimeUntilOpening(currentTotalMinutes, nextSorteo);\r\n        \r\n        // Solo mostrar notificación la primera vez que se bloquea\r\n        if (!this.isBlocked) {\r\n          this.notificationService.showWarning(this.blockMessage, this.blockDetail);\r\n        }\r\n      } else {\r\n        this.blockMessage = 'Ventas cerradas';\r\n        this.blockDetail = 'No hay sorteos disponibles en este momento';\r\n        this.nextSorteoName = '';\r\n        this.nextSorteoOpenTime = '';\r\n        this.timeUntilNextOpening = '';\r\n        \r\n        if (!this.isBlocked) {\r\n          this.notificationService.showWarning(this.blockMessage, this.blockDetail);\r\n        }\r\n      }\r\n      \r\n      this.isBlocked = true;\r\n      this.cdr.detectChanges(); // Forzar actualización de la UI\r\n      return;\r\n    }\r\n\r\n    // Si estamos en período activo, verificar restricciones del sorteo actual\r\n    if (!this.currentSorteo || !activeSorteo) {\r\n      this.isBlocked = false;\r\n      return;\r\n    }\r\n\r\n    // Hora de cierre del sorteo activo\r\n    const [closeHourStr, closeMinuteStr] = activeSorteo.closeTime.split(':');\r\n    const closeTotalMinutes = parseInt(closeHourStr, 10) * 60 + parseInt(closeMinuteStr, 10);\r\n\r\n    // Calcula minutos restantes (manejar cruce de medianoche)\r\n    let minutesLeft = closeTotalMinutes - currentTotalMinutes;\r\n    if (activeSorteo.name === 'noche' && closeTotalMinutes < currentTotalMinutes) {\r\n      // Si es sorteo nocturno que cruza medianoche\r\n      minutesLeft = (24 * 60 + closeTotalMinutes) - currentTotalMinutes;\r\n    }\r\n\r\n    // Bloquear ventas en los últimos 5 minutos antes del sorteo\r\n    if (minutesLeft <= 5 && minutesLeft >= 0) {\r\n      if (!this.isBlocked) {\r\n        if (minutesLeft <= 0) {\r\n          this.blockMessage = 'Sorteo cerrado';\r\n          this.blockDetail = 'El sorteo ya ha comenzado. No se pueden realizar más ventas.';\r\n          this.notificationService.showWarning(this.blockMessage, this.blockDetail);\r\n        } else {\r\n          this.blockMessage = 'Ventas bloqueadas';\r\n          this.blockDetail = `Faltan ${minutesLeft} minutos para el sorteo. Ventas bloqueadas.`;\r\n          this.notificationService.showWarning(this.blockMessage, this.blockDetail);\r\n        }\r\n        this.nextSorteoName = '';\r\n        this.nextSorteoOpenTime = '';\r\n        this.timeUntilNextOpening = '';\r\n      }\r\n      this.isBlocked = true;\r\n    } else {\r\n      // Limpiar mensajes de bloqueo cuando se desbloquea\r\n      if (this.isBlocked) {\r\n        this.blockMessage = '';\r\n        this.blockDetail = '';\r\n        this.nextSorteoName = '';\r\n        this.nextSorteoOpenTime = '';\r\n        this.timeUntilNextOpening = '';\r\n      }\r\n      this.isBlocked = false;\r\n    }\r\n    \r\n    this.cdr.detectChanges(); // Forzar actualización de la UI\r\n  }\r\n\r\n  // Método para encontrar el próximo sorteo que abrirá\r\n  private getNextOpeningSorteo(currentTotalMinutes: number): any {\r\n    const sorteos = this.sorteoService.getAllSorteos();\r\n    \r\n    // Buscar el próximo sorteo del mismo día\r\n    for (const sorteo of sorteos) {\r\n      const [openHour, openMinute] = sorteo.openTime.split(':').map(Number);\r\n      const openTimeInMinutes = openHour * 60 + openMinute;\r\n      \r\n      if (openTimeInMinutes > currentTotalMinutes) {\r\n        return sorteo;\r\n      }\r\n    }\r\n    \r\n    // Si no hay más sorteos hoy, el próximo será mañana (primer sorteo del día)\r\n    return sorteos[0] || null;\r\n  }\r\n\r\n  // Método para calcular el tiempo hasta la próxima apertura\r\n  private calculateTimeUntilOpening(currentTotalMinutes: number, nextSorteo: any): string {\r\n    if (!nextSorteo) return '';\r\n    \r\n    const [openHour, openMinute] = nextSorteo.openTime.split(':').map(Number);\r\n    const openTimeInMinutes = openHour * 60 + openMinute;\r\n    \r\n    let minutesUntilOpening: number;\r\n    \r\n    if (openTimeInMinutes > currentTotalMinutes) {\r\n      // Sorteo abre hoy\r\n      minutesUntilOpening = openTimeInMinutes - currentTotalMinutes;\r\n    } else {\r\n      // Sorteo abre mañana (es el primer sorteo del día)\r\n      minutesUntilOpening = (24 * 60) - currentTotalMinutes + openTimeInMinutes;\r\n    }\r\n    \r\n    const hours = Math.floor(minutesUntilOpening / 60);\r\n    const minutes = minutesUntilOpening % 60;\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes}m`;\r\n    } else {\r\n      return `${minutes}m`;\r\n    }\r\n  }\r\n  // Obtener fecha de hoy formateada usando Honduras timezone\r\n  getTodayDate(): string {\r\n    const hondurasToday = this.supabaseService.getHondurasDateTime();\r\n    return hondurasToday.toLocaleDateString('es-HN', {\r\n      weekday: 'long',\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n\r\n  // Método mejorado para reimprimir recibo\r\n  async reprintReceipt(sale: Sale): Promise<void> {\r\n    try {\r\n\r\n      this.notificationService.showLoading('Reimprimiendo recibo...');\r\n\r\n      // Obtener detalles de la venta desde la base de datos\r\n      const details = await this.supabaseService.getSaleDetails(sale.id);\r\n\r\n      if (details.length === 0) {\r\n        this.notificationService.showError('Sin detalles', 'No se encontraron detalles para esta venta. No se puede reimprimir el recibo.');\r\n        return;\r\n      }\r\n\r\n      // Generar recibo con los detalles obtenidos\r\n      this.printService.generateThermalReceipt(sale, details);\r\n\r\n      this.notificationService.showSuccess('Recibo reimpreso', `Recibo #${sale.numeroRecibo || sale.id} enviado a impresora`);\r\n\r\n    } catch (error) {\r\n      this.notificationService.showError('Error de reimpresión', 'Error al reimprimir el recibo. Por favor intente nuevamente.');\r\n    } finally {\r\n      this.notificationService.hideLoading();\r\n    }\r\n  }\r\n\r\n  // Funciones de optimización para trackBy\r\n  trackByIndex(index: number, item: any): number {\r\n    return index;\r\n  }\r\n\r\n  trackBySaleId(index: number, sale: Sale): string {\r\n    return sale.id;\r\n  }\r\n\r\n  trackByDetailId(index: number, detail: SaleDetail): string {\r\n    return detail.id;\r\n  }\r\n\r\n  // Función de debug temporal\r\n  debugModalState(): void {\r\n\r\n    // Forzar reinicio completo de los modales\r\n    this.closeAllModals();\r\n\r\n    alert(`Estado de modales:\r\n- showNumberModal: ${this.showNumberModal}\r\n- showAmountModal: ${this.showAmountModal}  \r\n- showConfirmModal: ${this.showConfirmModal}\r\n- isProcessingModal: ${this.isProcessingModal}\r\n- isBlocked: ${this.isBlocked}\r\nRevisa la consola para más detalles.`);\r\n  }\r\n\r\n  // Función para toggle manual de bloqueo\r\n  toggleBloqueo(): void {\r\n    this.isBlocked = !this.isBlocked;\r\n    const estado = this.isBlocked ? 'bloqueadas' : 'habilitadas';\r\n    this.notificationService.showInfo('Estado actualizado', `Ventas ${estado} manualmente`);\r\n  }\r\n\r\n\r\n  // ===== MÉTODOS PARA TABS DE SORTEOS =====\r\n\r\n  async loadAllSorteoData(): Promise<void> {\r\n    try {\r\n      console.log('Cargando datos de sorteos de forma optimizada...');\r\n      // Construir un Date a partir de filterDate (ej. \"2025-07-24\")\r\n      const fecha = new Date(this.filterDate + 'T00:00:00');\r\n      const sucursal = this.currentUser?.sucursal || 'Sucursal 1';\r\n\r\n      // Inicializar estructura\r\n      this.sorteoData = {\r\n        mañana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      // Ahora sí cargamos con la fecha filtrada\r\n      await this.loadSorteoDataOptimized(fecha, sucursal);\r\n\r\n      // Determinar y mostrar el tab activo\r\n      this.activeTab = this.getCurrentSorteoTab();\r\n      console.log('Datos de sorteos cargados:', this.sorteoData);\r\n      this.cdr.detectChanges();\r\n    } catch (error) {\r\n      console.error('Error cargando datos de sorteos:', error);\r\n    }\r\n  }\r\n\r\n\r\n  // Método optimizado que hace una sola consulta agregada\r\n\r\n  private async loadSorteoDataOptimized(fecha: Date, sucursal: string): Promise<void> {\r\n    try {\r\n      console.log('Cargando datos de sorteos optimizados para fecha:', fecha, 'y sucursal:', sucursal);\r\n      // Determinar rango completo del día\r\n      const startOfDay = new Date(fecha);\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      const endOfDay = new Date(fecha);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n\r\n      // Formatear fechas para Supabase\r\n      const startStr = this.supabaseService.formatLocalDateForSupabase(startOfDay);\r\n      const endStr = this.supabaseService.formatLocalDateForSupabase(endOfDay);\r\n      console.log('Rango formateado para consulta:', startStr, '->', endStr);\r\n\r\n      // Consulta optimizada que obtiene todos los datos del día en una sola petición\r\n      const { data, error } = await this.supabaseService.client\r\n        .from('sales')\r\n        .select(`\r\n        sorteo,\r\n        sale_details(numero, monto)\r\n      `)\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', startStr)\r\n        .lte('fecha', endStr);\r\n      console.log('Consulta optimizada ejecutada:', { data, error });\r\n\r\n      if (error) {\r\n        console.error('Error en consulta optimizada:', error);\r\n        return;\r\n      }\r\n\r\n      console.log('Datos obtenidos de consulta optimizada:', data);\r\n\r\n      // Procesar los datos agregándolos por sorteo\r\n      if (data?.length) {\r\n        data.forEach((sale: any) => {\r\n          const clave = sale.sorteo?.toLowerCase() as 'mañana' | 'tarde' | 'noche';\r\n          let mapped: 'mañana' | 'tarde' | 'noche' = clave;\r\n          if (sale.sorteo?.toLowerCase() === 'mañana' || sale.sorteo?.toLowerCase() === 'manana') {\r\n            mapped = 'mañana';\r\n          }\r\n\r\n          const target = this.sorteoData[mapped];\r\n          if (target && sale.sale_details) {\r\n            sale.sale_details.forEach((detail: any) => {\r\n              target.totalVendido += detail.monto;\r\n              const numStr = detail.numero.toString();\r\n              if (!target.numerosVendidos[numStr]) {\r\n                target.numerosVendidos[numStr] = 0;\r\n              }\r\n              target.numerosVendidos[numStr] += detail.monto;\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Datos procesados y agregados:', this.sorteoData);\r\n    } catch (error) {\r\n      console.error('Error en loadSorteoDataOptimized:', error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Determinar el sorteo actual basado en la hora de Honduras y los horarios configurados\r\n  private getCurrentSorteoTab(): 'mañana' | 'tarde' | 'noche' {\r\n    console.log('Determinando sorteo actual basado en hora de Honduras y horarios configurados...');\r\n    \r\n    // Obtener la hora actual de Honduras\r\n    const hondurasNow = this.supabaseService.getHondurasDateTime();\r\n    const [, timeStr] = this.supabaseService\r\n      .formatLocalDateForSupabase(hondurasNow)\r\n      .split(' ');\r\n    const [hourStr, minuteStr] = timeStr.split(':');\r\n    const currentHour = parseInt(hourStr, 10);\r\n    const currentMinute = parseInt(minuteStr, 10);\r\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\r\n\r\n    console.log(`Hora actual de Honduras: ${hourStr.padStart(2, '0')}:${minuteStr.padStart(2, '0')}`);\r\n\r\n    // Obtener todos los sorteos configurados\r\n    const sorteos = this.sorteoService.getAllSorteos();\r\n    \r\n    // Encontrar el sorteo activo basado en los horarios configurados\r\n    for (const sorteo of sorteos) {\r\n      const [openHour, openMinute] = sorteo.openTime.split(':').map(Number);\r\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\r\n      \r\n      const openTimeInMinutes = openHour * 60 + openMinute;\r\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\r\n      \r\n      console.log(`Verificando sorteo ${sorteo.name}: ${sorteo.openTime} - ${sorteo.closeTime}`);\r\n      \r\n      // Caso especial para sorteo de noche que puede cruzar medianoche\r\n      if (sorteo.name === 'noche') {\r\n        // Si closeTime es menor que openTime, significa que cruza medianoche\r\n        if (closeTimeInMinutes < openTimeInMinutes) {\r\n          // Caso 1: Hora actual está después de la apertura (mismo día)\r\n          // Caso 2: Hora actual está antes del cierre (día siguiente)\r\n          if (currentTimeInMinutes >= openTimeInMinutes || currentTimeInMinutes <= closeTimeInMinutes) {\r\n            console.log(`Sorteo detectado: ${sorteo.name} (cruza medianoche)`);\r\n            return sorteo.name;\r\n          }\r\n        } else {\r\n          // Sorteo de noche normal (no cruza medianoche)\r\n          if (currentTimeInMinutes >= openTimeInMinutes && currentTimeInMinutes <= closeTimeInMinutes) {\r\n            console.log(`Sorteo detectado: ${sorteo.name} (mismo día)`);\r\n            return sorteo.name;\r\n          }\r\n        }\r\n      } else {\r\n        // Sorteos normales (mañana y tarde)\r\n        if (currentTimeInMinutes >= openTimeInMinutes && currentTimeInMinutes <= closeTimeInMinutes) {\r\n          console.log(`Sorteo detectado: ${sorteo.name} (${sorteo.openTime} - ${sorteo.closeTime})`);\r\n          return sorteo.name;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Si no encuentra ningún sorteo activo, determinar cuál mostrar basado en proximidad\r\n    console.log('No se encontró sorteo activo, determinando por proximidad...');\r\n    \r\n    // Buscar el próximo sorteo que abrirá\r\n    const nextSorteo = this.getNextOpeningSorteo(currentTimeInMinutes);\r\n    if (nextSorteo) {\r\n      console.log(`Próximo sorteo: ${nextSorteo.name} abre a las ${nextSorteo.openTime}`);\r\n      return nextSorteo.name;\r\n    }\r\n\r\n    // Si no hay próximo sorteo (caso muy raro), buscar el más reciente que cerró\r\n    const recentlyClosedSorteo = this.getRecentlyClosedSorteo(currentTimeInMinutes);\r\n    if (recentlyClosedSorteo) {\r\n      console.log(`Sorteo recién cerrado: ${recentlyClosedSorteo.name}`);\r\n      return recentlyClosedSorteo.name;\r\n    }\r\n\r\n    // Último fallback: usar mañana por defecto\r\n    console.log('Último fallback: usando mañana por defecto');\r\n    return 'mañana';\r\n  }\r\n\r\n  // Método para encontrar el sorteo que cerró más recientemente\r\n  private getRecentlyClosedSorteo(currentTotalMinutes: number): any {\r\n    const sorteos = this.sorteoService.getAllSorteos();\r\n    let recentlyClosedSorteo: any = null;\r\n    let minTimeSinceClosure = Infinity;\r\n    \r\n    for (const sorteo of sorteos) {\r\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\r\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\r\n      \r\n      let timeSinceClosure: number;\r\n      \r\n      if (sorteo.name === 'noche' && closeTimeInMinutes < currentTotalMinutes) {\r\n        // Sorteo nocturno que cerró hoy muy temprano\r\n        timeSinceClosure = currentTotalMinutes - closeTimeInMinutes;\r\n      } else if (closeTimeInMinutes < currentTotalMinutes) {\r\n        // Sorteo que cerró hoy\r\n        timeSinceClosure = currentTotalMinutes - closeTimeInMinutes;\r\n      } else {\r\n        // Sorteo que cerrará más tarde o mañana\r\n        timeSinceClosure = (24 * 60) - (closeTimeInMinutes - currentTotalMinutes);\r\n      }\r\n      \r\n      if (timeSinceClosure < minTimeSinceClosure && timeSinceClosure > 0) {\r\n        minTimeSinceClosure = timeSinceClosure;\r\n        recentlyClosedSorteo = sorteo;\r\n      }\r\n    }\r\n    \r\n    return recentlyClosedSorteo;\r\n  }\r\n\r\n\r\n  async setActiveTab(tab: 'mañana' | 'tarde' | 'noche'): Promise<void> {\r\n    this.activeTab = tab;\r\n    // Ya no necesitamos cargar números vendidos porque ya están cargados en loadAllSorteoData\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  // Método eliminado - ya no es necesario porque cargamos todo de una vez\r\n  // private async loadNumerosVendidosForTab() - reemplazado por loadSorteoDataOptimized\r\n\r\n  async loadSorteoData(sorteo: string): Promise<void> {\r\n    // Este método ya no es necesario porque cargamos todo de una vez\r\n    // Lo mantenemos por compatibilidad pero no hace nada\r\n    return;\r\n  }\r\n\r\n  getSorteoTotalVendido(sorteo: string): number {\r\n    return this.sorteoData[sorteo]?.totalVendido || 0;\r\n  }\r\n\r\n  getSorteoNumeroGanador(sorteo: string): number | null {\r\n    return this.sorteoData[sorteo]?.numeroGanador || null;\r\n  }\r\n\r\n  getSorteoTotalPagar(sorteo: string): number {\r\n    return this.sorteoData[sorteo]?.totalPagar || 0;\r\n  }\r\n\r\n  getSorteoNumerosVendidos(sorteo: string): Array<{ numero: number, total: number }> {\r\n    const numerosVendidos = this.sorteoData[sorteo]?.numerosVendidos || {};\r\n    return Object.keys(numerosVendidos).map(numero => ({\r\n      numero: parseInt(numero),\r\n      total: numerosVendidos[numero]\r\n    })).sort((a, b) => a.numero - b.numero); // Ordenar por número ascendente (00-99)\r\n  }\r\n\r\n  private calculateTotalPayout(sorteo: string, numeroGanador: number, factor: number): number {\r\n    const numerosVendidos = this.sorteoData[sorteo]?.numerosVendidos || {};\r\n    if (numerosVendidos[numeroGanador]) {\r\n      return numerosVendidos[numeroGanador] * factor;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n","<!-- NUEVA INTERFAZ BASADA EN MOCKUPS -->\r\n<div class=\"lottery-interface\">\r\n  <!-- Header -->\r\n  <div class=\"header-bar\">\r\n    <div class=\"time-display\">\r\n      <span class=\"time-label\">Hora Honduras:</span>\r\n      <span class=\"time-value\">{{ currentHondurasTime }}</span>\r\n    </div>\r\n    \r\n    <div class=\"sucursal-title\">\r\n      <h2>{{ currentUser?.sucursal || 'Sucursal 1' }}</h2>\r\n    </div>\r\n    \r\n    <div class=\"header-actions\">\r\n      <button class=\"btn-header btn-cierre\" routerLink=\"/cierre-caja\" [disabled]=\"isLoading\">\r\n        💰 Cierre de Caja\r\n      </button>\r\n      \r\n      <button class=\"btn-header btn-cerrar\" (click)=\"logout()\" [disabled]=\"isLoading\">\r\n        Cerrar Sesión\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Contenido Principal -->\r\n  <div class=\"main-content\">\r\n    \r\n    <!-- Vista 1: Pantalla Principal con Botón VENTA -->\r\n    <div *ngIf=\"selectedNumbers.length === 0\" class=\"venta-screen\">\r\n      <div class=\"venta-button-container\">\r\n        <button class=\"btn-venta\" \r\n                (click)=\"openNumberModal()\" \r\n                [disabled]=\"isLoading || isBlocked || !isSorteoOpen\">\r\n          VENTA\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Info del sorteo -->\r\n      <div class=\"sorteo-info\" *ngIf=\"currentSorteo\">\r\n        <div class=\"alert alert-info\">\r\n          <strong>{{ currentSorteo.label }}</strong> - \r\n          <span *ngIf=\"isSorteoOpen\" class=\"text-success\">\r\n            Abierto (cierra {{ timeUntilClose }})\r\n          </span>\r\n          <span *ngIf=\"!isSorteoOpen\" class=\"text-danger\">\r\n            Cerrado\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Mensaje de bloqueo mejorado -->\r\n      <div *ngIf=\"isBlocked\" class=\"alert alert-danger block-info\">\r\n        <div class=\"block-header\">\r\n          <i class=\"fas fa-lock\"></i> \r\n          <strong>{{ blockMessage }}</strong>\r\n        </div>\r\n        \r\n        <div class=\"block-details\" *ngIf=\"blockDetail\">\r\n          <p>{{ blockDetail }}</p>\r\n        </div>\r\n        \r\n        <!-- Información detallada del próximo sorteo (solo cuando no hay sorteo activo) -->\r\n        <div *ngIf=\"nextSorteoName && nextSorteoOpenTime\" class=\"next-sorteo-info\">\r\n          <div class=\"next-sorteo-card\">\r\n            <div class=\"sorteo-name\">\r\n              <i class=\"fas fa-clock\"></i>\r\n              <span>{{ nextSorteoName }}</span>\r\n            </div>\r\n            <div class=\"opening-time\">\r\n              <span class=\"label\">Abre a las:</span>\r\n              <span class=\"time\">{{ nextSorteoOpenTime }}</span>\r\n            </div>\r\n            <div class=\"countdown\" *ngIf=\"timeUntilNextOpening\">\r\n              <span class=\"label\">Tiempo restante:</span>\r\n              <span class=\"time-remaining\">{{ timeUntilNextOpening }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Mensaje para bloqueo por cierre (últimos 5 minutos) -->\r\n        <div *ngIf=\"!nextSorteoName && blockDetail.includes('minutos')\" class=\"closing-warning\">\r\n          <i class=\"fas fa-exclamation-triangle\"></i>\r\n          <span>El sorteo cerrará pronto</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Vista 2: Tabla de Jugadas -->\r\n    <div *ngIf=\"selectedNumbers.length > 0\" class=\"jugadas-screen\">\r\n      \r\n      <!-- Tabla de jugadas -->\r\n      <div class=\"jugadas-table\">\r\n        <div class=\"table-header\">\r\n          <div class=\"col-numero\">#</div>\r\n          <div class=\"col-monto\">Monto</div>\r\n          <div class=\"col-accion\"></div>\r\n        </div>\r\n        \r\n        <div class=\"table-body\">\r\n          <div *ngFor=\"let item of selectedNumbers; let i = index; trackBy: trackByIndex\" \r\n               class=\"table-row\">\r\n            <div class=\"col-numero\">{{ item.numero.toString().padStart(2, '0') }}</div>\r\n            <div class=\"col-monto\">L {{ item.monto.toFixed(0) }}</div>\r\n            <div class=\"col-accion\">\r\n              <button class=\"btn-remove\" (click)=\"removeNumber(i)\" [disabled]=\"isLoading\">\r\n                ×\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Total a Pagar -->\r\n      <div class=\"total-container\">\r\n        <div class=\"total-card\">\r\n          <div class=\"total-label\">Total a Pagar:</div>\r\n          <div class=\"total-amount\">L {{ getTotal().toFixed(2) }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Botón Agregar más números -->\r\n      <div class=\"add-more-container\">\r\n        <button class=\"btn-add-more\" \r\n                (click)=\"openNumberModal()\" \r\n                [disabled]=\"isLoading || isBlocked\">\r\n          + Agregar Número\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Botón PAGAR -->\r\n      <div class=\"pagar-container\">\r\n        <button class=\"btn-pagar\" \r\n                (click)=\"processSale()\" \r\n                [disabled]=\"selectedNumbers.length === 0 || isLoading || isBlocked\">\r\n          PAGAR\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- TABS DE SORTEOS -->\r\n  <div class=\"sorteos-tabs-section\">\r\n    <div class=\"tabs-header\">\r\n      <button class=\"tab-btn\" \r\n              [class.active]=\"activeTab === 'mañana'\"\r\n              (click)=\"setActiveTab('mañana')\">\r\n        <i class=\"fas fa-sun\"></i> Mañana\r\n      </button>\r\n      <button class=\"tab-btn\" \r\n              [class.active]=\"activeTab === 'tarde'\"\r\n              (click)=\"setActiveTab('tarde')\">\r\n        <i class=\"fas fa-cloud-sun\"></i> Tarde\r\n      </button>\r\n      <button class=\"tab-btn\" \r\n              [class.active]=\"activeTab === 'noche'\"\r\n              (click)=\"setActiveTab('noche')\">\r\n        <i class=\"fas fa-moon\"></i> Noche\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <!-- Tab Mañana -->\r\n      <div *ngIf=\"activeTab === 'mañana'\" class=\"tab-panel\">\r\n        <div class=\"sorteo-summary\">\r\n          <div class=\"summary-card\">\r\n            <div class=\"summary-label\">Total Vendido</div>\r\n            <div class=\"summary-value\">L {{ getSorteoTotalVendido('mañana').toFixed(2) }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoNumeroGanador('mañana') !== null\">\r\n            <div class=\"summary-label\">Número Ganador</div>\r\n            <div class=\"summary-value winner-number\">{{ getSorteoNumeroGanador('mañana')!.toString().padStart(2, '0') }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoTotalPagar('mañana') > 0\">\r\n            <div class=\"summary-label\">Total a Pagar</div>\r\n            <div class=\"summary-value payout\">L {{ getSorteoTotalPagar('mañana').toFixed(2) }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"numeros-vendidos\">\r\n          <h5>Números Vendidos</h5>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('mañana').length > 0\" class=\"numeros-grid\">\r\n            <div *ngFor=\"let numero of getSorteoNumerosVendidos('mañana')\" class=\"numero-vendido-item\">\r\n              <span class=\"numero\">{{ numero.numero.toString().padStart(2, '0') }}</span>\r\n              <span class=\"monto\">L {{ numero.total.toFixed(0) }}</span>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('mañana').length === 0\" class=\"no-data\">\r\n            <p>No hay números vendidos para este sorteo</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Tab Tarde -->\r\n      <div *ngIf=\"activeTab === 'tarde'\" class=\"tab-panel\">\r\n        <div class=\"sorteo-summary\">\r\n          <div class=\"summary-card\">\r\n            <div class=\"summary-label\">Total Vendido</div>\r\n            <div class=\"summary-value\">L {{ getSorteoTotalVendido('tarde').toFixed(2) }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoNumeroGanador('tarde') !== null\">\r\n            <div class=\"summary-label\">Número Ganador</div>\r\n            <div class=\"summary-value winner-number\">{{ getSorteoNumeroGanador('tarde')!.toString().padStart(2, '0') }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoTotalPagar('tarde') > 0\">\r\n            <div class=\"summary-label\">Total a Pagar</div>\r\n            <div class=\"summary-value payout\">L {{ getSorteoTotalPagar('tarde').toFixed(2) }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"numeros-vendidos\">\r\n          <h5>Números Vendidos</h5>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('tarde').length > 0\" class=\"numeros-grid\">\r\n            <div *ngFor=\"let numero of getSorteoNumerosVendidos('tarde')\" class=\"numero-vendido-item\">\r\n              <span class=\"numero\">{{ numero.numero.toString().padStart(2, '0') }}</span>\r\n              <span class=\"monto\">L {{ numero.total.toFixed(0) }}</span>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('tarde').length === 0\" class=\"no-data\">\r\n            <p>No hay números vendidos para este sorteo</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Tab Noche -->\r\n      <div *ngIf=\"activeTab === 'noche'\" class=\"tab-panel\">\r\n        <div class=\"sorteo-summary\">\r\n          <div class=\"summary-card\">\r\n            <div class=\"summary-label\">Total Vendido</div>\r\n            <div class=\"summary-value\">L {{ getSorteoTotalVendido('noche').toFixed(2) }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoNumeroGanador('noche') !== null\">\r\n            <div class=\"summary-label\">Número Ganador</div>\r\n            <div class=\"summary-value winner-number\">{{ getSorteoNumeroGanador('noche')!.toString().padStart(2, '0') }}</div>\r\n          </div>\r\n          <div class=\"summary-card\" *ngIf=\"getSorteoTotalPagar('noche') > 0\">\r\n            <div class=\"summary-label\">Total a Pagar</div>\r\n            <div class=\"summary-value payout\">L {{ getSorteoTotalPagar('noche').toFixed(2) }}</div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"numeros-vendidos\">\r\n          <h5>Números Vendidos</h5>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('noche').length > 0\" class=\"numeros-grid\">\r\n            <div *ngFor=\"let numero of getSorteoNumerosVendidos('noche')\" class=\"numero-vendido-item\">\r\n              <span class=\"numero\">{{ numero.numero.toString().padStart(2, '0') }}</span>\r\n              <span class=\"monto\">L {{ numero.total.toFixed(0) }}</span>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"getSorteoNumerosVendidos('noche').length === 0\" class=\"no-data\">\r\n            <p>No hay números vendidos para este sorteo</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- Modal 1: Selección de Número -->\r\n<div class=\"modal\" [style.display]=\"showNumberModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showNumberModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-hashtag\"></i> Seleccionar Número\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"calculator-container\">\r\n          <!-- Display del número -->\r\n          <div class=\"calculator-display\">\r\n            <span class=\"display-label\">NUMERO</span>\r\n            <div class=\"display-value\">{{ (modalNumberInput || '00').padStart(2, '0') }}</div>\r\n          </div>\r\n          \r\n          <!-- Teclado numérico -->\r\n          <div class=\"calculator-keypad\">\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(1); $event.stopPropagation()\">1</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(2); $event.stopPropagation()\">2</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(3); $event.stopPropagation()\">3</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(4); $event.stopPropagation()\">4</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(5); $event.stopPropagation()\">5</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(6); $event.stopPropagation()\">6</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(7); $event.stopPropagation()\">7</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(8); $event.stopPropagation()\">8</button>\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(9); $event.stopPropagation()\">9</button>\r\n            </div>\r\n            <div class=\"keypad-row\">\r\n              <button type=\"button\" class=\"keypad-btn\" (click)=\"pressModalNumber(0); $event.stopPropagation()\">0</button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-clear\" (click)=\"clearModalNumber(); $event.stopPropagation()\">\r\n                C\r\n              </button>\r\n              <button type=\"button\" class=\"keypad-btn keypad-accept\" (click)=\"acceptModalNumber(); $event.stopPropagation()\" \r\n                      [disabled]=\"!modalNumberInput\">\r\n                Aceptar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 2: Selección de Apuesta -->\r\n<div class=\"modal\" [style.display]=\"showAmountModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showAmountModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-dollar-sign\"></i> Ingresar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"stepper-container\">\r\n          \r\n          <!-- Control Stepper -->\r\n          <div class=\"stepper-controls\">\r\n            <button type=\"button\" \r\n                    class=\"stepper-btn stepper-minus\" \r\n                    (click)=\"decreaseAmount(); $event.stopPropagation()\"\r\n                    [disabled]=\"stepperAmount <= 5\">\r\n              <i class=\"fas fa-minus\"></i>\r\n            </button>\r\n            \r\n            <div class=\"stepper-value\">\r\n              <span class=\"amount-large\">{{ stepperAmount }}</span>\r\n              <span class=\"currency\">Lempiras</span>\r\n            </div>\r\n            \r\n            <button type=\"button\" \r\n                    class=\"stepper-btn stepper-plus\" \r\n                    (click)=\"increaseAmount(); $event.stopPropagation()\"\r\n                    [disabled]=\"stepperAmount >= maxAmount\">\r\n              <i class=\"fas fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n          \r\n          <!-- Botones de acción -->\r\n          <div class=\"stepper-actions\">\r\n            <button type=\"button\" \r\n                    class=\"btn btn-outline-secondary btn-lg stepper-action-btn\" \r\n                    (click)=\"resetAmount(); $event.stopPropagation()\">\r\n              <i class=\"fas fa-redo\"></i> Reiniciar\r\n            </button>\r\n            \r\n            <button type=\"button\" \r\n                    class=\"btn btn-success btn-lg stepper-action-btn\" \r\n                    (click)=\"acceptStepperAmount(); $event.stopPropagation()\"\r\n                    [disabled]=\"stepperAmount < 5\">\r\n              <i class=\"fas fa-check\"></i> Aceptar\r\n            </button>\r\n          </div>\r\n          \r\n          <!-- Información adicional -->\r\n          <div class=\"stepper-info\">\r\n            <small class=\"text-muted\">\r\n              <i class=\"fas fa-info-circle\"></i> \r\n              Monto mínimo: L 5 • Se incrementa de 5 en 5\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal 3: Confirmación -->\r\n<div class=\"modal\" [style.display]=\"showConfirmModal ? 'flex' : 'none'\" \r\n     [class.show]=\"showConfirmModal\" (click)=\"closeAllModals()\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">\r\n          <i class=\"fas fa-check-circle\"></i> Confirmar Apuesta\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" (click)=\"closeAllModals()\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"confirmation-container\">\r\n          <div class=\"confirmation-card\">\r\n            <div class=\"number-display-large\">\r\n              # {{ tempNumber !== null ? tempNumber.toString().padStart(2, '0') : '00' }}\r\n            </div>\r\n            <div class=\"amount-display\">\r\n              APUESTA: L {{ tempAmount || 0 }}\r\n            </div>\r\n            <div class=\"confirmation-buttons\">\r\n              <button type=\"button\" class=\"btn btn-secondary btn-lg\" (click)=\"cancelAddNumber()\">\r\n                <i class=\"fas fa-times\"></i> Cancelar\r\n              </button>\r\n               <button type=\"button\" class=\"btn btn-success btn-lg\" (click)=\"confirmAddNumber()\">\r\n                <i class=\"fas fa-check\"></i> CONFIRMAR\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Eliminar el backdrop separado ya que usamos el modal completo -->\r\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NotificationService } from '../../services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { User, UserManagement } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.scss']\r\n})\r\nexport class UserManagementComponent implements OnInit, OnDestroy {\r\n  currentUser: any = null;\r\n  users: UserManagement[] = [];\r\n  isLoading: boolean = false;\r\n\r\n  // Modal para crear/editar usuario\r\n  showUserModal: boolean = false;\r\n  isEditMode: boolean = false;\r\n  selectedUser: UserManagement | null = null;\r\n\r\n  // Formulario de usuario\r\n  userForm = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    role: 'sucursal' as 'admin' | 'sucursal',\r\n    sucursal: '',\r\n    active: true\r\n  };\r\n\r\n  // Lista de sucursales predefinidas para autocompletado\r\n  sucursalesSugeridas: string[] = [\r\n    'Sucursal Central',\r\n    'Sucursal Norte', \r\n    'Sucursal Sur',\r\n    'Sucursal Este',\r\n    'Sucursal Oeste'\r\n  ];\r\n\r\n  private userSubscription?: Subscription;\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private notificationService: NotificationService,\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSubscription = this.supabaseService.currentUser$.subscribe(user => {\r\n      this.currentUser = user;\r\n      if (!user || user.role !== 'admin') {\r\n        this.router.navigate(['/login']);\r\n        return;\r\n      }\r\n    });\r\n\r\n    this.loadUsers();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async loadUsers(): Promise<void> {\r\n    console.log('loadUsers iniciado, isLoading:', this.isLoading);\r\n    this.isLoading = true;\r\n    try {\r\n      console.log('Llamando getAllUsers...');\r\n      this.users = await this.supabaseService.getAllUsers();\r\n      console.log('Usuarios cargados:', this.users);\r\n    } catch (error) {\r\n      console.error('Error al cargar usuarios:', error);\r\n      this.notificationService.showError('Error al cargar usuarios');\r\n    } finally {\r\n      this.isLoading = false;\r\n      console.log('loadUsers terminado, isLoading:', this.isLoading);\r\n    }\r\n  }\r\n\r\n  openCreateUserModal(): void {\r\n    this.isEditMode = false;\r\n    this.selectedUser = null;\r\n    this.resetForm();\r\n    this.showUserModal = true;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  openEditUserModal(user: UserManagement): void {\r\n    this.isEditMode = true;\r\n    this.selectedUser = user;\r\n    this.userForm = {\r\n      email: user.email,\r\n      password: '', // No mostramos la contraseña actual\r\n      confirmPassword: '',\r\n      role: user.role,\r\n      sucursal: user.sucursal || '',\r\n      active: user.active\r\n    };\r\n    this.showUserModal = true;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n  }\r\n\r\n  closeUserModal(): void {\r\n    this.showUserModal = false;\r\n    this.resetForm();\r\n    this.selectedUser = null;\r\n    this.cdr.detectChanges(); // Forzar detección de cambios\r\n  }\r\n\r\n  goToMainMenu(): void {\r\n    this.router.navigate(['/admin']);\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.userForm = {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      role: 'sucursal',\r\n      sucursal: '',\r\n      active: true\r\n    };\r\n  }\r\n\r\n  async saveUser(): Promise<void> {\r\n    if (!this.validateForm()) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      if (this.isEditMode && this.selectedUser) {\r\n        // Actualizar usuario existente\r\n        await this.supabaseService.updateExistingUser(this.selectedUser.id, {\r\n          email: this.userForm.email,\r\n          role: this.userForm.role as 'admin' | 'sucursal',\r\n          sucursal: this.userForm.sucursal,\r\n          active: this.userForm.active\r\n        });\r\n\r\n        // Si se proporcionó una nueva contraseña, actualizarla\r\n        if (this.userForm.password && this.userForm.password.trim() !== '') {\r\n          await this.supabaseService.updateUserPassword(this.selectedUser.id, this.userForm.password);\r\n          this.notificationService.showSuccess('Usuario y contraseña actualizados exitosamente');\r\n        } else {\r\n          this.notificationService.showSuccess('Usuario actualizado exitosamente');\r\n        }\r\n      } else {\r\n        // Crear nuevo usuario\r\n        await this.supabaseService.createNewUser({\r\n          email: this.userForm.email,\r\n          role: this.userForm.role as 'admin' | 'sucursal',\r\n          sucursal: this.userForm.sucursal,\r\n          active: this.userForm.active\r\n        });\r\n        this.notificationService.showSuccess('Usuario creado exitosamente con contraseña temporal: LoteriaTemporal123!');\r\n      }\r\n\r\n      this.closeUserModal();\r\n      await this.loadUsers();\r\n    } catch (error: any) {\r\n      this.notificationService.showError(error.message || 'Error al guardar usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async deleteUser(user: UserManagement): Promise<void> {\r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      'Eliminar usuario',\r\n      `¿Está seguro que desea eliminar al usuario ${user.email}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      await this.supabaseService.deleteExistingUser(user.id);\r\n      this.notificationService.showSuccess('Usuario eliminado exitosamente');\r\n      await this.loadUsers();\r\n    } catch (error: any) {\r\n      this.notificationService.showError(error.message || 'Error al eliminar usuario');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  async toggleUserStatus(user: UserManagement): Promise<void> {\r\n    const newStatus = !user.active;\r\n    const action = newStatus ? 'activar' : 'desactivar';\r\n    \r\n    const confirmed = await this.notificationService.showConfirmation(\r\n      `${action.charAt(0).toUpperCase() + action.slice(1)} usuario`,\r\n      `¿Está seguro que desea ${action} al usuario ${user.email}?`\r\n    );\r\n\r\n    if (!confirmed) return;\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      await this.supabaseService.toggleExistingUserStatus(user.id);\r\n      this.notificationService.showSuccess(`Usuario ${action}ado exitosamente`);\r\n      await this.loadUsers();\r\n    } catch (error: any) {\r\n      this.notificationService.showError(error.message || `Error al ${action} usuario`);\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private validateForm(): boolean {\r\n    if (!this.userForm.email) {\r\n      this.notificationService.showError('El email es requerido');\r\n      return false;\r\n    }\r\n\r\n    if (!this.isEditMode && !this.userForm.password) {\r\n      this.notificationService.showError('La contraseña es requerida para usuarios nuevos');\r\n      return false;\r\n    }\r\n\r\n    if (this.userForm.password && this.userForm.password.length < 6) {\r\n      this.notificationService.showError('La contraseña debe tener al menos 6 caracteres');\r\n      return false;\r\n    }\r\n\r\n    if (this.userForm.password && this.userForm.password !== this.userForm.confirmPassword) {\r\n      this.notificationService.showError('Las contraseñas no coinciden');\r\n      return false;\r\n    }\r\n\r\n    if (this.userForm.role === 'sucursal' && !this.userForm.sucursal.trim()) {\r\n      this.notificationService.showError('La sucursal es requerida para usuarios de tipo sucursal');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getRoleLabel(role: string): string {\r\n    return role === 'admin' ? 'Administrador' : 'Vendedor';\r\n  }\r\n\r\n  getStatusLabel(active: boolean): string {\r\n    return active ? 'Activo' : 'Inactivo';\r\n  }\r\n\r\n  getStatusClass(active: boolean): string {\r\n    return active ? 'status-active' : 'status-inactive';\r\n  }\r\n\r\n  // Función de trackBy para optimizar el rendimiento del ngFor\r\n  trackByUserId(index: number, user: UserManagement): string {\r\n    return user.id;\r\n  }\r\n\r\n}\r\n","<div class=\"user-management-container\">\r\n  <div class=\"header\">\r\n    <div class=\"header-left\">\r\n      <button class=\"btn-secondary\" \r\n              (click)=\"goToMainMenu()\" \r\n              [disabled]=\"isLoading\"\r\n              title=\"Regresar al menú principal\">\r\n        <i class=\"fas fa-arrow-left\"></i> Menú Principal\r\n      </button>\r\n      <h2>Gestión de Usuarios</h2>\r\n    </div>\r\n    <button class=\"btn-primary\" \r\n            (click)=\"openCreateUserModal()\" \r\n            [disabled]=\"isLoading\"\r\n            title=\"Crear nuevo usuario\">\r\n      <i class=\"fas fa-plus\"></i> Crear Usuario\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Tabla de usuarios -->\r\n  <div class=\"users-table-container\">\r\n    <table class=\"users-table\" *ngIf=\"!isLoading && users.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <th>Email</th>\r\n          <th>Rol</th>\r\n          <th>Sucursal</th>\r\n          <th>Estado</th>\r\n          <th>Fecha Creación</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of users; trackBy: trackByUserId\">\r\n          <td>{{ user.email }}</td>\r\n          <td>\r\n            <span class=\"role-badge\" [class]=\"'role-' + user.role\">\r\n              {{ getRoleLabel(user.role) }}\r\n            </span>\r\n          </td>\r\n          <td>{{ user.sucursal || '-' }}</td>\r\n          <td>\r\n            <span class=\"status-badge\" [class]=\"getStatusClass(user.active)\">\r\n              {{ getStatusLabel(user.active) }}\r\n            </span>\r\n          </td>\r\n          <td>{{ user.created_at | date:'dd/MM/yyyy' }}</td>\r\n          <td class=\"actions-cell\">\r\n            <button class=\"btn-icon btn-edit\" \r\n                    (click)=\"openEditUserModal(user)\" \r\n                    [disabled]=\"isLoading\"\r\n                    title=\"Editar usuario\">\r\n              <i class=\"fas fa-edit\"></i>\r\n            </button>\r\n            <button class=\"btn-icon btn-toggle\" \r\n                    (click)=\"toggleUserStatus(user)\" \r\n                    [disabled]=\"isLoading\"\r\n                    [title]=\"user.active ? 'Desactivar usuario' : 'Activar usuario'\">\r\n              <i class=\"fas\" [class]=\"user.active ? 'fa-eye-slash' : 'fa-eye'\"></i>\r\n            </button>\r\n            <button class=\"btn-icon btn-delete\" \r\n                    (click)=\"deleteUser(user)\" \r\n                    [disabled]=\"isLoading\"\r\n                    title=\"Eliminar usuario\">\r\n              <i class=\"fas fa-trash\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Estado de carga -->\r\n    <div class=\"loading-state\" *ngIf=\"isLoading\">\r\n      <i class=\"fas fa-spinner fa-spin\"></i>\r\n      <p>Cargando usuarios...</p>\r\n    </div>\r\n\r\n    <!-- Estado vacío -->\r\n    <div class=\"empty-state\" *ngIf=\"!isLoading && users.length === 0\">\r\n      <i class=\"fas fa-users\"></i>\r\n      <h3>No hay usuarios registrados</h3>\r\n      <p>Comience creando el primer usuario del sistema</p>\r\n      <button class=\"btn-primary\" (click)=\"openCreateUserModal()\">\r\n        <i class=\"fas fa-plus\"></i> Crear Primer Usuario\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal para crear/editar usuario -->\r\n<div class=\"modal-overlay\" *ngIf=\"showUserModal\" (click)=\"closeUserModal()\">\r\n  <div class=\"modal-container\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"modal-header\">\r\n      <h3>{{ isEditMode ? 'Editar Usuario' : 'Crear Usuario' }}</h3>\r\n      <button class=\"btn-close\" (click)=\"closeUserModal()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"modal-body\">\r\n      <form class=\"user-form\">\r\n        <!-- Email -->\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email *</label>\r\n          <input type=\"email\" \r\n                 id=\"email\" \r\n                 [(ngModel)]=\"userForm.email\" \r\n                 name=\"email\"\r\n                 [disabled]=\"isEditMode\"\r\n                 placeholder=\"ejemplo@correo.com\"\r\n                 required>\r\n        </div>\r\n\r\n        <!-- Contraseña -->\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">\r\n            Contraseña {{ isEditMode ? '(dejar vacío para mantener actual)' : '*' }}\r\n          </label>\r\n          <input type=\"password\" \r\n                 id=\"password\" \r\n                 [(ngModel)]=\"userForm.password\" \r\n                 name=\"password\"\r\n                 placeholder=\"Mínimo 6 caracteres\"\r\n                 [required]=\"!isEditMode\">\r\n        </div>\r\n\r\n        <!-- Confirmar Contraseña (siempre mostrar para usuarios nuevos, o si hay contraseña para editar) -->\r\n        <div class=\"form-group\" *ngIf=\"!isEditMode || userForm.password\">\r\n          <label for=\"confirmPassword\">Confirmar Contraseña *</label>\r\n          <input type=\"password\" \r\n                 id=\"confirmPassword\" \r\n                 [(ngModel)]=\"userForm.confirmPassword\" \r\n                 name=\"confirmPassword\"\r\n                 placeholder=\"Repetir la contraseña\"\r\n                 [required]=\"!isEditMode || userForm.password\">\r\n        </div>\r\n\r\n        <!-- Rol -->\r\n        <div class=\"form-group\">\r\n          <label for=\"role\">Rol *</label>\r\n          <select id=\"role\" \r\n                  [(ngModel)]=\"userForm.role\" \r\n                  name=\"role\"\r\n                  required>\r\n            <option value=\"admin\">Administrador</option>\r\n            <option value=\"sucursal\">Vendedor</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Sucursal (solo para rol sucursal) -->\r\n        <div class=\"form-group\" *ngIf=\"userForm.role === 'sucursal'\">\r\n          <label for=\"sucursal\">Sucursal *</label>\r\n          <input type=\"text\" \r\n                 id=\"sucursal\" \r\n                 [(ngModel)]=\"userForm.sucursal\" \r\n                 name=\"sucursal\"\r\n                 placeholder=\"Ingrese el nombre de la sucursal\"\r\n                 list=\"sucursales-list\"\r\n                 required>\r\n          <datalist id=\"sucursales-list\">\r\n            <option *ngFor=\"let sucursal of sucursalesSugeridas\" [value]=\"sucursal\">\r\n          </datalist>\r\n          <small class=\"form-help\">Puedes escribir cualquier nombre o seleccionar una opción</small>\r\n        </div>\r\n\r\n        <!-- Estado activo -->\r\n        <div class=\"form-group checkbox-group\">\r\n          <label class=\"checkbox-label\">\r\n            <input type=\"checkbox\" \r\n                   [(ngModel)]=\"userForm.active\" \r\n                   name=\"active\">\r\n            <span class=\"checkmark\"></span>\r\n            Usuario activo\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <button class=\"btn-secondary\" (click)=\"closeUserModal()\" [disabled]=\"isLoading\">\r\n        Cancelar\r\n      </button>\r\n      <button class=\"btn-primary\" (click)=\"saveUser()\" [disabled]=\"isLoading\">\r\n        <i class=\"fas fa-spinner fa-spin\" *ngIf=\"isLoading\"></i>\r\n        {{ isEditMode ? 'Actualizar' : 'Crear' }} Usuario\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(8000), // Aumentar timeout a 8 segundos\r\n      map(user => {\r\n        const isAdmin = user?.role === 'admin';\r\n        return isAdmin;\r\n      }),\r\n      tap(isAdmin => {\r\n        if (!isAdmin) {\r\n          this.router.navigate(['/sucursal']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap, timeout, catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SupabaseService } from '../services/supabase.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      timeout(8000), // Aumentar timeout a 8 segundos\r\n      map(user => {\r\n        return !!user;\r\n      }),\r\n      tap(isAuthenticated => {\r\n        if (!isAuthenticated) {\r\n          this.router.navigate(['/login']);\r\n        }\r\n      }),\r\n      catchError(error => {\r\n        // Dar más tiempo antes de redirigir\r\n        this.router.navigate(['/login']);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { SupabaseService } from '../services/supabase.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SucursalGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.supabaseService.currentUser$.pipe(\r\n      map(user => {\r\n        if (!user) {\r\n          this.router.navigate(['/login']);\r\n          return false;\r\n        }\r\n\r\n        if (user.role !== 'sucursal') {\r\n          this.router.navigate(['/admin']);\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n}\r\n","export interface User {\r\n  id: string;\r\n  email: string;\r\n  role: 'admin' | 'sucursal';\r\n  sucursal?: string;\r\n  active: boolean;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface UserManagement {\r\n  id: string;\r\n  email: string;\r\n  role: 'admin' | 'sucursal';\r\n  sucursal?: string;\r\n  active: boolean;\r\n  createdAt: Date;\r\n  password?: string;\r\n  raw_user_meta_data?: any;\r\n  created_at?: string;\r\n}\r\n\r\nexport interface Sale {\r\n  id: string;\r\n  userId: string;\r\n  sucursal: string;\r\n  sorteo: 'mañana' | 'tarde' | 'noche';\r\n  fecha: Date;\r\n  total: number;\r\n  numeroRecibo: string; // Número único de recibo\r\n  correlativo: number; // Correlativo secuencial por sucursal\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface SaleDetail {\r\n  id: string;\r\n  saleId: string;\r\n  numero: number;\r\n  monto: number;\r\n}\r\n\r\nexport interface Sorteo {\r\n  id: string;\r\n  fecha: Date;\r\n  sorteo: 'mañana' | 'tarde' | 'noche';\r\n  horaCierre: Date;\r\n  numeroGanador?: string;\r\n  factorMultiplicador: number; // Factor para calcular ganancias (ej: 70)\r\n  totalVendido: number;\r\n  totalPagado: number;\r\n  gananciaNeta: number;\r\n  cerrado: boolean;\r\n  sucursal?: string; // Nueva propiedad para sorteos por sucursal\r\n}\r\n\r\nexport interface SucursalFactor {\r\n  sucursal: string;\r\n  factor: number;\r\n  usuario?: string;\r\n  email?: string;\r\n}\r\n\r\nexport interface SorteoSchedule {\r\n  name: 'mañana' | 'tarde' | 'noche';\r\n  label: string;\r\n  closeTime: string; // \"10:55\", \"14:55\", \"20:55\"\r\n  openTime: string; // \"06:00\", \"13:00\", \"20:00\"\r\n}\r\n\r\nexport const SORTEO_SCHEDULES: SorteoSchedule[] = [\r\n  { name: 'mañana', label: 'Mañana', closeTime: '9:15' , openTime: '00:47' },\r\n  { name: 'tarde', label: 'Tarde', closeTime: '14:55', openTime: '10:00' },\r\n  { name: 'noche', label: 'Noche', closeTime: '17:22', openTime: '15:00' }\r\n];\r\n\r\n// Interfaces para módulo de cierre de caja y pagos\r\nexport interface MovimientoCaja {\r\n  id: string;\r\n  tipo: 'entrada' | 'salida';\r\n  motivo: string;\r\n  monto: number;\r\n  usuarioId: string;\r\n  sorteoId?: string;\r\n  fecha: Date;\r\n  sucursal: string;\r\n  nombreReceptor?: string; // Para pagos de sorteo\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface CierreDiario {\r\n  id: string;\r\n  fecha: Date;\r\n  usuarioId: string;\r\n  sucursal: string;\r\n  totalVendido: number;\r\n  totalPagado: number;\r\n  neto: number;\r\n  efectivoReportado: number;\r\n  diferencia: number;\r\n  notas?: string;\r\n  sorteosMañana?: SorteoResumen;\r\n  sorteosTarde?: SorteoResumen;\r\n  sorteosNoche?: SorteoResumen;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface SorteoResumen {\r\n  numeroGanador?: string;\r\n  factor: number;\r\n  ventaPorNumero: number;\r\n  totalVendido: number;\r\n  totalPagado: number;\r\n  totalNeto: number;\r\n}\r\n\r\nexport interface PagoSorteo {\r\n  sorteoId: string;\r\n  numeroGanador: string;\r\n  factor: number;\r\n  ventaPorNumero: number; // Cuánto se vendió específicamente del número ganador\r\n  totalVendido: number;\r\n  totalPagar: number;\r\n  totalNeto: number;\r\n  sucursal: string;\r\n  nombreReceptor?: string;\r\n  pagado?: boolean; // Campo para marcar si ya fue pagado\r\n  fechaPago?: Date; // Fecha cuando se realizó el pago\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as XLSX from 'xlsx';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { saveAs } from 'file-saver';\r\nimport { SupabaseService } from './supabase.service';\r\n\r\ndeclare module 'jspdf' {\r\n  interface jsPDF {\r\n    autoTable: typeof autoTable;\r\n  }\r\n}\r\n\r\nexport interface ReportData {\r\n  // Resumen General\r\n  resumenGeneral: {\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    ventasTotales: number;\r\n    fechaReporte: string;\r\n    horaReporte: string;\r\n    filtroAplicado: string;\r\n  };\r\n  \r\n  // Resumen por Sorteo\r\n  resumenPorSorteo: Array<{\r\n    sorteo: string;\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    ventasTotales: number;\r\n    estado: string;\r\n    numeroGanador?: string;\r\n    factor?: number;\r\n  }>;\r\n  \r\n  // Resumen por Sucursal (con factor)\r\n  resumenPorSucursal: Array<{\r\n    sucursal: string;\r\n    factor: number;\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    ventasTotales: number;\r\n  }>;\r\n  \r\n  // Números vendidos por sorteo (formato tablero)\r\n  numerosPorSorteo: Array<{\r\n    sorteo: string;\r\n    sucursal: string;\r\n    numeros: Array<{\r\n      numero: number;\r\n      totalVendido: number;\r\n      cantidadVentas: number;\r\n      porcentaje: number;\r\n    }>;\r\n    totalSorteoSucursal: number;\r\n  }>;\r\n  \r\n  // Detalle general de ventas\r\n  detalleVentas: Array<{\r\n    numeroRecibo: string;\r\n    fecha: string;\r\n    hora: string;\r\n    sorteo: string;\r\n    sucursal: string;\r\n    numeros: string;\r\n    total: number;\r\n    estado: string;\r\n  }>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExportService {\r\n\r\n  constructor(private supabaseService: SupabaseService) { }\r\n\r\n  async exportToExcel(data: any, filename: string = 'reporte-diario'): Promise<void> {\r\n    try {\r\n      // Crear un nuevo workbook\r\n      const workbook = XLSX.utils.book_new();\r\n\r\n      // ===== HOJA 1: RESUMEN GENERAL =====\r\n      const resumenData = [\r\n        ['REPORTE DIARIO - SISTEMA DE LOTERÍA'],\r\n        ['Fecha:', data.resumenGeneral.fechaReporte],\r\n        ['Hora:', data.resumenGeneral.horaReporte],\r\n        ['Filtros Aplicados:', data.resumenGeneral.filtroAplicado],\r\n        [''],\r\n        ['RESUMEN GENERAL'],\r\n        ['Indicador', 'Valor'],\r\n        ['Total Vendido', data.resumenGeneral.totalVendido],\r\n        ['Total Pagado', data.resumenGeneral.totalPagado],\r\n        ['Ganancia Neta', data.resumenGeneral.gananciaNeta],\r\n        ['Ventas Totales', data.resumenGeneral.ventasTotales]\r\n      ];\r\n      const wsResumen = XLSX.utils.aoa_to_sheet(resumenData);\r\n      \r\n      // Aplicar formato\r\n      wsResumen['!cols'] = [{ width: 20 }, { width: 15 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsResumen, 'Resumen General');\r\n\r\n      // ===== HOJA 2: RESUMEN POR SORTEO =====\r\n      const sorteoHeaders = ['Sorteo', 'Total Vendido', 'Total Pagado', 'Ganancia Neta', 'Ventas', 'Estado', 'No. Ganador', 'Factor'];\r\n      const sorteoRows = data.resumenPorSorteo.length > 0 \r\n        ? data.resumenPorSorteo.map((s: any) => [\r\n            s.sorteo,\r\n            s.totalVendido,\r\n            s.totalPagado,\r\n            s.gananciaNeta,\r\n            s.ventasTotales,\r\n            s.estado,\r\n            s.numeroGanador,\r\n            s.factor\r\n          ])\r\n        : [['Sin datos', 0, 0, 0, 0, '', '', 0]];\r\n        \r\n      const sorteoData = [\r\n        ['RESUMEN POR SORTEO'],\r\n        [''],\r\n        sorteoHeaders,\r\n        ...sorteoRows\r\n      ];\r\n      const wsSorteo = XLSX.utils.aoa_to_sheet(sorteoData);\r\n      wsSorteo['!cols'] = [{ width: 15 }, { width: 12 }, { width: 12 }, { width: 12 }, { width: 8 }, { width: 10 }, { width: 12 }, { width: 8 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsSorteo, 'Resumen por Sorteo');\r\n\r\n      // ===== HOJA 3: RESUMEN POR SUCURSAL =====\r\n      const sucursalHeaders = ['Sucursal', 'Factor', 'Total Vendido', 'Total Pagado', 'Ganancia Neta', 'Ventas'];\r\n      const sucursalRows = data.resumenPorSucursal.length > 0 \r\n        ? data.resumenPorSucursal.map((s: any) => [\r\n            s.sucursal,\r\n            s.factor,\r\n            s.totalVendido,\r\n            s.totalPagado,\r\n            s.gananciaNeta,\r\n            s.ventasTotales\r\n          ])\r\n        : [['Sin datos', 0, 0, 0, 0, 0]];\r\n        \r\n      const sucursalData = [\r\n        ['RESUMEN POR SUCURSAL'],\r\n        [''],\r\n        sucursalHeaders,\r\n        ...sucursalRows\r\n      ];\r\n      const wsSucursal = XLSX.utils.aoa_to_sheet(sucursalData);\r\n      wsSucursal['!cols'] = [{ width: 15 }, { width: 8 }, { width: 12 }, { width: 12 }, { width: 12 }, { width: 8 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsSucursal, 'Resumen por Sucursal');\r\n\r\n      // ===== HOJA 4: NÚMEROS VENDIDOS POR SORTEO =====\r\n      const numerosData = [['NÚMEROS VENDIDOS POR SORTEO'], ['']];\r\n      \r\n      if (data.numerosPorSorteo.length > 0) {\r\n        data.numerosPorSorteo.forEach((grupo: any) => {\r\n          // Título del grupo\r\n          numerosData.push([`${grupo.sorteo} - ${grupo.sucursal} (Total: L ${grupo.totalSorteoSucursal.toFixed(2)})`]);\r\n          numerosData.push(['Número', 'Total Vendido', 'Cantidad Ventas', 'Porcentaje']);\r\n          \r\n          // Números del grupo\r\n          grupo.numeros.forEach((num: any) => {\r\n            numerosData.push([\r\n              num.numero.toString().padStart(2, '0'),\r\n              num.totalVendido,\r\n              num.cantidadVentas,\r\n              num.porcentaje\r\n            ]);\r\n          });\r\n          \r\n          numerosData.push(['']); // Línea en blanco entre grupos\r\n        });\r\n      } else {\r\n        numerosData.push(['Sin datos de números vendidos']);\r\n      }\r\n      \r\n      const wsNumeros = XLSX.utils.aoa_to_sheet(numerosData);\r\n      wsNumeros['!cols'] = [{ width: 10 }, { width: 12 }, { width: 12 }, { width: 10 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsNumeros, 'Números por Sorteo');\r\n\r\n      // ===== HOJA 5: DETALLE DE VENTAS =====\r\n      const ventasHeaders = ['No. Recibo', 'Fecha', 'Hora', 'Sorteo', 'Sucursal', 'Números', 'Total', 'Estado'];\r\n      const ventasRows = data.detalleVentas.length > 0\r\n        ? data.detalleVentas.map((v: any) => [\r\n            v.numeroRecibo,\r\n            v.fecha,\r\n            v.hora,\r\n            v.sorteo,\r\n            v.sucursal,\r\n            v.numeros,\r\n            v.total,\r\n            v.estado\r\n          ])\r\n        : [['Sin datos', '', '', '', '', '', 0, '']];\r\n        \r\n      const ventasData = [\r\n        ['DETALLE COMPLETO DE VENTAS'],\r\n        [''],\r\n        ventasHeaders,\r\n        ...ventasRows,\r\n        [''],\r\n        ['TOTALES:'],\r\n        ['Total de Ventas:', data.detalleVentas.length],\r\n        ['Monto Total:', data.resumenGeneral.totalVendido]\r\n      ];\r\n      const wsVentas = XLSX.utils.aoa_to_sheet(ventasData);\r\n      wsVentas['!cols'] = [{ width: 12 }, { width: 12 }, { width: 10 }, { width: 12 }, { width: 15 }, { width: 30 }, { width: 10 }, { width: 10 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsVentas, 'Detalle de Ventas');\r\n\r\n      // Generar el archivo Excel con fecha de Honduras\r\n      const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      \r\n      const hondurasDate = this.supabaseService.formatDateTimeLocalHonduras(this.supabaseService.getHondurasDateTime()).split('T')[0];\r\n      saveAs(blob, `${filename}-${hondurasDate}.xlsx`);\r\n\r\n    } catch (error) {\r\n      console.error('Error exportando a Excel:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para exportar Excel tal como se ve en el admin\r\n  async exportVisualToExcel(data: any, filename: string = 'reporte-admin-visual'): Promise<void> {\r\n    try {\r\n      // Crear un nuevo workbook\r\n      const workbook = XLSX.utils.book_new();\r\n\r\n      // ===== HOJA 1: DASHBOARD PRINCIPAL =====\r\n      const dashboardData = [\r\n        ['REPORTE ADMINISTRADOR - SISTEMA DE LOTERÍA'],\r\n        ['Fecha:', data.fechaReporte],\r\n        ['Hora:', data.horaReporte],\r\n        ['Filtros Aplicados:', data.filtroAplicado],\r\n        [''],\r\n        ['DASHBOARD PRINCIPAL'],\r\n        ['Indicador', 'Valor'],\r\n        ['Total Vendido', `L ${data.dashboard.totalVendido.toFixed(2)}`],\r\n        ['Total Pagado', `L ${data.dashboard.totalPagado.toFixed(2)}`],\r\n        ['Ganancia Neta', `L ${data.dashboard.gananciaNeta.toFixed(2)}`],\r\n        ['Ventas Totales', data.dashboard.ventasTotales]\r\n      ];\r\n      const wsDashboard = XLSX.utils.aoa_to_sheet(dashboardData);\r\n      \r\n      // Aplicar formato\r\n      wsDashboard['!cols'] = [{ width: 20 }, { width: 15 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsDashboard, 'Dashboard');\r\n\r\n      // ===== HOJA 2: DETALLE POR SUCURSALES (LA MÁS IMPORTANTE) =====\r\n      const sucursalData = [\r\n        ['DETALLE POR SUCURSALES'],\r\n        [''],\r\n        data.detallePorSucursales.headers,\r\n        ...data.detallePorSucursales.filas.map((fila: any) => {\r\n          // Si ya es un array, usar directamente\r\n          if (Array.isArray(fila)) {\r\n            return fila;\r\n          }\r\n          // Si es un objeto, convertir a array\r\n          return [\r\n            fila.sucursal,\r\n            fila.factor,\r\n            fila.totalVendido,\r\n            fila.totalPagado,\r\n            fila.gananciaNeta\r\n          ];\r\n        }),\r\n        [''],\r\n        ['TOTAL GENERAL'],\r\n        // Manejar totales como array u objeto\r\n        Array.isArray(data.detallePorSucursales.totales) \r\n          ? data.detallePorSucursales.totales\r\n          : [\r\n              data.detallePorSucursales.totales.sucursal,\r\n              data.detallePorSucursales.totales.factor,\r\n              data.detallePorSucursales.totales.totalVendido,\r\n              data.detallePorSucursales.totales.totalPagado,\r\n              data.detallePorSucursales.totales.gananciaNeta\r\n            ]\r\n      ];\r\n      const wsSucursales = XLSX.utils.aoa_to_sheet(sucursalData);\r\n      wsSucursales['!cols'] = [\r\n        { width: 20 }, \r\n        { width: 10 }, \r\n        { width: 15 }, \r\n        { width: 15 }, \r\n        { width: 15 }\r\n      ];\r\n      XLSX.utils.book_append_sheet(workbook, wsSucursales, 'Detalle Sucursales');\r\n\r\n      // ===== HOJA 3: NÚMEROS POR SORTEO =====\r\n      const numerosData = [['NÚMEROS VENDIDOS POR SORTEO'], ['']];\r\n      \r\n      if (data.numerosPorSorteo.length > 0) {\r\n        data.numerosPorSorteo.forEach((sorteoGroup: any) => {\r\n          sorteoGroup.sucursales.forEach((sucursalGroup: any) => {\r\n            // Título del grupo\r\n            numerosData.push([`${sorteoGroup.sorteo} - ${sucursalGroup.sucursal}`]);\r\n            \r\n            // Top 5 si existe\r\n            if (sucursalGroup.topNumeros && sucursalGroup.topNumeros.length > 0) {\r\n              numerosData.push(['Top 5 Números Más Vendidos:']);\r\n              numerosData.push(['Posición', 'Número', 'Total Vendido']);\r\n              \r\n              for (let i = 0; i < Math.min(5, sucursalGroup.topNumeros.length); i++) {\r\n                const num = sucursalGroup.topNumeros[i];\r\n                numerosData.push([\r\n                  `#${i + 1}`,\r\n                  num.numero.toString().padStart(2, '0'),\r\n                  num.totalVendido\r\n                ]);\r\n              }\r\n            }\r\n            \r\n            // Tablero completo\r\n            if (sucursalGroup.numeros && sucursalGroup.numeros.length > 0) {\r\n              numerosData.push(['']);\r\n              numerosData.push(['Tablero Completo (00-99):']);\r\n              numerosData.push(['Número', 'Total Vendido', 'Cantidad Ventas']);\r\n              \r\n              sucursalGroup.numeros.forEach((num: any) => {\r\n                numerosData.push([\r\n                  num.numero.toString().padStart(2, '0'),\r\n                  num.totalVendido,\r\n                  num.cantidadVentas\r\n                ]);\r\n              });\r\n            }\r\n            \r\n            numerosData.push(['']); // Línea en blanco entre grupos\r\n          });\r\n        });\r\n      } else {\r\n        numerosData.push(['Sin datos de números vendidos']);\r\n      }\r\n      \r\n      const wsNumeros = XLSX.utils.aoa_to_sheet(numerosData);\r\n      wsNumeros['!cols'] = [{ width: 15 }, { width: 12 }, { width: 12 }];\r\n      XLSX.utils.book_append_sheet(workbook, wsNumeros, 'Números por Sorteo');\r\n\r\n      // Generar el archivo Excel con fecha de Honduras\r\n      const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      \r\n      const hondurasDate = this.supabaseService.formatDateTimeLocalHonduras(this.supabaseService.getHondurasDateTime()).split('T')[0];\r\n      saveAs(blob, `${filename}-${hondurasDate}.xlsx`);\r\n\r\n    } catch (error) {\r\n      console.error('Error exportando Excel visual:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async exportToPDF(data: any, filename: string = 'reporte-diario'): Promise<void> {\r\n    try {\r\n      const doc = new jsPDF();\r\n      const pageHeight = doc.internal.pageSize.height;\r\n      let yPosition = 20;\r\n\r\n      // Función auxiliar para agregar nueva página si es necesario\r\n      const checkNewPage = (requiredSpace: number = 30) => {\r\n        if (yPosition + requiredSpace > pageHeight - 20) {\r\n          doc.addPage();\r\n          yPosition = 20;\r\n        }\r\n      };\r\n\r\n      // ===== ENCABEZADO PRINCIPAL =====\r\n      doc.setFontSize(18);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('REPORTE DIARIO - SISTEMA DE LOTERÍA', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      doc.setFontSize(12);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.text(`Fecha: ${data.resumenGeneral.fechaReporte}`, 20, yPosition);\r\n      doc.text(`Hora: ${data.resumenGeneral.horaReporte}`, 120, yPosition);\r\n      yPosition += 8;\r\n      \r\n      doc.setFontSize(10);\r\n      doc.text(`Filtros: ${data.resumenGeneral.filtroAplicado}`, 20, yPosition);\r\n      yPosition += 20;\r\n\r\n      // ===== 1. RESUMEN GENERAL =====\r\n      checkNewPage(80);\r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('1. RESUMEN GENERAL', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      const resumenTable = [\r\n        ['Indicador', 'Valor'],\r\n        ['Total Vendido', `L ${data.resumenGeneral.totalVendido.toFixed(2)}`],\r\n        ['Total Pagado', `L ${data.resumenGeneral.totalPagado.toFixed(2)}`],\r\n        ['Ganancia Neta', `L ${data.resumenGeneral.gananciaNeta.toFixed(2)}`],\r\n        ['Ventas Totales', data.resumenGeneral.ventasTotales.toString()]\r\n      ];\r\n\r\n      autoTable(doc, {\r\n        head: [resumenTable[0]],\r\n        body: resumenTable.slice(1),\r\n        startY: yPosition,\r\n        theme: 'striped',\r\n        headStyles: { fillColor: [41, 128, 185], textColor: 255 },\r\n        styles: { fontSize: 11, cellPadding: 5 },\r\n        columnStyles: {\r\n          0: { cellWidth: 60 },\r\n          1: { cellWidth: 60, halign: 'right' }\r\n        }\r\n      });\r\n\r\n      yPosition = (doc as any).lastAutoTable.finalY + 25;\r\n\r\n      // ===== 2. RESUMEN POR SORTEO =====\r\n      checkNewPage(100);\r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('2. RESUMEN POR SORTEO', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.resumenPorSorteo.length > 0) {\r\n        const sorteoTableData = [\r\n          ['Sorteo', 'Vendido', 'Pagado', 'Ganancia', 'Ventas', 'Estado', 'Ganador', 'Factor'],\r\n          ...data.resumenPorSorteo.map((s: any) => [\r\n            s.sorteo,\r\n            `L ${s.totalVendido.toFixed(0)}`,\r\n            `L ${s.totalPagado.toFixed(0)}`,\r\n            `L ${s.gananciaNeta.toFixed(0)}`,\r\n            s.ventasTotales.toString(),\r\n            s.estado,\r\n            s.numeroGanador,\r\n            s.factor.toString()\r\n          ])\r\n        ];\r\n\r\n        autoTable(doc, {\r\n          head: [sorteoTableData[0]],\r\n          body: sorteoTableData.slice(1),\r\n          startY: yPosition,\r\n          theme: 'striped',\r\n          headStyles: { fillColor: [46, 204, 113], textColor: 255 },\r\n          styles: { fontSize: 9, cellPadding: 3 },\r\n          columnStyles: {\r\n            0: { cellWidth: 25 },\r\n            1: { cellWidth: 20, halign: 'right' },\r\n            2: { cellWidth: 20, halign: 'right' },\r\n            3: { cellWidth: 20, halign: 'right' },\r\n            4: { cellWidth: 15, halign: 'center' },\r\n            5: { cellWidth: 20, halign: 'center' },\r\n            6: { cellWidth: 20, halign: 'center' },\r\n            7: { cellWidth: 15, halign: 'center' }\r\n          }\r\n        });\r\n\r\n        yPosition = (doc as any).lastAutoTable.finalY + 25;\r\n      }\r\n\r\n      // ===== 3. RESUMEN POR SUCURSAL =====\r\n      checkNewPage(100);\r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('3. RESUMEN POR SUCURSAL', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.resumenPorSucursal.length > 0) {\r\n        const sucursalTableData = [\r\n          ['Sucursal', 'Factor', 'Total Vendido', 'Total Pagado', 'Ganancia', 'Ventas'],\r\n          ...data.resumenPorSucursal.map((s: any) => [\r\n            s.sucursal,\r\n            `${s.factor}x`,\r\n            `L ${s.totalVendido.toFixed(2)}`,\r\n            `L ${s.totalPagado.toFixed(2)}`,\r\n            `L ${s.gananciaNeta.toFixed(2)}`,\r\n            s.ventasTotales.toString()\r\n          ])\r\n        ];\r\n\r\n        autoTable(doc, {\r\n          head: [sucursalTableData[0]],\r\n          body: sucursalTableData.slice(1),\r\n          startY: yPosition,\r\n          theme: 'striped',\r\n          headStyles: { fillColor: [230, 126, 34], textColor: 255 },\r\n          styles: { fontSize: 10, cellPadding: 4 },\r\n          columnStyles: {\r\n            0: { cellWidth: 40 },\r\n            1: { cellWidth: 20, halign: 'center' },\r\n            2: { cellWidth: 30, halign: 'right' },\r\n            3: { cellWidth: 30, halign: 'right' },\r\n            4: { cellWidth: 30, halign: 'right' },\r\n            5: { cellWidth: 20, halign: 'center' }\r\n          }\r\n        });\r\n\r\n        yPosition = (doc as any).lastAutoTable.finalY + 25;\r\n      }\r\n\r\n      // ===== 4. NÚMEROS VENDIDOS POR SORTEO (FORMATO CUADRO) =====\r\n      doc.addPage();\r\n      yPosition = 20;\r\n      \r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('4. NÚMEROS VENDIDOS POR SORTEO', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.numerosPorSorteo.length > 0) {\r\n        data.numerosPorSorteo.forEach((grupo: any) => {\r\n          checkNewPage(80);\r\n          \r\n          // Título del grupo\r\n          doc.setFontSize(12);\r\n          doc.setFont('helvetica', 'bold');\r\n          doc.text(`${grupo.sorteo} - ${grupo.sucursal} (Total: L ${grupo.totalSorteoSucursal.toFixed(2)})`, 20, yPosition);\r\n          yPosition += 12;\r\n\r\n          // Crear cuadro de números (formato 10x10)\r\n          if (grupo.numeros.length > 0) {\r\n            // Organizar números en filas de 5\r\n            const rows = [];\r\n            for (let i = 0; i < grupo.numeros.length; i += 5) {\r\n              const row = grupo.numeros.slice(i, i + 5).map((n: any) => \r\n                `${n.numero.toString().padStart(2, '0')}: L${n.totalVendido.toFixed(0)}`\r\n              );\r\n              // Rellenar con espacios vacíos si es necesario\r\n              while (row.length < 5) row.push('');\r\n              rows.push(row);\r\n            }\r\n\r\n            autoTable(doc, {\r\n              body: rows,\r\n              startY: yPosition,\r\n              theme: 'grid',\r\n              styles: { \r\n                fontSize: 8,\r\n                cellPadding: 4,\r\n                halign: 'center',\r\n                valign: 'middle'\r\n              },\r\n              columnStyles: {\r\n                0: { cellWidth: 34 },\r\n                1: { cellWidth: 34 },\r\n                2: { cellWidth: 34 },\r\n                3: { cellWidth: 34 },\r\n                4: { cellWidth: 34 }\r\n              }\r\n            });\r\n\r\n            yPosition = (doc as any).lastAutoTable.finalY + 20;\r\n          }\r\n        });\r\n      } else {\r\n        doc.setFontSize(10);\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.text('No hay datos de números vendidos para mostrar', 20, yPosition);\r\n        yPosition += 20;\r\n      }\r\n\r\n      // ===== 5. DETALLE DE VENTAS =====\r\n      doc.addPage();\r\n      yPosition = 20;\r\n      \r\n      doc.setFontSize(16);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('5. DETALLE COMPLETO DE VENTAS', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.detalleVentas.length > 0) {\r\n        const ventasTableData = [\r\n          ['Recibo', 'Fecha', 'Hora', 'Sorteo', 'Sucursal', 'Números', 'Total'],\r\n          ...data.detalleVentas.map((v: any) => [\r\n            v.numeroRecibo,\r\n            v.fecha,\r\n            v.hora,\r\n            v.sorteo,\r\n            v.sucursal,\r\n            v.numeros.length > 25 ? v.numeros.substring(0, 25) + '...' : v.numeros,\r\n            `L ${v.total.toFixed(2)}`\r\n          ])\r\n        ];\r\n\r\n        autoTable(doc, {\r\n          head: [ventasTableData[0]],\r\n          body: ventasTableData.slice(1),\r\n          startY: yPosition,\r\n          theme: 'striped',\r\n          headStyles: { fillColor: [52, 152, 219], textColor: 255 },\r\n          styles: { fontSize: 7, cellPadding: 2 },\r\n          columnStyles: {\r\n            0: { cellWidth: 20 },\r\n            1: { cellWidth: 22 },\r\n            2: { cellWidth: 18 },\r\n            3: { cellWidth: 22 },\r\n            4: { cellWidth: 25 },\r\n            5: { cellWidth: 45 },\r\n            6: { cellWidth: 18, halign: 'right' }\r\n          }\r\n        });\r\n\r\n        // Totales finales\r\n        yPosition = (doc as any).lastAutoTable.finalY + 15;\r\n        checkNewPage(30);\r\n        \r\n        doc.setFontSize(12);\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.text('TOTALES FINALES:', 20, yPosition);\r\n        yPosition += 8;\r\n        \r\n        doc.setFontSize(10);\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.text(`Total de Ventas: ${data.detalleVentas.length}`, 20, yPosition);\r\n        yPosition += 6;\r\n        doc.text(`Monto Total Vendido: L ${data.resumenGeneral.totalVendido.toFixed(2)}`, 20, yPosition);\r\n        yPosition += 6;\r\n        doc.text(`Monto Total Pagado: L ${data.resumenGeneral.totalPagado.toFixed(2)}`, 20, yPosition);\r\n        yPosition += 6;\r\n        doc.text(`Ganancia Neta: L ${data.resumenGeneral.gananciaNeta.toFixed(2)}`, 20, yPosition);\r\n      }\r\n\r\n      // Guardar el PDF con fecha de Honduras\r\n      const hondurasDate = this.supabaseService.formatDateTimeLocalHonduras(this.supabaseService.getHondurasDateTime()).split('T')[0];\r\n      doc.save(`${filename}-${hondurasDate}.pdf`);\r\n\r\n    } catch (error) {\r\n      console.error('Error exportando a PDF:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para exportar PDF tal como se ve en el admin\r\n  async exportVisualToPDF(data: any, filename: string = 'reporte-admin-visual'): Promise<void> {\r\n    try {\r\n      const doc = new jsPDF({\r\n        orientation: 'landscape', // Página más grande como solicitaste\r\n        unit: 'mm',\r\n        format: 'a4'\r\n      });\r\n\r\n      // ENCABEZADO PRINCIPAL (como en la imagen)\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(18);\r\n      doc.text('REPORTE ADMINISTRADOR - SISTEMA DE LOTERÍA', 20, 25);\r\n      \r\n      // Información de fecha y hora (como en la imagen)\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(11);\r\n      doc.text(`Fecha: ${data.fecha}`, 20, 35);\r\n      doc.text(`Hora: ${data.hora}`, 150, 35);\r\n      doc.text(`Filtros: ${data.filtros}`, 20, 42);\r\n\r\n      let yPosition = 55;\r\n\r\n      // 1. DASHBOARD CARDS (como las cards azul, naranja y verde de la imagen)\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(14);\r\n      doc.text('1. RESUMEN GENERAL', 20, yPosition);\r\n      yPosition += 10;\r\n\r\n      // Crear cards como en la interfaz\r\n      const dashboardData = [\r\n        ['Métrica', 'Valor'],\r\n        ['Total Vendido', `L ${data.dashboard.totalVendido.toLocaleString('es-HN', {minimumFractionDigits: 2})}`],\r\n        ['Total Pagado', `L ${data.dashboard.totalPagado.toLocaleString('es-HN', {minimumFractionDigits: 2})}`],\r\n        ['Ganancia Total', `L ${data.dashboard.gananciaNeta.toLocaleString('es-HN', {minimumFractionDigits: 2})}`],\r\n        ['Ventas Totales', data.dashboard.ventasTotales.toString()]\r\n      ];\r\n\r\n      autoTable(doc, {\r\n        head: [dashboardData[0]],\r\n        body: dashboardData.slice(1),\r\n        startY: yPosition,\r\n        theme: 'grid',\r\n        headStyles: { \r\n          fillColor: [52, 73, 94],\r\n          textColor: 255,\r\n          fontSize: 12,\r\n          fontStyle: 'bold'\r\n        },\r\n        styles: { \r\n          fontSize: 11,\r\n          cellPadding: 8\r\n        },\r\n        columnStyles: {\r\n          0: { fontStyle: 'bold', fillColor: [245, 245, 245] },\r\n          1: { halign: 'right', fontStyle: 'bold' }\r\n        },\r\n        margin: { left: 20, right: 20 }\r\n      });\r\n\r\n      yPosition = (doc as any).lastAutoTable.finalY + 20;\r\n\r\n      // 2. DETALLE POR SUCURSALES (LA PARTE MÁS IMPORTANTE - igual que en la imagen)\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(16);\r\n      doc.text('🏢 Detalle por Sucursales', 20, yPosition);\r\n      yPosition += 15;\r\n\r\n      if (data.detallePorSucursales.filas.length > 0) {\r\n        const sucursalTableData = [\r\n          data.detallePorSucursales.headers,\r\n          ...data.detallePorSucursales.filas.map((fila: any) => {\r\n            // Si ya es un array, usar directamente\r\n            if (Array.isArray(fila)) {\r\n              return fila;\r\n            }\r\n            // Si es un objeto, convertir a array\r\n            return [\r\n              fila.sucursal,\r\n              fila.factor,\r\n              `L ${fila.totalVendido.toFixed(2)}`,\r\n              `L ${fila.totalPagado.toFixed(2)}`,\r\n              `L ${fila.gananciaNeta.toFixed(2)}`\r\n            ];\r\n          })\r\n        ];\r\n\r\n        autoTable(doc, {\r\n          head: [sucursalTableData[0]],\r\n          body: sucursalTableData.slice(1),\r\n          startY: yPosition,\r\n          theme: 'striped',\r\n          headStyles: { \r\n            fillColor: [52, 73, 94],\r\n            textColor: 255,\r\n            fontSize: 12,\r\n            fontStyle: 'bold'\r\n          },\r\n          styles: { \r\n            fontSize: 11, \r\n            cellPadding: 8,\r\n            lineColor: [200, 200, 200],\r\n            lineWidth: 0.5\r\n          },\r\n          columnStyles: {\r\n            0: { cellWidth: 50, fontStyle: 'bold' }, // Sucursal\r\n            1: { cellWidth: 25, halign: 'center' }, // Factor\r\n            2: { cellWidth: 40, halign: 'right' },  // Total Vendido\r\n            3: { cellWidth: 40, halign: 'right' },  // Total Pagado\r\n            4: { cellWidth: 40, halign: 'right' }   // Ganancia Neta\r\n          },\r\n          alternateRowStyles: { fillColor: [249, 249, 249] },\r\n          margin: { left: 20, right: 20 }\r\n        });\r\n\r\n        yPosition = (doc as any).lastAutoTable.finalY + 10;\r\n\r\n        // TOTAL GENERAL (destacado igual que en la imagen con fondo verde)\r\n        const totalesRow = Array.isArray(data.detallePorSucursales.totales) \r\n          ? data.detallePorSucursales.totales \r\n          : [\r\n              data.detallePorSucursales.totales.sucursal,\r\n              data.detallePorSucursales.totales.factor,\r\n              `L ${data.detallePorSucursales.totales.totalVendido.toFixed(2)}`,\r\n              `L ${data.detallePorSucursales.totales.totalPagado.toFixed(2)}`,\r\n              `L ${data.detallePorSucursales.totales.gananciaNeta.toFixed(2)}`\r\n            ];\r\n\r\n        const totalesData = [totalesRow];\r\n\r\n        autoTable(doc, {\r\n          body: totalesData,\r\n          startY: yPosition,\r\n          theme: 'grid',\r\n          styles: { \r\n            fontSize: 12,\r\n            fontStyle: 'bold',\r\n            fillColor: [46, 125, 50], // Verde como en la imagen\r\n            textColor: 255,\r\n            cellPadding: 8\r\n          },\r\n          columnStyles: {\r\n            0: { cellWidth: 50 }, // Sucursal\r\n            1: { cellWidth: 25, halign: 'center' }, // Factor\r\n            2: { cellWidth: 40, halign: 'right' },  // Total Vendido\r\n            3: { cellWidth: 40, halign: 'right' },  // Total Pagado\r\n            4: { cellWidth: 40, halign: 'right' }   // Ganancia Neta\r\n          },\r\n          margin: { left: 20, right: 20 }\r\n        });\r\n\r\n        yPosition = (doc as any).lastAutoTable.finalY + 20;\r\n      }\r\n\r\n      // 3. NÚMEROS POR SORTEO (si hay datos)\r\n      if (data.numerosPorSorteo && data.numerosPorSorteo.length > 0) {\r\n        // Verificar si necesitamos nueva página\r\n        if (yPosition > 150) {\r\n          doc.addPage();\r\n          yPosition = 25;\r\n        }\r\n\r\n        doc.setFont('helvetica', 'bold');\r\n        doc.setFontSize(14);\r\n        doc.text('2. NÚMEROS POR SORTEO Y SUCURSAL', 20, yPosition);\r\n        yPosition += 15;\r\n\r\n        data.numerosPorSorteo.forEach((sorteoGroup: any, index: number) => {\r\n          if (yPosition > 180) {\r\n            doc.addPage();\r\n            yPosition = 25;\r\n          }\r\n\r\n          doc.setFont('helvetica', 'bold');\r\n          doc.setFontSize(12);\r\n          doc.text(`Sorteo: ${sorteoGroup.sorteo}`, 20, yPosition);\r\n          yPosition += 10;\r\n\r\n          sorteoGroup.sucursales.forEach((sucursalGroup: any) => {\r\n            if (yPosition > 170) {\r\n              doc.addPage();\r\n              yPosition = 25;\r\n            }\r\n\r\n            doc.setFont('helvetica', 'normal');\r\n            doc.setFontSize(10);\r\n            doc.text(`Sucursal: ${sucursalGroup.sucursal}`, 25, yPosition);\r\n            yPosition += 8;\r\n\r\n            // Mostrar top 10 números más vendidos\r\n            const topNumeros = sucursalGroup.numeros.slice(0, 10);\r\n            const numerosData = [\r\n              ['Número', 'Total Vendido', 'Cantidad', '%'],\r\n              ...topNumeros.map((num: any) => [\r\n                num.numero.toString().padStart(2, '0'),\r\n                `L ${num.totalVendido.toFixed(2)}`,\r\n                num.cantidadVentas.toString(),\r\n                `${num.porcentaje.toFixed(1)}%`\r\n              ])\r\n            ];\r\n\r\n            autoTable(doc, {\r\n              head: [numerosData[0]],\r\n              body: numerosData.slice(1),\r\n              startY: yPosition,\r\n              theme: 'grid',\r\n              styles: { fontSize: 9, cellPadding: 4 },\r\n              headStyles: { fillColor: [52, 73, 94], textColor: 255 },\r\n              columnStyles: {\r\n                0: { cellWidth: 20, halign: 'center' },\r\n                1: { cellWidth: 30, halign: 'right' },\r\n                2: { cellWidth: 20, halign: 'center' },\r\n                3: { cellWidth: 20, halign: 'right' }\r\n              },\r\n              margin: { left: 30, right: 20 }\r\n            });\r\n\r\n            yPosition = (doc as any).lastAutoTable.finalY + 10;\r\n          });\r\n        });\r\n      }\r\n\r\n      // Pie de página\r\n      const pageCount = doc.getNumberOfPages();\r\n      for (let i = 1; i <= pageCount; i++) {\r\n        doc.setPage(i);\r\n        doc.setFont('helvetica', 'normal');\r\n        doc.setFontSize(8);\r\n        doc.text(`Página ${i} de ${pageCount}`, 250, 200);\r\n        doc.text(`Generado: ${new Date().toLocaleString('es-HN')}`, 20, 200);\r\n      }\r\n\r\n      // Descargar el PDF\r\n      doc.save(`${filename}.pdf`);\r\n\r\n    } catch (error) {\r\n      console.error('Error exportando PDF visual:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  private loadingInstance: any = null;\r\n\r\n  constructor() { }\r\n\r\n  // Mostrar mensaje de éxito\r\n  async showSuccess(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'success',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#28a745'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de error\r\n  async showError(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'error',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#dc3545'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de información\r\n  async showInfo(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'info',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#007bff'\r\n    });\r\n  }\r\n\r\n  // Mostrar mensaje de advertencia\r\n  async showWarning(title: string, text?: string): Promise<void> {\r\n    await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'warning',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#ffc107'\r\n    });\r\n  }\r\n\r\n  // Mostrar confirmación\r\n  async showConfirmation(\r\n    title: string, \r\n    text?: string, \r\n    confirmButtonText: string = 'Sí, confirmar',\r\n    cancelButtonText: string = 'Cancelar'\r\n  ): Promise<boolean> {\r\n    const result = await Swal.fire({\r\n      title,\r\n      text,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonText,\r\n      cancelButtonText,\r\n      confirmButtonColor: '#28a745',\r\n      cancelButtonColor: '#dc3545'\r\n    });\r\n\r\n    return result.isConfirmed;\r\n  }\r\n\r\n  // Mostrar loader\r\n  showLoading(title: string = 'Cargando...'): void {\r\n    this.hideLoading(); // Cerrar cualquier loading anterior\r\n    \r\n    this.loadingInstance = Swal.fire({\r\n      title,\r\n      allowOutsideClick: false,\r\n      allowEscapeKey: false,\r\n      showConfirmButton: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Cerrar loader\r\n  hideLoading(): void {\r\n    if (this.loadingInstance) {\r\n      Swal.close();\r\n      this.loadingInstance = null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { Sale, SaleDetail } from '../models/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrintService {\r\n\r\n  constructor() { }\r\n\r\n  // Generar PDF térmico para venta\r\n  generateThermalReceipt(sale: Sale, details: SaleDetail[]): void {\r\n\r\n    // Si no hay detalles, crear datos de prueba\r\n    if (!details || details.length === 0) {\r\n      details = [\r\n        { id: 'test1', saleId: sale.id, numero: 11, monto: 40 },\r\n        { id: 'test2', saleId: sale.id, numero: 54, monto: 10 }\r\n      ];\r\n    }\r\n\r\n    try {\r\n      // Crear PDF para impresión térmica\r\n      const pdf = new jsPDF({\r\n        orientation: 'portrait',\r\n        unit: 'mm',\r\n        format: [80, 150]\r\n      });\r\n\r\n\r\n      // Configuración básica\r\n      let y = 10;\r\n      const lineHeight = 5;\r\n\r\n      // Título\r\n    \r\n      pdf.setFontSize(10);\r\n      pdf.text('RECIBO DE VENTA', 40, y, { align: 'center' });\r\n      y += lineHeight + 2;\r\n\r\n      // Número de recibo\r\n      pdf.setFontSize(9);\r\n      pdf.text(`Recibo #: ${sale.numeroRecibo || 'N/A'}`, 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Línea\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Sucursal\r\n      pdf.setFontSize(12);\r\n      pdf.text(sale.sucursal || 'Sucursal 1', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Sorteo\r\n      pdf.setFontSize(9);\r\n      pdf.text(`Sorteo: ${sale.sorteo}`, 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Fecha\r\n      const fecha = new Date(sale.fecha).toLocaleString();\r\n      pdf.text(`Fecha: ${fecha}`, 40, y, { align: 'center' });\r\n      y += lineHeight + 2;\r\n\r\n      // Encabezados\r\n      pdf.setFontSize(10);\r\n      pdf.text('Numero', 20, y, { align: 'center' });\r\n      pdf.text('Valor', 60, y, { align: 'center' });\r\n      y += lineHeight;\r\n\r\n      // Línea\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Detalles\r\n      let total = 0;\r\n      for (const detail of details) {\r\n        pdf.text(detail.numero.toString().padStart(2, '0'), 20, y, { align: 'center' });\r\n        pdf.text(`L ${detail.monto}`, 60, y, { align: 'center' });\r\n        total += detail.monto;\r\n        y += lineHeight;\r\n      }\r\n\r\n      // Línea\r\n      y += 2;\r\n      pdf.line(5, y, 75, y);\r\n      y += lineHeight;\r\n\r\n      // Total\r\n      pdf.setFontSize(12);\r\n      pdf.text('Total a pagar:', 10, y);\r\n      pdf.text(`L ${total}`, 70, y, { align: 'right' });\r\n      y += lineHeight + 2;\r\n\r\n      // Mensaje\r\n      pdf.setFontSize(8);\r\n      pdf.text('Gracias por su compra!', 40, y, { align: 'center' });\r\n      y += lineHeight;\r\n      pdf.text('Mucha suerte!', 40, y, { align: 'center' });\r\n\r\n\r\n      // FUNCIÓN DE IMPRESIÓN DIRECTA\r\n      // Crear blob para impresión\r\n      const pdfData = pdf.output('arraybuffer');\r\n      const blob = new Blob([pdfData], { type: 'application/pdf' });\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      \r\n      // Abrir en nueva ventana para impresión manual controlada por el usuario\r\n      const printWindow = window.open(url, '_blank', 'width=800,height=600,scrollbars=yes,resizable=yes');\r\n      \r\n      if (printWindow) {\r\n        printWindow.onload = () => {\r\n          // Enfocar la ventana\r\n          printWindow.focus();\r\n          \r\n          // Ejecutar impresión automáticamente\r\n          setTimeout(() => {\r\n            try {\r\n              printWindow.print();\r\n            } catch (printError) {\r\n            }\r\n          }, 1000); // Esperar 1 segundo para que cargue completamente\r\n          \r\n          // Limpiar URL cuando la ventana se cierre (detección manual)\r\n          const checkClosed = setInterval(() => {\r\n            if (printWindow.closed) {\r\n              clearInterval(checkClosed);\r\n              URL.revokeObjectURL(url);\r\n            }\r\n          }, 1000);\r\n        };\r\n      } else {\r\n        \r\n        // Fallback: usar iframe como respaldo\r\n        const printFrame = document.createElement('iframe');\r\n        printFrame.style.display = 'none';\r\n        printFrame.src = url;\r\n        \r\n        document.body.appendChild(printFrame);\r\n        \r\n        printFrame.onload = () => {\r\n          try {\r\n            printFrame.contentWindow?.focus();\r\n            printFrame.contentWindow?.print();\r\n            \r\n            // Limpiar después de 5 segundos en modo iframe\r\n            setTimeout(() => {\r\n              document.body.removeChild(printFrame);\r\n              URL.revokeObjectURL(url);\r\n            }, 5000);\r\n            \r\n          } catch (printError) {\r\n          }\r\n        };\r\n      }\r\n\r\n    } catch (error: any) {\r\n      alert('Error al generar el recibo: ' + (error?.message || error));\r\n    }\r\n  }\r\n\r\n  // Método de prueba para generar un recibo con datos fijos\r\n  generateTestReceipt(): void {\r\n    \r\n    const testSale: Sale = {\r\n      id: 'test-123',\r\n      userId: 'user1',\r\n      sucursal: 'Sucursal 1',\r\n      sorteo: 'mañana',\r\n      fecha: new Date(),\r\n      total: 50,\r\n      numeroRecibo: 'SUC-REC-250717-0001',\r\n      correlativo: 1,\r\n      createdAt: new Date()\r\n    };\r\n\r\n    const testDetails: SaleDetail[] = [\r\n      { id: 'detail1', saleId: 'test-123', numero: 11, monto: 40 },\r\n      { id: 'detail2', saleId: 'test-123', numero: 54, monto: 10 }\r\n    ];\r\n\r\n    this.generateThermalReceipt(testSale, testDetails);\r\n  }\r\n\r\n  // Generar PDF de reporte diario\r\n  generateDailyReport(sales: Sale[], fecha: Date): void {\r\n    const pdf = new jsPDF();\r\n    \r\n    pdf.setFontSize(16);\r\n    pdf.text('REPORTE DIARIO DE VENTAS', 105, 20, { align: 'center' });\r\n    \r\n    pdf.setFontSize(12);\r\n    pdf.text(`Fecha: ${fecha.toLocaleDateString()}`, 20, 35);\r\n    \r\n    // Aquí se puede expandir para incluir más detalles del reporte\r\n    let yPos = 50;\r\n    \r\n    // Resumen por sorteo\r\n    const sorteoSummary = this.calculateSorteoSummary(sales);\r\n    \r\n    pdf.setFontSize(14);\r\n    pdf.text('RESUMEN POR SORTEO:', 20, yPos);\r\n    yPos += 10;\r\n    \r\n    pdf.setFontSize(10);\r\n    for (const [sorteo, data] of Object.entries(sorteoSummary)) {\r\n      pdf.text(`${sorteo.toUpperCase()}: L. ${data.total.toFixed(2)} (${data.count} ventas)`, 25, yPos);\r\n      yPos += 7;\r\n    }\r\n    \r\n    // Total general\r\n    const totalGeneral = sales.reduce((sum, sale) => sum + sale.total, 0);\r\n    yPos += 10;\r\n    pdf.setFontSize(12);\r\n    pdf.text(`TOTAL GENERAL: L. ${totalGeneral.toFixed(2)}`, 20, yPos);\r\n    \r\n    pdf.save(`reporte_diario_${fecha.toISOString().split('T')[0]}.pdf`);\r\n  }\r\n\r\n  private calculateSorteoSummary(sales: Sale[]): { [key: string]: { total: number, count: number } } {\r\n    const summary: { [key: string]: { total: number, count: number } } = {};\r\n    \r\n    for (const sale of sales) {\r\n      if (!summary[sale.sorteo]) {\r\n        summary[sale.sorteo] = { total: 0, count: 0 };\r\n      }\r\n      summary[sale.sorteo].total += sale.total;\r\n      summary[sale.sorteo].count += 1;\r\n    }\r\n    \r\n    return summary;\r\n  }\r\n\r\n  // Generar reporte de ventas en PDF\r\n  generateVentasReportPDF(sales: Sale[], saleDetails: { [key: string]: SaleDetail[] }, filters: any): void {\r\n    try {\r\n      const doc = new jsPDF();\r\n      \r\n      // Header profesional con logo y título\r\n      doc.setFillColor(52, 73, 94); // Color azul oscuro\r\n      doc.rect(0, 0, 210, 35, 'F'); // Rectángulo header\r\n      \r\n      doc.setTextColor(255, 255, 255); // Texto blanco\r\n      doc.setFontSize(24);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.text('SISTEMA DE LOTERÍA', 105, 20, { align: 'center' });\r\n      \r\n      doc.setFontSize(14);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.text('REPORTE DE VENTAS', 105, 28, { align: 'center' });\r\n      \r\n      // Resetear color de texto\r\n      doc.setTextColor(0, 0, 0);\r\n      \r\n      // Información del reporte en formato profesional\r\n      let yPos = 50;\r\n      doc.setFontSize(12);\r\n      doc.setFont('helvetica', 'bold');\r\n      \r\n      // Sección de información general con fondo gris claro\r\n      doc.setFillColor(248, 249, 250);\r\n      doc.rect(15, yPos - 5, 180, 40, 'F');\r\n      doc.setDrawColor(200, 200, 200);\r\n      doc.rect(15, yPos - 5, 180, 40, 'S');\r\n      \r\n      yPos += 5;\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(11);\r\n      doc.text('INFORMACIÓN DEL REPORTE', 20, yPos);\r\n      yPos += 8;\r\n      \r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(10);\r\n      \r\n      if (filters.fechaDesde || filters.fechaHasta) {\r\n        const fechaTexto = filters.fechaDesde && filters.fechaHasta \r\n          ? `Período: ${new Date(filters.fechaDesde).toLocaleDateString()} - ${new Date(filters.fechaHasta).toLocaleDateString()}`\r\n          : filters.fechaDesde \r\n            ? `Desde: ${new Date(filters.fechaDesde).toLocaleDateString()}`\r\n            : `Hasta: ${new Date(filters.fechaHasta).toLocaleDateString()}`;\r\n        doc.text(fechaTexto, 25, yPos);\r\n        yPos += 6;\r\n      }\r\n      \r\n      if (filters.sorteoFilter) {\r\n        doc.text(`Sorteo: ${filters.sorteoFilter}`, 25, yPos);\r\n        yPos += 6;\r\n      }\r\n      \r\n      const now = new Date();\r\n      doc.text(`Fecha de generación: ${now.toLocaleDateString()} - ${now.toLocaleTimeString()}`, 25, yPos);\r\n      yPos += 6;\r\n      \r\n      doc.text(`Total de transacciones: ${sales.length}`, 25, yPos);\r\n      yPos += 20;\r\n      \r\n      // Resumen por sucursal en formato tabla\r\n      const sucursalTotals: { [key: string]: { total: number, count: number } } = {};\r\n      sales.forEach(sale => {\r\n        if (!sucursalTotals[sale.sucursal]) {\r\n          sucursalTotals[sale.sucursal] = { total: 0, count: 0 };\r\n        }\r\n        sucursalTotals[sale.sucursal].total += sale.total;\r\n        sucursalTotals[sale.sucursal].count += 1;\r\n      });\r\n      \r\n      // Header del resumen con estilo\r\n      doc.setFillColor(52, 73, 94);\r\n      doc.setTextColor(255, 255, 255);\r\n      doc.rect(15, yPos - 3, 180, 10, 'F');\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(12);\r\n      doc.text('RESUMEN POR SUCURSAL', 105, yPos + 3, { align: 'center' });\r\n      yPos += 15;\r\n      \r\n      // Resetear color\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.setFont('helvetica', 'normal');\r\n      doc.setFontSize(10);\r\n      \r\n      // Crear mini tabla para resumen\r\n      Object.entries(sucursalTotals).forEach(([sucursal, data], index) => {\r\n        const fillColor = index % 2 === 0 ? [245, 245, 245] : [255, 255, 255];\r\n        doc.setFillColor(fillColor[0], fillColor[1], fillColor[2]);\r\n        doc.rect(15, yPos - 2, 180, 8, 'F');\r\n        \r\n        doc.text(`${sucursal}:`, 25, yPos + 2);\r\n        doc.text(`${data.count} ventas`, 105, yPos + 2, { align: 'center' });\r\n        doc.text(`L ${data.total.toFixed(2)}`, 175, yPos + 2, { align: 'right' });\r\n        yPos += 8;\r\n      });\r\n      \r\n      yPos += 5;\r\n      \r\n      // Total general destacado\r\n      const totalGeneral = sales.reduce((sum, sale) => sum + sale.total, 0);\r\n      doc.setFillColor(46, 204, 113); // Verde\r\n      doc.rect(15, yPos - 3, 180, 12, 'F');\r\n      doc.setTextColor(255, 255, 255);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(14);\r\n      doc.text(`TOTAL GENERAL: L ${totalGeneral.toFixed(2)}`, 105, yPos + 4, { align: 'center' });\r\n      yPos += 20;\r\n      \r\n      // Resetear para la tabla\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.setFont('helvetica', 'bold');\r\n      doc.setFontSize(12);\r\n      doc.text('DETALLE DE VENTAS:', 20, yPos);\r\n      yPos += 10;\r\n      \r\n      // Preparar datos para la tabla\r\n      const tableData = sales.map(sale => {\r\n        const details = saleDetails[sale.id] || [];\r\n        const numerosText = details.map(d => `${d.numero.toString().padStart(2, '0')}xL${d.monto}`).join(', ');\r\n        \r\n        // Formatear fecha con hora\r\n        const saleDate = new Date(sale.createdAt);\r\n        const fechaHoraStr = `${saleDate.toLocaleDateString()} ${saleDate.toLocaleTimeString('es-ES', { \r\n          hour: '2-digit', \r\n          minute: '2-digit' \r\n        })}`;\r\n        \r\n        return [\r\n          fechaHoraStr,\r\n          sale.numeroRecibo || sale.id.slice(-6),\r\n          sale.sucursal,\r\n          sale.sorteo,\r\n          numerosText,\r\n          `L ${sale.total.toFixed(2)}`\r\n        ];\r\n      });\r\n      \r\n      // Crear tabla con autoTable\r\n      autoTable(doc, {\r\n        startY: yPos,\r\n        head: [['Fecha/Hora', 'Recibo', 'Sucursal', 'Sorteo', 'Números', 'Total']],\r\n        body: tableData,\r\n        theme: 'grid',\r\n        headStyles: {\r\n          fillColor: [66, 139, 202],\r\n          textColor: 255,\r\n          fontSize: 10,\r\n          fontStyle: 'bold',\r\n          halign: 'center'\r\n        },\r\n        bodyStyles: {\r\n          fontSize: 9,\r\n          cellPadding: 3\r\n        },\r\n        columnStyles: {\r\n          0: { cellWidth: 35, halign: 'center' }, // Fecha/Hora (más ancho)\r\n          1: { cellWidth: 30, halign: 'center' }, // Recibo\r\n          2: { cellWidth: 25, halign: 'center' }, // Sucursal\r\n          3: { cellWidth: 20, halign: 'center' }, // Sorteo\r\n          4: { cellWidth: 45, halign: 'left' },   // Números\r\n          5: { cellWidth: 25, halign: 'right' }   // Total\r\n        },\r\n        alternateRowStyles: {\r\n          fillColor: [245, 245, 245]\r\n        },\r\n        margin: { left: 15, right: 15 },\r\n        didDrawPage: function(data: any) {\r\n          // Pie de página\r\n          doc.setFontSize(8);\r\n          doc.text(`Página ${data.pageNumber}`, 160, 290);\r\n          doc.text(`Generado el ${new Date().toLocaleString()}`, 15, 290);\r\n        }\r\n      });\r\n      \r\n      // Guardar el PDF\r\n      const fileName = `reporte_ventas_${new Date().toISOString().split('T')[0]}.pdf`;\r\n      doc.save(fileName);\r\n      \r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Función para imprimir contenido HTML (requerida por el componente de cierre de caja)\r\n  async printContent(htmlContent: string): Promise<void> {\r\n    try {\r\n      // Crear una ventana de impresión\r\n      const printWindow = window.open('', '_blank', 'width=800,height=600');\r\n      \r\n      if (!printWindow) {\r\n        throw new Error('No se pudo abrir la ventana de impresión. Verifique que no esté bloqueada por el navegador.');\r\n      }\r\n\r\n      // Escribir el contenido HTML\r\n      printWindow.document.write(`\r\n        <!DOCTYPE html>\r\n        <html>\r\n        <head>\r\n          <title>Reporte de Caja</title>\r\n          <style>\r\n            body {\r\n              font-family: Arial, sans-serif;\r\n              margin: 0;\r\n              padding: 20px;\r\n              background: white;\r\n            }\r\n            @media print {\r\n              body { margin: 0; padding: 10px; }\r\n              .no-print { display: none; }\r\n            }\r\n            table {\r\n              width: 100%;\r\n              border-collapse: collapse;\r\n              margin: 10px 0;\r\n            }\r\n            td, th {\r\n              padding: 8px;\r\n              text-align: left;\r\n              border-bottom: 1px solid #ddd;\r\n            }\r\n            th {\r\n              background-color: #f2f2f2;\r\n              font-weight: bold;\r\n            }\r\n            .text-center { text-align: center; }\r\n            .text-end { text-align: right; }\r\n            h2, h3 { margin: 15px 0 10px 0; color: #333; }\r\n            p { margin: 5px 0; }\r\n            .header { border-bottom: 2px solid #333; margin-bottom: 20px; }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          ${htmlContent}\r\n          <div class=\"no-print\" style=\"margin-top: 20px; text-align: center;\">\r\n            <button onclick=\"window.print()\">Imprimir</button>\r\n            <button onclick=\"window.close()\">Cerrar</button>\r\n          </div>\r\n        </body>\r\n        </html>\r\n      `);\r\n\r\n      printWindow.document.close();\r\n\r\n      // Enfocar la ventana e imprimir automáticamente\r\n      printWindow.focus();\r\n      \r\n      // Pequeño delay para asegurar que el contenido se cargue\r\n      setTimeout(() => {\r\n        printWindow.print();\r\n      }, 250);\r\n\r\n    } catch (error) {\r\n      console.error('Error al imprimir:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SORTEO_SCHEDULES, SorteoSchedule } from '../models/interfaces';\nimport { SupabaseService } from './supabase.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SorteoService {\n  private sorteoSchedules: SorteoSchedule[] = [...SORTEO_SCHEDULES];\n\n  constructor(private supabaseService: SupabaseService) {\n    this.loadSorteoSchedules();\n  }\n\n  private async loadSorteoSchedules(): Promise<void> {\n    try {\n      // Usar siempre los horarios definidos en las interfaces\n      this.sorteoSchedules = [...SORTEO_SCHEDULES];\n\n      // Opcionalmente, si quieres usar horarios dinámicos de la BD, descomenta:\n      /*\n      const dynamicSchedules = await this.supabaseService.getSorteoSchedules();\n      \n      if (dynamicSchedules.length > 0) {\n        this.sorteoSchedules = dynamicSchedules.map(schedule => ({\n          name: schedule.name,\n          label: schedule.label,\n          closeTime: schedule.close_time  // Mapear de close_time a closeTime\n        }));\n      }\n      */\n    } catch (error) {\n      // Mantener los horarios por defecto en caso de error\n      this.sorteoSchedules = [...SORTEO_SCHEDULES];\n    }\n  }\n\n  async refreshSorteoSchedules(): Promise<void> {\n    await this.loadSorteoSchedules();\n  }\n\n  getCurrentSorteo(): SorteoSchedule | null {\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\n    const currentHour = hondurasTime.getHours();\n    const currentMinute = hondurasTime.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n\n    for (const sorteo of this.sorteoSchedules) {\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\n\n      if (currentTimeInMinutes < closeTimeInMinutes) {\n        return sorteo;\n      }\n    }\n\n    // Si ya pasaron todos los sorteos del día, retorna null\n    return null;\n  }\n\n  getNextSorteo(): SorteoSchedule | null {\n    const hondurasTime = this.supabaseService.getHondurasDateTime();\n    const currentHour = hondurasTime.getHours();\n    const currentMinute = hondurasTime.getMinutes();\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n\n    for (const sorteo of this.sorteoSchedules) {\n      const [closeHour, closeMinute] = sorteo.closeTime.split(':').map(Number);\n      const closeTimeInMinutes = closeHour * 60 + closeMinute;\n\n      if (currentTimeInMinutes < closeTimeInMinutes) {\n        return sorteo;\n      }\n    }\n\n    // Si ya pasaron todos los sorteos del día, retorna el primero del siguiente día\n    return this.sorteoSchedules[0] || null;\n  }\n\n  isSorteoOpen(sorteo: SorteoSchedule): boolean {\n    // Hora actual en Honduras formateada\n    const hnFormatted = this.supabaseService.formatLocalDateForSupabase(\n      this.supabaseService.getHondurasDateTime()\n    );\n    const [, timePart] = hnFormatted.split(' ');\n    const [hourStr, minuteStr] = timePart.split(':');\n    const currentTotalMinutes = parseInt(hourStr, 10) * 60 + parseInt(minuteStr, 10);\n\n    // Hora de cierre del sorteo\n    const [closeHourStr, closeMinuteStr] = sorteo.closeTime.split(':');\n    const closeTotalMinutes =\n      parseInt(closeHourStr, 10) * 60 + parseInt(closeMinuteStr, 10);\n\n    return currentTotalMinutes < closeTotalMinutes;\n  }\n\n  getTimeUntilClose(sorteo: SorteoSchedule): string {\n    // Hora actual en Honduras formateada\n    const hnFormatted = this.supabaseService.formatLocalDateForSupabase(\n      this.supabaseService.getHondurasDateTime()\n    );\n    const [, timePart] = hnFormatted.split(' ');\n    const [hourStr, minuteStr] = timePart.split(':');\n    const currentTotalMinutes = parseInt(hourStr, 10) * 60 + parseInt(minuteStr, 10);\n\n    // Hora de cierre del sorteo\n    const [closeHourStr, closeMinuteStr] = sorteo.closeTime.split(':');\n    const closeTotalMinutes =\n      parseInt(closeHourStr, 10) * 60 + parseInt(closeMinuteStr, 10);\n\n    let diff = closeTotalMinutes - currentTotalMinutes;\n    if (diff <= 0) {\n      return '00:00';\n    }\n    const hoursLeft = Math.floor(diff / 60);\n    const minutesLeft = diff % 60;\n    return `${hoursLeft.toString().padStart(2, '0')}:${minutesLeft\n      .toString()\n      .padStart(2, '0')}`;\n  }\n\n  getAllSorteos(): SorteoSchedule[] {\n    return this.sorteoSchedules;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { createClient, SupabaseClient, User as SupabaseUser } from '@supabase/supabase-js';\r\nimport { environment } from '../../environments/environment';\r\nimport { User, Sale, SaleDetail, Sorteo, SorteoSchedule, SORTEO_SCHEDULES, SucursalFactor } from '../models/interfaces';\r\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { toZonedTime, fromZonedTime, formatInTimeZone } from 'date-fns-tz';\r\nimport { es } from 'date-fns/locale';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupabaseService {\r\n  private supabase: SupabaseClient;\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n\r\n  // Subject para comunicación entre componentes\r\n  public resumenUpdateSubject = new Subject<void>();\r\n\r\n  // Getter para acceso directo al cliente Supabase\r\n  get client(): SupabaseClient {\r\n    return this.supabase;\r\n  }\r\n\r\n\r\n\r\n  constructor() {\r\n    this.supabase = createClient(environment.supabase.url, environment.supabase.key);\r\n\r\n    // Inicializar sesión existente\r\n    this.initializeSession();\r\n\r\n    // Escuchar cambios en la autenticación\r\n    this.supabase.auth.onAuthStateChange(async (event, session) => {\r\n      if (session?.user && session.user.email) {\r\n        // Obtener sucursal del metadata si existe, sino usar método por email\r\n        const userMetadata = (session.user as any).user_metadata || {};\r\n        const rawMetadata = (session.user as any).raw_user_meta_data || {};\r\n        const metaSucursal = userMetadata.sucursal || rawMetadata.sucursal;\r\n        const metaRole = userMetadata.role || rawMetadata.role;\r\n\r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email,\r\n          role: metaRole || (session.user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal'),\r\n          sucursal: metaSucursal || this.getSucursalFromEmail(session.user.email),\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n\r\n        this.currentUserSubject.next(userData);\r\n      } else {\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Inicializar sesión existente\r\n  private async initializeSession(): Promise<void> {\r\n    try {\r\n      const { data: { session }, error } = await this.supabase.auth.getSession();\r\n\r\n      if (error) {\r\n        this.currentUserSubject.next(null);\r\n        return;\r\n      }\r\n\r\n      if (session?.user && session.user.email) {\r\n        // Obtener sucursal del metadata si existe, sino usar método por email\r\n        const userMetadata = (session.user as any).user_metadata || {};\r\n        const rawMetadata = (session.user as any).raw_user_meta_data || {};\r\n        const metaSucursal = userMetadata.sucursal || rawMetadata.sucursal;\r\n        const metaRole = userMetadata.role || rawMetadata.role;\r\n\r\n        const userData: User = {\r\n          id: session.user.id,\r\n          email: session.user.email,\r\n          role: metaRole || (session.user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal'),\r\n          sucursal: metaSucursal || this.getSucursalFromEmail(session.user.email),\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n\r\n        this.currentUserSubject.next(userData);\r\n      } else {\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    } catch (error) {\r\n      this.currentUserSubject.next(null);\r\n    }\r\n  }\r\n\r\n  // Cargar datos del usuario en segundo plano\r\n  private async loadUserDataInBackground(uid: string): Promise<void> {\r\n    try {\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Background load timeout')), 5000);\r\n      });\r\n\r\n      const queryPromise = this.supabase\r\n        .from('users')\r\n        .select('*')\r\n        .eq('id', uid)\r\n        .single();\r\n\r\n      const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n\r\n      if (data && !error) {\r\n        const updatedUser: User = {\r\n          id: data.id,\r\n          email: data.email,\r\n          role: data.role,\r\n          sucursal: data.sucursal,\r\n          active: data.active,\r\n          createdAt: new Date(data.created_at)\r\n        };\r\n        this.currentUserSubject.next(updatedUser);\r\n      }\r\n    } catch (error) {\r\n      // No hacer nada, mantener los datos por defecto\r\n    }\r\n  }\r\n\r\n  // Autenticación\r\n  async login(email: string, password: string): Promise<User | null> {\r\n    try {\r\n      const { data, error } = await this.supabase.auth.signInWithPassword({\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      if (data.user && data.user.email) {\r\n        // Obtener sucursal del metadata si existe, sino usar método por email\r\n        const userMetadata = (data.user as any).user_metadata || {};\r\n        const rawMetadata = (data.user as any).raw_user_meta_data || {};\r\n        const metaSucursal = userMetadata.sucursal || rawMetadata.sucursal;\r\n        const metaRole = userMetadata.role || rawMetadata.role;\r\n\r\n        const userData: User = {\r\n          id: data.user.id,\r\n          email: data.user.email,\r\n          role: metaRole || (data.user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal'),\r\n          sucursal: metaSucursal || this.getSucursalFromEmail(data.user.email),\r\n          active: true,\r\n          createdAt: new Date()\r\n        };\r\n\r\n        this.currentUserSubject.next(userData);\r\n        return userData;\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private getSucursalFromEmail(email: string): string {\r\n    if (email === 'gerencia@loteria.com') return '';\r\n    if (email.includes('venta1')) return 'Sucursal 1';\r\n    if (email.includes('venta2')) return 'Sucursal 2';\r\n    if (email.includes('venta3')) return 'Sucursal 3';\r\n    if (email.includes('venta4')) return 'Sucursal 4';\r\n    return 'Principal';\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    const { error } = await this.supabase.auth.signOut();\r\n    if (error) throw error;\r\n  }\r\n\r\n  // Verificar conexión a la base de datos\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('usuarios')\r\n        .select('count')\r\n        .limit(1);\r\n\r\n      return !error;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Usuarios\r\n  async getUserData(uid: string): Promise<User | null> {\r\n    try {\r\n      // Primero obtener datos básicos de auth\r\n      const { data: authUser, error: authError } = await this.supabase.auth.getUser();\r\n\r\n      if (authError || !authUser.user) {\r\n        return null;\r\n      }\r\n\r\n      // Datos por defecto usando auth\r\n      const defaultUserData: User = {\r\n        id: authUser.user.id,\r\n        email: authUser.user.email || '',\r\n        role: 'sucursal' as const,\r\n        sucursal: 'Principal',\r\n        active: true,\r\n        createdAt: new Date()\r\n      };\r\n\r\n      // Intentar obtener datos de la tabla users con timeout muy corto\r\n      try {\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => reject(new Error('Database timeout')), 1000); // 1 segundo timeout\r\n        });\r\n\r\n        const queryPromise = this.supabase\r\n          .from('users')\r\n          .select('*')\r\n          .eq('id', uid)\r\n          .single();\r\n\r\n        const { data, error } = await Promise.race([queryPromise, timeoutPromise]) as any;\r\n\r\n        if (data && !error) {\r\n          return {\r\n            id: data.id,\r\n            email: data.email,\r\n            role: data.role,\r\n            sucursal: data.sucursal,\r\n            active: data.active,\r\n            createdAt: new Date(data.created_at)\r\n          } as User;\r\n        }\r\n      } catch (dbError) {\r\n        // Error/timeout consultando tabla users, usar datos por defecto\r\n      }\r\n\r\n      return defaultUserData;\r\n\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Ventas\r\n  async getNextCorrelativo(sucursal: string): Promise<number> {\r\n    try {\r\n      // Obtener el correlativo más alto para esta sucursal en el día actual\r\n      const today = new Date();\r\n      const startOfDay = new Date(today);\r\n      const endOfDay = new Date(today);\r\n\r\n      startOfDay.setHours(0, 0, 0, 0);\r\n      endOfDay.setHours(23, 59, 59, 999);\r\n\r\n      const startStr = this.formatLocalDateForSupabase(startOfDay);\r\n      const endStr = this.formatLocalDateForSupabase(endOfDay);\r\n\r\n\r\n\r\n      console\r\n      // Obtener solo las del día actual\r\n      const { data, error } = await this.supabase\r\n        .from('sales')\r\n        .select('correlativo, fecha, created_at')\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', startStr)\r\n        .lte('fecha', endStr)\r\n        .order('correlativo', { ascending: false })\r\n        .limit(1);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      const nextCorrelativo = data && data.length > 0 ? (data[0].correlativo || 0) + 1 : 1;\r\n\r\n      return nextCorrelativo;\r\n    } catch (error) {\r\n      // En caso de error, usar 1 como fallback\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  async createSale(sale: Omit<Sale, 'id' | 'createdAt'>): Promise<string> {\r\n    try {\r\n      // Obtener fecha/hora actual en Honduras\r\n\r\n      const formatted = this.formatLocalDateForSupabase(new Date());\r\n\r\n      const saleData = {\r\n        user_id: sale.userId,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: formatted,\r\n        total: sale.total,\r\n        numero_recibo: sale.numeroRecibo,\r\n        correlativo: sale.correlativo,\r\n        created_at: formatted\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sales')\r\n        .insert([saleData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSaleDetail(detail: Omit<SaleDetail, 'id'>): Promise<string> {\r\n    try {\r\n      // Validar que los datos sean válidos\r\n      if (detail.numero === null || detail.numero === undefined) {\r\n        throw new Error('Número no puede ser null o undefined');\r\n      }\r\n\r\n      if (detail.monto === null || detail.monto === undefined || detail.monto <= 0) {\r\n        throw new Error('Monto debe ser mayor a 0');\r\n      }\r\n\r\n      // Convertir el número a string con formato de 2 dígitos (00, 01, 02, etc.)\r\n      const numeroString = detail.numero.toString().padStart(2, '0');\r\n\r\n      const detailData = {\r\n        sale_id: detail.saleId,\r\n        numero: numeroString,  // Enviar como string\r\n        monto: Number(detail.monto)\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .insert([detailData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async getSalesByDateAndSorteo(fecha: Date, sorteo: string): Promise<Sale[]> {\r\n    try {\r\n      // Usar los nuevos métodos para obtener inicio y final del día en Honduras\r\n      const startOfDayStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fecha));\r\n      const endOfDayStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fecha));\r\n\r\n      let query = this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', startOfDayStr)\r\n        .lte('fecha', endOfDayStr)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (sorteo && sorteo.trim() !== '') {\r\n        query = query.eq('sorteo', sorteo);\r\n      }\r\n\r\n      const { data, error } = await query;\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      if (!data || data.length === 0) {\r\n        return [];\r\n      }\r\n\r\n      const mappedSales = data.map(sale => ({\r\n        id: sale.id,\r\n        userId: sale.user_id,\r\n        sucursal: sale.sucursal,\r\n        sorteo: sale.sorteo,\r\n        fecha: this.parseDateFromDatabase(sale.fecha), // Convertir a hora Honduras\r\n        total: sale.total,\r\n        numeroRecibo: sale.numero_recibo || sale.id.slice(-6),\r\n        correlativo: sale.correlativo || 0,\r\n        createdAt: this.parseDateFromDatabase(sale.created_at) // Convertir a hora Honduras\r\n      })) as Sale[];\r\n\r\n      return mappedSales;\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getSaleDetails(saleId: string): Promise<SaleDetail[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sale_details')\r\n        .select('*')\r\n        .eq('sale_id', saleId);\r\n\r\n      if (error) throw error;\r\n\r\n      return data.map(detail => ({\r\n        id: detail.id,\r\n        saleId: detail.sale_id,\r\n        numero: parseInt(detail.numero), // Convertir string a número para la interfaz\r\n        monto: detail.monto\r\n      })) as SaleDetail[];\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Sorteos\r\n  async createOrUpdateSorteo(sorteo: Omit<Sorteo, 'id'>): Promise<string> {\r\n    try {\r\n      const sorteoId = `${this.formatDateOnlyForSupabase(sorteo.fecha)}-${sorteo.sorteo}`;\r\n\r\n      // Asegurar formato de string para numero_ganador\r\n      const numeroGanadorString = (sorteo.numeroGanador ?? '').toString().padStart(2, '0');\r\n\r\n      const sorteoData = {\r\n        id: sorteoId,\r\n        fecha: this.formatLocalDateForSupabase(sorteo.fecha),\r\n        sorteo: sorteo.sorteo,\r\n        hora_cierre: this.formatLocalDateForSupabase(sorteo.horaCierre),\r\n        numero_ganador: numeroGanadorString,\r\n        factor_multiplicador: sorteo.factorMultiplicador,\r\n        total_vendido: sorteo.totalVendido,\r\n        total_pagado: sorteo.totalPagado,\r\n        ganancia_neta: sorteo.gananciaNeta,\r\n        cerrado: sorteo.cerrado\r\n      };\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .upsert([sorteoData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) throw error;\r\n\r\n      return data.id;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getSorteo(fecha: Date, sorteo: string): Promise<Sorteo | null> {\r\n    try {\r\n      const sorteoId = `${this.formatDateOnlyForSupabase(fecha)}-${sorteo}`;\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No se encontró el registro\r\n          return null;\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      return {\r\n        id: data.id,\r\n        fecha: new Date(data.fecha),\r\n        sorteo: data.sorteo,\r\n        horaCierre: new Date(data.hora_cierre),\r\n        // Mantener como string ya que numero_ganador es tipo text\r\n        numeroGanador: data.numero_ganador || '',\r\n        factorMultiplicador: data.factor_multiplicador,\r\n        totalVendido: data.total_vendido,\r\n        totalPagado: data.total_pagado,\r\n        gananciaNeta: data.ganancia_neta,\r\n        cerrado: data.cerrado\r\n      } as Sorteo;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Método específico para verificar si un sorteo existe por ID (maneja múltiples sucursales)\r\n  async getSorteoById(sorteoId: string): Promise<Sorteo | null> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        // Si es un error de permisos (406, RLS), lanzar para manejo especial\r\n        if (error.code === '42501' || error.details?.includes('permission denied')) {\r\n          throw { ...error, isRLSError: true };\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      if (!data || data.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      // Si hay múltiples sucursales, usar la primera para mostrar datos básicos\r\n      const firstRecord = data[0];\r\n\r\n      return {\r\n        id: firstRecord.id,\r\n        fecha: new Date(firstRecord.fecha),\r\n        sorteo: firstRecord.sorteo,\r\n        horaCierre: new Date(firstRecord.hora_cierre),\r\n        numeroGanador: firstRecord.numero_ganador || '',\r\n        factorMultiplicador: firstRecord.factor_multiplicador,\r\n        totalVendido: firstRecord.total_vendido,\r\n        totalPagado: firstRecord.total_pagado,\r\n        gananciaNeta: firstRecord.ganancia_neta,\r\n        cerrado: firstRecord.cerrado,\r\n        sucursal: firstRecord.sucursal\r\n      } as Sorteo;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Nuevo método para obtener resumen de todas las sucursales de un sorteo\r\n  async getSorteoResumenPorSucursal(sorteoId: string): Promise<any[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('sucursal, numero_ganador, factor_multiplicador, total_vendido, total_pagado, ganancia_neta')\r\n        .eq('id', sorteoId)\r\n        .order('sucursal');\r\n\r\n      if (error) {\r\n        console.error('Error al obtener resumen por sucursal:', error);\r\n        return [];\r\n      }\r\n\r\n      // Enriquecer datos con cantidad del número ganador\r\n      const enrichedData = await Promise.all((data || []).map(async (sorteo) => {\r\n        const cantidadNumeroGanador = await this.getCantidadNumeroGanadorPorSucursal(\r\n          sorteoId, \r\n          sorteo.sucursal, \r\n          sorteo.numero_ganador\r\n        );\r\n        \r\n        return {\r\n          ...sorteo,\r\n          cantidad_numero_ganador: cantidadNumeroGanador\r\n        };\r\n      }));\r\n\r\n      return enrichedData;\r\n    } catch (error) {\r\n      console.error('Error al obtener resumen por sucursal:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Método auxiliar para obtener la cantidad comprada del número ganador por sucursal\r\n  private async getCantidadNumeroGanadorPorSucursal(\r\n    sorteoId: string, \r\n    sucursal: string, \r\n    numeroGanador: string\r\n  ): Promise<number> {\r\n    try {\r\n      // Usar la función SQL optimizada\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_cantidad_numero_ganador_por_sucursal', {\r\n          p_sorteo_id: sorteoId,\r\n          p_sucursal: sucursal,\r\n          p_numero_ganador: numeroGanador\r\n        });\r\n\r\n      if (error) {\r\n        console.error('Error en función SQL get_cantidad_numero_ganador_por_sucursal:', error);\r\n        return 0;\r\n      }\r\n\r\n      return data || 0;\r\n    } catch (error) {\r\n      console.error('Error al obtener cantidad del número ganador:', error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  // Método alternativo que usa una consulta sin RLS estricto\r\n  async getSorteoByIdSimple(sorteoId: string): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_sorteo_simple', { sorteo_id: sorteoId });\r\n\r\n      if (error) {\r\n        return null;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Método específico para insertar un nuevo sorteo\r\n  async insertNewSorteo(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n      const hondurasDateTime = this.getHondurasDateTime();\r\n\r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .insert({\r\n          id: sorteoId,\r\n          fecha: this.formatLocalDateForSupabase(hondurasDateTime),\r\n          sorteo: sorteoId.split('-').slice(1).join('-'),\r\n          hora_cierre: this.formatLocalDateForSupabase(hondurasDateTime),\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          total_vendido: 0,\r\n          total_pagado: 0,\r\n          ganancia_neta: 0,\r\n          cerrado: true\r\n        });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateSorteoWinner(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n\r\n      // Asegurar formato de 2 dígitos si es número\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n\r\n      // Primero intentar hacer un update simple\r\n      const { data: existingData, error: selectError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('id')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (selectError && selectError.code !== 'PGRST116') {\r\n        throw selectError;\r\n      }\r\n\r\n      let result;\r\n\r\n      if (existingData) {\r\n        // El sorteo existe, hacer update\r\n        result = await this.supabase\r\n          .from('sorteos')\r\n          .update({\r\n            numero_ganador: numeroString,\r\n            factor_multiplicador: factorMultiplicador,\r\n            cerrado: true\r\n          })\r\n          .eq('id', sorteoId);\r\n      } else {\r\n        // El sorteo no existe, hacer insert con las columnas correctas\r\n        const hondurasDateTime = this.getHondurasDateTime();\r\n        result = await this.supabase\r\n          .from('sorteos')\r\n          .insert({\r\n            id: sorteoId,\r\n            fecha: this.formatLocalDateForSupabase(hondurasDateTime),\r\n            sorteo: sorteoId.split('-').slice(1).join('-'), // Extraer nombre del sorteo\r\n            hora_cierre: this.formatLocalDateForSupabase(hondurasDateTime),\r\n            numero_ganador: numeroString,\r\n            factor_multiplicador: factorMultiplicador,\r\n            total_vendido: 0,\r\n            total_pagado: 0,\r\n            ganancia_neta: 0,\r\n            cerrado: true\r\n          });\r\n      }\r\n\r\n      if (result.error) {\r\n        throw result.error;\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSorteo(sorteoId: string, sorteoName: string, fecha: Date): Promise<void> {\r\n    try {\r\n      const hondurasDateTime = this.getHondurasDateTime();\r\n\r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .insert({\r\n          id: sorteoId,\r\n          fecha: this.formatLocalDateForSupabase(hondurasDateTime),\r\n          sorteo: sorteoName,\r\n          hora_cierre: this.formatLocalDateForSupabase(hondurasDateTime),\r\n          numero_ganador: null,\r\n          factor_multiplicador: 70,\r\n          total_vendido: 0,\r\n          total_pagado: 0,\r\n          ganancia_neta: 0,\r\n          cerrado: false\r\n        });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método super optimizado para obtener datos agregados de sorteos con una sola consulta\r\n  async getVentasPorSorteoOptimizado(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      console.log('Obteniendo ventas súper optimizadas para fecha:', fecha, 'sucursal:', sucursal);\r\n\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Intentar primera función RPC optimizada\r\n      const { data, error } = await this.supabase.rpc('get_resumen_sorteos_optimizado', {\r\n        p_fecha: fechaStr,\r\n        p_sucursal: sucursal\r\n      });\r\n\r\n      if (error) {\r\n        console.log('Función RPC completa no disponible, intentando función simple...', error.message);\r\n        // Fallback a función RPC simple\r\n        return await this.getVentasPorSorteoRPCSimple(fecha, sucursal);\r\n      }\r\n\r\n      // Procesar resultado de la función RPC completa\r\n      const sorteoResumen: any = {\r\n        mañana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      if (data && data.length > 0) {\r\n        data.forEach((row: any) => {\r\n          // Map database values to object keys\r\n          let mappedKey: 'mañana' | 'tarde' | 'noche';\r\n          if (row.sorteo?.toLowerCase() === 'mañana' || row.sorteo?.toLowerCase() === 'manana') {\r\n            mappedKey = 'mañana';\r\n          } else if (row.sorteo?.toLowerCase() === 'tarde') {\r\n            mappedKey = 'tarde';\r\n          } else if (row.sorteo?.toLowerCase() === 'noche') {\r\n            mappedKey = 'noche';\r\n          } else {\r\n            return; // Skip unknown sorteo types\r\n          }\r\n          \r\n          if (sorteoResumen[mappedKey]) {\r\n            sorteoResumen[mappedKey].totalVendido = parseFloat(row.total_vendido) || 0;\r\n            sorteoResumen[mappedKey].numeroGanador = row.numero_ganador ? parseInt(row.numero_ganador) : null;\r\n            sorteoResumen[mappedKey].factor = row.factor_multiplicador || 70;\r\n            sorteoResumen[mappedKey].totalPagar = parseFloat(row.total_pagar) || 0;\r\n\r\n            // Agregar números vendidos si están disponibles\r\n            if (row.numeros_vendidos && typeof row.numeros_vendidos === 'object') {\r\n              sorteoResumen[mappedKey].numerosVendidos = row.numeros_vendidos;\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Datos de sorteos súper optimizados cargados:', sorteoResumen);\r\n      return sorteoResumen;\r\n\r\n    } catch (error) {\r\n      console.error('Error en getVentasPorSorteoOptimizado:', error);\r\n      // Fallback en caso de error\r\n      return await this.getVentasPorSorteoRPCSimple(fecha, sucursal);\r\n    }\r\n  }\r\n\r\n  // Método fallback con función RPC simple\r\n  private async getVentasPorSorteoRPCSimple(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Usar función RPC simple sin agregación compleja\r\n      const { data, error } = await this.supabase.rpc('get_resumen_sorteos_simple', {\r\n        p_fecha: fechaStr,\r\n        p_sucursal: sucursal\r\n      });\r\n\r\n      if (error) {\r\n        console.log('Función RPC simple no disponible, usando consultas básicas...', error.message);\r\n        return await this.getVentasPorSorteoBasico(fecha, sucursal);\r\n      }\r\n\r\n      const sorteoResumen: any = {\r\n        mañana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      if (data && data.length > 0) {\r\n        data.forEach((row: any) => {\r\n          // Map database values to object keys\r\n          let mappedKey: 'mañana' | 'tarde' | 'noche';\r\n          if (row.sorteo?.toLowerCase() === 'mañana' || row.sorteo?.toLowerCase() === 'manana') {\r\n            mappedKey = 'mañana';\r\n          } else if (row.sorteo?.toLowerCase() === 'tarde') {\r\n            mappedKey = 'tarde';\r\n          } else if (row.sorteo?.toLowerCase() === 'noche') {\r\n            mappedKey = 'noche';\r\n          } else {\r\n            return; // Skip unknown sorteo types\r\n          }\r\n          \r\n          if (sorteoResumen[mappedKey]) {\r\n            sorteoResumen[mappedKey].totalVendido = parseFloat(row.total_vendido) || 0;\r\n            sorteoResumen[mappedKey].numeroGanador = row.numero_ganador ? parseInt(row.numero_ganador) : null;\r\n            sorteoResumen[mappedKey].factor = row.factor_multiplicador || 70;\r\n            sorteoResumen[mappedKey].totalPagar = parseFloat(row.total_pagar) || 0;\r\n            // Los números vendidos se cargarán lazy cuando se necesiten\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Datos básicos de sorteos cargados:', sorteoResumen);\r\n      return sorteoResumen;\r\n    } catch (error) {\r\n      console.error('Error en función RPC simple:', error);\r\n      return await this.getVentasPorSorteoBasico(fecha, sucursal);\r\n    }\r\n  }\r\n\r\n  // Método fallback con vista materializada o consultas directas\r\n  private async getVentasPorSorteoFallback(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Intentar usar vista materializada si existe\r\n      const { data: resumenData, error: resumenError } = await this.supabase\r\n        .from('vista_resumen_sorteos')\r\n        .select('sorteo, total_vendido, numero_ganador, factor_multiplicador, total_pagar, numeros_vendidos')\r\n        .eq('fecha', fechaStr)\r\n        .eq('sucursal', sucursal);\r\n\r\n      if (resumenError) {\r\n        console.log('Vista materializada no disponible, usando consultas básicas...', resumenError.message);\r\n        return await this.getVentasPorSorteoBasico(fecha, sucursal);\r\n      }\r\n\r\n      // Procesar datos de la vista\r\n      const sorteoResumen: any = {\r\n        manana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      resumenData?.forEach((row: any) => {\r\n        const sorteoKey = row.sorteo?.toLowerCase() as 'manana' | 'tarde' | 'noche';\r\n        if (sorteoResumen[sorteoKey]) {\r\n          sorteoResumen[sorteoKey] = {\r\n            totalVendido: parseFloat(row.total_vendido) || 0,\r\n            numerosVendidos: row.numeros_vendidos && typeof row.numeros_vendidos === 'object' ? row.numeros_vendidos : {},\r\n            numeroGanador: row.numero_ganador ? parseInt(row.numero_ganador) : null,\r\n            totalPagar: parseFloat(row.total_pagar) || 0,\r\n            factor: row.factor_multiplicador || 70\r\n          };\r\n        }\r\n      });\r\n\r\n      console.log('Datos de vista materializada cargados:', sorteoResumen);\r\n      return sorteoResumen;\r\n    } catch (error) {\r\n      console.error('Error en vista materializada:', error);\r\n      return await this.getVentasPorSorteoBasico(fecha, sucursal);\r\n    }\r\n  }\r\n\r\n  // Método básico súper optimizado - solo totales, sin números individuales\r\n  private async getVentasPorSorteoBasico(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Una sola consulta para obtener todos los totales de una vez\r\n      const { data: totalesData, error: totalesError } = await this.supabase\r\n        .from('sales')\r\n        .select('sorteo, total.sum()')\r\n        .eq('fecha', fechaStr)\r\n        .eq('sucursal', sucursal);\r\n\r\n      // Una sola consulta para obtener info de sorteos cerrados\r\n      const { data: sorteosData, error: sorteosError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('sorteo, numero_ganador, factor_multiplicador, cerrado')\r\n        .like('id', `${fechaStr}-%`);\r\n\r\n      const sorteoResumen: any = {\r\n        mañana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n\r\n      // Procesar totales\r\n      if (totalesData && !totalesError) {\r\n        totalesData.forEach((item: any) => {\r\n          // Map database values to object keys\r\n          let mappedKey: 'mañana' | 'tarde' | 'noche';\r\n          if (item.sorteo?.toLowerCase() === 'mañana' || item.sorteo?.toLowerCase() === 'manana') {\r\n            mappedKey = 'mañana';\r\n          } else if (item.sorteo?.toLowerCase() === 'tarde') {\r\n            mappedKey = 'tarde';\r\n          } else if (item.sorteo?.toLowerCase() === 'noche') {\r\n            mappedKey = 'noche';\r\n          } else {\r\n            return; // Skip unknown sorteo types\r\n          }\r\n          \r\n          if (sorteoResumen[mappedKey]) {\r\n            sorteoResumen[mappedKey].totalVendido = item.sum || 0;\r\n          }\r\n        });\r\n      }\r\n\r\n      // Procesar info de sorteos\r\n      if (sorteosData && !sorteosError) {\r\n        sorteosData.forEach((sorteo: any) => {\r\n          // Map database values to object keys\r\n          let mappedKey: 'mañana' | 'tarde' | 'noche';\r\n          if (sorteo.sorteo?.toLowerCase() === 'mañana' || sorteo.sorteo?.toLowerCase() === 'manana') {\r\n            mappedKey = 'mañana';\r\n          } else if (sorteo.sorteo?.toLowerCase() === 'tarde') {\r\n            mappedKey = 'tarde';\r\n          } else if (sorteo.sorteo?.toLowerCase() === 'noche') {\r\n            mappedKey = 'noche';\r\n          } else {\r\n            return; // Skip unknown sorteo types\r\n          }\r\n          \r\n          if (sorteoResumen[mappedKey]) {\r\n            sorteoResumen[mappedKey].numeroGanador = sorteo.numero_ganador ? parseInt(sorteo.numero_ganador) : null;\r\n            sorteoResumen[mappedKey].factor = sorteo.factor_multiplicador || 70;\r\n            // No calculamos total a pagar sin los números individuales\r\n          }\r\n        });\r\n      }\r\n\r\n      console.log('Datos básicos optimizados cargados:', sorteoResumen);\r\n      return sorteoResumen;\r\n    } catch (error) {\r\n      console.error('Error en método básico:', error);\r\n      return {\r\n        manana: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        tarde: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 },\r\n        noche: { totalVendido: 0, numerosVendidos: {}, numeroGanador: null, totalPagar: 0, factor: 70 }\r\n      };\r\n    }\r\n  }\r\n\r\n  // Método para obtener sorteo por tipo y fecha (para tabs de ventas)\r\n  async getSorteoByTypeAndDate(sorteoType: string, fecha: Date): Promise<any | null> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n      const sorteoId = `${fechaStr}-${sorteoType}`;\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No se encontró el registro\r\n          return null;\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      return {\r\n        id: data.id,\r\n        fecha: new Date(data.fecha),\r\n        sorteo: data.sorteo,\r\n        horaCierre: new Date(data.hora_cierre),\r\n        numero_ganador: data.numero_ganador ? parseInt(data.numero_ganador) : null,\r\n        factor_multiplicador: data.factor_multiplicador,\r\n        totalVendido: data.total_vendido,\r\n        totalPagado: data.total_pagado,\r\n        gananciaNeta: data.ganancia_neta,\r\n        cerrado: data.cerrado\r\n      };\r\n    } catch (error) {\r\n      console.error(`Error obteniendo sorteo ${sorteoType} para fecha ${fecha}:`, error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Método alternativo para actualizar sorteo sin políticas RLS complejas\r\n  async updateSorteoWinnerDirect(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n\r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          cerrado: true\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método súper simple que solo hace UPDATE (último recurso)\r\n  async updateSorteoWinnerSimple(sorteoId: string, numeroGanador: string, factorMultiplicador: number): Promise<void> {\r\n    try {\r\n\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n\r\n      // Solo hacer UPDATE, sin verificaciones\r\n      const { error } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          numero_ganador: numeroString,\r\n          factor_multiplicador: factorMultiplicador,\r\n          cerrado: true\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async calculateSorteoWinnings(sorteoId: string): Promise<void> {\r\n    try {\r\n      // Obtener el sorteo\r\n      const { data: sorteo, error: sorteoError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .single();\r\n\r\n      if (sorteoError) throw sorteoError;\r\n      if (!sorteo.numero_ganador) return;\r\n\r\n      // Obtener todas las ventas del sorteo\r\n      const startOfDay = this.getStartOfDayHonduras(new Date(sorteo.fecha));\r\n      const endOfDay = this.getEndOfDayHonduras(new Date(sorteo.fecha));\r\n      \r\n      const { data: sales, error: salesError } = await this.supabase\r\n        .from('sales')\r\n        .select('*, sale_details(*)')\r\n        .eq('sorteo', sorteo.sorteo)\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay));\r\n\r\n      if (salesError) throw salesError;\r\n\r\n      // Calcular total vendido\r\n      let totalVendido = 0;\r\n      let totalPagado = 0;\r\n\r\n      for (const sale of sales) {\r\n        for (const detail of sale.sale_details) {\r\n          totalVendido += detail.monto;\r\n\r\n          // Comparar números: convertir detail.numero a string para comparar con numero_ganador (text)\r\n          if (detail.numero.toString().padStart(2, '0') === sorteo.numero_ganador) {\r\n            totalPagado += detail.monto * sorteo.factor_multiplicador;\r\n          }\r\n        }\r\n      }\r\n\r\n      const gananciaNeta = totalVendido - totalPagado;\r\n\r\n      // Actualizar el sorteo con los cálculos\r\n      const { error: updateError } = await this.supabase\r\n        .from('sorteos')\r\n        .update({\r\n          total_vendido: totalVendido,\r\n          total_pagado: totalPagado,\r\n          ganancia_neta: gananciaNeta\r\n        })\r\n        .eq('id', sorteoId);\r\n\r\n      if (updateError) throw updateError;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Método de debug para verificar conexión y datos\r\n  async debugSalesData(): Promise<void> {\r\n    try {\r\n\r\n      // Verificar conexión básica\r\n      const { data: tablesData, error: tablesError } = await this.supabase\r\n        .from('sales')\r\n        .select('count(*)', { count: 'exact', head: true });\r\n\r\n      if (tablesError) {\r\n        return;\r\n      }\r\n\r\n\r\n      // Verificar ventas de hoy sin filtros\r\n      const today = new Date();\r\n      const startOfDay = this.getStartOfDayHonduras(today);\r\n      const endOfDay = this.getEndOfDayHonduras(today);\r\n\r\n\r\n      const { data: todayData, error: todayError } = await this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay));\r\n\r\n      if (todayError) {\r\n        return;\r\n      }\r\n\r\n      if (todayData && todayData.length > 0) {\r\n      }\r\n\r\n      // Verificar ventas de los últimos 3 días\r\n      const threeDaysAgo = new Date(today);\r\n      threeDaysAgo.setDate(threeDaysAgo.getDate() - 3);\r\n      const startThreeDaysAgo = this.getStartOfDayHonduras(threeDaysAgo);\r\n\r\n      const { data: recentData, error: recentError } = await this.supabase\r\n        .from('sales')\r\n        .select('*')\r\n        .gte('fecha', this.formatLocalDateForSupabase(startThreeDaysAgo))\r\n        .order('created_at', { ascending: false })\r\n        .limit(10);\r\n\r\n      if (recentError) {\r\n        return;\r\n      }\r\n\r\n      if (recentData && recentData.length > 0) {\r\n        recentData.forEach((sale, index) => {\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para verificar permisos y políticas RLS\r\n  async checkDatabasePermissions(): Promise<void> {\r\n    try {\r\n\r\n      // Verificar sesión actual\r\n      const { data: session, error: sessionError } = await this.supabase.auth.getSession();\r\n      if (sessionError) {\r\n        return;\r\n      }\r\n\r\n\r\n      // Probar consulta simple a la tabla sales\r\n      const { data: simpleQuery, error: simpleError } = await this.supabase\r\n        .from('sales')\r\n        .select('id, sucursal, created_at')\r\n        .limit(1);\r\n\r\n      if (simpleError) {\r\n      } else {\r\n      }\r\n\r\n      // Probar inserción de test (para verificar permisos de escritura)\r\n      const testSale = {\r\n        user_id: session?.session?.user?.id || 'test-user',\r\n        sucursal: 'TEST',\r\n        sorteo: 'test',\r\n        fecha: this.formatLocalDateForSupabase(new Date()),\r\n        total: 0,\r\n        numero_recibo: 'TEST-001',\r\n        correlativo: 999\r\n      };\r\n\r\n      const { data: insertTest, error: insertError } = await this.supabase\r\n        .from('sales')\r\n        .insert(testSale)\r\n        .select();\r\n\r\n      if (insertError) {\r\n      } else {\r\n\r\n        // Eliminar el registro de prueba\r\n        if (insertTest && insertTest.length > 0) {\r\n          await this.supabase\r\n            .from('sales')\r\n            .delete()\r\n            .eq('id', insertTest[0].id);\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // GESTIÓN DE USUARIOS\r\n  // ========================\r\n\r\n  async getUsers(): Promise<User[]> {\r\n    try {\r\n\r\n      // Retornar usuarios por defecto simples para que funcione\r\n      return [\r\n        {\r\n          id: '1',\r\n          email: 'gerencia@loteria.com',\r\n          role: 'admin',\r\n          sucursal: '',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '2',\r\n          email: 'venta1@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 1',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '3',\r\n          email: 'venta2@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 2',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '4',\r\n          email: 'venta3@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 3',\r\n          active: true,\r\n          createdAt: new Date()\r\n        },\r\n        {\r\n          id: '5',\r\n          email: 'venta4@loteria.com',\r\n          role: 'sucursal',\r\n          sucursal: 'Sucursal 4',\r\n          active: true,\r\n          createdAt: new Date()\r\n        }\r\n      ];\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private getDefaultUsers(): User[] {\r\n    return [\r\n      {\r\n        id: '1',\r\n        email: 'admin@loteria.com',\r\n        role: 'admin',\r\n        sucursal: '',\r\n        active: true,\r\n        createdAt: new Date()\r\n      },\r\n      {\r\n        id: '2',\r\n        email: 'sucursal1@loteria.com',\r\n        role: 'sucursal',\r\n        sucursal: 'Sucursal 1',\r\n        active: true,\r\n        createdAt: new Date()\r\n      }\r\n    ];\r\n  }\r\n\r\n  private async createProfilesFromAuthUsers(authUsers: any[]): Promise<void> {\r\n    try {\r\n      const profilesData = authUsers.map(authUser => ({\r\n        id: authUser.id,\r\n        email: authUser.email,\r\n        role: authUser.email?.includes('admin') || authUser.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal',\r\n        sucursal: this.getSucursalFromEmail(authUser.email || ''),\r\n        active: true,\r\n        created_at: new Date(authUser.created_at).toISOString()\r\n      }));\r\n\r\n      const { error } = await this.supabase\r\n        .from('profiles')\r\n        .upsert(profilesData, { onConflict: 'id' });\r\n\r\n      if (error) {\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // GESTIÓN DE SORTEOS\r\n  // ========================\r\n\r\n  async getSorteoSchedules(): Promise<any[]> {\r\n    try {\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .select('*')\r\n        .order('close_time', { ascending: true });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createSorteoSchedule(sorteoData: { name: string, label: string, close_time: string }): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .insert([sorteoData])\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateSorteoSchedule(sorteoId: string, updates: { name?: string, label?: string, close_time?: string }): Promise<any> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .update(updates)\r\n        .eq('id', sorteoId)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteSorteoSchedule(sorteoId: string): Promise<void> {\r\n    try {\r\n      const { error } = await this.supabase\r\n        .from('sorteo_schedules')\r\n        .delete()\r\n        .eq('id', sorteoId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // MÉTODOS DE DEBUG Y SETUP\r\n  // ========================\r\n\r\n\r\n  async initializeSorteoSchedules(): Promise<void> {\r\n    try {\r\n      // Crear los sorteos por defecto si no existen\r\n      const defaultSorteos: SorteoSchedule[] = [...SORTEO_SCHEDULES];\r\n\r\n      for (const sorteo of defaultSorteos) {\r\n        const { error } = await this.supabase\r\n          .from('sorteo_schedules')\r\n          .upsert(sorteo, { onConflict: 'name' });\r\n\r\n        if (error) {\r\n        } else {\r\n        }\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para inicializar la tabla de perfiles si no existe\r\n  async initializeProfilesTable(): Promise<void> {\r\n    try {\r\n\r\n      // Simplemente intentar hacer una consulta para ver si la tabla existe\r\n      const { error } = await this.supabase\r\n        .from('profiles')\r\n        .select('count', { count: 'exact', head: true });\r\n\r\n      if (error) {\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // Método para sincronizar usuarios manualmente\r\n  async syncUsersFromAuth(): Promise<void> {\r\n    try {\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  // ========== FUNCIONES DE TIMEZONE HONDURAS CON DATE-FNS-TZ ==========\r\n  private readonly HONDURAS_TIMEZONE = 'America/Tegucigalpa';\r\n\r\n  // Función para obtener la fecha/hora actual en Honduras\r\n  getHondurasDateTime(): Date {\r\n    const now = new Date();\r\n    return now;\r\n  }\r\n\r\n  // Función para formatear fecha/hora en formato de Honduras\r\n  formatHondurasDateTime(date?: Date): string {\r\n    const targetDate = date || new Date();\r\n    return this.formatLocalDateForSupabase(targetDate);\r\n  }\r\n\r\n  formatLocalDateForSupabase(date: Date): string {\r\n    const pad = (n: number) => n.toString().padStart(2, '0');\r\n\r\n    const year = date.getFullYear();\r\n    const month = pad(date.getMonth() + 1); // Mes empieza en 0\r\n    const day = pad(date.getDate());\r\n\r\n    const hours = pad(date.getHours());\r\n    const minutes = pad(date.getMinutes());\r\n    const seconds = pad(date.getSeconds());\r\n\r\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  // Función para formatear solo la fecha (YYYY-MM-DD) para consultas RPC\r\n  formatDateOnlyForSupabase(date: Date): string {\r\n    const pad = (n: number) => n.toString().padStart(2, '0');\r\n\r\n    const year = date.getFullYear();\r\n    const month = pad(date.getMonth() + 1); // Mes empieza en 0\r\n    const day = pad(date.getDate());\r\n\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n\r\n  // Función para convertir una fecha de Honduras a UTC para guardar en BD\r\n  private hondurasToUtc(date: Date): Date {\r\n    return fromZonedTime(date, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Función para convertir una fecha UTC de BD a hora de Honduras\r\n  private utcToHonduras(utcDate: Date): Date {\r\n    return toZonedTime(utcDate, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método público para convertir cualquier fecha a hora de Honduras\r\n  convertToHondurasTime(date: Date): Date {\r\n    return toZonedTime(date, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método público para que los componentes obtengan la hora de Honduras\r\n  getHondurasTimeNow(): Date {\r\n    return this.getHondurasDateTime();\r\n  }\r\n\r\n  // Método público para formatear fechas en hora de Honduras con formato legible\r\n  formatDateForHonduras(date?: Date): string {\r\n    const targetDate = date || new Date();\r\n    return formatInTimeZone(targetDate, this.HONDURAS_TIMEZONE, 'dd/MM/yyyy hh:mm:ss a', {\r\n      locale: es\r\n    });\r\n  }\r\n\r\n  // Método público para parsear fechas de la base de datos a hora de Honduras\r\n  parseDateFromDatabase(isoString: string): Date {\r\n    const utcDate = parseISO(isoString);\r\n    return toZonedTime(utcDate, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método para crear fecha específica en zona horaria de Honduras\r\n  createHondurasDate(year: number, month: number, day: number, hour: number = 0, minute: number = 0, second: number = 0): Date {\r\n    // Crear fecha en zona horaria de Honduras\r\n    const dateString = `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}T${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}:${String(second).padStart(2, '0')}`;\r\n    return fromZonedTime(new Date(dateString), this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // Método para obtener inicio del día en Honduras\r\n  getStartOfDayHonduras(date: Date): Date {\r\n    // Primero convertir la fecha a zona horaria de Honduras\r\n    const hondurasDate = toZonedTime(date, this.HONDURAS_TIMEZONE);\r\n    const year = hondurasDate.getFullYear();\r\n    const month = hondurasDate.getMonth() + 1;\r\n    const day = hondurasDate.getDate();\r\n\r\n    // Crear inicio del día (00:00:00) en zona horaria de Honduras\r\n    return this.createHondurasDate(year, month, day, 0, 0, 0);\r\n  }\r\n\r\n  // Método para obtener final del día en Honduras  \r\n  getEndOfDayHonduras(date: Date): Date {\r\n    // Primero convertir la fecha a zona horaria de Honduras\r\n    const hondurasDate = toZonedTime(date, this.HONDURAS_TIMEZONE);\r\n    const year = hondurasDate.getFullYear();\r\n    const month = hondurasDate.getMonth() + 1;\r\n    const day = hondurasDate.getDate();\r\n\r\n    // Crear final del día (23:59:59.999) en zona horaria de Honduras\r\n    return this.createHondurasDate(year, month, day, 23, 59, 59);\r\n  }\r\n\r\n  // Método para formatear fecha para inputs datetime-local en zona horaria de Honduras\r\n  formatDateTimeLocalHonduras(date: Date): string {\r\n    const hondurasDate = toZonedTime(date, this.HONDURAS_TIMEZONE);\r\n    const year = hondurasDate.getFullYear();\r\n    const month = String(hondurasDate.getMonth() + 1).padStart(2, '0');\r\n    const day = String(hondurasDate.getDate()).padStart(2, '0');\r\n    const hours = String(hondurasDate.getHours()).padStart(2, '0');\r\n    const minutes = String(hondurasDate.getMinutes()).padStart(2, '0');\r\n    return `${year}-${month}-${day}T${hours}:${minutes}`;\r\n  }\r\n\r\n  // Método para convertir string de datetime-local a fecha UTC para base de datos\r\n  parseLocalDateTimeToUtc(dateTimeLocalString: string): Date {\r\n    // El string viene en formato YYYY-MM-DDTHH:mm\r\n    // Lo interpretamos como si fuera hora de Honduras y lo convertimos a UTC\r\n    const localDate = new Date(dateTimeLocalString);\r\n    return fromZonedTime(localDate, this.HONDURAS_TIMEZONE);\r\n  }\r\n\r\n  // ============= MÉTODOS DE GESTIÓN DE USUARIOS =============\r\n\r\n  // Obtener todos los usuarios del sistema desde auth.users\r\n  async getAllUsers(): Promise<User[]> {\r\n    try {\r\n      // Usar la API de administración para obtener usuarios de auth.users\r\n      const { data, error } = await this.supabase.auth.admin.listUsers();\r\n\r\n      console.log('Usuarios obtenidos:', data);\r\n      if (error) {\r\n        console.error('Error obteniendo usuarios:', error);\r\n        // Si falla, usar datos por defecto\r\n        return this.getDefaultUsersForManagement();\r\n      }\r\n\r\n      // Mapear los usuarios de auth a nuestro formato\r\n      return data.users.map((user: any) => ({\r\n        id: user.id,\r\n        email: user.email || '',\r\n        role: (user.user_metadata?.['role'] || (user.email === 'gerencia@loteria.com' ? 'admin' : 'sucursal')) as 'admin' | 'sucursal',\r\n        sucursal: user.user_metadata?.['sucursal'] || this.getSucursalFromEmail(user.email || ''),\r\n        active: user.user_metadata?.['active'] ?? !(user['banned_until']),\r\n        createdAt: new Date(user.created_at)\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios:', error);\r\n      // Retornar usuarios por defecto si falla\r\n      return this.getDefaultUsersForManagement();\r\n    }\r\n  }\r\n\r\n  // Usuarios por defecto para gestión\r\n  private getDefaultUsersForManagement(): User[] {\r\n    return [\r\n      {\r\n        id: 'default-admin',\r\n        email: 'gerencia@loteria.com',\r\n        role: 'admin',\r\n        sucursal: '',\r\n        active: true,\r\n        createdAt: new Date()\r\n      },\r\n      {\r\n        id: 'default-venta1',\r\n        email: 'venta1@loteria.com',\r\n        role: 'sucursal',\r\n        sucursal: 'Sucursal 1',\r\n        active: true,\r\n        createdAt: new Date()\r\n      },\r\n      {\r\n        id: 'default-venta2',\r\n        email: 'venta2@loteria.com',\r\n        role: 'sucursal',\r\n        sucursal: 'Sucursal 2',\r\n        active: true,\r\n        createdAt: new Date()\r\n      }\r\n    ];\r\n  }\r\n\r\n  // Crear un nuevo usuario en el sistema usando auth.users\r\n  async createNewUser(userData: { email: string; role: 'admin' | 'sucursal'; sucursal?: string; active?: boolean }): Promise<User> {\r\n    try {\r\n      console.log('Creando usuario:', userData);\r\n\r\n      // Crear usuario directamente en auth.users\r\n      const { data: authData, error: authError } = await this.supabase.auth.admin.createUser({\r\n        email: userData.email,\r\n        password: 'LoteriaTemporal123!', // Contraseña temporal\r\n        email_confirm: true,\r\n        user_metadata: {\r\n          role: userData.role,\r\n          sucursal: userData.sucursal || '',\r\n          active: userData.active !== undefined ? userData.active : true\r\n        }\r\n      });\r\n\r\n      if (authError) {\r\n        throw authError;\r\n      }\r\n\r\n      console.log('Usuario creado exitosamente:', authData.user.email);\r\n\r\n      // Retornar el usuario en nuestro formato\r\n      return {\r\n        id: authData.user.id,\r\n        email: authData.user.email || '',\r\n        role: userData.role,\r\n        sucursal: userData.sucursal || '',\r\n        active: userData.active !== undefined ? userData.active : true,\r\n        createdAt: new Date(authData.user.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al crear usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Actualizar un usuario existente usando auth.users\r\n  async updateExistingUser(userId: string, updates: { email?: string; role?: 'admin' | 'sucursal'; sucursal?: string; active?: boolean }): Promise<User> {\r\n    try {\r\n      console.log('Actualizando usuario:', userId, updates);\r\n\r\n      // Preparar los metadatos del usuario\r\n      const userMetadata: any = {};\r\n      if (updates.role) userMetadata['role'] = updates.role;\r\n      if (updates.sucursal !== undefined) userMetadata['sucursal'] = updates.sucursal;\r\n      if (updates.active !== undefined) userMetadata['active'] = updates.active;\r\n\r\n      // Actualizar en auth.users\r\n      const updateData: any = {};\r\n      if (updates.email) updateData.email = updates.email;\r\n      if (Object.keys(userMetadata).length > 0) updateData.user_metadata = userMetadata;\r\n\r\n      // Si se quiere desactivar el usuario, usar ban\r\n      if (updates.active === false) {\r\n        updateData.ban_duration = '876000h'; // Ban muy largo para simular desactivación\r\n      } else if (updates.active === true) {\r\n        updateData.ban_duration = 'none'; // Remover ban\r\n      }\r\n\r\n      const { data, error } = await this.supabase.auth.admin.updateUserById(userId, updateData);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Usuario actualizado exitosamente:', data.user.email);\r\n\r\n      // Retornar el usuario actualizado en nuestro formato\r\n      return {\r\n        id: data.user.id,\r\n        email: data.user.email || '',\r\n        role: updates.role || (data.user.user_metadata?.['role'] as 'admin' | 'sucursal') || 'sucursal',\r\n        sucursal: updates.sucursal || data.user.user_metadata?.['sucursal'] || '',\r\n        active: updates.active !== undefined ? updates.active : !(data.user as any)['banned_until'],\r\n        createdAt: new Date(data.user.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al actualizar usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Eliminar un usuario usando auth.users\r\n  async deleteExistingUser(userId: string): Promise<void> {\r\n    try {\r\n      console.log('Eliminando usuario:', userId);\r\n\r\n      const { error } = await this.supabase.auth.admin.deleteUser(userId);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Usuario eliminado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al eliminar usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Alternar el estado activo/inactivo de un usuario usando auth.users\r\n  async toggleExistingUserStatus(userId: string): Promise<User> {\r\n    try {\r\n      console.log('Alternando estado del usuario:', userId);\r\n\r\n      // Primero obtener el usuario actual de auth.users\r\n      const { data: authUser, error: fetchError } = await this.supabase.auth.admin.getUserById(userId);\r\n\r\n      if (fetchError) {\r\n        throw fetchError;\r\n      }\r\n\r\n      // Determinar el estado actual desde los metadatos o si está baneado\r\n      const currentActive = authUser.user.user_metadata?.['active'] ?? !(authUser.user as any)['banned_until'];\r\n      const newStatus = !currentActive;\r\n\r\n      // Actualizar el estado del usuario\r\n      const updateData: any = {\r\n        user_metadata: {\r\n          ...authUser.user.user_metadata,\r\n          ['active']: newStatus\r\n        }\r\n      };\r\n\r\n      // Si se está desactivando, ban el usuario\r\n      if (!newStatus) {\r\n        updateData.ban_duration = '876000h'; // Ban muy largo para simular desactivación\r\n      } else {\r\n        updateData.ban_duration = 'none'; // Remover ban\r\n      }\r\n\r\n      const { data, error } = await this.supabase.auth.admin.updateUserById(userId, updateData);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Estado del usuario alternado exitosamente:', newStatus ? 'Activo' : 'Inactivo');\r\n\r\n      return {\r\n        id: data.user.id,\r\n        email: data.user.email || '',\r\n        role: (data.user.user_metadata?.['role'] as 'admin' | 'sucursal') || 'sucursal',\r\n        sucursal: data.user.user_metadata?.['sucursal'] || '',\r\n        active: newStatus,\r\n        createdAt: new Date(data.user.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al alternar estado del usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Actualizar contraseña de un usuario usando auth.users\r\n  async updateUserPassword(userId: string, newPassword: string): Promise<void> {\r\n    try {\r\n      console.log('Actualizando contraseña del usuario:', userId);\r\n\r\n      const { error } = await this.supabase.auth.admin.updateUserById(userId, {\r\n        password: newPassword\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Contraseña actualizada exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al actualizar contraseña:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Enviar email de restablecimiento de contraseña\r\n  async sendPasswordReset(email: string): Promise<void> {\r\n    try {\r\n      const { error } = await this.supabase.auth.resetPasswordForEmail(email, {\r\n        redirectTo: `${window.location.origin}/reset-password`\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ========================\r\n  // GESTIÓN DE SORTEOS POR SUCURSAL\r\n  // ========================\r\n\r\n  // Obtener usuarios activos agrupados por sucursal\r\n  async getActiveUsersBySucursal(): Promise<SucursalFactor[]> {\r\n    try {\r\n      // Intentar usar la función SQL primero\r\n      const { data, error } = await this.supabase\r\n        .rpc('get_active_users_by_sucursal');\r\n\r\n      if (error) {\r\n        console.warn('Función get_active_users_by_sucursal falló, intentando consulta directa:', error);\r\n\r\n        // Fallback: consulta directa a auth.users\r\n        const { data: usersData, error: usersError } = await this.supabase.auth.admin.listUsers();\r\n\r\n        if (usersError) {\r\n          throw usersError;\r\n        }\r\n\r\n        // Procesar usuarios y agrupar por sucursal\r\n        const sucursalesMap = new Map<string, SucursalFactor>();\r\n\r\n        for (const user of usersData.users) {\r\n          if (user.email === 'gerencia@loteria.com' || !user.email_confirmed_at || !user.email) {\r\n            continue;\r\n          }\r\n\r\n          let sucursal = 'Principal';\r\n          if (user.user_metadata && user.user_metadata['sucursal']) {\r\n            sucursal = user.user_metadata['sucursal'];\r\n          } else if (user.email.includes('venta1')) {\r\n            sucursal = 'Sucursal 1';\r\n          } else if (user.email.includes('venta2')) {\r\n            sucursal = 'Sucursal 2';\r\n          } else if (user.email.includes('venta3')) {\r\n            sucursal = 'Sucursal 3';\r\n          } else if (user.email.includes('venta4')) {\r\n            sucursal = 'Sucursal 4';\r\n          }\r\n\r\n          if (!sucursalesMap.has(sucursal)) {\r\n            sucursalesMap.set(sucursal, {\r\n              sucursal,\r\n              factor: 75,\r\n              usuario: user.id,\r\n              email: user.email || ''\r\n            });\r\n          }\r\n        }\r\n\r\n        return Array.from(sucursalesMap.values());\r\n      }\r\n\r\n      return (data || []).map((user: any) => ({\r\n        sucursal: user.sucursal,\r\n        factor: user.factor_default,\r\n        usuario: user.user_id,\r\n        email: user.email\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener usuarios por sucursal:', error);\r\n      // Fallback final con datos por defecto\r\n      return [\r\n        { sucursal: 'Sucursal 1', factor: 75, usuario: '', email: 'venta1@loteria.com' },\r\n        { sucursal: 'Sucursal 2', factor: 75, usuario: '', email: 'venta2@loteria.com' },\r\n        { sucursal: 'Sucursal 3', factor: 75, usuario: '', email: 'venta3@loteria.com' },\r\n        { sucursal: 'Sucursal 4', factor: 75, usuario: '', email: 'venta4@loteria.com' },\r\n        { sucursal: 'Principal', factor: 75, usuario: '', email: 'principal@loteria.com' }\r\n      ];\r\n    }\r\n  }\r\n\r\n  // Crear sorteos por sucursal con factores específicos\r\n  async crearSorteosPorSucursal(\r\n    sorteoId: string,\r\n    numeroGanador: string,\r\n    factoresPorSucursal: { [sucursal: string]: number }\r\n  ): Promise<void> {\r\n    try {\r\n      const numeroString = numeroGanador.toString().padStart(2, '0');\r\n\r\n      const { data, error } = await this.supabase\r\n        .rpc('crear_sorteos_por_sucursal', {\r\n          p_sorteo_id: sorteoId,\r\n          p_numero_ganador: numeroString,\r\n          p_factores_json: factoresPorSucursal\r\n        });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Sorteos creados por sucursal exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al crear sorteos por sucursal:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Calcular totales de sorteo por sucursal\r\n  async calcularTotalesSorteoPorSucursal(sorteoId: string): Promise<void> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .rpc('calcular_totales_sorteo_por_sucursal', {\r\n          p_sorteo_id: sorteoId\r\n        });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      console.log('Totales calculados por sucursal exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al calcular totales por sucursal:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Obtener sorteos por sucursal para una fecha y tipo específicos\r\n  async getSorteosPorSucursal(fecha: Date, sorteo: string): Promise<Sorteo[]> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n      const sorteoId = `${fechaStr}-${sorteo}`;\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .order('sucursal');\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      return (data || []).map(item => ({\r\n        id: item.id,\r\n        fecha: new Date(item.fecha),\r\n        sorteo: item.sorteo,\r\n        horaCierre: new Date(item.hora_cierre),\r\n        numeroGanador: item.numero_ganador || '',\r\n        factorMultiplicador: item.factor_multiplicador,\r\n        totalVendido: item.total_vendido,\r\n        totalPagado: item.total_pagado,\r\n        gananciaNeta: item.ganancia_neta,\r\n        cerrado: item.cerrado,\r\n        sucursal: item.sucursal\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener sorteos por sucursal:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Obtener resumen consolidado de un sorteo (todas las sucursales)\r\n  async getResumenConsolidadoSorteo(fecha: Date, sorteo: string): Promise<{\r\n    numeroGanador: string;\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    cerrado: boolean;\r\n    detallesPorSucursal: any[];\r\n  }> {\r\n    try {\r\n      const sorteosPorSucursal = await this.getSorteosPorSucursal(fecha, sorteo);\r\n\r\n      if (sorteosPorSucursal.length === 0) {\r\n        return {\r\n          numeroGanador: '',\r\n          totalVendido: 0,\r\n          totalPagado: 0,\r\n          gananciaNeta: 0,\r\n          cerrado: false,\r\n          detallesPorSucursal: []\r\n        };\r\n      }\r\n\r\n      const resumen = {\r\n        numeroGanador: sorteosPorSucursal[0].numeroGanador || '',\r\n        totalVendido: sorteosPorSucursal.reduce((sum, s) => sum + s.totalVendido, 0),\r\n        totalPagado: sorteosPorSucursal.reduce((sum, s) => sum + s.totalPagado, 0),\r\n        gananciaNeta: sorteosPorSucursal.reduce((sum, s) => sum + s.gananciaNeta, 0),\r\n        cerrado: sorteosPorSucursal.every(s => s.cerrado),\r\n        detallesPorSucursal: sorteosPorSucursal.map(s => ({\r\n          sucursal: s.sucursal,\r\n          factor: s.factorMultiplicador,\r\n          vendido: s.totalVendido,\r\n          pagado: s.totalPagado,\r\n          ganancia: s.gananciaNeta\r\n        }))\r\n      };\r\n\r\n      return resumen;\r\n    } catch (error) {\r\n      console.error('Error al obtener resumen consolidado:', error);\r\n      return {\r\n        numeroGanador: '',\r\n        totalVendido: 0,\r\n        totalPagado: 0,\r\n        gananciaNeta: 0,\r\n        cerrado: false,\r\n        detallesPorSucursal: []\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener ventas agrupadas por número para un sorteo específico en una fecha\r\n   */\r\n  async getVentasPorNumero(sorteoName: string, fecha: string): Promise<{ [numero: string]: number }> {\r\n    try {\r\n      const { data: ventas, error } = await this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          details:sale_details(numero, monto)\r\n        `)\r\n        .eq('sorteo', sorteoName)\r\n        .gte('created_at', `${fecha}T00:00:00`)\r\n        .lt('created_at', `${fecha}T23:59:59`);\r\n\r\n      if (error) {\r\n        console.error('Error al obtener ventas por número:', error);\r\n        return {};\r\n      }\r\n\r\n      const ventasPorNumero: { [numero: string]: number } = {};\r\n\r\n      // Procesar todas las ventas y detalles\r\n      ventas?.forEach(venta => {\r\n        venta.details?.forEach((detalle: any) => {\r\n          const numero = detalle.numero.toString().padStart(2, '0');\r\n          const monto = detalle.monto || 0;\r\n\r\n          if (!ventasPorNumero[numero]) {\r\n            ventasPorNumero[numero] = 0;\r\n          }\r\n          ventasPorNumero[numero] += monto;\r\n        });\r\n      });\r\n\r\n      return ventasPorNumero;\r\n    } catch (error) {\r\n      console.error('Error en getVentasPorNumero:', error);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Notificar actualización de resúmenes\r\n   */\r\n  notifyResumenUpdate(): void {\r\n    this.resumenUpdateSubject.next();\r\n  }\r\n\r\n  // ========================\r\n  // MÉTODOS OPTIMIZADOS PARA ADMIN\r\n  // ========================\r\n\r\n  /**\r\n   * Obtener resumen completo optimizado para el admin en una sola consulta\r\n   */\r\n  async getAdminDashboardData(fechaDesde?: Date, fechaHasta?: Date, sorteoFilter?: string, sucursalFilter?: string): Promise<{\r\n    totalVendido: number;\r\n    totalPagado: number;\r\n    gananciaNeta: number;\r\n    totalVentas: number;\r\n    ventasPorSucursal: Array<{\r\n      sucursal: string;\r\n      totalVendido: number;\r\n      totalPagado: number;\r\n      gananciaNeta: number;\r\n      ventasCount: number;\r\n    }>;\r\n    numerosPorSorteo: Array<{\r\n      sorteo: string;\r\n      sucursales: Array<{\r\n        sucursal: string;\r\n        numeros: Array<{\r\n          numero: number;\r\n          totalVendido: number;\r\n          cantidadVentas: number;\r\n          porcentaje: number;\r\n        }>;\r\n      }>;\r\n    }>;\r\n  }> {\r\n    try {\r\n      let startDateStr, endDateStr;\r\n      \r\n      if (fechaDesde && fechaHasta) {\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fechaDesde));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fechaHasta));\r\n      } else if (fechaDesde) {\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fechaDesde));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fechaDesde));\r\n      } else {\r\n        const today = this.getHondurasDateTime();\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(today));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(today));\r\n      }\r\n\r\n      // Construir query base\r\n      let salesQuery = this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          id,\r\n          sucursal,\r\n          sorteo,\r\n          total,\r\n          fecha,\r\n          created_at,\r\n          sale_details (\r\n            numero,\r\n            monto\r\n          )\r\n        `)\r\n        .gte('fecha', startDateStr)\r\n        .lte('fecha', endDateStr);\r\n\r\n      // Aplicar filtros opcionales\r\n      if (sorteoFilter) {\r\n        salesQuery = salesQuery.eq('sorteo', sorteoFilter);\r\n      }\r\n      if (sucursalFilter) {\r\n        salesQuery = salesQuery.eq('sucursal', sucursalFilter);\r\n      }\r\n\r\n      const { data: salesData, error } = await salesQuery;\r\n\r\n      if (error) {\r\n        console.error('Error en consulta optimizada:', error);\r\n        throw error;\r\n      }\r\n\r\n      // Obtener sorteos cerrados para calcular totales pagados\r\n      const { data: sorteosData, error: sorteosError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('id, sorteo, numero_ganador, factor_multiplicador, cerrado')\r\n        .eq('cerrado', true);\r\n\r\n      if (sorteosError) {\r\n        console.warn('Error obteniendo sorteos cerrados:', sorteosError);\r\n      }\r\n\r\n      // Procesar datos en memoria\r\n      const sorteosCerrados = new Map();\r\n      (sorteosData || []).forEach(sorteo => {\r\n        if (sorteo.numero_ganador) {\r\n          sorteosCerrados.set(sorteo.sorteo, {\r\n            numeroGanador: parseInt(sorteo.numero_ganador),\r\n            factor: sorteo.factor_multiplicador || 70\r\n          });\r\n        }\r\n      });\r\n\r\n      let totalVendido = 0;\r\n      let totalPagado = 0;\r\n      let totalVentas = 0;\r\n      const ventasPorSucursal = new Map();\r\n      const numerosPorSorteo = new Map();\r\n\r\n      // Procesar todas las ventas en una sola iteración\r\n      (salesData || []).forEach(sale => {\r\n        totalVentas++;\r\n        totalVendido += sale.total;\r\n\r\n        // Procesar por sucursal\r\n        if (!ventasPorSucursal.has(sale.sucursal)) {\r\n          ventasPorSucursal.set(sale.sucursal, {\r\n            sucursal: sale.sucursal,\r\n            totalVendido: 0,\r\n            totalPagado: 0,\r\n            gananciaNeta: 0,\r\n            ventasCount: 0\r\n          });\r\n        }\r\n        const sucursalData = ventasPorSucursal.get(sale.sucursal);\r\n        sucursalData.totalVendido += sale.total;\r\n        sucursalData.ventasCount++;\r\n\r\n        // Procesar números por sorteo\r\n        if (!numerosPorSorteo.has(sale.sorteo)) {\r\n          numerosPorSorteo.set(sale.sorteo, new Map());\r\n        }\r\n        const sorteoMap = numerosPorSorteo.get(sale.sorteo);\r\n        \r\n        if (!sorteoMap.has(sale.sucursal)) {\r\n          sorteoMap.set(sale.sucursal, new Map());\r\n        }\r\n        const sucursalMap = sorteoMap.get(sale.sucursal);\r\n\r\n        // Procesar detalles de la venta\r\n        (sale.sale_details || []).forEach(detail => {\r\n          const numero = parseInt(detail.numero.toString());\r\n          \r\n          // Agregar a números por sorteo/sucursal\r\n          if (!sucursalMap.has(numero)) {\r\n            sucursalMap.set(numero, { totalVendido: 0, cantidadVentas: 0 });\r\n          }\r\n          const numeroData = sucursalMap.get(numero);\r\n          numeroData.totalVendido += detail.monto;\r\n          numeroData.cantidadVentas++;\r\n\r\n          // Calcular total pagado si el sorteo está cerrado\r\n          const sorteoInfo = sorteosCerrados.get(sale.sorteo);\r\n          if (sorteoInfo && numero === sorteoInfo.numeroGanador) {\r\n            const montoPagado = detail.monto * sorteoInfo.factor;\r\n            totalPagado += montoPagado;\r\n            sucursalData.totalPagado += montoPagado;\r\n          }\r\n        });\r\n\r\n        sucursalData.gananciaNeta = sucursalData.totalVendido - sucursalData.totalPagado;\r\n      });\r\n\r\n      // Convertir Maps a arrays con porcentajes\r\n      const numerosPorSorteoArray: Array<{\r\n        sorteo: string;\r\n        sucursales: Array<{\r\n          sucursal: string;\r\n          numeros: Array<{\r\n            numero: number;\r\n            totalVendido: number;\r\n            cantidadVentas: number;\r\n            porcentaje: number;\r\n          }>;\r\n        }>;\r\n      }> = [];\r\n\r\n      numerosPorSorteo.forEach((sucursalesMap: any, sorteo: string) => {\r\n        const sucursales: Array<{\r\n          sucursal: string;\r\n          numeros: Array<{\r\n            numero: number;\r\n            totalVendido: number;\r\n            cantidadVentas: number;\r\n            porcentaje: number;\r\n          }>;\r\n        }> = [];\r\n\r\n        sucursalesMap.forEach((numerosMap: any, sucursal: string) => {\r\n          let totalSucursal = 0;\r\n          numerosMap.forEach((data: any) => {\r\n            totalSucursal += data.totalVendido;\r\n          });\r\n          \r\n          const numeros: Array<{\r\n            numero: number;\r\n            totalVendido: number;\r\n            cantidadVentas: number;\r\n            porcentaje: number;\r\n          }> = [];\r\n\r\n          numerosMap.forEach((data: any, numero: number) => {\r\n            numeros.push({\r\n              numero,\r\n              totalVendido: data.totalVendido,\r\n              cantidadVentas: data.cantidadVentas,\r\n              porcentaje: totalSucursal > 0 ? (data.totalVendido / totalSucursal) * 100 : 0\r\n            });\r\n          });\r\n\r\n          numeros.sort((a, b) => b.totalVendido - a.totalVendido);\r\n          sucursales.push({ sucursal, numeros });\r\n        });\r\n\r\n        numerosPorSorteoArray.push({ sorteo, sucursales });\r\n      });\r\n\r\n      return {\r\n        totalVendido,\r\n        totalPagado,\r\n        gananciaNeta: totalVendido - totalPagado,\r\n        totalVentas,\r\n        ventasPorSucursal: Array.from(ventasPorSucursal.values()),\r\n        numerosPorSorteo: numerosPorSorteoArray\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Error en getAdminDashboardData:', error);\r\n      return {\r\n        totalVendido: 0,\r\n        totalPagado: 0,\r\n        gananciaNeta: 0,\r\n        totalVentas: 0,\r\n        ventasPorSucursal: [],\r\n        numerosPorSorteo: []\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener ventas optimizadas con detalles en una sola consulta\r\n   */\r\n  async getSalesWithDetailsOptimized(fechaDesde?: Date, fechaHasta?: Date, sorteoFilter?: string): Promise<{\r\n    sales: Sale[];\r\n    saleDetails: { [saleId: string]: SaleDetail[] };\r\n  }> {\r\n    try {\r\n      let startDateStr, endDateStr;\r\n      \r\n      if (fechaDesde && fechaHasta) {\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fechaDesde));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fechaHasta));\r\n      } else if (fechaDesde) {\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fechaDesde));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fechaDesde));\r\n      } else {\r\n        const today = this.getHondurasDateTime();\r\n        startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(today));\r\n        endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(today));\r\n      }\r\n\r\n      let query = this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          id,\r\n          user_id,\r\n          sucursal,\r\n          sorteo,\r\n          fecha,\r\n          total,\r\n          numero_recibo,\r\n          correlativo,\r\n          created_at,\r\n          sale_details (\r\n            id,\r\n            numero,\r\n            monto\r\n          )\r\n        `)\r\n        .gte('fecha', startDateStr)\r\n        .lte('fecha', endDateStr)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (sorteoFilter && sorteoFilter.trim() !== '') {\r\n        query = query.eq('sorteo', sorteoFilter);\r\n      }\r\n\r\n      const { data, error } = await query;\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      const sales: Sale[] = [];\r\n      const saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n\r\n      (data || []).forEach(saleData => {\r\n        // Mapear venta\r\n        const sale: Sale = {\r\n          id: saleData.id,\r\n          userId: saleData.user_id,\r\n          sucursal: saleData.sucursal,\r\n          sorteo: saleData.sorteo,\r\n          fecha: this.parseDateFromDatabase(saleData.fecha),\r\n          total: saleData.total,\r\n          numeroRecibo: saleData.numero_recibo || saleData.id.slice(-6),\r\n          correlativo: saleData.correlativo || 0,\r\n          createdAt: this.parseDateFromDatabase(saleData.created_at)\r\n        };\r\n        sales.push(sale);\r\n\r\n        // Mapear detalles\r\n        saleDetails[sale.id] = (saleData.sale_details || []).map(detailData => ({\r\n          id: detailData.id,\r\n          saleId: sale.id,\r\n          numero: parseInt(detailData.numero),\r\n          monto: detailData.monto\r\n        }));\r\n      });\r\n\r\n      return { sales, saleDetails };\r\n\r\n    } catch (error) {\r\n      console.error('Error en getSalesWithDetailsOptimized:', error);\r\n      return { sales: [], saleDetails: {} };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener datos optimizados para una sola fecha (método más rápido para uso diario)\r\n   */\r\n  async getDailyOptimizedData(fecha: Date, sorteoFilter?: string): Promise<{\r\n    sales: Sale[];\r\n    saleDetails: { [saleId: string]: SaleDetail[] };\r\n    dashboardData: {\r\n      totalVendido: number;\r\n      totalPagado: number;\r\n      gananciaNeta: number;\r\n      totalVentas: number;\r\n      ventasPorSucursal: Array<{\r\n        sucursal: string;\r\n        totalVendido: number;\r\n        totalPagado: number;\r\n        gananciaNeta: number;\r\n        ventasCount: number;\r\n      }>;\r\n    };\r\n  }> {\r\n    try {\r\n      const startDateStr = this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fecha));\r\n      const endDateStr = this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fecha));\r\n\r\n      // Una sola consulta para obtener todo\r\n      let query = this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          id,\r\n          user_id,\r\n          sucursal,\r\n          sorteo,\r\n          fecha,\r\n          total,\r\n          numero_recibo,\r\n          correlativo,\r\n          created_at,\r\n          sale_details (\r\n            id,\r\n            numero,\r\n            monto\r\n          )\r\n        `)\r\n        .gte('fecha', startDateStr)\r\n        .lte('fecha', endDateStr)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (sorteoFilter && sorteoFilter.trim() !== '') {\r\n        query = query.eq('sorteo', sorteoFilter);\r\n      }\r\n\r\n      const { data: salesData, error } = await query;\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      // Obtener sorteos cerrados del día\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n      const { data: sorteosData, error: sorteosError } = await this.supabase\r\n        .from('sorteos')\r\n        .select('sorteo, numero_ganador, factor_multiplicador, cerrado')\r\n        .like('id', `${fechaStr}-%`)\r\n        .eq('cerrado', true);\r\n\r\n      if (sorteosError) {\r\n        console.warn('Error obteniendo sorteos del día:', sorteosError);\r\n      }\r\n\r\n      // Crear mapa de sorteos cerrados\r\n      const sorteosCerrados = new Map();\r\n      (sorteosData || []).forEach(sorteo => {\r\n        if (sorteo.numero_ganador) {\r\n          sorteosCerrados.set(sorteo.sorteo, {\r\n            numeroGanador: parseInt(sorteo.numero_ganador),\r\n            factor: sorteo.factor_multiplicador || 70\r\n          });\r\n        }\r\n      });\r\n\r\n      // Procesar datos\r\n      const sales: Sale[] = [];\r\n      const saleDetails: { [saleId: string]: SaleDetail[] } = {};\r\n      let totalVendido = 0;\r\n      let totalPagado = 0;\r\n      const ventasPorSucursal = new Map();\r\n\r\n      (salesData || []).forEach(saleData => {\r\n        // Mapear venta\r\n        const sale: Sale = {\r\n          id: saleData.id,\r\n          userId: saleData.user_id,\r\n          sucursal: saleData.sucursal,\r\n          sorteo: saleData.sorteo,\r\n          fecha: this.parseDateFromDatabase(saleData.fecha),\r\n          total: saleData.total,\r\n          numeroRecibo: saleData.numero_recibo || saleData.id.slice(-6),\r\n          correlativo: saleData.correlativo || 0,\r\n          createdAt: this.parseDateFromDatabase(saleData.created_at)\r\n        };\r\n        sales.push(sale);\r\n        totalVendido += sale.total;\r\n\r\n        // Mapear detalles y calcular datos por sucursal\r\n        if (!ventasPorSucursal.has(sale.sucursal)) {\r\n          ventasPorSucursal.set(sale.sucursal, {\r\n            sucursal: sale.sucursal,\r\n            totalVendido: 0,\r\n            totalPagado: 0,\r\n            gananciaNeta: 0,\r\n            ventasCount: 0\r\n          });\r\n        }\r\n        const sucursalData = ventasPorSucursal.get(sale.sucursal);\r\n        sucursalData.totalVendido += sale.total;\r\n        sucursalData.ventasCount++;\r\n\r\n        const details: SaleDetail[] = [];\r\n        (saleData.sale_details || []).forEach(detailData => {\r\n          const detail: SaleDetail = {\r\n            id: detailData.id,\r\n            saleId: sale.id,\r\n            numero: parseInt(detailData.numero),\r\n            monto: detailData.monto\r\n          };\r\n          details.push(detail);\r\n\r\n          // Calcular total pagado si el sorteo está cerrado\r\n          const sorteoInfo = sorteosCerrados.get(sale.sorteo);\r\n          if (sorteoInfo && detail.numero === sorteoInfo.numeroGanador) {\r\n            const montoPagado = detail.monto * sorteoInfo.factor;\r\n            totalPagado += montoPagado;\r\n            sucursalData.totalPagado += montoPagado;\r\n          }\r\n        });\r\n\r\n        saleDetails[sale.id] = details;\r\n        sucursalData.gananciaNeta = sucursalData.totalVendido - sucursalData.totalPagado;\r\n      });\r\n\r\n      return {\r\n        sales,\r\n        saleDetails,\r\n        dashboardData: {\r\n          totalVendido,\r\n          totalPagado,\r\n          gananciaNeta: totalVendido - totalPagado,\r\n          totalVentas: sales.length,\r\n          ventasPorSucursal: Array.from(ventasPorSucursal.values())\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Error en getDailyOptimizedData:', error);\r\n      return {\r\n        sales: [],\r\n        saleDetails: {},\r\n        dashboardData: {\r\n          totalVendido: 0,\r\n          totalPagado: 0,\r\n          gananciaNeta: 0,\r\n          totalVentas: 0,\r\n          ventasPorSucursal: []\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  // ================== MÓDULO DE CIERRE DE CAJA Y PAGOS ==================\r\n\r\n  // Función para obtener usuario actual (requerida por el componente de cierre)\r\n  async getCurrentUser(): Promise<User | null> {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  // ================== MOVIMIENTOS DE CAJA ==================\r\n\r\n  async registrarMovimientoCaja(movimiento: Partial<import('../models/interfaces').MovimientoCaja>): Promise<void> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('movimientos_caja')\r\n        .insert({\r\n          tipo: movimiento.tipo,\r\n          motivo: movimiento.motivo,\r\n          monto: movimiento.monto,\r\n          usuario_id: movimiento.usuarioId,\r\n          sorteo_id: movimiento.sorteoId,\r\n          fecha: this.formatLocalDateForSupabase(movimiento.fecha!),\r\n          sucursal: movimiento.sucursal,\r\n          nombre_receptor: movimiento.nombreReceptor\r\n        });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error('Error al registrar movimiento de caja:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async obtenerMovimientosCaja(fecha: Date, sucursal: string): Promise<import('../models/interfaces').MovimientoCaja[]> {\r\n    try {\r\n      const startOfDay = this.getStartOfDayHonduras(fecha);\r\n      const endOfDay = this.getEndOfDayHonduras(fecha);\r\n      \r\n      const { data, error } = await this.supabase\r\n        .from('movimientos_caja')\r\n        .select('*')\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay))\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n\r\n      return (data || []).map(row => ({\r\n        id: row.id,\r\n        tipo: row.tipo,\r\n        motivo: row.motivo,\r\n        monto: parseFloat(row.monto),\r\n        usuarioId: row.usuario_id,\r\n        sorteoId: row.sorteo_id,\r\n        fecha: new Date(row.fecha),\r\n        sucursal: row.sucursal,\r\n        nombreReceptor: row.nombre_receptor,\r\n        createdAt: new Date(row.created_at)\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error al obtener movimientos de caja:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // ================== RESUMEN DE CAJA DIARIO ==================\r\n\r\n  async calcularResumenCajaDiario(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Usar la función SQL creada para calcular el resumen\r\n      const { data, error } = await this.supabase\r\n        .rpc('calcular_resumen_caja_diario', {\r\n          p_fecha: fechaStr,\r\n          p_sucursal: sucursal\r\n        });\r\n\r\n      if (error) throw error;\r\n\r\n      if (data && data.length > 0) {\r\n        const resultado = data[0];\r\n        return {\r\n          total_vendido: parseFloat(resultado.total_vendido || '0'),\r\n          total_pagado: parseFloat(resultado.total_pagado || '0'),\r\n          total_neto: parseFloat(resultado.total_neto || '0'),\r\n          movimientos_entrada: parseFloat(resultado.movimientos_entrada || '0'),\r\n          movimientos_salida: parseFloat(resultado.movimientos_salida || '0'),\r\n          balance_final: parseFloat(resultado.balance_final || '0')\r\n        };\r\n      }\r\n\r\n      return {\r\n        total_vendido: 0,\r\n        total_pagado: 0,\r\n        total_neto: 0,\r\n        movimientos_entrada: 0,\r\n        movimientos_salida: 0,\r\n        balance_final: 0\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al calcular resumen de caja diario:', error);\r\n      // Fallback: calcular manualmente\r\n      return await this.calcularResumenCajaManual(fecha, sucursal);\r\n    }\r\n  }\r\n\r\n  private async calcularResumenCajaManual(fecha: Date, sucursal: string): Promise<any> {\r\n    try {\r\n      const startOfDay = this.getStartOfDayHonduras(fecha);\r\n      const endOfDay = this.getEndOfDayHonduras(fecha);\r\n      \r\n      // Calcular total vendido\r\n      const { data: salesData, error: salesError } = await this.supabase\r\n        .from('sales')\r\n        .select('total')\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay));\r\n\r\n      if (salesError) throw salesError;\r\n\r\n      const totalVendido = (salesData || []).reduce((sum, sale) => sum + parseFloat(sale.total), 0);\r\n\r\n      // El total_pagado ahora se calcula solo desde los movimientos de caja reales (pagos efectivos)\r\n      // Ya no se resta automáticamente desde sorteos cerrados\r\n      // Solo se contabiliza cuando efectivamente se paga el premio en el cierre\r\n      const { data: pagosSorteosData, error: pagosSorteosError } = await this.supabase\r\n        .from('movimientos_caja')\r\n        .select('monto')\r\n        .eq('sucursal', sucursal)\r\n        .eq('tipo', 'salida')\r\n        .not('sorteoId', 'is', null) // Solo movimientos que son pagos de sorteos\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay));\r\n\r\n      if (pagosSorteosError) throw pagosSorteosError;\r\n\r\n      const totalPagado = (pagosSorteosData || []).reduce((sum, pago) => sum + parseFloat(pago.monto || '0'), 0);\r\n\r\n      // Calcular movimientos de caja\r\n      const { data: movimientosData, error: movimientosError } = await this.supabase\r\n        .from('movimientos_caja')\r\n        .select('tipo, monto')\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay));\r\n\r\n      if (movimientosError) throw movimientosError;\r\n\r\n      let movimientosEntrada = 0;\r\n      let movimientosSalida = 0;\r\n\r\n      (movimientosData || []).forEach(mov => {\r\n        const monto = parseFloat(mov.monto);\r\n        if (mov.tipo === 'entrada') {\r\n          movimientosEntrada += monto;\r\n        } else {\r\n          movimientosSalida += monto;\r\n        }\r\n      });\r\n\r\n      const totalNeto = totalVendido - totalPagado;\r\n      const balanceFinal = totalNeto + movimientosEntrada - movimientosSalida;\r\n\r\n      return {\r\n        total_vendido: totalVendido,\r\n        total_pagado: totalPagado,\r\n        total_neto: totalNeto,\r\n        movimientos_entrada: movimientosEntrada,\r\n        movimientos_salida: movimientosSalida,\r\n        balance_final: balanceFinal\r\n      };\r\n    } catch (error) {\r\n      console.error('Error en cálculo manual de resumen de caja:', error);\r\n      return {\r\n        total_vendido: 0,\r\n        total_pagado: 0,\r\n        total_neto: 0,\r\n        movimientos_entrada: 0,\r\n        movimientos_salida: 0,\r\n        balance_final: 0\r\n      };\r\n    }\r\n  }\r\n\r\n  // ================== SORTEOS PENDIENTES DE PAGO ==================\r\n\r\n  async obtenerSorteosPendientesPago(fecha: Date, sucursal: string): Promise<any[]> {\r\n    try {\r\n      const startOfDay = this.getStartOfDayHonduras(fecha);\r\n      const endOfDay = this.getEndOfDayHonduras(fecha);\r\n\r\n      // Obtener sorteos pendientes\r\n      const { data: sorteosData, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay))\r\n        .gt('total_pagado', 0)\r\n        .order('sorteo');\r\n\r\n      if (error) throw error;\r\n\r\n      // Filtrar solo los que realmente tengan premios que pagar\r\n      const sorteosPendientes = sorteosData\r\n\r\n      // Obtener movimientos de caja para verificar pagos realizados\r\n      const { data: movimientosData, error: movimientosError } = await this.supabase\r\n        .from('movimientos_caja')\r\n        .select('sorteo_id, tipo, motivo')\r\n        .eq('sucursal', sucursal)\r\n        .eq('tipo', 'salida')\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay));\r\n\r\n      if (movimientosError) {\r\n        console.warn('Error obteniendo movimientos de caja:', movimientosError);\r\n      }\r\n\r\n      // Crear mapa de sorteos ya pagados\r\n      const sorteosPagados = new Set();\r\n      (movimientosData || []).forEach(movimiento => {\r\n        if (movimiento.motivo && \r\n            movimiento.motivo.includes('Pago premio sorteo') && \r\n            movimiento.sorteo_id) {\r\n          sorteosPagados.add(movimiento.sorteo_id);\r\n        }\r\n      });\r\n\r\n      if (sorteosPendientes.length === 0) {\r\n        return [];\r\n      }\r\n\r\n      // NO filtrar por estado de pago - mostrar TODOS los sorteos con premios\r\n      // Solo verificar que tengan número ganador y total a pagar\r\n      const sorteosTodos = sorteosPendientes; // Mostrar todos, no filtrar por pagados\r\n\r\n      // Optimización: obtener todas las ventas del día de una vez con JOIN interno\r\n      const { data: ventasData, error: ventasError } = await this.supabase\r\n        .from('sales')\r\n        .select(`\r\n          sorteo,\r\n          sale_details!inner(numero, monto)\r\n        `)\r\n        .eq('sucursal', sucursal)\r\n        .gte('fecha', this.formatLocalDateForSupabase(startOfDay))\r\n        .lte('fecha', this.formatLocalDateForSupabase(endOfDay))\r\n        .in('sorteo', sorteosTodos.map(s => s.sorteo));\r\n\r\n      if (ventasError) {\r\n        console.warn('Error obteniendo ventas del día:', ventasError);\r\n      }\r\n\r\n      // Crear mapa de ventas por sorteo y número\r\n      const ventasPorSorteo = new Map();\r\n      (ventasData || []).forEach(venta => {\r\n        if (!ventasPorSorteo.has(venta.sorteo)) {\r\n          ventasPorSorteo.set(venta.sorteo, new Map());\r\n        }\r\n        \r\n        const sorteoMap = ventasPorSorteo.get(venta.sorteo);\r\n        venta.sale_details.forEach(detalle => {\r\n          const numero = parseInt(detalle.numero);\r\n          const monto = parseFloat(detalle.monto || 0);\r\n          \r\n          if (sorteoMap.has(numero)) {\r\n            sorteoMap.set(numero, sorteoMap.get(numero) + monto);\r\n          } else {\r\n            sorteoMap.set(numero, monto);\r\n          }\r\n        });\r\n      });\r\n\r\n      // Procesar cada sorteo con los datos ya cargados\r\n      const sorteosConDetalle = sorteosTodos.map(sorteo => {\r\n        const numeroGanador = parseInt(sorteo.numero_ganador);\r\n        const factorMultiplicador = parseFloat(sorteo.factor_multiplicador || 75);\r\n        \r\n        // Obtener cantidad comprada del número ganador\r\n        let cantidadCompradaNumeroGanador = 0;\r\n        if (ventasPorSorteo.has(sorteo.sorteo)) {\r\n          cantidadCompradaNumeroGanador = ventasPorSorteo.get(sorteo.sorteo).get(numeroGanador) || 0;\r\n        }\r\n\r\n        // Calcular total que se debe pagar\r\n        const totalCalculadoPagar = cantidadCompradaNumeroGanador * factorMultiplicador;\r\n        const totalOriginal = parseFloat(sorteo.total_pagado || '0');\r\n\r\n        return {\r\n          ...sorteo,\r\n          cantidad_comprada_numero_ganador: cantidadCompradaNumeroGanador,\r\n          total_calculado_pagar: totalCalculadoPagar,\r\n          factor_multiplicador: factorMultiplicador,\r\n          ya_pagado: sorteosPagados.has(sorteo.id),\r\n          // Para verificación, incluir el cálculo\r\n          calculo_detalle: {\r\n            cantidad_comprada: cantidadCompradaNumeroGanador,\r\n            factor: factorMultiplicador,\r\n            total_calculado: totalCalculadoPagar,\r\n            total_original: totalOriginal,\r\n            diferencia: Math.abs(totalCalculadoPagar - totalOriginal),\r\n            coincide: Math.abs(totalCalculadoPagar - totalOriginal) < 0.01 // Tolerancia de 1 centavo\r\n          }\r\n        };\r\n      });\r\n\r\n      return sorteosConDetalle;\r\n    } catch (error) {\r\n      console.error('Error al obtener sorteos pendientes de pago:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // ================== CIERRES DIARIOS ==================\r\n\r\n  async obtenerCierreDiario(fecha: Date, sucursal: string): Promise<import('../models/interfaces').CierreDiario | null> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      const { data, error } = await this.supabase\r\n        .from('cierres_diarios')\r\n        .select('*')\r\n        .eq('fecha', fechaStr)\r\n        .eq('sucursal', sucursal)\r\n        .single();\r\n\r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No existe cierre para esta fecha\r\n          return null;\r\n        }\r\n        throw error;\r\n      }\r\n\r\n      return {\r\n        id: data.id,\r\n        fecha: new Date(data.fecha),\r\n        usuarioId: data.usuario_id,\r\n        sucursal: data.sucursal,\r\n        totalVendido: parseFloat(data.total_vendido),\r\n        totalPagado: parseFloat(data.total_pagado),\r\n        neto: parseFloat(data.neto),\r\n        efectivoReportado: parseFloat(data.efectivo_reportado),\r\n        diferencia: parseFloat(data.diferencia),\r\n        notas: data.notas,\r\n        sorteosMañana: data.sorteos_manana,\r\n        sorteosTarde: data.sorteos_tarde,\r\n        sorteosNoche: data.sorteos_noche,\r\n        createdAt: new Date(data.created_at)\r\n      };\r\n    } catch (error) {\r\n      console.error('Error al obtener cierre diario:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async registrarCierreDiario(cierre: Partial<import('../models/interfaces').CierreDiario>): Promise<void> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('cierres_diarios')\r\n        .insert({\r\n          fecha: this.formatDateOnlyForSupabase(cierre.fecha!),\r\n          usuario_id: cierre.usuarioId,\r\n          sucursal: cierre.sucursal,\r\n          total_vendido: cierre.totalVendido,\r\n          total_pagado: cierre.totalPagado,\r\n          neto: cierre.neto,\r\n          efectivo_reportado: cierre.efectivoReportado,\r\n          diferencia: cierre.diferencia,\r\n          notas: cierre.notas,\r\n          sorteos_manana: cierre.sorteosMañana,\r\n          sorteos_tarde: cierre.sorteosTarde,\r\n          sorteos_noche: cierre.sorteosNoche\r\n        });\r\n\r\n      if (error) throw error;\r\n    } catch (error) {\r\n      console.error('Error al registrar cierre diario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // ================== RESUMEN POR SORTEO ==================\r\n\r\n  async obtenerResumenSorteo(fecha: Date, sucursal: string, sorteo: string): Promise<import('../models/interfaces').SorteoResumen | undefined> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n\r\n      // Usar la función SQL si está disponible\r\n      const { data, error } = await this.supabase\r\n        .rpc('obtener_resumen_sorteo', {\r\n          p_fecha: fechaStr,\r\n          p_sucursal: sucursal,\r\n          p_sorteo: sorteo\r\n        });\r\n\r\n      if (error) throw error;\r\n\r\n      if (data && data.length > 0) {\r\n        const resultado = data[0];\r\n        return {\r\n          numeroGanador: resultado.numero_ganador,\r\n          factor: parseInt(resultado.factor_multiplicador || '70'),\r\n          ventaPorNumero: parseFloat(resultado.venta_por_numero || '0'),\r\n          totalVendido: parseFloat(resultado.total_vendido || '0'),\r\n          totalPagado: parseFloat(resultado.total_pagado || '0'),\r\n          totalNeto: parseFloat(resultado.total_neto || '0')\r\n        };\r\n      }\r\n\r\n      return undefined;\r\n    } catch (error) {\r\n      console.warn(`Error al obtener resumen del sorteo ${sorteo}:`, error);\r\n      // Fallback: obtener datos básicos del sorteo\r\n      return await this.obtenerResumenSorteoBasico(fecha, sucursal, sorteo);\r\n    }\r\n  }\r\n\r\n  private async obtenerResumenSorteoBasico(fecha: Date, sucursal: string, sorteo: string): Promise<import('../models/interfaces').SorteoResumen | undefined> {\r\n    try {\r\n      const sorteoId = `${this.formatDateOnlyForSupabase(fecha)}-${sorteo}`;\r\n      \r\n      const { data, error } = await this.supabase\r\n        .from('sorteos')\r\n        .select('*')\r\n        .eq('id', sorteoId)\r\n        .eq('sucursal', sucursal)\r\n        .single();\r\n\r\n      if (error || !data) return undefined;\r\n\r\n      let ventaPorNumero = 0;\r\n      \r\n      if (data.numero_ganador) {\r\n        // Calcular venta específica del número ganador\r\n        const { data: ventaData, error: ventaError } = await this.supabase\r\n          .from('sales')\r\n          .select(`\r\n            sale_details!inner(monto)\r\n          `)\r\n          .eq('sucursal', sucursal)\r\n          .eq('sorteo', sorteo)\r\n          .eq('sale_details.numero', parseInt(data.numero_ganador))\r\n          .gte('fecha', this.formatLocalDateForSupabase(this.getStartOfDayHonduras(fecha)))\r\n          .lte('fecha', this.formatLocalDateForSupabase(this.getEndOfDayHonduras(fecha)));\r\n\r\n        if (!ventaError && ventaData) {\r\n          ventaPorNumero = ventaData.reduce((sum, sale) => \r\n            sum + (sale.sale_details || []).reduce((detailSum: number, detail: any) => \r\n              detailSum + parseFloat(detail.monto), 0), 0);\r\n        }\r\n      }\r\n\r\n      return {\r\n        numeroGanador: data.numero_ganador,\r\n        factor: parseInt(data.factor_multiplicador || '70'),\r\n        ventaPorNumero,\r\n        totalVendido: parseFloat(data.total_vendido || '0'),\r\n        totalPagado: parseFloat(data.total_pagado || '0'),\r\n        totalNeto: parseFloat(data.ganancia_neta || '0')\r\n      };\r\n    } catch (error) {\r\n      console.error('Error en obtenerResumenSorteoBasico:', error);\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  // ===== MÉTODOS FALTANTES PARA ADMIN Y CIERRE DE CAJA =====\r\n\r\n  /**\r\n   * Obtener usuarios por rol\r\n   */\r\n  async getUsersByRole(role: string): Promise<any[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('role', role)\r\n        .eq('active', true);\r\n\r\n      if (error) throw error;\r\n      return data || [];\r\n    } catch (error) {\r\n      console.error('Error obteniendo usuarios por rol:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Identificar sorteos pagados del día\r\n   */\r\n  async identificarSorteosPagados(fecha: Date): Promise<string[]> {\r\n    try {\r\n      const fechaStr = this.formatDateOnlyForSupabase(fecha);\r\n      \r\n      const { data, error } = await this.supabase\r\n        .from('movimientos_caja')\r\n        .select('sorteo_id')\r\n        .like('sorteo_id', `${fechaStr}-%`)\r\n        .not('sorteo_id', 'is', null);\r\n\r\n      if (error) throw error;\r\n      \r\n      return [...new Set((data || []).map(item => item.sorteo_id))];\r\n    } catch (error) {\r\n      console.error('Error identificando sorteos pagados:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cargar sucursales disponibles para admin\r\n   */\r\n  async cargarSucursalesDisponibles(): Promise<string[]> {\r\n    try {\r\n      const { data, error } = await this.supabase\r\n        .from('profiles')\r\n        .select('sucursal')\r\n        .eq('role', 'sucursal')\r\n        .eq('active', true)\r\n        .not('sucursal', 'is', null);\r\n\r\n      if (error) throw error;\r\n      \r\n      const sucursales = [...new Set((data || []).map(item => item.sucursal))];\r\n      return sucursales.filter(s => s && s.trim() !== '');\r\n    } catch (error) {\r\n      console.error('Error cargando sucursales:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cargar datos de cierre de caja para una sucursal específica\r\n   */\r\n  async cargarDatosCierreCajaSucursal(sucursal: string, fecha: Date): Promise<any> {\r\n    try {\r\n      // Obtener los datos básicos de resumen de caja\r\n      const resumenCaja = await this.calcularResumenCajaDiario(fecha, sucursal);\r\n      \r\n      // Obtener sorteos pendientes con información detallada\r\n      const sorteosPendientes = await this.obtenerSorteosPendientesPago(fecha, sucursal);\r\n      \r\n      // Obtener movimientos de caja\r\n      const movimientosCaja = await this.obtenerMovimientosCaja(fecha, sucursal);\r\n      \r\n      return {\r\n        resumenCaja,\r\n        sorteosPendientes,\r\n        movimientosCaja\r\n      };\r\n    } catch (error) {\r\n      console.error('Error cargando datos de cierre de caja:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n}\r\n","export const environment = {\r\n  production: false,\r\n   supabase: {\r\n    url: 'https://oxuhcoubrpupjmjvyzbv.supabase.co',\r\n    // ⚠️ CAMBIAR ESTA KEY POR TU SERVICE_ROLE KEY\r\n    // Ve a Supabase Dashboard → Settings → API → service_role key\r\n    key: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im94dWhjb3VicnB1cGptanZ5emJ2Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MjcxNzU0MiwiZXhwIjoyMDY4MjkzNTQyfQ.xAawEVJAtjAvxAo1iUeWw2w33IvismG_k92spFgEyYI' // Reemplaza con tu service_role key real\r\n  }\r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n"],"names":["AppComponent","constructor","supabaseService","router","ngOnInit","currentUser$","subscribe","user","url","includes","navigate","i0","ɵɵdirectiveInject","i1","SupabaseService","i2","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","FormsModule","RouterModule","CommonModule","LoginComponent","SucursalComponent","AdminComponent","UserManagementComponent","ResumenSorteosComponent","CierreCajaComponent","AuthGuard","AdminGuard","SucursalGuard","routes","path","redirectTo","pathMatch","component","canActivate","AppModule","bootstrap","imports","forRoot","declarations","SORTEO_SCHEDULES","ɵɵtext","ɵɵproperty","sorteo_r2","name","ɵɵadvance","ɵɵtextInterpolate","label","sucursal_r3","sucursal","ɵɵtextInterpolate1","factor_multiplicador","cantidad_numero_ganador","toFixed","ɵɵtemplate","AdminComponent_div_98_div_35_Template","ctx_r3","resumenSucursales","numero_ganador","getTotalCantidadNumeroGanador","getTotalPagadoGeneral","numero_r5","numero","toString","padStart","totalVendido","i_r6","ɵɵclassMap","getNumeroIntensity","sucursalGroup_r8","num_r7","getNumeroVenta","AdminComponent_div_106_div_1_div_7_div_11_Template","AdminComponent_div_106_div_1_div_7_div_17_Template","getSucursalTotal","numeros","slice","getAllNumbers","AdminComponent_div_106_div_1_div_7_Template","sorteoGroup_r9","sorteo","getSorteoTotal","sucursales","AdminComponent_div_106_div_1_Template","getNumbersSummaryBySorteoAndSucursal","tmp_11_0","getSorteoData","sorteo_r10","numeroGanador","tmp_12_0","factorMultiplicador","ɵɵtwoWayListener","AdminComponent_div_115_ng_template_11_div_0_Template_input_ngModelChange_4_listener","$event","ɵɵrestoreView","_r11","ɵɵnextContext","$implicit","ɵɵtwoWayBindingSet","winningNumbers","ɵɵresetView","ɵɵlistener","AdminComponent_div_115_ng_template_11_div_0_Template_button_click_5_listener","openFactorsModal","AdminComponent_div_115_ng_template_11_div_0_span_7_Template","AdminComponent_div_115_ng_template_11_div_0_span_8_Template","ɵɵtwoWayProperty","isLoading","AdminComponent_div_115_ng_template_11_div_0_Template","AdminComponent_div_115_ng_template_11_div_1_Template","isSorteoOpen","AdminComponent_div_115_div_10_Template","AdminComponent_div_115_ng_template_11_Template","ɵɵtemplateRefExtractor","ɵɵclassProp","closeTime","hasSavedWinner","setWinner_r12","AdminComponent_div_138_Template_input_ngModelChange_3_listener","_r13","userFormData","password","AdminComponent_div_147_Template_input_ngModelChange_3_listener","_r14","detail_r15","monto","AdminComponent_div_197_div_32_div_5_Template","selectedSaleDetails","trackBySaleDetail","length","getTotalNumeros","AdminComponent_div_197_div_32_Template","AdminComponent_div_197_div_33_Template","selectedSaleForDetail","numeroRecibo","correlativo","formatDateTime","createdAt","total","currentSorteoForFactors","winningNumber","ɵɵtextInterpolate2","user_r18","email","last_r19","AdminComponent_div_205_div_14_div_1_div_5_span_3_Template","getUsersBySucursal","sucursal_r20","AdminComponent_div_205_div_14_div_1_div_5_Template","AdminComponent_div_205_div_14_div_1_Template_input_input_10_listener","_r17","updateFactorForSucursal","target","value","hasSucursalUsers","factoresPorSucursal","AdminComponent_div_205_div_14_div_1_Template","getUniqueSucursales","AdminComponent_div_205_Template_div_click_0_listener","_r16","closeFactorsModal","AdminComponent_div_205_Template_div_click_1_listener","stopPropagation","AdminComponent_div_205_div_6_Template","AdminComponent_div_205_Template_button_click_7_listener","AdminComponent_div_205_div_14_Template","AdminComponent_div_205_div_15_Template","AdminComponent_div_205_div_16_Template","AdminComponent_div_205_Template_button_click_18_listener","AdminComponent_div_205_Template_button_click_21_listener","confirmWinningNumberWithFactors","AdminComponent_div_205_i_22_Template","AdminComponent_div_205_i_23_Template","sucursalesFactores","sucursal_r22","total_vendido","total_pagado","ganancia_neta","AdminComponent_div_206_Template_div_click_0_listener","_r21","closeResumenModal","AdminComponent_div_206_Template_div_click_1_listener","AdminComponent_div_206_Template_button_click_6_listener","AdminComponent_div_206_div_26_Template","AdminComponent_div_206_Template_button_click_46_listener","currentSorteoForResumen","getTotalVendidoGeneral","getGananciaTotalGeneral","sucursal_r23","formatFechaCierre","cierreExistenteSucursal","sorteo_r24","total_calculado_pagar","calculo_detalle","diferencia","AdminComponent_div_235_div_52_div_8_div_42_Template","AdminComponent_div_235_div_52_div_8_div_43_Template","toUpperCase","ɵɵpureFunction2","_c0","ya_pagado","_c1","cantidad_comprada_numero_ganador","coincide","AdminComponent_div_235_div_52_div_8_Template","sorteosPendientesPagoSucursal","ɵɵpipeBind2","movimiento_r25","fecha","getTipoMovimientoClassSucursal","tipo","getTipoMovimientoTextoSucursal","motivo","formatearMontoSucursal","AdminComponent_div_235_div_53_div_8_Template","movimientosCajaSucursal","AdminComponent_div_235_span_14_Template","AdminComponent_div_235_div_52_Template","AdminComponent_div_235_div_53_Template","AdminComponent_div_235_div_54_Template","AdminComponent_div_235_div_55_Template","fechaCierreSeleccionada","selectedSucursalForCierre","resumenCajaSucursal","total_neto","balance_final","AdminComponent_div_237_button_7_Template_button_click_0_listener","_r27","imprimirCierreDiarioSucursal","AdminComponent_div_237_Template_button_click_1_listener","_r26","cerrarModalCierreCaja","AdminComponent_div_237_Template_button_click_4_listener","imprimirResumenCajaSucursal","AdminComponent_div_237_button_7_Template","notificationService","printService","exportService","cdr","currentUser","sorteos","sales","saleDetails","sorteosData","selectedSorteoFilter","isLoadingFilters","selectedDate","fechaDesde","fechaHasta","users","showUserModal","editingUser","role","active","showSaleDetailModal","showSorteoModal","editingSorteo","sorteoSchedules","showPasswordModal","selectedUserForPassword","newPassword","confirmPassword","showSorteosSection","showUsersSection","showFactorsModal","cachedDashboardData","cachedNumbersData","lastDataFetch","cacheValidTime","showResumenModal","showCierreCajaModal","Date","sucursalesDisponibles","loadingCierreCaja","sucursalesCacheExpiry","SUCURSALES_CACHE_DURATION","hondurasToday","getHondurasDateTime","formatDateTimeLocalHonduras","split","loadFilterState","fechaInicio","getStartOfDayHonduras","fechaFin","getEndOfDayHonduras","savedFilters","localStorage","getItem","filters","JSON","parse","error","saveFilterState","setItem","stringify","loadSales","loadSorteosData","initializeUsers","loadSorteoSchedules","_this","_asyncToGenerator","initializeProfilesTable","loadUsers","id","showError","now","hours","minutes","setHours","parseInt","todayString","formatDateOnlyForSupabase","sorteoId","isSorteoCerrado","sorteoData","cerrado","hasTemporaryWinnerData","loadSorteoById","_this2","getSorteoById","sorteoName","detectChanges","isRLSError","code","simpleData","getSorteoByIdSimple","data","horaCierre","hora_cierre","totalPagado","gananciaNeta","fallbackError","refreshTodaysSorteos","_this3","_this4","clearCache","loadSalesByDateRangeOptimized","fechaParaConsulta","console","log","optimizedData","getDailyOptimizedData","dashboardData","ventas","_this5","loadSingleDateSales","fechaDesdeUtc","parseLocalDateTimeToUtc","fechaHastaUtc","getSalesWithDetailsOptimized","getAdminDashboardData","numerosPorSorteo","isCacheValid","getTime","getSaleDetails","saleId","setWinningNumber","_this6","calculateSorteoResults","_x","_x2","_this7","multiplicador","sorteoSales","getSalesByDateAndSorteo","sale","details","detail","createOrUpdateSorteo","apply","arguments","_this8","status","updateSorteoUI","_this9","setTimeout","getTotalSales","reduce","getSucursalSummary","summary","count","Object","entries","map","getTotalVendido","getTotalPagado","sorteoSchedule","find","s","factor","getGananciaNeta","getTotalVentas","aplicarFiltros","_this0","limpiarFiltros","_this1","onFiltroFechaChange","_this10","onDateChange","_this11","onSorteoFilterChange","_this12","onFechaDesdeChange","_this13","onFechaHastaChange","_this14","loadSalesByDateRange","_this15","allSales","currentDate","daysProcessed","maxDays","daySales","setUTCDate","getUTCDate","showInfo","_this16","_this17","getAllUsers","message","closeUserModal","editUser","saveUser","_this18","updateExistingUser","showSuccess","createNewUser","toggleUserStatus","_this19","toggleExistingUserStatus","deleteUser","userId","_this20","confirmed","showConfirmation","generateDailyReport","reportDate","reprintReceipt","_this21","generateThermalReceipt","logout","_this22","dateInput","date","toLocaleString","year","month","day","hour","minute","formatDateTimeLocal","formatDateForDisplay","dateObj","formatHondurasDateTime","exportarVentas","exportarVentasExcel","generateVentasReportExcel","exportarVentasPDF","generateVentasReportPDF","trackBySale","index","trackByUser","trackBySorteo","verDetalles","closeSaleDetailModal","forceCloseSaleDetailModal","resetModal","backdrops","document","querySelectorAll","forEach","el","parentNode","removeChild","body","classList","remove","createUser","changePassword","closePasswordModal","changeUserPassword","_this23","updateUserPassword","csvContent","d","join","blob","Blob","type","link","createElement","URL","createObjectURL","setAttribute","style","visibility","appendChild","click","sorteoFilter","generateVentasReport","onFactorChange","event","debugSorteoSchedules","_this24","toggleSorteosSection","toggleUsersSection","openCreateUserModal","syncUsersFromAuth","_this25","navigateToUsers","sorteoOrName","_this26","getActiveUsersBySucursal","_this27","fechaStr","crearSorteosPorSucursal","calcularTotalesSorteoPorSucursal","getSorteoResumenPorSucursal","notifyResumenUpdate","Set","parseFloat","filter","getNumbersSummary","totalGeneral","get","result","key","undefined","push","cantidadVentas","porcentaje","sort","a","b","numeroStats","stats","groups","keys","sucursalData","totalSucursal","values","sum","numeroStr","sorteoGroup","subtotal","sucursalGroup","numbers","i","numeroData","n","venta","maxVenta","Math","max","intensidad","prepareReportData","fechaReporte","hondurasTime","fechaHora","hora","periodo","filtroAplicado","ventasTotales","detallePorSucursales","headers","filas","cantidadNumeroGanador","totales","horaReporte","dashboard","prepareVisualReportData","totalVendidoGeneral","totalPagadoGeneral","fechaFormateada","horaCompleta","filtrosAplicados","fechaDesdeOnly","fechaHastaOnly","resumen","minimumFractionDigits","sucursalesMap","Map","has","set","sucursalesArray","Array","from","toLocaleDateString","toLocaleTimeString","filtros","downloadDailyReportExcel","_this28","reportData","exportVisualToExcel","downloadDailyReportPDF","_this29","exportVisualToPDF","abrirModalCierreCaja","_this30","startTime","performance","cargarSucursalesDisponibles","hoy","_this31","usuarios","sucursalesSet","add","onSucursalSeleccionada","_this32","cargarDatosCierreCajaSucursal","promiseConTimeout","promise","timeoutMs","errorMsg","timeoutPromise","Promise","_","reject","Error","race","_this33","resumenCaja","sorteosPendientes","movimientosCaja","cierreExistente","all","calcularResumenCajaDiario","obtenerSorteosPendientesPago","obtenerMovimientosCaja","obtenerCierreDiario","movimientos_entrada","movimientos_salida","onFechaCierreChange","_this34","cierre","fecha_cierre","created_at","_this35","contenido","generarContenidoReporteSucursal","printContent","mov","signo","_this36","generarContenidoCierreDiarioSucursal","neto","efectivoReportado","efectivo_reportado","abs","sorteosMañana","sorteosTarde","sorteosNoche","sorteos_manana","sorteos_tarde","sorteos_noche","sorteoManana","sorteoTarde","sorteoNoche","notas","trim","NotificationService","i3","PrintService","i4","ExportService","i5","ChangeDetectorRef","AdminComponent_Template","AdminComponent_Template_button_click_7_listener","_r1","AdminComponent_span_10_Template","AdminComponent_Template_button_click_11_listener","AdminComponent_Template_button_click_14_listener","AdminComponent_span_22_Template","AdminComponent_Template_input_ngModelChange_23_listener","AdminComponent_Template_input_change_23_listener","AdminComponent_span_28_Template","AdminComponent_Template_input_ngModelChange_29_listener","AdminComponent_Template_input_change_29_listener","AdminComponent_span_34_Template","AdminComponent_Template_select_ngModelChange_35_listener","AdminComponent_Template_select_change_35_listener","AdminComponent_option_38_Template","AdminComponent_Template_button_click_40_listener","AdminComponent_i_41_Template","AdminComponent_ng_template_42_Template","AdminComponent_Template_button_click_45_listener","AdminComponent_i_46_Template","AdminComponent_ng_template_47_Template","AdminComponent_Template_button_click_54_listener","AdminComponent_i_55_Template","AdminComponent_ng_template_56_Template","AdminComponent_Template_button_click_59_listener","AdminComponent_i_60_Template","AdminComponent_ng_template_61_Template","AdminComponent_div_98_Template","AdminComponent_div_106_Template","AdminComponent_ng_template_107_Template","AdminComponent_div_115_Template","AdminComponent_Template_div_click_117_listener","currentTarget","AdminComponent_Template_button_click_124_listener","AdminComponent_Template_input_ngModelChange_133_listener","AdminComponent_Template_input_ngModelChange_137_listener","nombre","AdminComponent_div_138_Template","AdminComponent_Template_select_ngModelChange_142_listener","AdminComponent_div_147_Template","AdminComponent_Template_input_ngModelChange_150_listener","AdminComponent_Template_button_click_154_listener","AdminComponent_Template_button_click_157_listener","AdminComponent_Template_div_click_160_listener","AdminComponent_Template_button_click_167_listener","AdminComponent_Template_input_ngModelChange_176_listener","AdminComponent_Template_input_ngModelChange_180_listener","AdminComponent_Template_button_click_182_listener","AdminComponent_Template_button_click_185_listener","AdminComponent_Template_div_keydown_escape_188_listener","AdminComponent_Template_div_click_189_listener","AdminComponent_Template_button_click_195_listener","AdminComponent_div_197_Template","AdminComponent_Template_button_click_199_listener","AdminComponent_Template_button_click_202_listener","AdminComponent_div_205_Template","AdminComponent_div_206_Template","AdminComponent_Template_div_click_207_listener","AdminComponent_Template_button_click_216_listener","AdminComponent_Template_select_ngModelChange_225_listener","AdminComponent_Template_select_change_225_listener","AdminComponent_option_228_Template","AdminComponent_Template_input_ngModelChange_233_listener","AdminComponent_Template_input_change_233_listener","AdminComponent_div_234_Template","AdminComponent_div_235_Template","AdminComponent_div_236_Template","AdminComponent_div_237_Template","searchIcon_r28","eraserIcon_r29","excelIcon_r30","pdfIcon_r31","noVentasNumeros_r32","ɵɵstyleProp","userForm_r33","valid","passwordForm_r34","ctx_r1","formatearMonto","CierreCajaComponent_div_18_button_24_Template_button_click_0_listener","_r3","imprimirCierreDiario","yaCerrado","CierreCajaComponent_div_18_div_33_div_8_Template_button_click_14_listener","sorteo_r5","_r4","abrirModalPagoSorteo","ɵɵtextInterpolate3","isSorteoPagado","CierreCajaComponent_div_18_div_33_div_8_Template","sorteosPendientesPago","movimiento_r6","getTipoMovimientoClass","getTipoMovimientoTexto","CierreCajaComponent_div_18_div_34_tr_20_Template","movimientosDelDia","CierreCajaComponent_div_18_div_1_Template","CierreCajaComponent_div_18_Template_button_click_9_listener","abrirModalMovimiento","CierreCajaComponent_div_18_Template_button_click_12_listener","CierreCajaComponent_div_18_Template_button_click_21_listener","imprimirResumenCaja","CierreCajaComponent_div_18_button_24_Template","CierreCajaComponent_div_18_Template_button_click_30_listener","abrirModalCierre","CierreCajaComponent_div_18_div_33_Template","CierreCajaComponent_div_18_div_34_Template","sorteoParaPago","ventaPorNumero","totalPagar","diferenciaCaja","getAbsDiferencia","CierreCajaComponent_div_99_Template_input_ngModelChange_17_listener","_r7","datosCierre","onFormValueChange","CierreCajaComponent_div_99_div_20_Template","CierreCajaComponent_div_99_Template_textarea_ngModelChange_24_listener","hayDiferencia","fechaHoy","sorteosPagados","showPagoSorteoModal","showMovimientoModal","showCierreModal","showConfirmPagoModal","nuevoMovimiento","datosConfirmPago","nombreReceptor","montoExacto","loading","procesandoPago","subscriptions","getCurrentUser","cargarDatosDelDia","ngOnDestroy","sub","unsubscribe","identificarSorteosPagados","markForCheck","resumenSorteo","obtenerResumenSorteo","totalNeto","confirmarPagoSorteo","updateButtonValidation","puedeConfirmarPago","montoValido","noProcesando","resultado","procesarPagoSorteo","movimiento","usuarioId","registrarMovimientoCaja","marcarSorteoPagado","cerrarModalConfirmPago","cerrarModalPagoSorteo","puedeRegistrarMovimiento","motivoValido","montoNum","String","isNaN","registrarMovimiento","cerrarModalMovimiento","sincronizarValoresConResumen","movimientosEntrada","movimientosSalida","balanceFinal","puedeRealizarCierre","realizarCierreDiario","registrarCierreDiario","cerrarModalCierre","warn","generarContenidoResumenDia","generarContenidoCierreDiario","generarContenidoReporte","logModalState","debugFormularios","CierreCajaComponent_Template","CierreCajaComponent_div_17_Template","CierreCajaComponent_div_18_Template","CierreCajaComponent_Template_div_click_19_listener","CierreCajaComponent_Template_div_click_20_listener","CierreCajaComponent_Template_button_click_25_listener","CierreCajaComponent_div_28_Template","CierreCajaComponent_Template_button_click_30_listener","CierreCajaComponent_Template_button_click_32_listener","CierreCajaComponent_Template_div_click_35_listener","CierreCajaComponent_Template_div_click_36_listener","CierreCajaComponent_Template_button_click_41_listener","CierreCajaComponent_Template_input_ngModelChange_48_listener","CierreCajaComponent_Template_input_ngModelChange_52_listener","CierreCajaComponent_Template_button_click_54_listener","CierreCajaComponent_Template_button_click_56_listener","CierreCajaComponent_i_57_Template","CierreCajaComponent_i_58_Template","CierreCajaComponent_Template_div_click_60_listener","CierreCajaComponent_Template_div_click_61_listener","CierreCajaComponent_Template_button_click_67_listener","CierreCajaComponent_Template_textarea_ngModelChange_75_listener","CierreCajaComponent_Template_input_ngModelChange_83_listener","CierreCajaComponent_Template_button_click_85_listener","CierreCajaComponent_Template_button_click_87_listener","CierreCajaComponent_Template_div_click_90_listener","CierreCajaComponent_Template_div_click_91_listener","CierreCajaComponent_Template_button_click_96_listener","CierreCajaComponent_div_99_Template","CierreCajaComponent_Template_button_click_101_listener","CierreCajaComponent_Template_button_click_103_listener","CierreCajaComponent_i_104_Template","CierreCajaComponent_i_105_Template","errorMessage","redirectUser","onLogin","showLoading","loginPromise","login","getErrorMessage","hideLoading","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_9_listener","LoginComponent_Template_input_ngModelChange_13_listener","LoginComponent_div_14_Template","loginForm_r3","sucursal_r1","item_r2","i_r3","ctx_r5","getIntensidadColor","numero_r4","getVentaTotalPorNumero","ResumenSorteosComponent_div_10_div_2_div_72_div_9_Template","ResumenSorteosComponent_div_10_div_2_div_72_div_15_Template","getNumerosMasVendidos","getNumeros","getCantidadNumerosVendidos","getPromedioVentaPorNumero","getMaxVentaPorNumero","ResumenSorteosComponent_div_10_div_2_div_56_Template","ResumenSorteosComponent_div_10_div_2_div_72_Template","getNumeroGanador","getFactorPrincipal","getTotalVendidoSorteo","getTotalPagadoSorteo","getGananciaTotalSorteo","getResumenSorteo","hasVentasPorNumero","ResumenSorteosComponent_div_10_div_1_Template","ResumenSorteosComponent_div_10_div_2_Template","getSorteosConResumen","resumenPorSorteo","ventasPorNumero","loadResumenesSorteos","subscription","resumenUpdateSubject","toISOString","loadVentasPorNumero","getVentasPorNumero","hasResumenSorteo","refreshData","top","valores","suma","acc","val","standalone","features","ɵɵStandaloneFeature","ResumenSorteosComponent_Template","ResumenSorteosComponent_Template_button_click_6_listener","ResumenSorteosComponent_div_9_Template","ResumenSorteosComponent_div_10_Template","NgForOf","NgIf","styles","timeUntilClose","SucursalComponent_div_16_div_4_span_5_Template","SucursalComponent_div_16_div_4_span_6_Template","currentSorteo","blockDetail","timeUntilNextOpening","SucursalComponent_div_16_div_5_div_6_div_11_Template","nextSorteoName","nextSorteoOpenTime","SucursalComponent_div_16_div_5_div_5_Template","SucursalComponent_div_16_div_5_div_6_Template","SucursalComponent_div_16_div_5_div_7_Template","blockMessage","SucursalComponent_div_16_Template_button_click_2_listener","openNumberModal","SucursalComponent_div_16_div_4_Template","SucursalComponent_div_16_div_5_Template","isBlocked","SucursalComponent_div_17_div_9_Template_button_click_6_listener","i_r5","removeNumber","item_r6","SucursalComponent_div_17_div_9_Template","SucursalComponent_div_17_Template_button_click_17_listener","SucursalComponent_div_17_Template_button_click_20_listener","processSale","selectedNumbers","trackByIndex","getTotal","getSorteoNumeroGanador","getSorteoTotalPagar","numero_r7","SucursalComponent_div_30_div_12_div_1_Template","getSorteoNumerosVendidos","SucursalComponent_div_30_div_7_Template","SucursalComponent_div_30_div_8_Template","SucursalComponent_div_30_div_12_Template","SucursalComponent_div_30_div_13_Template","getSorteoTotalVendido","numero_r8","SucursalComponent_div_31_div_12_div_1_Template","SucursalComponent_div_31_div_7_Template","SucursalComponent_div_31_div_8_Template","SucursalComponent_div_31_div_12_Template","SucursalComponent_div_31_div_13_Template","numero_r9","SucursalComponent_div_32_div_12_div_1_Template","SucursalComponent_div_32_div_7_Template","SucursalComponent_div_32_div_8_Template","SucursalComponent_div_32_div_12_Template","SucursalComponent_div_32_div_13_Template","sorteoService","selectedNumber","selectedAmount","todaySales","recentSales","filteredSales","filterDate","numberInput","showKeypad","currentInput","showNumberModal","showAmountModal","showConfirmModal","tempNumber","tempAmount","modalNumberInput","modalAmountInput","stepperAmount","maxAmount","stepIncrement","activeTab","currentHondurasTime","isProcessingModal","userSubscription","initializeComponent","checkTimeRestrictions","updateHondurasTime","timeCheckInterval","setInterval","hondurasTimeInterval","sorteoUpdateInterval","clearInterval","getHondurasTimeNow","fullFormatted","formatDateForHonduras","parts","refreshSorteoSchedules","updateSorteoInfo","setFilterDate","loadAllSorteoData","hondurasNow","formatted","formatLocalDateForSupabase","onFilterDateChange","filterSales","filterDateObj","saleDate","toDateString","getCurrentSorteo","getTimeUntilClose","addNumber","existingIndex","findIndex","splice","generateReceiptNumber","datePart","yearFull","sucursalCode","replace","substring","correlativoFormatted","item","getNextCorrelativo","createSale","detailId","createSaleDetail","saleWithId","pressNumber","num","clearNumber","acceptNumber","closeAllModals","pressModalNumber","clearModalNumber","acceptModalNumber","formattedNumber","increaseAmount","decreaseAmount","resetAmount","acceptStepperAmount","confirmAddNumber","cancelAddNumber","hnFormatted","timePart","hourStr","minuteStr","currentTotalMinutes","getAllSorteos","isInActivePeriod","activeSorteo","openHour","openMinute","openTime","Number","closeHour","closeMinute","openTimeInMinutes","closeTimeInMinutes","nextSorteo","getNextOpeningSorteo","calculateTimeUntilOpening","showWarning","closeHourStr","closeMinuteStr","closeTotalMinutes","minutesLeft","minutesUntilOpening","floor","getTodayDate","weekday","trackBySaleId","trackByDetailId","debugModalState","alert","toggleBloqueo","estado","mañana","numerosVendidos","tarde","noche","loadSorteoDataOptimized","getCurrentSorteoTab","startOfDay","endOfDay","startStr","endStr","client","select","eq","gte","lte","clave","toLowerCase","mapped","sale_details","numStr","timeStr","currentHour","currentMinute","currentTimeInMinutes","recentlyClosedSorteo","getRecentlyClosedSorteo","minTimeSinceClosure","Infinity","timeSinceClosure","setActiveTab","tab","loadSorteoData","calculateTotalPayout","SorteoService","SucursalComponent_Template","SucursalComponent_Template_button_click_13_listener","SucursalComponent_div_16_Template","SucursalComponent_div_17_Template","SucursalComponent_Template_button_click_20_listener","SucursalComponent_Template_button_click_23_listener","SucursalComponent_Template_button_click_26_listener","SucursalComponent_div_30_Template","SucursalComponent_div_31_Template","SucursalComponent_div_32_Template","SucursalComponent_Template_div_click_33_listener","SucursalComponent_Template_div_click_34_listener","SucursalComponent_Template_button_click_40_listener","SucursalComponent_Template_button_click_52_listener","SucursalComponent_Template_button_click_54_listener","SucursalComponent_Template_button_click_56_listener","SucursalComponent_Template_button_click_59_listener","SucursalComponent_Template_button_click_61_listener","SucursalComponent_Template_button_click_63_listener","SucursalComponent_Template_button_click_66_listener","SucursalComponent_Template_button_click_68_listener","SucursalComponent_Template_button_click_70_listener","SucursalComponent_Template_button_click_73_listener","SucursalComponent_Template_button_click_75_listener","SucursalComponent_Template_button_click_77_listener","SucursalComponent_Template_div_click_79_listener","SucursalComponent_Template_div_click_80_listener","SucursalComponent_Template_button_click_86_listener","SucursalComponent_Template_button_click_92_listener","SucursalComponent_Template_button_click_99_listener","SucursalComponent_Template_button_click_102_listener","SucursalComponent_Template_button_click_105_listener","SucursalComponent_Template_div_click_112_listener","SucursalComponent_Template_div_click_113_listener","SucursalComponent_Template_button_click_119_listener","SucursalComponent_Template_button_click_130_listener","SucursalComponent_Template_button_click_133_listener","UserManagementComponent_table_12_tr_16_Template_button_click_15_listener","user_r2","ctx_r2","openEditUserModal","UserManagementComponent_table_12_tr_16_Template_button_click_17_listener","UserManagementComponent_table_12_tr_16_Template_button_click_19_listener","getRoleLabel","getStatusClass","getStatusLabel","UserManagementComponent_table_12_tr_16_Template","trackByUserId","UserManagementComponent_div_14_Template_button_click_6_listener","UserManagementComponent_div_15_div_17_Template_input_ngModelChange_3_listener","_r6","userForm","isEditMode","sucursal_r8","UserManagementComponent_div_15_div_26_Template_input_ngModelChange_3_listener","UserManagementComponent_div_15_div_26_option_5_Template","sucursalesSugeridas","UserManagementComponent_div_15_Template_div_click_0_listener","_r5","UserManagementComponent_div_15_Template_div_click_1_listener","UserManagementComponent_div_15_Template_button_click_5_listener","UserManagementComponent_div_15_Template_input_ngModelChange_12_listener","UserManagementComponent_div_15_Template_input_ngModelChange_16_listener","UserManagementComponent_div_15_div_17_Template","UserManagementComponent_div_15_Template_select_ngModelChange_21_listener","UserManagementComponent_div_15_div_26_Template","UserManagementComponent_div_15_Template_input_ngModelChange_29_listener","UserManagementComponent_div_15_Template_button_click_33_listener","UserManagementComponent_div_15_Template_button_click_35_listener","UserManagementComponent_div_15_i_36_Template","selectedUser","resetForm","goToMainMenu","validateForm","deleteExistingUser","newStatus","action","charAt","UserManagementComponent_Template","UserManagementComponent_Template_button_click_3_listener","UserManagementComponent_Template_button_click_8_listener","UserManagementComponent_table_12_Template","UserManagementComponent_div_13_Template","UserManagementComponent_div_14_Template","UserManagementComponent_div_15_Template","tap","timeout","catchError","of","pipe","isAdmin","ɵɵinject","factory","ɵfac","providedIn","isAuthenticated","XLSX","jsPDF","autoTable","saveAs","exportToExcel","filename","workbook","utils","book_new","resumenData","resumenGeneral","wsResumen","aoa_to_sheet","width","book_append_sheet","sorteoHeaders","sorteoRows","wsSorteo","sucursalHeaders","sucursalRows","resumenPorSucursal","wsSucursal","numerosData","grupo","totalSorteoSucursal","wsNumeros","ventasHeaders","ventasRows","detalleVentas","v","ventasData","wsVentas","excelBuffer","write","bookType","hondurasDate","wsDashboard","fila","isArray","wsSucursales","topNumeros","min","exportToPDF","_x3","doc","pageHeight","internal","pageSize","height","yPosition","checkNewPage","requiredSpace","addPage","setFontSize","setFont","text","resumenTable","head","startY","theme","headStyles","fillColor","textColor","fontSize","cellPadding","columnStyles","cellWidth","halign","lastAutoTable","finalY","sorteoTableData","sucursalTableData","rows","row","valign","ventasTableData","save","_x4","orientation","unit","format","fontStyle","margin","left","right","lineColor","lineWidth","alternateRowStyles","totalesRow","totalesData","pageCount","getNumberOfPages","setPage","Swal","loadingInstance","title","fire","icon","confirmButtonText","confirmButtonColor","cancelButtonText","showCancelButton","cancelButtonColor","isConfirmed","allowOutsideClick","allowEscapeKey","showConfirmButton","didOpen","close","pdf","y","lineHeight","align","line","pdfData","output","printWindow","window","open","onload","focus","print","printError","checkClosed","closed","revokeObjectURL","printFrame","display","src","contentWindow","generateTestReceipt","testSale","testDetails","yPos","sorteoSummary","calculateSorteoSummary","setFillColor","rect","setTextColor","setDrawColor","fechaTexto","sucursalTotals","tableData","numerosText","fechaHoraStr","bodyStyles","didDrawPage","pageNumber","fileName","htmlContent","getHours","getMinutes","getNextSorteo","diff","hoursLeft","createClient","environment","BehaviorSubject","Subject","parseISO","toZonedTime","fromZonedTime","formatInTimeZone","es","supabase","currentUserSubject","asObservable","HONDURAS_TIMEZONE","initializeSession","auth","onAuthStateChange","_ref","session","userMetadata","user_metadata","rawMetadata","raw_user_meta_data","metaSucursal","metaRole","userData","getSucursalFromEmail","next","getSession","loadUserDataInBackground","uid","queryPromise","single","updatedUser","signInWithPassword","signOut","testConnection","limit","getUserData","authUser","authError","getUser","defaultUserData","dbError","today","order","ascending","nextCorrelativo","saleData","user_id","numero_recibo","insert","numeroString","detailData","sale_id","startOfDayStr","endOfDayStr","query","mappedSales","parseDateFromDatabase","numeroGanadorString","upsert","getSorteo","firstRecord","enrichedData","_ref2","getCantidadNumeroGanadorPorSucursal","rpc","p_sorteo_id","p_sucursal","p_numero_ganador","sorteo_id","insertNewSorteo","hondurasDateTime","updateSorteoWinner","existingData","selectError","update","createSorteo","getVentasPorSorteoOptimizado","p_fecha","getVentasPorSorteoRPCSimple","sorteoResumen","mappedKey","total_pagar","numeros_vendidos","getVentasPorSorteoBasico","getVentasPorSorteoFallback","resumenError","manana","sorteoKey","totalesError","sorteosError","like","getSorteoByTypeAndDate","sorteoType","updateSorteoWinnerDirect","updateSorteoWinnerSimple","calculateSorteoWinnings","sorteoError","salesError","updateError","debugSalesData","tablesData","tablesError","todayData","todayError","threeDaysAgo","setDate","getDate","startThreeDaysAgo","recentData","recentError","checkDatabasePermissions","sessionError","simpleQuery","simpleError","insertTest","insertError","delete","getUsers","getDefaultUsers","createProfilesFromAuthUsers","authUsers","profilesData","onConflict","getSorteoSchedules","createSorteoSchedule","updateSorteoSchedule","updates","deleteSorteoSchedule","initializeSorteoSchedules","defaultSorteos","targetDate","pad","getFullYear","getMonth","seconds","getSeconds","hondurasToUtc","utcToHonduras","utcDate","convertToHondurasTime","locale","isoString","createHondurasDate","second","dateString","dateTimeLocalString","localDate","_this37","admin","listUsers","getDefaultUsersForManagement","_this38","authData","email_confirm","_this39","updateData","ban_duration","updateUserById","_this40","_this41","fetchError","getUserById","currentActive","_this42","sendPasswordReset","_this43","resetPasswordForEmail","location","origin","_this44","usersData","usersError","email_confirmed_at","usuario","factor_default","_this45","p_factores_json","_this46","getSorteosPorSucursal","_this47","getResumenConsolidadoSorteo","_this48","sorteosPorSucursal","detallesPorSucursal","every","vendido","pagado","ganancia","_this49","lt","detalle","sucursalFilter","_this50","startDateStr","endDateStr","salesQuery","salesData","sorteosCerrados","totalVentas","ventasPorSucursal","ventasCount","sorteoMap","sucursalMap","sorteoInfo","montoPagado","numerosPorSorteoArray","numerosMap","_this51","_this52","_this53","_this54","usuario_id","nombre_receptor","_this55","_this56","calcularResumenCajaManual","_this57","pagosSorteosData","pagosSorteosError","not","pago","movimientosData","movimientosError","_this58","gt","sorteosTodos","ventasError","in","ventasPorSorteo","sorteosConDetalle","cantidadCompradaNumeroGanador","totalCalculadoPagar","totalOriginal","cantidad_comprada","total_calculado","total_original","_this59","_this60","_this61","p_sorteo","venta_por_numero","obtenerResumenSorteoBasico","_this62","ventaData","ventaError","detailSum","getUsersByRole","_this63","_this64","_this65","_this66","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}